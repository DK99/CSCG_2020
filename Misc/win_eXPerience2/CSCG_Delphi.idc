#include <idc.idc>
static clear(from){
auto ea;
ea = from;
while (1){
ea = NextFunction(ea);
if (ea == -1) break;
DelFunction(ea);
MakeNameEx(ea, "", 0);}
ea = from;
while (1){
ea = FindExplored(ea, SEARCH_DOWN | SEARCH_NEXT);
if (ea == -1) break;
MakeUnkn(ea, 1);}
}
static main(){
clear(0x401000);
MakeUnkn(0x401000, 1);
MakeNameEx(0x401000, "RTTI_401000_Enumeration_Boolean", 0);
MakeDword(0x401000);
MakeUnkn(0x401004, 1);
MakeNameEx(0x401004, "", 0);
MakeByte(0x401004);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401005, 0x40100D);
MakeByte(0x40100D);
MakeDword(0x40100E);
MakeDword(0x401012);
MakeDword(0x401016);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40101A, 0x401020);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401020, 0x401025);
MakeUnkn(0x401028, 1);
MakeNameEx(0x401028, "RTTI_401028_Char_Char", 0);
MakeDword(0x401028);
MakeUnkn(0x40102C, 1);
MakeNameEx(0x40102C, "", 0);
MakeByte(0x40102C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40102D, 0x401032);
MakeByte(0x401032);
MakeDword(0x401033);
MakeDword(0x401037);
MakeUnkn(0x40103C, 1);
MakeNameEx(0x40103C, "RTTI_40103C_Integer_Integer", 0);
MakeDword(0x40103C);
MakeUnkn(0x401040, 1);
MakeNameEx(0x401040, "", 0);
MakeByte(0x401040);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401041, 0x401049);
MakeByte(0x401049);
MakeDword(0x40104A);
MakeDword(0x40104E);
MakeUnkn(0x401054, 1);
MakeNameEx(0x401054, "RTTI_401054_Integer_Byte", 0);
MakeDword(0x401054);
MakeUnkn(0x401058, 1);
MakeNameEx(0x401058, "", 0);
MakeByte(0x401058);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401059, 0x40105E);
MakeByte(0x40105E);
MakeDword(0x40105F);
MakeDword(0x401063);
MakeUnkn(0x401068, 1);
MakeNameEx(0x401068, "RTTI_401068_Integer_Word", 0);
MakeDword(0x401068);
MakeUnkn(0x40106C, 1);
MakeNameEx(0x40106C, "", 0);
MakeByte(0x40106C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40106D, 0x401072);
MakeByte(0x401072);
MakeDword(0x401073);
MakeDword(0x401077);
MakeUnkn(0x40107C, 1);
MakeNameEx(0x40107C, "RTTI_40107C_Integer_Cardinal", 0);
MakeDword(0x40107C);
MakeUnkn(0x401080, 1);
MakeNameEx(0x401080, "", 0);
MakeByte(0x401080);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401081, 0x40108A);
MakeByte(0x40108A);
MakeDword(0x40108B);
MakeDword(0x40108F);
MakeUnkn(0x401094, 1);
MakeNameEx(0x401094, "RTTI_401094_AnsiString_String", 0);
MakeDword(0x401094);
MakeUnkn(0x401098, 1);
MakeNameEx(0x401098, "", 0);
MakeByte(0x401098);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401099, 0x4010A0);
MakeUnkn(0x4010A0, 1);
MakeNameEx(0x4010A0, "VMT_4010A0_TObject", 0);
MakeDword(0x4010A0);
MakeDword(0x4010A4);
MakeDword(0x4010A8);
MakeDword(0x4010AC);
MakeDword(0x4010B0);
MakeDword(0x4010B4);
MakeDword(0x4010B8);
MakeDword(0x4010BC);
MakeDword(0x4010C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4010EC, 0x4010F4);
MakeDword(0x4010C4);
MakeDword(0x4010C8);
MakeDword(0x4010CC);
MakeDword(0x4010D0);
MakeDword(0x4010D4);
MakeDword(0x4010D8);
MakeDword(0x4010DC);
MakeDword(0x4010E0);
MakeDword(0x4010E4);
MakeDword(0x4010E8);
MakeUnkn(0x4010F4, 1);
MakeNameEx(0x4010F4, "RTTI_4010F4_Class_TObject", 0);
MakeDword(0x4010F4);
MakeUnkn(0x4010F8, 1);
MakeNameEx(0x4010F8, "", 0);
MakeByte(0x4010F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4010F9, 0x401101);
MakeDword(0x401101);
MakeDword(0x401105);
MakeWord(0x401109);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40110B, 0x401112);
MakeWord(0x401112);
MakeUnkn(0x401114, 1);
MakeNameEx(0x401114, "RTTI_401114_Interface_IInterface", 0);
MakeDword(0x401114);
MakeUnkn(0x401118, 1);
MakeNameEx(0x401118, "", 0);
MakeByte(0x401118);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401119, 0x401124);
MakeDword(0x401124);
MakeByte(0x401128);
MakeByte(0x401129);
MakeArray(0x401129, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401139, 0x401140);
MakeWord(0x401140);
MakeWord(0x401142);
MakeUnkn(0x401194, 1);
MakeNameEx(0x401194, "VMT_401194_TInterfacedObject", 0);
MakeDword(0x401194);
MakeDword(0x401198);
MakeUnkn(0x401171, 1);
MakeNameEx(0x401171, "TInterfacedObject_IntfTable", 0);
MakeDword(0x401171);
MakeByte(0x401175);
MakeArray(0x401175, 16);
MakeDword(0x401185);
MakeDword(0x401165);
MakeFunction(0x401145, -1);
MakeCode(0x401145);
MakeDword(0x401169);
MakeFunction(0x40114F, -1);
MakeCode(0x40114F);
MakeDword(0x40116D);
MakeFunction(0x401159, -1);
MakeCode(0x401159);
MakeByte(0x401144);
MakeDword(0x401189);
MakeDword(0x40118D);
MakeDword(0x40119C);
MakeDword(0x4011A0);
MakeDword(0x4011A4);
MakeDword(0x4011A8);
MakeDword(0x4011AC);
MakeDword(0x4011B0);
MakeDword(0x4011B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4011E0, 0x4011F2);
MakeDword(0x4011B8);
MakeDword(0x4011BC);
MakeDword(0x4011C0);
MakeDword(0x4011C4);
MakeDword(0x4011C8);
MakeDword(0x4011CC);
MakeDword(0x4011D0);
MakeDword(0x4011D4);
MakeDword(0x4011D8);
MakeDword(0x4011DC);
MakeUnkn(0x4011F4, 1);
MakeNameEx(0x4011F4, "kernel32.", 0x20);
MakeComm(0x4011F4, "'kernel32.'+#5+;'");
MakeCode(0x4011F4);
MakeFunction(0x4011F4, 0x4011FA);
MakeUnkn(0x4011FC, 1);
MakeNameEx(0x4011FC, "kernel32._0", 0x20);
MakeComm(0x4011FC, "'kernel32.'+#5+;'");
MakeCode(0x4011FC);
MakeFunction(0x4011FC, 0x401202);
MakeUnkn(0x401204, 1);
MakeNameEx(0x401204, "kernel32._1", 0x20);
MakeComm(0x401204, "'kernel32.'+#5+;'");
MakeCode(0x401204);
MakeFunction(0x401204, 0x40120A);
MakeUnkn(0x40120C, 1);
MakeNameEx(0x40120C, "kernel32._2", 0x20);
MakeComm(0x40120C, "'kernel32.'+#5+;'");
MakeCode(0x40120C);
MakeFunction(0x40120C, 0x401212);
MakeUnkn(0x401214, 1);
MakeNameEx(0x401214, "kernel32._3", 0x20);
MakeComm(0x401214, "'kernel32.'+#5+;'");
MakeCode(0x401214);
MakeFunction(0x401214, 0x40121A);
MakeUnkn(0x40121C, 1);
MakeNameEx(0x40121C, "user32.", 0x20);
MakeComm(0x40121C, "'user32.'+#5+;'");
MakeCode(0x40121C);
MakeFunction(0x40121C, 0x401222);
MakeUnkn(0x401224, 1);
MakeNameEx(0x401224, "kernel32._4", 0x20);
MakeComm(0x401224, "'kernel32.'+#5+;'");
MakeCode(0x401224);
MakeFunction(0x401224, 0x40122A);
MakeUnkn(0x40122C, 1);
MakeNameEx(0x40122C, "user32._0", 0x20);
MakeComm(0x40122C, "'user32.'+#5+;'");
MakeCode(0x40122C);
MakeFunction(0x40122C, 0x401232);
MakeUnkn(0x401234, 1);
MakeNameEx(0x401234, "kernel32._5", 0x20);
MakeComm(0x401234, "'kernel32.'+#5+;'");
MakeCode(0x401234);
MakeFunction(0x401234, 0x40123A);
MakeUnkn(0x40123C, 1);
MakeNameEx(0x40123C, "kernel32._6", 0x20);
MakeComm(0x40123C, "'function kernel32.'+#5+:?;'");
MakeCode(0x40123C);
MakeFunction(0x40123C, 0x401242);
MakeUnkn(0x401244, 1);
MakeNameEx(0x401244, "kernel32._7", 0x20);
MakeComm(0x401244, "'kernel32.'+#5+;'");
MakeCode(0x401244);
MakeFunction(0x401244, 0x40124A);
MakeUnkn(0x40124C, 1);
MakeNameEx(0x40124C, "kernel32._8", 0x20);
MakeComm(0x40124C, "'function kernel32.'+#5+:?;'");
MakeCode(0x40124C);
MakeFunction(0x40124C, 0x401252);
MakeUnkn(0x401254, 1);
MakeNameEx(0x401254, "kernel32._9", 0x20);
MakeComm(0x401254, "'kernel32.'+#5+;'");
MakeCode(0x401254);
MakeFunction(0x401254, 0x40125A);
MakeUnkn(0x40125C, 1);
MakeNameEx(0x40125C, "kernel32._10", 0x20);
MakeComm(0x40125C, "'kernel32.'+#5+;'");
MakeCode(0x40125C);
MakeFunction(0x40125C, 0x401262);
MakeUnkn(0x401264, 1);
MakeNameEx(0x401264, "kernel32._11", 0x20);
MakeComm(0x401264, "'function kernel32.'+#5+:?;'");
MakeCode(0x401264);
MakeFunction(0x401264, 0x40126A);
MakeUnkn(0x40126C, 1);
MakeNameEx(0x40126C, "kernel32._12", 0x20);
MakeComm(0x40126C, "'function kernel32.'+#5+:?;'");
MakeCode(0x40126C);
MakeFunction(0x40126C, 0x401272);
MakeUnkn(0x401274, 1);
MakeNameEx(0x401274, "kernel32._13", 0x20);
MakeComm(0x401274, "'kernel32.'+#5+;'");
MakeCode(0x401274);
MakeFunction(0x401274, 0x40127A);
MakeUnkn(0x40127C, 1);
MakeNameEx(0x40127C, "kernel32._14", 0x20);
MakeComm(0x40127C, "'kernel32.'+#5+;'");
MakeCode(0x40127C);
MakeFunction(0x40127C, 0x401282);
MakeUnkn(0x401284, 1);
MakeNameEx(0x401284, "kernel32._15", 0x20);
MakeComm(0x401284, "'function kernel32.'+#5+:?;'");
MakeCode(0x401284);
MakeFunction(0x401284, 0x40128A);
MakeUnkn(0x40128C, 1);
MakeNameEx(0x40128C, "user32._1", 0x20);
MakeComm(0x40128C, "'function user32.'+#5+:?;'");
MakeCode(0x40128C);
MakeFunction(0x40128C, 0x401292);
MakeUnkn(0x401294, 1);
MakeNameEx(0x401294, "kernel32._16", 0x20);
MakeComm(0x401294, "'kernel32.'+#5+;'");
MakeCode(0x401294);
MakeFunction(0x401294, 0x40129A);
MakeUnkn(0x40129C, 1);
MakeNameEx(0x40129C, "kernel32._17", 0x20);
MakeComm(0x40129C, "'function kernel32.'+#5+:?;'");
MakeCode(0x40129C);
MakeFunction(0x40129C, 0x4012A2);
MakeUnkn(0x4012A4, 1);
MakeNameEx(0x4012A4, "kernel32._18", 0x20);
MakeComm(0x4012A4, "'kernel32.'+#5+;'");
MakeCode(0x4012A4);
MakeFunction(0x4012A4, 0x4012AA);
MakeUnkn(0x4012AC, 1);
MakeNameEx(0x4012AC, "advapi32.", 0x20);
MakeComm(0x4012AC, "'advapi32.'+#5+;'");
MakeCode(0x4012AC);
MakeFunction(0x4012AC, 0x4012B2);
MakeUnkn(0x4012B4, 1);
MakeNameEx(0x4012B4, "advapi32._0", 0x20);
MakeComm(0x4012B4, "'function advapi32.'+#5+:?;'");
MakeCode(0x4012B4);
MakeFunction(0x4012B4, 0x4012BA);
MakeUnkn(0x4012BC, 1);
MakeNameEx(0x4012BC, "advapi32._1", 0x20);
MakeComm(0x4012BC, "'function advapi32.'+#5+:?;'");
MakeCode(0x4012BC);
MakeFunction(0x4012BC, 0x4012C2);
MakeUnkn(0x4012C4, 1);
MakeNameEx(0x4012C4, "kernel32._19", 0x20);
MakeComm(0x4012C4, "'kernel32.'+#5+;'");
MakeCode(0x4012C4);
MakeFunction(0x4012C4, 0x4012CA);
MakeUnkn(0x4012CC, 1);
MakeNameEx(0x4012CC, "kernel32._20", 0x20);
MakeComm(0x4012CC, "'kernel32.'+#5+;'");
MakeCode(0x4012CC);
MakeFunction(0x4012CC, 0x4012D2);
MakeUnkn(0x4012D4, 1);
MakeNameEx(0x4012D4, "oleaut32.", 0x20);
MakeComm(0x4012D4, "'function oleaut32.'+#5+:?;'");
MakeCode(0x4012D4);
MakeFunction(0x4012D4, 0x4012DA);
MakeUnkn(0x4012DC, 1);
MakeNameEx(0x4012DC, "oleaut32._0", 0x20);
MakeComm(0x4012DC, "'function oleaut32.'+#5+:?;'");
MakeCode(0x4012DC);
MakeFunction(0x4012DC, 0x4012E2);
MakeUnkn(0x4012E4, 1);
MakeNameEx(0x4012E4, "oleaut32._1", 0x20);
MakeComm(0x4012E4, "'oleaut32.'+#5+;'");
MakeCode(0x4012E4);
MakeFunction(0x4012E4, 0x4012EA);
MakeUnkn(0x4012EC, 1);
MakeNameEx(0x4012EC, "kernel32._21", 0x20);
MakeComm(0x4012EC, "'kernel32.'+#5+;'");
MakeCode(0x4012EC);
MakeFunction(0x4012EC, 0x4012F2);
MakeUnkn(0x4012F4, 1);
MakeNameEx(0x4012F4, "kernel32._22", 0x20);
MakeComm(0x4012F4, "'function kernel32.'+#5+:?;'");
MakeCode(0x4012F4);
MakeFunction(0x4012F4, 0x4012FA);
MakeUnkn(0x4012FC, 1);
MakeNameEx(0x4012FC, "kernel32._23", 0x20);
MakeComm(0x4012FC, "'function kernel32.'+#5+:?;'");
MakeCode(0x4012FC);
MakeFunction(0x4012FC, 0x401302);
MakeUnkn(0x401304, 1);
MakeNameEx(0x401304, "kernel32._24", 0x20);
MakeComm(0x401304, "'kernel32.'+#5+;'");
MakeCode(0x401304);
MakeFunction(0x401304, 0x40130A);
MakeUnkn(0x40130C, 1);
MakeNameEx(0x40130C, "GetCmdShow", 0x20);
MakeComm(0x40130C, "'function GetCmdShow:Integer;'");
MakeCode(0x40130C);
MakeCode(0x401327);
MakeFunction(0x40130C, 0x40132E);
MakeUnkn(0x401330, 1);
MakeNameEx(0x401330, "kernel32._25", 0x20);
MakeComm(0x401330, "'function kernel32.'+#5+:?;'");
MakeCode(0x401330);
MakeFunction(0x401330, 0x401336);
MakeUnkn(0x401338, 1);
MakeNameEx(0x401338, "kernel32._26", 0x20);
MakeComm(0x401338, "'kernel32.'+#5+;'");
MakeCode(0x401338);
MakeFunction(0x401338, 0x40133E);
MakeUnkn(0x401340, 1);
MakeNameEx(0x401340, "kernel32._27", 0x20);
MakeComm(0x401340, "'function kernel32.'+#5+:?;'");
MakeCode(0x401340);
MakeFunction(0x401340, 0x401346);
MakeUnkn(0x401348, 1);
MakeNameEx(0x401348, "kernel32._28", 0x20);
MakeComm(0x401348, "'function kernel32.'+#5+:?;'");
MakeCode(0x401348);
MakeFunction(0x401348, 0x40134E);
MakeUnkn(0x401350, 1);
MakeNameEx(0x401350, "kernel32._29", 0x20);
MakeComm(0x401350, "'kernel32.'+#5+;'");
MakeCode(0x401350);
MakeFunction(0x401350, 0x401356);
MakeUnkn(0x401358, 1);
MakeNameEx(0x401358, "kernel32._30", 0x20);
MakeComm(0x401358, "'kernel32.'+#5+;'");
MakeCode(0x401358);
MakeFunction(0x401358, 0x40135E);
MakeUnkn(0x401360, 1);
MakeNameEx(0x401360, "kernel32._31", 0x20);
MakeComm(0x401360, "'kernel32.'+#5+;'");
MakeCode(0x401360);
MakeFunction(0x401360, 0x401366);
MakeUnkn(0x401368, 1);
MakeNameEx(0x401368, "kernel32._32", 0x20);
MakeComm(0x401368, "'kernel32.'+#5+;'");
MakeCode(0x401368);
MakeFunction(0x401368, 0x40136E);
MakeUnkn(0x401370, 1);
MakeNameEx(0x401370, "GetBlockDesc", 0x20);
MakeComm(0x401370, "'function GetBlockDesc:PBlockDesc;'");
MakeCode(0x401370);
MakeCode(0x401393);
MakeCode(0x4013A2);
MakeCode(0x4013B6);
MakeFunction(0x401370, 0x4013BF);
MakeUnkn(0x4013C0, 1);
MakeNameEx(0x4013C0, "MakeEmpty", 0x20);
MakeComm(0x4013C0, "'procedure MakeEmpty(bd:PBlockDesc);'");
MakeCode(0x4013C0);
MakeFunction(0x4013C0, 0x4013C6);
MakeUnkn(0x4013C8, 1);
MakeNameEx(0x4013C8, "AddBlockAfter", 0x20);
MakeComm(0x4013C8, "'function AddBlockAfter(prev:PBlockDesc; const b:TBlock):Boolean;'");
MakeCode(0x4013C8);
MakeCode(0x4013DC);
MakeFunction(0x4013C8, 0x4013F8);
MakeUnkn(0x4013F8, 1);
MakeNameEx(0x4013F8, "DeleteBlock", 0x20);
MakeComm(0x4013F8, "'procedure DeleteBlock(bd:PBlockDesc);'");
MakeCode(0x4013F8);
MakeFunction(0x4013F8, 0x401410);
MakeUnkn(0x401410, 1);
MakeNameEx(0x401410, "MergeBlockAfter", 0x20);
MakeComm(0x401410, "'function MergeBlockAfter(prev:PBlockDesc; const b:TBlock):TBlock;'");
MakeCode(0x401410);
MakeCode(0x40142C);
MakeCode(0x40144E);
MakeCode(0x401463);
MakeCode(0x40147A);
MakeFunction(0x401410, 0x401480);
MakeUnkn(0x401480, 1);
MakeNameEx(0x401480, "RemoveBlock", 0x20);
MakeComm(0x401480, "'function RemoveBlock(bd:PBlockDesc; const b:TBlock):Boolean;'");
MakeCode(0x401480);
MakeCode(0x40148B);
MakeCode(0x4014C1);
MakeCode(0x4014D6);
MakeCode(0x401500);
MakeCode(0x401504);
MakeCode(0x40150C);
MakeFunction(0x401480, 0x401513);
MakeUnkn(0x401514, 1);
MakeNameEx(0x401514, "GetSpace", 0x20);
MakeComm(0x401514, "'function GetSpace(minSize:Integer):TBlock;'");
MakeCode(0x401514);
MakeCode(0x40152A);
MakeCode(0x401536);
MakeCode(0x401573);
MakeFunction(0x401514, 0x401577);
MakeUnkn(0x401578, 1);
MakeNameEx(0x401578, "GetSpaceAt", 0x20);
MakeComm(0x401578, "'function GetSpaceAt(addr:PAnsiChar; minSize:Integer):TBlock;'");
MakeCode(0x401578);
MakeCode(0x4015C2);
MakeCode(0x4015EA);
MakeFunction(0x401578, 0x4015EF);
MakeUnkn(0x4015F0, 1);
MakeNameEx(0x4015F0, "FreeSpace", 0x20);
MakeComm(0x4015F0, "'function FreeSpace(addr:Pointer; maxSize:Integer):TBlock;'");
MakeCode(0x4015F0);
MakeCode(0x40161F);
MakeCode(0x40163D);
MakeCode(0x40164C);
MakeCode(0x401667);
MakeCode(0x40166E);
MakeCode(0x401670);
MakeCode(0x4016A0);
MakeFunction(0x4015F0, 0x4016A8);
MakeUnkn(0x4016A8, 1);
MakeNameEx(0x4016A8, "Commit", 0x20);
MakeComm(0x4016A8, "'function Commit(addr:Pointer; minSize:Integer):TBlock;'");
MakeCode(0x4016A8);
MakeCode(0x4016EE);
MakeCode(0x4016FC);
MakeCode(0x401706);
MakeCode(0x401728);
MakeCode(0x40172A);
MakeCode(0x401732);
MakeFunction(0x4016A8, 0x40173A);
MakeUnkn(0x40173C, 1);
MakeNameEx(0x40173C, "Decommit", 0x20);
MakeComm(0x40173C, "'function Decommit(addr:Pointer; maxSize:Integer):TBlock;'");
MakeCode(0x40173C);
MakeCode(0x401773);
MakeCode(0x401783);
MakeCode(0x401789);
MakeCode(0x4017A9);
MakeCode(0x4017AB);
MakeFunction(0x40173C, 0x4017B9);
MakeUnkn(0x4017BC, 1);
MakeNameEx(0x4017BC, "GetCommitted", 0x20);
MakeComm(0x4017BC, "'function GetCommitted(minSize:Integer):TBlock;'");
MakeCode(0x4017BC);
MakeCode(0x4017D8);
MakeCode(0x4017DD);
MakeCode(0x40180E);
MakeCode(0x401810);
MakeCode(0x401843);
MakeFunction(0x4017BC, 0x40184A);
MakeUnkn(0x40184C, 1);
MakeNameEx(0x40184C, "GetCommittedAt", 0x20);
MakeComm(0x40184C, "'function GetCommittedAt(addr:PAnsiChar; minSize:Integer):TBlock;'");
MakeCode(0x40184C);
MakeCode(0x40186B);
MakeCode(0x401870);
MakeCode(0x401872);
MakeCode(0x40187B);
MakeCode(0x4018D7);
MakeCode(0x40191F);
MakeCode(0x401960);
MakeCode(0x401967);
MakeFunction(0x40184C, 0x40196F);
MakeUnkn(0x401970, 1);
MakeNameEx(0x401970, "FreeCommitted", 0x20);
MakeComm(0x401970, "'function FreeCommitted(addr:PAnsiChar; maxSize:Integer):TBlock;'");
MakeCode(0x401970);
MakeCode(0x4019DA);
MakeCode(0x4019F1);
MakeCode(0x4019F5);
MakeFunction(0x401970, 0x4019FC);
MakeUnkn(0x4019FC, 1);
MakeNameEx(0x4019FC, "InitAllocator", 0x20);
MakeComm(0x4019FC, "'function InitAllocator:Boolean;'");
MakeCode(0x4019FC);
MakeCode(0x401A2A);
MakeCode(0x401A67);
MakeCode(0x401A91);
MakeCode(0x401A9E);
MakeCode(0x401AB1);
MakeCode(0x401AB2);
MakeCode(0x401AB7);
MakeFunction(0x4019FC, 0x401AC0);
MakeUnkn(0x401AC0, 1);
MakeNameEx(0x401AC0, "UninitAllocator", 0x20);
MakeComm(0x401AC0, "'procedure UninitAllocator;'");
MakeCode(0x401AC0);
MakeCode(0x401AF2);
MakeCode(0x401B13);
MakeCode(0x401B25);
MakeCode(0x401B54);
MakeCode(0x401B6B);
MakeCode(0x401B78);
MakeCode(0x401B8B);
MakeCode(0x401B96);
MakeCode(0x401B9B);
MakeCode(0x401B9D);
MakeFunction(0x401AC0, 0x401BA0);
MakeUnkn(0x401BA0, 1);
MakeNameEx(0x401BA0, "DeleteFree", 0x20);
MakeComm(0x401BA0, "'procedure DeleteFree(f:PFree);'");
MakeCode(0x401BA0);
MakeCode(0x401BB2);
MakeCode(0x401BCB);
MakeCode(0x401BDB);
MakeCode(0x401BE2);
MakeCode(0x401BF8);
MakeCode(0x401BFF);
MakeFunction(0x401BA0, 0x401C01);
MakeUnkn(0x401C04, 1);
MakeNameEx(0x401C04, "FindCommitted", 0x20);
MakeComm(0x401C04, "'function FindCommitted(addr:PAnsiChar):PBlockDesc;'");
MakeCode(0x401C04);
MakeCode(0x401C0C);
MakeCode(0x401C1A);
MakeCode(0x401C1C);
MakeCode(0x401C30);
MakeFunction(0x401C04, 0x401C33);
MakeUnkn(0x401C34, 1);
MakeNameEx(0x401C34, "FillBeforeGap", 0x20);
MakeComm(0x401C34, "'procedure FillBeforeGap(a:PAnsiChar; size:Integer);'");
MakeCode(0x401C34);
MakeCode(0x401C51);
MakeCode(0x401C62);
MakeFunction(0x401C34, 0x401C64);
MakeUnkn(0x401C64, 1);
MakeNameEx(0x401C64, "InternalFreeMem", 0x20);
MakeComm(0x401C64, "'procedure InternalFreeMem(a:PAnsiChar);'");
MakeCode(0x401C64);
MakeFunction(0x401C64, 0x401C86);
MakeUnkn(0x401C88, 1);
MakeNameEx(0x401C88, "FillAfterGap", 0x20);
MakeComm(0x401C88, "'procedure FillAfterGap(a:PAnsiChar; size:Integer);'");
MakeCode(0x401C88);
MakeCode(0x401C9B);
MakeCode(0x401CAA);
MakeFunction(0x401C88, 0x401CB0);
MakeUnkn(0x401CB0, 1);
MakeNameEx(0x401CB0, "FillerSizeBeforeGap", 0x20);
MakeComm(0x401CB0, "'function FillerSizeBeforeGap(a:PAnsiChar):Integer;'");
MakeCode(0x401CB0);
MakeCode(0x401CD3);
MakeCode(0x401CF3);
MakeCode(0x401D11);
MakeCode(0x401D18);
MakeFunction(0x401CB0, 0x401D1D);
MakeUnkn(0x401D20, 1);
MakeNameEx(0x401D20, "FillerSizeAfterGap", 0x20);
MakeComm(0x401D20, "'function FillerSizeAfterGap(a:PAnsiChar):Integer;'");
MakeCode(0x401D20);
MakeCode(0x401D3B);
MakeCode(0x401D52);
MakeFunction(0x401D20, 0x401D58);
MakeUnkn(0x401D58, 1);
MakeNameEx(0x401D58, "DecommitFree", 0x20);
MakeComm(0x401D58, "'function DecommitFree(a:PAnsiChar; size:Integer):Boolean;'");
MakeCode(0x401D58);
MakeCode(0x401D90);
MakeCode(0x401DAD);
MakeCode(0x401DBE);
MakeCode(0x401DEB);
MakeCode(0x401DFA);
MakeFunction(0x401D58, 0x401E05);
MakeUnkn(0x401E08, 1);
MakeNameEx(0x401E08, "InsertFree", 0x20);
MakeComm(0x401E08, "'procedure InsertFree(a:Pointer; size:Integer);'");
MakeCode(0x401E08);
MakeCode(0x401E2F);
MakeCode(0x401E4F);
MakeCode(0x401E5D);
MakeCode(0x401E72);
MakeCode(0x401E89);
MakeFunction(0x401E08, 0x401E8D);
MakeUnkn(0x401E90, 1);
MakeNameEx(0x401E90, "FreeCurAlloc", 0x20);
MakeComm(0x401E90, "'procedure FreeCurAlloc;'");
MakeCode(0x401E90);
MakeCode(0x401EAE);
MakeFunction(0x401E90, 0x401EDA);
MakeUnkn(0x401EDC, 1);
MakeNameEx(0x401EDC, "MergeCommit", 0x20);
MakeComm(0x401EDC, "'function MergeCommit(b:TBlock):Boolean;'");
MakeCode(0x401EDC);
MakeCode(0x401F0C);
MakeCode(0x401F1C);
MakeCode(0x401F33);
MakeCode(0x401F4D);
MakeCode(0x401F5E);
MakeFunction(0x401EDC, 0x401F65);
MakeUnkn(0x401F68, 1);
MakeNameEx(0x401F68, "NewCommit", 0x20);
MakeComm(0x401F68, "'function NewCommit(minSize:Integer):Boolean;'");
MakeCode(0x401F68);
MakeCode(0x401F89);
MakeCode(0x401F8D);
MakeCode(0x401F8F);
MakeFunction(0x401F68, 0x401F93);
MakeUnkn(0x401F94, 1);
MakeNameEx(0x401F94, "NewCommitAt", 0x20);
MakeComm(0x401F94, "'function NewCommitAt(addr:Pointer; minSize:Integer):Boolean;'");
MakeCode(0x401F94);
MakeCode(0x401FBA);
MakeCode(0x401FBE);
MakeCode(0x401FC0);
MakeFunction(0x401F94, 0x401FC5);
MakeUnkn(0x401FC8, 1);
MakeNameEx(0x401FC8, "SearchSmallBlocks", 0x20);
MakeComm(0x401FC8, "'function SearchSmallBlocks(size:Integer):PFree;'");
MakeCode(0x401FC8);
MakeCode(0x401FD1);
MakeCode(0x401FDB);
MakeCode(0x401FF1);
MakeFunction(0x401FC8, 0x401FF4);
MakeUnkn(0x401FF4, 1);
MakeNameEx(0x401FF4, "TryHarder", 0x20);
MakeComm(0x401FF4, "'function TryHarder(size:Integer):Pointer;'");
MakeCode(0x401FF4);
MakeCode(0x402004);
MakeCode(0x40201F);
MakeCode(0x402034);
MakeCode(0x402049);
MakeCode(0x40205B);
MakeCode(0x402071);
MakeCode(0x402097);
MakeCode(0x4020B6);
MakeCode(0x4020C1);
MakeCode(0x4020C8);
MakeCode(0x4020E3);
MakeFunction(0x401FF4, 0x4020E8);
MakeUnkn(0x4020E8, 1);
MakeNameEx(0x4020E8, "SysGetMem", 0x20);
MakeComm(0x4020E8, "'function SysGetMem(Size:Integer):Pointer;'");
MakeCode(0x4020E8);
MakeCode(0x402105);
MakeCode(0x40210D);
MakeCode(0x402117);
MakeCode(0x402138);
MakeCode(0x402148);
MakeCode(0x40215D);
MakeCode(0x402187);
MakeCode(0x402198);
MakeCode(0x4021A1);
MakeCode(0x4021BE);
MakeCode(0x4021E7);
MakeCode(0x40220B);
MakeCode(0x402239);
MakeCode(0x402243);
MakeCode(0x402250);
MakeCode(0x402263);
MakeCode(0x402264);
MakeCode(0x402269);
MakeCode(0x40226B);
MakeFunction(0x4020E8, 0x402275);
MakeUnkn(0x402278, 1);
MakeNameEx(0x402278, "SysFreeMem", 0x20);
MakeComm(0x402278, "'function SysFreeMem(P:Pointer):Integer;'");
MakeCode(0x402278);
MakeCode(0x4022B0);
MakeCode(0x4022D1);
MakeCode(0x4022EC);
MakeCode(0x40231C);
MakeCode(0x40232B);
MakeCode(0x402343);
MakeCode(0x40234C);
MakeCode(0x40237D);
MakeCode(0x40238C);
MakeCode(0x4023AA);
MakeCode(0x4023AF);
MakeCode(0x4023C2);
MakeCode(0x4023CE);
MakeCode(0x4023D8);
MakeCode(0x4023E1);
MakeCode(0x4023E9);
MakeCode(0x4023F6);
MakeCode(0x402409);
MakeCode(0x40240A);
MakeCode(0x40240F);
MakeCode(0x402411);
MakeFunction(0x402278, 0x40241A);
MakeUnkn(0x40241C, 1);
MakeNameEx(0x40241C, "ResizeInPlace", 0x20);
MakeComm(0x40241C, "'function ResizeInPlace(p:Pointer; newSize:Integer):Boolean;'");
MakeCode(0x40241C);
MakeCode(0x402435);
MakeCode(0x402454);
MakeCode(0x4024A3);
MakeCode(0x4024B7);
MakeCode(0x4024D8);
MakeCode(0x4024DF);
MakeCode(0x40252F);
MakeCode(0x40254D);
MakeCode(0x402556);
MakeCode(0x40257C);
MakeCode(0x40259C);
MakeCode(0x4025A8);
MakeCode(0x4025D2);
MakeCode(0x4025D6);
MakeCode(0x4025EF);
MakeFunction(0x40241C, 0x4025F6);
MakeUnkn(0x4025F8, 1);
MakeNameEx(0x4025F8, "SysReallocMem", 0x20);
MakeComm(0x4025F8, "'function SysReallocMem(P:Pointer; Size:Integer):Pointer;'");
MakeCode(0x4025F8);
MakeCode(0x40261F);
MakeCode(0x402640);
MakeCode(0x402652);
MakeCode(0x402670);
MakeCode(0x402685);
MakeCode(0x402688);
MakeCode(0x402695);
MakeCode(0x4026A8);
MakeCode(0x4026A9);
MakeCode(0x4026AE);
MakeCode(0x4026B0);
MakeFunction(0x4025F8, 0x4026B9);
MakeUnkn(0x4026BC, 1);
MakeNameEx(0x4026BC, "@GetMem", 0x20);
MakeComm(0x4026BC, "'function @GetMem(size:Integer):Pointer;'");
MakeCode(0x4026BC);
MakeCode(0x4026D6);
MakeCode(0x4026D8);
MakeFunction(0x4026BC, 0x4026DC);
MakeUnkn(0x4026DC, 1);
MakeNameEx(0x4026DC, "@FreeMem", 0x20);
MakeComm(0x4026DC, "'function @FreeMem(p:Pointer):Integer;'");
MakeCode(0x4026DC);
MakeCode(0x4026F6);
MakeCode(0x4026F8);
MakeFunction(0x4026DC, 0x4026FC);
MakeUnkn(0x4026FC, 1);
MakeNameEx(0x4026FC, "@ReallocMem", 0x20);
MakeComm(0x4026FC, "'function @ReallocMem(var P:Pointer; NewSize:Integer):Pointer;'");
MakeCode(0x4026FC);
MakeCode(0x402717);
MakeCode(0x40271E);
MakeCode(0x40272D);
MakeCode(0x402734);
MakeFunction(0x4026FC, 0x402749);
MakeUnkn(0x40274C, 1);
MakeNameEx(0x40274C, "ExceptObject", 0x20);
MakeComm(0x40274C, "'function ExceptObject:TObject;'");
MakeCode(0x40274C);
MakeCode(0x402769);
MakeFunction(0x40274C, 0x40276C);
MakeUnkn(0x40276C, 1);
MakeNameEx(0x40276C, "ExceptAddr", 0x20);
MakeComm(0x40276C, "'function ExceptAddr:Pointer;'");
MakeCode(0x40276C);
MakeCode(0x402789);
MakeFunction(0x40276C, 0x40278C);
MakeUnkn(0x40278C, 1);
MakeNameEx(0x40278C, "AcquireExceptionObject", 0x20);
MakeComm(0x40278C, "'function AcquireExceptionObject:Pointer;'");
MakeCode(0x40278C);
MakeCode(0x4027B6);
MakeCode(0x4027B8);
MakeFunction(0x40278C, 0x4027BD);
MakeUnkn(0x4027C0, 1);
MakeNameEx(0x4027C0, "RunErrorAt", 0x20);
MakeComm(0x4027C0, "'procedure RunErrorAt(ErrCode:Integer; ErrorAtAddr:Pointer);'");
MakeCode(0x4027C0);
MakeFunction(0x4027C0, 0x4027CC);
MakeUnkn(0x4027CC, 1);
MakeNameEx(0x4027CC, "ErrorAt", 0x20);
MakeComm(0x4027CC, "'procedure ErrorAt(ErrorCode:Byte; ErrorAddr:Pointer);'");
MakeCode(0x4027CC);
MakeCode(0x4027E8);
MakeCode(0x4027F9);
MakeCode(0x402808);
MakeFunction(0x4027CC, 0x402816);
MakeUnkn(0x402818, 1);
MakeNameEx(0x402818, "Error", 0x20);
MakeComm(0x402818, "'procedure Error(errorCode:TRuntimeError);'");
MakeCode(0x402818);
MakeFunction(0x402818, 0x402824);
MakeUnkn(0x402824, 1);
MakeNameEx(0x402824, "@_IOTest", 0x20);
MakeComm(0x402824, "'procedure @_IOTest;'");
MakeCode(0x402824);
MakeCode(0x402839);
MakeFunction(0x402824, 0x402841);
MakeUnkn(0x402844, 1);
MakeNameEx(0x402844, "SetInOutRes", 0x20);
MakeComm(0x402844, "'procedure SetInOutRes(NewValue:Integer);'");
MakeCode(0x402844);
MakeFunction(0x402844, 0x402854);
MakeUnkn(0x402854, 1);
MakeNameEx(0x402854, "@Copy", 0x20);
MakeComm(0x402854, "'procedure @Copy(S:ShortString; Index:Integer; Count:Integer; Result:ShortString);'");
MakeCode(0x402854);
MakeCode(0x40286A);
MakeCode(0x402875);
MakeCode(0x40287E);
MakeCode(0x402885);
MakeCode(0x402889);
MakeCode(0x40288D);
MakeCode(0x40288F);
MakeFunction(0x402854, 0x402894);
MakeUnkn(0x402898, 1);
MakeNameEx(0x402898, "IOResult", 0x20);
MakeComm(0x402898, "'function IOResult:Integer;'");
MakeCode(0x402898);
MakeFunction(0x402898, 0x4028B5);
MakeUnkn(0x4028B8, 1);
MakeNameEx(0x4028B8, "Move", 0x20);
MakeComm(0x4028B8, "'procedure Move(const Source:void ; var Dest:void ; Count:Integer);'");
MakeCode(0x4028B8);
MakeCode(0x4028D7);
MakeCode(0x4028F5);
MakeFunction(0x4028B8, 0x4028F8);
MakeUnkn(0x4028F8, 1);
MakeNameEx(0x4028F8, "Set8087CW", 0x20);
MakeComm(0x4028F8, "'procedure Set8087CW(NewCW:Word);'");
MakeCode(0x4028F8);
MakeFunction(0x4028F8, 0x402907);
MakeUnkn(0x402908, 1);
MakeNameEx(0x402908, "Get8087CW", 0x20);
MakeComm(0x402908, "'function Get8087CW:Word;'");
MakeCode(0x402908);
MakeFunction(0x402908, 0x40290F);
MakeUnkn(0x402910, 1);
MakeNameEx(0x402910, "@ROUND", 0x20);
MakeComm(0x402910, "'procedure @ROUND;'");
MakeCode(0x402910);
MakeFunction(0x402910, 0x40291A);
MakeUnkn(0x40291C, 1);
MakeNameEx(0x40291C, "@AbstractError", 0x20);
MakeComm(0x40291C, "'procedure @AbstractError;'");
MakeCode(0x40291C);
MakeCode(0x40292B);
MakeFunction(0x40291C, 0x402936);
MakeUnkn(0x402938, 1);
MakeNameEx(0x402938, "InternalFlush", 0x20);
MakeComm(0x402938, "'function InternalFlush(var t:TTextRec; Func:TTextIOFunc):Integer;'");
MakeCode(0x402938);
MakeCode(0x402953);
MakeCode(0x402957);
MakeCode(0x402965);
MakeCode(0x402969);
MakeCode(0x40296E);
MakeCode(0x402979);
MakeFunction(0x402938, 0x40297D);
MakeUnkn(0x402980, 1);
MakeNameEx(0x402980, "Flush", 0x20);
MakeComm(0x402980, "'function Flush(var t:Text):Integer;'");
MakeCode(0x402980);
MakeFunction(0x402980, 0x402989);
MakeUnkn(0x40298C, 1);
MakeNameEx(0x40298C, "@Close", 0x20);
MakeComm(0x40298C, "'procedure @Close(var F:TFileRec);'");
MakeCode(0x40298C);
MakeCode(0x4029B3);
MakeCode(0x4029BE);
MakeCode(0x4029CB);
MakeCode(0x4029DD);
MakeFunction(0x40298C, 0x4029E2);
MakeUnkn(0x4029E4, 1);
MakeNameEx(0x4029E4, "@PStrNCpy", 0x20);
MakeComm(0x4029E4, "'procedure @PStrNCpy(Dest:PShortString; Source:PShortString; MaxLen:Byte);'");
MakeCode(0x4029E4);
MakeCode(0x4029ED);
MakeFunction(0x4029E4, 0x4029FF);
MakeUnkn(0x402A00, 1);
MakeNameEx(0x402A00, "@PStrCmp", 0x20);
MakeComm(0x402A00, "'procedure @PStrCmp(S1:PShortString; S2:PShortString);'");
MakeCode(0x402A00);
MakeCode(0x402A17);
MakeCode(0x402A1D);
MakeCode(0x402A3D);
MakeCode(0x402A43);
MakeCode(0x402A65);
MakeCode(0x402A69);
MakeCode(0x402A7E);
MakeFunction(0x402A00, 0x402A82);
MakeUnkn(0x402A84, 1);
MakeNameEx(0x402A84, "@AStrCmp", 0x20);
MakeComm(0x402A84, "'procedure @AStrCmp(S1:PShortString; S2:PShortString; Bytes:Integer);'");
MakeCode(0x402A84);
MakeCode(0x402A8E);
MakeCode(0x402AAE);
MakeCode(0x402AB4);
MakeCode(0x402AD6);
MakeCode(0x402ADB);
MakeCode(0x402AF0);
MakeFunction(0x402A84, 0x402AF3);
MakeUnkn(0x402AF4, 1);
MakeNameEx(0x402AF4, "@FillChar", 0x20);
MakeComm(0x402AF4, "'procedure @FillChar(var dst:Pointer; cnt:Integer; val:Char);'");
MakeCode(0x402AF4);
MakeCode(0x402B11);
MakeFunction(0x402AF4, 0x402B13);
MakeUnkn(0x402B14, 1);
MakeNameEx(0x402B14, "@ValLong", 0x20);
MakeComm(0x402B14, "'function @ValLong(s:AnsiString; var code:Integer):Longint;'");
MakeCode(0x402B14);
MakeCode(0x402B27);
MakeCode(0x402B3B);
MakeCode(0x402B62);
MakeCode(0x402B66);
MakeCode(0x402B80);
MakeCode(0x402B8A);
MakeCode(0x402B8D);
MakeCode(0x402B93);
MakeCode(0x402B98);
MakeCode(0x402B9A);
MakeCode(0x402B9F);
MakeCode(0x402BAB);
MakeCode(0x402BB3);
MakeCode(0x402BC6);
MakeCode(0x402BDC);
MakeCode(0x402BDF);
MakeFunction(0x402B14, 0x402BE5);
MakeUnkn(0x402BE8, 1);
MakeNameEx(0x402BE8, "@_CToPasStr", 0x20);
MakeComm(0x402BE8, "'procedure @_CToPasStr(Dest:PShortString; const Source:PAnsiChar);'");
MakeCode(0x402BE8);
MakeFunction(0x402BE8, 0x402BF3);
MakeUnkn(0x402BF4, 1);
MakeNameEx(0x402BF4, "@_CLenToPasStr", 0x20);
MakeComm(0x402BF4, "'procedure @_CLenToPasStr(Dest:PShortString; const Source:PAnsiChar; MaxLen:Integer);'");
MakeCode(0x402BF4);
MakeCode(0x402C03);
MakeCode(0x402C10);
MakeFunction(0x402BF4, 0x402C17);
MakeUnkn(0x402C18, 1);
MakeNameEx(0x402C18, "@SetEq", 0x20);
MakeComm(0x402C18, "'procedure @SetEq;'");
MakeCode(0x402C18);
MakeFunction(0x402C18, 0x402C29);
MakeUnkn(0x402C2C, 1);
MakeNameEx(0x402C2C, "FPower10", 0x20);
MakeComm(0x402C2C, "'procedure FPower10;'");
MakeCode(0x402C2C);
MakeFunction(0x402C2C, 0x402C32);
MakeUnkn(0x402C34, 1);
MakeNameEx(0x402C34, "@Pow10", 0x20);
MakeComm(0x402C34, "'procedure @Pow10;'");
MakeCode(0x402C34);
MakeCode(0x402C75);
MakeCode(0x402C88);
MakeCode(0x402CBA);
MakeCode(0x402CCD);
MakeCode(0x402CD7);
MakeCode(0x402CDB);
MakeFunction(0x402C34, 0x402CDD);
MakeUnkn(0x402F18, 1);
MakeNameEx(0x402F18, "user32._2", 0x20);
MakeComm(0x402F18, "'user32.'+#5+;'");
MakeCode(0x402F18);
MakeFunction(0x402F18, 0x402F1E);
MakeUnkn(0x402F20, 1);
MakeNameEx(0x402F20, "@isNECWindows", 0x20);
MakeComm(0x402F20, "'function @isNECWindows:Boolean;'");
MakeCode(0x402F20);
MakeCode(0x402F49);
MakeCode(0x402F4B);
MakeFunction(0x402F20, 0x402F4F);
MakeUnkn(0x402F50, 1);
MakeNameEx(0x402F50, "@FpuMaskInit", 0x20);
MakeComm(0x402F50, "'procedure @FpuMaskInit;'");
MakeCode(0x402F50);
MakeCode(0x402FAA);
MakeCode(0x402FB7);
MakeCode(0x402FC1);
MakeCode(0x402FC6);
MakeCode(0x402FC8);
MakeFunction(0x402F50, 0x402FE7);
MakeUnkn(0x403014, 1);
MakeNameEx(0x403014, "@FpuInit", 0x20);
MakeComm(0x403014, "'procedure @FpuInit;'");
MakeCode(0x403014);
MakeFunction(0x403014, 0x40301E);
MakeUnkn(0x403020, 1);
MakeNameEx(0x403020, "TObject.ClassType", 0x20);
MakeComm(0x403020, "'function TObject.ClassType:TClass;'");
MakeCode(0x403020);
MakeFunction(0x403020, 0x403027);
MakeUnkn(0x403028, 1);
MakeNameEx(0x403028, "TObject.ClassName", 0x20);
MakeComm(0x403028, "'function TObject.ClassName:ShortString;'");
MakeCode(0x403028);
MakeFunction(0x403028, 0x403039);
MakeUnkn(0x40303C, 1);
MakeNameEx(0x40303C, "TObject.ClassNameIs", 0x20);
MakeComm(0x40303C, "'function TObject.ClassNameIs(const Name:AnsiString):Boolean;'");
MakeCode(0x40303C);
MakeCode(0x403050);
MakeCode(0x40305F);
MakeFunction(0x40303C, 0x403063);
MakeUnkn(0x403064, 1);
MakeNameEx(0x403064, "TObject.ClassParent", 0x20);
MakeComm(0x403064, "'function TObject.ClassParent:TClass;'");
MakeCode(0x403064);
MakeFunction(0x403064, 0x40306E);
MakeUnkn(0x403070, 1);
MakeNameEx(0x403070, "TObject.NewInstance", 0x20);
MakeComm(0x403070, "'function TObject.NewInstance:TObject;'");
MakeCode(0x403070);
MakeFunction(0x403070, 0x40308A);
MakeUnkn(0x40308C, 1);
MakeNameEx(0x40308C, "TObject.FreeInstance", 0x20);
MakeComm(0x40308C, "'procedure TObject.FreeInstance;'");
MakeCode(0x40308C);
MakeFunction(0x40308C, 0x40309F);
MakeUnkn(0x4030A0, 1);
MakeNameEx(0x4030A0, "TObject.InstanceSize", 0x20);
MakeComm(0x4030A0, "'function TObject.InstanceSize:Integer;'");
MakeCode(0x4030A0);
MakeFunction(0x4030A0, 0x4030A6);
MakeUnkn(0x4030A8, 1);
MakeNameEx(0x4030A8, "TObject.Create", 0x20);
MakeComm(0x4030A8, "'constructor TObject.Create;'");
MakeCode(0x4030A8);
MakeCode(0x4030B4);
MakeFunction(0x4030A8, 0x4030C8);
MakeUnkn(0x4030C8, 1);
MakeNameEx(0x4030C8, "TObject.Destroy", 0x20);
MakeComm(0x4030C8, "'destructor TObject.Destroy;'");
MakeCode(0x4030C8);
MakeFunction(0x4030C8, 0x4030D7);
MakeUnkn(0x4030D8, 1);
MakeNameEx(0x4030D8, "TObject.Free", 0x20);
MakeComm(0x4030D8, "'procedure TObject.Free;'");
MakeCode(0x4030D8);
MakeFunction(0x4030D8, 0x4030E4);
MakeUnkn(0x4030E4, 1);
MakeNameEx(0x4030E4, "TObject.InitInstance", 0x20);
MakeComm(0x4030E4, "'function TObject.InitInstance(Instance:Pointer):TObject;'");
MakeCode(0x4030E4);
MakeCode(0x403102);
MakeCode(0x40310A);
MakeCode(0x403115);
MakeCode(0x403119);
MakeCode(0x40311F);
MakeCode(0x40312C);
MakeCode(0x403136);
MakeFunction(0x4030E4, 0x40313A);
MakeUnkn(0x40313C, 1);
MakeNameEx(0x40313C, "TObject.CleanupInstance", 0x20);
MakeComm(0x40313C, "'procedure TObject.CleanupInstance;'");
MakeCode(0x40313C);
MakeCode(0x403142);
MakeCode(0x403155);
MakeFunction(0x40313C, 0x40315C);
MakeUnkn(0x40315C, 1);
MakeNameEx(0x40315C, "InvokeImplGetter", 0x20);
MakeComm(0x40315C, "'function InvokeImplGetter(Self:TObject; ImplGetter:Cardinal):IInterface;'");
MakeCode(0x40315C);
MakeCode(0x403175);
MakeCode(0x403177);
MakeFunction(0x40315C, 0x403189);
MakeUnkn(0x40318C, 1);
MakeNameEx(0x40318C, "TObject.GetInterface", 0x20);
MakeComm(0x40318C, "'function TObject.GetInterface(const IID:TGUID; var Obj:void ):Boolean;'");
MakeCode(0x40318C);
MakeCode(0x4031DD);
MakeCode(0x4031F4);
MakeCode(0x4031FA);
MakeCode(0x403207);
MakeCode(0x403210);
MakeCode(0x403215);
MakeFunction(0x40318C, 0x403220);
MakeUnkn(0x403220, 1);
MakeNameEx(0x403220, "TObject.GetInterfaceEntry", 0x20);
MakeComm(0x403220, "'function TObject.GetInterfaceEntry(const IID:TGUID):PInterfaceEntry;'");
MakeCode(0x403220);
MakeCode(0x403224);
MakeCode(0x403230);
MakeCode(0x40324E);
MakeCode(0x403254);
MakeCode(0x40325F);
MakeCode(0x403261);
MakeFunction(0x403220, 0x403264);
MakeUnkn(0x403264, 1);
MakeNameEx(0x403264, "@IsClass", 0x20);
MakeComm(0x403264, "'function @IsClass(Child:TObject; Parent:TClass):Boolean;'");
MakeCode(0x403264);
MakeCode(0x40327B);
MakeCode(0x403280);
MakeFunction(0x403264, 0x403285);
MakeUnkn(0x403288, 1);
MakeNameEx(0x403288, "@AsClass", 0x20);
MakeComm(0x403288, "'function @AsClass(child:TObject; parent:TClass):TObject;'");
MakeCode(0x403288);
MakeCode(0x40328E);
MakeFunction(0x403288, 0x4032A3);
MakeUnkn(0x4032A4, 1);
MakeNameEx(0x4032A4, "GetDynaMethod", 0x20);
MakeComm(0x4032A4, "'procedure GetDynaMethod;'");
MakeCode(0x4032A4);
MakeCode(0x4032A8);
MakeCode(0x4032AA);
MakeCode(0x4032BE);
MakeCode(0x4032C7);
MakeFunction(0x4032A4, 0x4032D2);
MakeUnkn(0x4032D4, 1);
MakeNameEx(0x4032D4, "@CallDynaInst", 0x20);
MakeComm(0x4032D4, "'procedure @CallDynaInst;'");
MakeCode(0x4032D4);
MakeCode(0x4032E3);
MakeFunction(0x4032D4, 0x4032EA);
MakeUnkn(0x4032EC, 1);
MakeNameEx(0x4032EC, "TObject.InheritsFrom", 0x20);
MakeComm(0x4032EC, "'function TObject.InheritsFrom(AClass:TClass):Boolean;'");
MakeCode(0x4032EC);
MakeFunction(0x4032EC, 0x4032FF);
MakeUnkn(0x403300, 1);
MakeNameEx(0x403300, "TObject.ClassInfo", 0x20);
MakeComm(0x403300, "'function TObject.ClassInfo:Pointer;'");
MakeCode(0x403300);
MakeFunction(0x403300, 0x403306);
MakeUnkn(0x403308, 1);
MakeNameEx(0x403308, "TObject.SafeCallException", 0x20);
MakeComm(0x403308, "'function TObject.SafeCallException(ExceptObject:TObject; ExceptAddr:Pointer):HRESULT;'");
MakeCode(0x403308);
MakeFunction(0x403308, 0x40330E);
MakeUnkn(0x403310, 1);
MakeNameEx(0x403310, "TObject.DefaultHandler", 0x20);
MakeComm(0x403310, "'procedure TObject.DefaultHandler(var Message:void );'");
MakeCode(0x403310);
MakeFunction(0x403310, 0x403311);
MakeUnkn(0x403314, 1);
MakeNameEx(0x403314, "TObject.AfterConstruction", 0x20);
MakeComm(0x403314, "'procedure TObject.AfterConstruction;'");
MakeCode(0x403314);
MakeFunction(0x403314, 0x403315);
MakeUnkn(0x403318, 1);
MakeNameEx(0x403318, "TCustomVariantType.BeforeDestruction", 0x20);
MakeComm(0x403318, "'procedure TCustomVariantType.BeforeDestruction;'");
MakeCode(0x403318);
MakeFunction(0x403318, 0x403319);
MakeUnkn(0x40331C, 1);
MakeNameEx(0x40331C, "TObject.Dispatch", 0x20);
MakeComm(0x40331C, "'procedure TObject.Dispatch(var Message:void );'");
MakeCode(0x40331C);
MakeCode(0x40333C);
MakeFunction(0x40331C, 0x403343);
MakeUnkn(0x403344, 1);
MakeNameEx(0x403344, "TObject.MethodAddress", 0x20);
MakeComm(0x403344, "'function TObject.MethodAddress(const Name:ShortString):Pointer;'");
MakeCode(0x403344);
MakeCode(0x40334F);
MakeCode(0x403351);
MakeCode(0x40335E);
MakeCode(0x403365);
MakeCode(0x40336D);
MakeCode(0x403376);
MakeCode(0x40337A);
MakeCode(0x40337C);
MakeCode(0x40338E);
MakeFunction(0x403344, 0x403392);
MakeUnkn(0x403394, 1);
MakeNameEx(0x403394, "TObject.FieldAddress", 0x20);
MakeComm(0x403394, "'function TObject.FieldAddress(const Name:ShortString):Pointer;'");
MakeCode(0x403394);
MakeCode(0x40339E);
MakeCode(0x4033AD);
MakeCode(0x4033B4);
MakeCode(0x4033BB);
MakeCode(0x4033C5);
MakeCode(0x4033CC);
MakeCode(0x4033E0);
MakeFunction(0x403394, 0x4033E4);
MakeUnkn(0x4033E4, 1);
MakeNameEx(0x4033E4, "@ClassCreate", 0x20);
MakeComm(0x4033E4, "'function @ClassCreate(AClass:TClass; Alloc:Boolean):TObject;'");
MakeCode(0x4033E4);
MakeCode(0x4033EE);
MakeFunction(0x4033E4, 0x40340D);
MakeUnkn(0x403434, 1);
MakeNameEx(0x403434, "@ClassDestroy", 0x20);
MakeComm(0x403434, "'procedure @ClassDestroy(Instance:TObject);'");
MakeCode(0x403434);
MakeFunction(0x403434, 0x40343A);
MakeUnkn(0x40343C, 1);
MakeNameEx(0x40343C, "@AfterConstruction", 0x20);
MakeComm(0x40343C, "'function @AfterConstruction(Instance:TObject):TObject;'");
MakeCode(0x40343C);
MakeFunction(0x40343C, 0x40344A);
MakeUnkn(0x40344C, 1);
MakeNameEx(0x40344C, "@BeforeDestruction", 0x20);
MakeComm(0x40344C, "'function @BeforeDestruction(Instance:TObject; OuterMost:Shortint):TObject;'");
MakeCode(0x40344C);
MakeCode(0x403451);
MakeFunction(0x40344C, 0x40345B);
MakeUnkn(0x40345C, 1);
MakeNameEx(0x40345C, "NotifyReRaise", 0x20);
MakeComm(0x40345C, "'procedure NotifyReRaise;'");
MakeCode(0x40345C);
MakeFunction(0x40345C, 0x403477);
MakeUnkn(0x403478, 1);
MakeNameEx(0x403478, "NotifyNonDelphiException", 0x20);
MakeComm(0x403478, "'procedure NotifyNonDelphiException;'");
MakeCode(0x403478);
MakeFunction(0x403478, 0x403499);
MakeUnkn(0x40349C, 1);
MakeNameEx(0x40349C, "NotifyExcept", 0x20);
MakeComm(0x40349C, "'procedure NotifyExcept;'");
MakeCode(0x40349C);
MakeFunction(0x40349C, 0x4034B1);
MakeUnkn(0x4034B4, 1);
MakeNameEx(0x4034B4, "NotifyOnExcept", 0x20);
MakeComm(0x4034B4, "'procedure NotifyOnExcept;'");
MakeCode(0x4034B4);
MakeFunction(0x4034B4, 0x4034C7);
MakeUnkn(0x4034C8, 1);
MakeNameEx(0x4034C8, "NotifyAnyExcept", 0x20);
MakeComm(0x4034C8, "'procedure NotifyAnyExcept;'");
MakeCode(0x4034C8);
MakeFunction(0x4034C8, 0x4034D9);
MakeUnkn(0x4034DC, 1);
MakeNameEx(0x4034DC, "CheckJmp", 0x20);
MakeComm(0x4034DC, "'procedure CheckJmp;'");
MakeCode(0x4034DC);
MakeCode(0x4034F4);
MakeCode(0x4034F7);
MakeFunction(0x4034DC, 0x4034FA);
MakeUnkn(0x4034FC, 1);
MakeNameEx(0x4034FC, "NotifyExceptFinally", 0x20);
MakeComm(0x4034FC, "'procedure NotifyExceptFinally;'");
MakeCode(0x4034FC);
MakeFunction(0x4034FC, 0x403523);
MakeUnkn(0x403524, 1);
MakeNameEx(0x403524, "NotifyTerminate", 0x20);
MakeComm(0x403524, "'procedure NotifyTerminate;'");
MakeCode(0x403524);
MakeFunction(0x403524, 0x403540);
MakeUnkn(0x403540, 1);
MakeNameEx(0x403540, "NotifyUnhandled", 0x20);
MakeComm(0x403540, "'procedure NotifyUnhandled;'");
MakeCode(0x403540);
MakeCode(0x40355B);
MakeFunction(0x403540, 0x40355E);
MakeUnkn(0x403560, 1);
MakeNameEx(0x403560, "@HandleAnyException", 0x20);
MakeComm(0x403560, "'procedure @HandleAnyException;'");
MakeCode(0x403560);
MakeCode(0x4035E4);
MakeCode(0x4035ED);
MakeCode(0x403614);
MakeCode(0x403684);
MakeFunction(0x403560, 0x40368A);
MakeUnkn(0x40368C, 1);
MakeNameEx(0x40368C, "@HandleOnException", 0x20);
MakeComm(0x40368C, "'procedure @HandleOnException;'");
MakeCode(0x40368C);
MakeCode(0x4036C4);
MakeCode(0x4036C9);
MakeCode(0x4036DC);
MakeCode(0x4036E6);
MakeCode(0x4036E8);
MakeCode(0x40370D);
MakeCode(0x403725);
MakeCode(0x40376D);
MakeCode(0x403778);
MakeCode(0x40379F);
MakeCode(0x40380C);
MakeFunction(0x40368C, 0x403812);
MakeUnkn(0x403814, 1);
MakeNameEx(0x403814, "@HandleFinally", 0x20);
MakeComm(0x403814, "'procedure @HandleFinally;'");
MakeCode(0x403814);
MakeCode(0x403844);
MakeFunction(0x403814, 0x40384A);
MakeUnkn(0x40384C, 1);
MakeNameEx(0x40384C, "@RaiseExcept", 0x20);
MakeComm(0x40384C, "'procedure @RaiseExcept;'");
MakeCode(0x40384C);
MakeCode(0x40385A);
MakeFunction(0x40384C, 0x403874);
MakeUnkn(0x403874, 1);
MakeNameEx(0x403874, "@RaiseAgain", 0x20);
MakeComm(0x403874, "'procedure @RaiseAgain;'");
MakeCode(0x403874);
MakeCode(0x4038AE);
MakeFunction(0x403874, 0x4038C5);
MakeUnkn(0x4038C8, 1);
MakeNameEx(0x4038C8, "@DoneExcept", 0x20);
MakeComm(0x4038C8, "'procedure @DoneExcept;'");
MakeCode(0x4038C8);
MakeFunction(0x4038C8, 0x4038F8);
MakeUnkn(0x4038F8, 1);
MakeNameEx(0x4038F8, "@TryFinallyExit", 0x20);
MakeComm(0x4038F8, "'procedure @TryFinallyExit;'");
MakeCode(0x4038F8);
MakeFunction(0x4038F8, 0x40390D);
MakeUnkn(0x403910, 1);
MakeNameEx(0x403910, "MapToRunError", 0x20);
MakeComm(0x403910, "'procedure MapToRunError(P:PExceptionRecord); stdcall;'");
MakeCode(0x403910);
MakeCode(0x40393D);
MakeCode(0x40394B);
MakeCode(0x403963);
MakeCode(0x403971);
MakeCode(0x403975);
MakeCode(0x403979);
MakeCode(0x40397D);
MakeCode(0x403981);
MakeCode(0x403985);
MakeCode(0x403989);
MakeCode(0x40398D);
MakeCode(0x403991);
MakeCode(0x403995);
MakeCode(0x403999);
MakeCode(0x40399D);
MakeCode(0x40399F);
MakeFunction(0x403910, 0x4039B0);
MakeUnkn(0x4039B0, 1);
MakeNameEx(0x4039B0, "@ExceptionHandler", 0x20);
MakeComm(0x4039B0, "'procedure @ExceptionHandler;'");
MakeCode(0x4039B0);
MakeCode(0x4039D9);
MakeCode(0x403A25);
MakeCode(0x403A36);
MakeCode(0x403A4A);
MakeFunction(0x4039B0, 0x403A4D);
MakeUnkn(0x403A50, 1);
MakeNameEx(0x403A50, "SetExceptionHandler", 0x20);
MakeComm(0x403A50, "'procedure SetExceptionHandler;'");
MakeCode(0x403A50);
MakeFunction(0x403A50, 0x403A6D);
MakeUnkn(0x403A70, 1);
MakeNameEx(0x403A70, "UnsetExceptionHandler", 0x20);
MakeComm(0x403A70, "'procedure UnsetExceptionHandler;'");
MakeCode(0x403A70);
MakeCode(0x403A88);
MakeCode(0x403A8A);
MakeFunction(0x403A70, 0x403A98);
MakeUnkn(0x403A98, 1);
MakeNameEx(0x403A98, "FinalizeUnits", 0x20);
MakeComm(0x403A98, "'procedure FinalizeUnits;'");
MakeCode(0x403A98);
MakeFunction(0x403A98, 0x403AF7);
MakeUnkn(0x403AF8, 1);
MakeNameEx(0x403AF8, "InitUnits", 0x20);
MakeComm(0x403AF8, "'procedure InitUnits;'");
MakeCode(0x403AF8);
MakeCode(0x403B20);
MakeCode(0x403B30);
MakeCode(0x403B34);
MakeCode(0x403B3E);
MakeCode(0x403B52);
MakeFunction(0x403AF8, 0x403B57);
MakeUnkn(0x403B58, 1);
MakeNameEx(0x403B58, "@StartExe", 0x20);
MakeComm(0x403B58, "'procedure @StartExe(InitTable:PackageInfo; Module:PLibModule);'");
MakeCode(0x403B58);
MakeFunction(0x403B58, 0x403B98);
MakeUnkn(0x403B98, 1);
MakeNameEx(0x403B98, "@InitResStrings", 0x20);
MakeComm(0x403B98, "'procedure @InitResStrings;'");
MakeCode(0x403B98);
MakeCode(0x403BA4);
MakeFunction(0x403B98, 0x403BBC);
MakeUnkn(0x403BBC, 1);
MakeNameEx(0x403BBC, "@InitResStringImports", 0x20);
MakeComm(0x403BBC, "'procedure @InitResStringImports;'");
MakeCode(0x403BBC);
MakeCode(0x403BC8);
MakeFunction(0x403BBC, 0x403BE1);
MakeUnkn(0x403BE4, 1);
MakeNameEx(0x403BE4, "@InitImports", 0x20);
MakeComm(0x403BE4, "'procedure @InitImports;'");
MakeCode(0x403BE4);
MakeCode(0x403BF0);
MakeFunction(0x403BE4, 0x403C08);
MakeUnkn(0x403C08, 1);
MakeNameEx(0x403C08, "MakeErrorMessage", 0x20);
MakeComm(0x403C08, "'procedure MakeErrorMessage;'");
MakeCode(0x403C08);
MakeCode(0x403C18);
MakeCode(0x403C44);
MakeFunction(0x403C08, 0x403C62);
MakeUnkn(0x403C64, 1);
MakeNameEx(0x403C64, "ExitDll", 0x20);
MakeComm(0x403C64, "'procedure ExitDll;'");
MakeCode(0x403C64);
MakeFunction(0x403C64, 0x403C91);
MakeUnkn(0x403C94, 1);
MakeNameEx(0x403C94, "WriteErrorMessage", 0x20);
MakeComm(0x403C94, "'procedure WriteErrorMessage;'");
MakeCode(0x403C94);
MakeCode(0x403CBD);
MakeCode(0x403CF5);
MakeCode(0x403D11);
MakeFunction(0x403C94, 0x403D13);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x403D1C, -1);
MakeDword(0x403D18);
MakeDword(0x403D14);
MakeUnkn(0x403D20, 1);
MakeNameEx(0x403D20, "@Halt0", 0x20);
MakeComm(0x403D20, "'procedure @Halt0;'");
MakeCode(0x403D20);
MakeCode(0x403D3E);
MakeCode(0x403D4F);
MakeCode(0x403D69);
MakeCode(0x403D79);
MakeCode(0x403D89);
MakeCode(0x403DAA);
MakeCode(0x403DB8);
MakeCode(0x403DC3);
MakeCode(0x403DD7);
MakeCode(0x403DDF);
MakeFunction(0x403D20, 0x403DF8);
MakeUnkn(0x403DF8, 1);
MakeNameEx(0x403DF8, "@Halt", 0x20);
MakeComm(0x403DF8, "'procedure @Halt(Code:Integer);'");
MakeCode(0x403DF8);
MakeFunction(0x403DF8, 0x403E03);
MakeUnkn(0x403E04, 1);
MakeNameEx(0x403E04, "@RunError", 0x20);
MakeComm(0x403E04, "'procedure @RunError(errorCode:Byte);'");
MakeCode(0x403E04);
MakeFunction(0x403E04, 0x403E10);
MakeUnkn(0x403E10, 1);
MakeNameEx(0x403E10, "@LStrClr", 0x20);
MakeComm(0x403E10, "'procedure @LStrClr(var S:AnsiString);'");
MakeCode(0x403E10);
MakeFunction(0x403E10, 0x403E33);
MakeUnkn(0x403E34, 1);
MakeNameEx(0x403E34, "@LStrArrayClr", 0x20);
MakeComm(0x403E34, "'procedure @LStrArrayClr(var StrArray:Pointer; Count:Integer);'");
MakeCode(0x403E34);
MakeCode(0x403E3A);
MakeCode(0x403E5A);
MakeFunction(0x403E34, 0x403E63);
MakeUnkn(0x403E64, 1);
MakeNameEx(0x403E64, "@LStrAsg", 0x20);
MakeComm(0x403E64, "'procedure @LStrAsg(var Dest:AnsiString; Source:AnsiString);'");
MakeCode(0x403E64);
MakeCode(0x403E88);
MakeCode(0x403E8C);
MakeFunction(0x403E64, 0x403EA7);
MakeUnkn(0x403EA8, 1);
MakeNameEx(0x403EA8, "@LStrLAsg", 0x20);
MakeComm(0x403EA8, "'procedure @LStrLAsg(var Dest:AnsiString; const Source:AnsiString);'");
MakeCode(0x403EA8);
MakeCode(0x403EB6);
MakeFunction(0x403EA8, 0x403ED1);
MakeUnkn(0x403ED4, 1);
MakeNameEx(0x403ED4, "@NewAnsiString", 0x20);
MakeComm(0x403ED4, "'function @NewAnsiString(length:Integer):Pointer;'");
MakeCode(0x403ED4);
MakeCode(0x403EFC);
MakeFunction(0x403ED4, 0x403EFF);
MakeUnkn(0x403F00, 1);
MakeNameEx(0x403F00, "@LStrFromPCharLen", 0x20);
MakeComm(0x403F00, "'procedure @LStrFromPCharLen(var Dest:AnsiString; Source:PAnsiChar; Length:Integer);'");
MakeCode(0x403F00);
MakeCode(0x403F21);
MakeFunction(0x403F00, 0x403F2E);
MakeUnkn(0x403F30, 1);
MakeNameEx(0x403F30, "CharFromWChar", 0x20);
MakeComm(0x403F30, "'function CharFromWChar(CharDest:PAnsiChar; DestBytes:Integer; const WCharSource:PWideChar; SrcChars:Integer):Integer;'");
MakeCode(0x403F30);
MakeFunction(0x403F30, 0x403F4F);
MakeUnkn(0x403F50, 1);
MakeNameEx(0x403F50, "WCharFromChar", 0x20);
MakeComm(0x403F50, "'function WCharFromChar(WCharDest:PWideChar; DestChars:Integer; const CharSource:PAnsiChar; SrcBytes:Integer):Integer;'");
MakeCode(0x403F50);
MakeFunction(0x403F50, 0x403F6B);
MakeUnkn(0x403F6C, 1);
MakeNameEx(0x403F6C, "@LStrFromPWCharLen", 0x20);
MakeComm(0x403F6C, "'procedure @LStrFromPWCharLen(var Dest:AnsiString; Source:PWideChar; Length:Integer);'");
MakeCode(0x403F6C);
MakeCode(0x403F8E);
MakeCode(0x403FC1);
MakeCode(0x403FE4);
MakeCode(0x403FED);
MakeFunction(0x403F6C, 0x403FF8);
MakeUnkn(0x403FF8, 1);
MakeNameEx(0x403FF8, "@LStrFromChar", 0x20);
MakeComm(0x403FF8, "'procedure @LStrFromChar(var Dest:AnsiString; Source:AnsiChar);'");
MakeCode(0x403FF8);
MakeFunction(0x403FF8, 0x404007);
MakeUnkn(0x404008, 1);
MakeNameEx(0x404008, "@LStrFromPChar", 0x20);
MakeComm(0x404008, "'procedure @LStrFromPChar(var Dest:AnsiString; Source:PAnsiChar);'");
MakeCode(0x404008);
MakeCode(0x40400F);
MakeCode(0x404027);
MakeCode(0x404028);
MakeCode(0x404029);
MakeCode(0x40402A);
MakeCode(0x40402F);
MakeFunction(0x404008, 0x404035);
MakeUnkn(0x404038, 1);
MakeNameEx(0x404038, "@LStrFromPWChar", 0x20);
MakeComm(0x404038, "'procedure @LStrFromPWChar(var Dest:AnsiString; Source:PWideChar);'");
MakeCode(0x404038);
MakeCode(0x40403F);
MakeCode(0x40405B);
MakeCode(0x40405E);
MakeCode(0x404061);
MakeCode(0x404064);
MakeCode(0x40406B);
MakeFunction(0x404038, 0x404071);
MakeUnkn(0x404074, 1);
MakeNameEx(0x404074, "@LStrFromString", 0x20);
MakeComm(0x404074, "'procedure @LStrFromString(var Dest:AnsiString; const Source:ShortString);'");
MakeCode(0x404074);
MakeFunction(0x404074, 0x40407F);
MakeUnkn(0x404080, 1);
MakeNameEx(0x404080, "@LStrFromArray", 0x20);
MakeComm(0x404080, "'procedure @LStrFromArray(var Dest:AnsiString; Source:PAnsiChar; Length:Integer);'");
MakeCode(0x404080);
MakeCode(0x40408D);
MakeFunction(0x404080, 0x404098);
MakeUnkn(0x404098, 1);
MakeNameEx(0x404098, "@LStrFromWStr", 0x20);
MakeComm(0x404098, "'procedure @LStrFromWStr(var Dest:AnsiString; const Source:WideString);'");
MakeCode(0x404098);
MakeCode(0x4040A3);
MakeFunction(0x404098, 0x4040A9);
MakeUnkn(0x4040AC, 1);
MakeNameEx(0x4040AC, "@LStrToString", 0x20);
MakeComm(0x4040AC, "'procedure @LStrToString(var Dest:ShortString; const Source:AnsiString; MaxLen:Integer);'");
MakeCode(0x4040AC);
MakeCode(0x4040BE);
MakeCode(0x4040C9);
MakeFunction(0x4040AC, 0x4040CE);
MakeUnkn(0x4040D0, 1);
MakeNameEx(0x4040D0, "@LStrLen", 0x20);
MakeComm(0x4040D0, "'function @LStrLen(S:AnsiString):Integer;'");
MakeCode(0x4040D0);
MakeFunction(0x4040D0, 0x4040D8);
MakeUnkn(0x4040D8, 1);
MakeNameEx(0x4040D8, "@LStrCat", 0x20);
MakeComm(0x4040D8, "'procedure @LStrCat(var Dest:AnsiString; Source:AnsiString);'");
MakeCode(0x4040D8);
MakeCode(0x404103);
MakeCode(0x404110);
MakeFunction(0x4040D8, 0x40411C);
MakeUnkn(0x40411C, 1);
MakeNameEx(0x40411C, "@LStrCat3", 0x20);
MakeComm(0x40411C, "'procedure @LStrCat3(var Dest:AnsiString; Source1:AnsiString; Source2:AnsiString);'");
MakeCode(0x40411C);
MakeCode(0x40413E);
MakeCode(0x404178);
MakeCode(0x404181);
MakeCode(0x404188);
MakeFunction(0x40411C, 0x404190);
MakeUnkn(0x404190, 1);
MakeNameEx(0x404190, "@LStrCatN", 0x20);
MakeComm(0x404190, "'procedure @LStrCatN(var Dest:AnsiString; ArgCnt:Integer);'");
MakeCode(0x404190);
MakeCode(0x4041AD);
MakeCode(0x4041AF);
MakeCode(0x4041C0);
MakeCode(0x4041DE);
MakeCode(0x4041E6);
MakeCode(0x4041FA);
MakeCode(0x40420A);
MakeCode(0x40420F);
MakeFunction(0x404190, 0x40421A);
MakeUnkn(0x40421C, 1);
MakeNameEx(0x40421C, "@LStrCmp", 0x20);
MakeComm(0x40421C, "'function @LStrCmp(Left:AnsiString; Right:AnsiString):?;'");
MakeCode(0x40421C);
MakeCode(0x40423F);
MakeCode(0x404245);
MakeCode(0x404265);
MakeCode(0x40426B);
MakeCode(0x404293);
MakeCode(0x404297);
MakeCode(0x40429E);
MakeCode(0x4042A5);
MakeCode(0x4042BA);
MakeFunction(0x40421C, 0x4042BE);
MakeUnkn(0x4042C0, 1);
MakeNameEx(0x4042C0, "@LStrAddRef", 0x20);
MakeComm(0x4042C0, "'function @LStrAddRef(var S:AnsiString):Pointer;'");
MakeCode(0x4042C0);
MakeFunction(0x4042C0, 0x4042CF);
MakeUnkn(0x4042D0, 1);
MakeNameEx(0x4042D0, "@LStrToPChar", 0x20);
MakeComm(0x4042D0, "'function @LStrToPChar(S:AnsiString):PChar;'");
MakeCode(0x4042D0);
MakeCode(0x4042D6);
MakeFunction(0x4042D0, 0x4042DC);
MakeUnkn(0x4042DC, 1);
MakeNameEx(0x4042DC, "InternalUniqueString", 0x20);
MakeComm(0x4042DC, "'function InternalUniqueString(var str:void ):Pointer;'");
MakeCode(0x4042DC);
MakeCode(0x404317);
MakeCode(0x40431A);
MakeFunction(0x4042DC, 0x40431D);
MakeUnkn(0x404320, 1);
MakeNameEx(0x404320, "UniqueString", 0x20);
MakeComm(0x404320, "'procedure UniqueString(var str:AnsiString);'");
MakeCode(0x404320);
MakeFunction(0x404320, 0x404326);
MakeUnkn(0x404328, 1);
MakeNameEx(0x404328, "@UniqueStringA", 0x20);
MakeComm(0x404328, "'procedure @UniqueStringA(var str:AnsiString);'");
MakeCode(0x404328);
MakeFunction(0x404328, 0x40432E);
MakeUnkn(0x404330, 1);
MakeNameEx(0x404330, "@LStrCopy", 0x20);
MakeComm(0x404330, "'function @LStrCopy(const S:AnsiString; Index:Integer; Count:Integer):AnsiString;'");
MakeCode(0x404330);
MakeCode(0x404343);
MakeCode(0x40434D);
MakeCode(0x40435A);
MakeCode(0x40435E);
MakeCode(0x404362);
MakeCode(0x40436B);
MakeFunction(0x404330, 0x40436F);
MakeUnkn(0x404370, 1);
MakeNameEx(0x404370, "@LStrDelete", 0x20);
MakeComm(0x404370, "'procedure @LStrDelete(var S:AnsiString; Index:Integer; Count:Integer);'");
MakeCode(0x404370);
MakeCode(0x40439A);
MakeCode(0x4043B4);
MakeFunction(0x404370, 0x4043B8);
MakeUnkn(0x4043B8, 1);
MakeNameEx(0x4043B8, "@LStrInsert", 0x20);
MakeComm(0x4043B8, "'procedure @LStrInsert(const Source:AnsiString; var S:AnsiString; Index:Integer);'");
MakeCode(0x4043B8);
MakeCode(0x4043D0);
MakeCode(0x4043D5);
MakeCode(0x4043DB);
MakeCode(0x4043EE);
MakeFunction(0x4043B8, 0x404413);
MakeUnkn(0x404414, 1);
MakeNameEx(0x404414, "@LStrPos", 0x20);
MakeComm(0x404414, "'function @LStrPos(const Substr:AnsiString; const S:AnsiString):Integer;'");
MakeCode(0x404414);
MakeCode(0x404434);
MakeCode(0x404448);
MakeCode(0x40444D);
MakeCode(0x404450);
MakeCode(0x404455);
MakeFunction(0x404414, 0x404459);
MakeUnkn(0x40445C, 1);
MakeNameEx(0x40445C, "@LStrSetLength", 0x20);
MakeComm(0x40445C, "'procedure @LStrSetLength(var S:AnsiString; NewLen:Integer);'");
MakeCode(0x40445C);
MakeCode(0x404492);
MakeCode(0x4044AC);
MakeCode(0x4044B1);
MakeCode(0x4044BA);
MakeFunction(0x40445C, 0x4044BE);
MakeUnkn(0x4044C0, 1);
MakeNameEx(0x4044C0, "WStrError", 0x20);
MakeComm(0x4044C0, "'procedure WStrError;'");
MakeCode(0x4044C0);
MakeFunction(0x4044C0, 0x4044C8);
MakeUnkn(0x4044C8, 1);
MakeNameEx(0x4044C8, "@NewWideString", 0x20);
MakeComm(0x4044C8, "'function @NewWideString(CharLength:Integer):Pointer;'");
MakeCode(0x4044C8);
MakeFunction(0x4044C8, 0x4044DD);
MakeUnkn(0x4044E0, 1);
MakeNameEx(0x4044E0, "WStrSet", 0x20);
MakeComm(0x4044E0, "'procedure WStrSet(var S:WideString; P:PWideChar);'");
MakeCode(0x4044E0);
MakeFunction(0x4044E0, 0x4044ED);
MakeUnkn(0x4044F0, 1);
MakeNameEx(0x4044F0, "@WStrClr", 0x20);
MakeComm(0x4044F0, "'procedure @WStrClr(var S:WideString);'");
MakeCode(0x4044F0);
MakeFunction(0x4044F0, 0x404505);
MakeUnkn(0x404508, 1);
MakeNameEx(0x404508, "@WStrArrayClr", 0x20);
MakeComm(0x404508, "'procedure @WStrArrayClr(var StrArray:Pointer; Count:Integer);'");
MakeCode(0x404508);
MakeCode(0x40450E);
MakeCode(0x404520);
MakeFunction(0x404508, 0x404529);
MakeUnkn(0x40452C, 1);
MakeNameEx(0x40452C, "@WStrAsg", 0x20);
MakeComm(0x40452C, "'procedure @WStrAsg(var Dest:WideString; Source:WideString);'");
MakeCode(0x40452C);
MakeFunction(0x40452C, 0x404550);
MakeUnkn(0x404550, 1);
MakeNameEx(0x404550, "@WStrFromPCharLen", 0x20);
MakeComm(0x404550, "'procedure @WStrFromPCharLen(var Dest:WideString; Source:PAnsiChar; Length:Integer);'");
MakeCode(0x404550);
MakeCode(0x404572);
MakeCode(0x4045A5);
MakeCode(0x4045C6);
MakeCode(0x4045CF);
MakeFunction(0x404550, 0x4045DA);
MakeUnkn(0x4045DC, 1);
MakeNameEx(0x4045DC, "@WStrFromPWCharLen", 0x20);
MakeComm(0x4045DC, "'procedure @WStrFromPWCharLen(var Dest:WideString; Source:PWideChar; Length:Integer);'");
MakeCode(0x4045DC);
MakeFunction(0x4045DC, 0x4045FF);
MakeUnkn(0x404600, 1);
MakeNameEx(0x404600, "@WStrFromPWChar", 0x20);
MakeComm(0x404600, "'procedure @WStrFromPWChar(var Dest:WideString; Source:PWideChar);'");
MakeCode(0x404600);
MakeCode(0x404607);
MakeCode(0x404623);
MakeCode(0x404626);
MakeCode(0x404629);
MakeCode(0x40462C);
MakeCode(0x404633);
MakeFunction(0x404600, 0x404639);
MakeUnkn(0x40463C, 1);
MakeNameEx(0x40463C, "@WStrFromLStr", 0x20);
MakeComm(0x40463C, "'procedure @WStrFromLStr(var Dest:WideString; const Source:AnsiString);'");
MakeCode(0x40463C);
MakeCode(0x404645);
MakeFunction(0x40463C, 0x40464B);
MakeUnkn(0x40464C, 1);
MakeNameEx(0x40464C, "@WStrToPWChar", 0x20);
MakeComm(0x40464C, "'function @WStrToPWChar(S:WideString):PWideChar;'");
MakeCode(0x40464C);
MakeCode(0x404654);
MakeFunction(0x40464C, 0x40465A);
MakeUnkn(0x40465C, 1);
MakeNameEx(0x40465C, "@WStrLen", 0x20);
MakeComm(0x40465C, "'function @WStrLen(S:WideString):Integer;'");
MakeCode(0x40465C);
MakeFunction(0x40465C, 0x404666);
MakeUnkn(0x404668, 1);
MakeNameEx(0x404668, "@WStrCmp", 0x20);
MakeComm(0x404668, "'function @WStrCmp(Left:WideString; Right:WideString):?;'");
MakeCode(0x404668);
MakeCode(0x404687);
MakeCode(0x40468D);
MakeCode(0x4046AD);
MakeCode(0x4046B3);
MakeCode(0x4046C4);
MakeCode(0x4046C8);
MakeCode(0x4046CF);
MakeCode(0x4046D6);
MakeCode(0x4046E5);
MakeFunction(0x404668, 0x4046E9);
MakeUnkn(0x4046EC, 1);
MakeNameEx(0x4046EC, "@WStrCopy", 0x20);
MakeComm(0x4046EC, "'function @WStrCopy(const S:WideString; Index:Integer; Count:Integer):WideString;'");
MakeCode(0x4046EC);
MakeCode(0x404708);
MakeCode(0x40470F);
MakeCode(0x404717);
MakeCode(0x40471F);
MakeFunction(0x4046EC, 0x404735);
MakeUnkn(0x404738, 1);
MakeNameEx(0x404738, "@WStrSetLength", 0x20);
MakeComm(0x404738, "'procedure @WStrSetLength(var S:WideString; NewLen:Integer);'");
MakeCode(0x404738);
MakeCode(0x40475F);
MakeCode(0x40476C);
MakeFunction(0x404738, 0x404779);
MakeUnkn(0x40477C, 1);
MakeNameEx(0x40477C, "@AddRefRecord", 0x20);
MakeComm(0x40477C, "'procedure @AddRefRecord;'");
MakeCode(0x40477C);
MakeCode(0x40478E);
MakeFunction(0x40477C, 0x4047AB);
MakeUnkn(0x4047AC, 1);
MakeNameEx(0x4047AC, "@AddRefArray", 0x20);
MakeComm(0x4047AC, "'procedure @AddRefArray;'");
MakeCode(0x4047AC);
MakeCode(0x4047EC);
MakeCode(0x4047F6);
MakeCode(0x404809);
MakeCode(0x40480C);
MakeCode(0x404827);
MakeCode(0x40482A);
MakeCode(0x40483B);
MakeFunction(0x4047AC, 0x40483F);
MakeUnkn(0x404840, 1);
MakeNameEx(0x404840, "@FinalizeRecord", 0x20);
MakeComm(0x404840, "'procedure @FinalizeRecord(P:Pointer; typeInfo:Pointer);'");
MakeCode(0x404840);
MakeCode(0x404852);
MakeFunction(0x404840, 0x404871);
MakeUnkn(0x404874, 1);
MakeNameEx(0x404874, "@VarClr", 0x20);
MakeComm(0x404874, "'procedure @VarClr(var v:TVarData);'");
MakeCode(0x404874);
MakeCode(0x404884);
MakeFunction(0x404874, 0x40488C);
MakeUnkn(0x40488C, 1);
MakeNameEx(0x40488C, "@FinalizeArray", 0x20);
MakeComm(0x40488C, "'procedure @FinalizeArray(p:Pointer; typeInfo:Pointer; elemCount:Cardinal);'");
MakeCode(0x40488C);
MakeCode(0x4048CF);
MakeCode(0x4048E0);
MakeCode(0x4048EC);
MakeCode(0x4048FA);
MakeCode(0x404903);
MakeCode(0x404912);
MakeCode(0x404915);
MakeCode(0x404930);
MakeCode(0x404933);
MakeCode(0x404946);
MakeCode(0x404955);
MakeCode(0x404966);
MakeCode(0x404971);
MakeFunction(0x40488C, 0x404976);
MakeUnkn(0x404978, 1);
MakeNameEx(0x404978, "@Finalize", 0x20);
MakeComm(0x404978, "'procedure @Finalize(p:Pointer; typeInfo:Pointer);'");
MakeCode(0x404978);
MakeFunction(0x404978, 0x404983);
MakeUnkn(0x404984, 1);
MakeNameEx(0x404984, "@VarAddRef", 0x20);
MakeComm(0x404984, "'procedure @VarAddRef(var v:TVarData);'");
MakeCode(0x404984);
MakeCode(0x404994);
MakeFunction(0x404984, 0x40499C);
MakeUnkn(0x40499C, 1);
MakeNameEx(0x40499C, "@CopyRecord", 0x20);
MakeComm(0x40499C, "'procedure @CopyRecord(Dest:Pointer; Source:Pointer; TypeInfo:Pointer);'");
MakeCode(0x40499C);
MakeCode(0x4049B6);
MakeCode(0x4049C8);
MakeCode(0x404A07);
MakeCode(0x404A18);
MakeCode(0x404A29);
MakeCode(0x404A3A);
MakeCode(0x404A5A);
MakeCode(0x404A73);
MakeCode(0x404A84);
MakeCode(0x404A95);
MakeCode(0x404AB1);
MakeFunction(0x40499C, 0x404AB6);
MakeUnkn(0x404AB8, 1);
MakeNameEx(0x404AB8, "@CopyArray", 0x20);
MakeComm(0x404AB8, "'procedure @CopyArray(Dest:Pointer; Source:Pointer; TypeInfo:Pointer; Cnt:Integer);'");
MakeCode(0x404AB8);
MakeCode(0x404AFE);
MakeCode(0x404B15);
MakeCode(0x404B29);
MakeCode(0x404B3D);
MakeCode(0x404B46);
MakeCode(0x404B5E);
MakeCode(0x404B7B);
MakeCode(0x404B8F);
MakeCode(0x404BA3);
MakeFunction(0x404AB8, 0x404BAB);
MakeUnkn(0x404BAC, 1);
MakeNameEx(0x404BAC, "@DispCallByIDError", 0x20);
MakeComm(0x404BAC, "'procedure @DispCallByIDError;'");
MakeCode(0x404BAC);
MakeFunction(0x404BAC, 0x404BB4);
MakeUnkn(0x404BB4, 1);
MakeNameEx(0x404BB4, "@_llmul", 0x20);
MakeComm(0x404BB4, "'procedure @_llmul;'");
MakeCode(0x404BB4);
MakeFunction(0x404BB4, 0x404BD7);
MakeUnkn(0x404BD8, 1);
MakeNameEx(0x404BD8, "@_llmod", 0x20);
MakeComm(0x404BD8, "'procedure @_llmod;'");
MakeCode(0x404BD8);
MakeCode(0x404BF2);
MakeCode(0x404C00);
MakeCode(0x404C0B);
MakeCode(0x404C29);
MakeCode(0x404C2E);
MakeCode(0x404C44);
MakeCode(0x404C4B);
MakeFunction(0x404BD8, 0x404C53);
MakeUnkn(0x404C54, 1);
MakeNameEx(0x404C54, "@DynArrayLength", 0x20);
MakeComm(0x404C54, "'function @DynArrayLength(Arr:Pointer):Longint;'");
MakeCode(0x404C54);
MakeFunction(0x404C54, 0x404C5C);
MakeUnkn(0x404C5C, 1);
MakeNameEx(0x404C5C, "@DynArrayHigh", 0x20);
MakeComm(0x404C5C, "'function @DynArrayHigh(Arr:Pointer):Longint;'");
MakeCode(0x404C5C);
MakeFunction(0x404C5C, 0x404C63);
MakeUnkn(0x404C64, 1);
MakeNameEx(0x404C64, "CopyArray", 0x20);
MakeComm(0x404C64, "'procedure CopyArray(dest:Pointer; source:Pointer; typeInfo:Pointer; cnt:Integer);'");
MakeCode(0x404C64);
MakeFunction(0x404C64, 0x404C73);
MakeUnkn(0x404C74, 1);
MakeNameEx(0x404C74, "FinalizeArray", 0x20);
MakeComm(0x404C74, "'procedure FinalizeArray(p:Pointer; typeInfo:Pointer; cnt:Integer);'");
MakeCode(0x404C74);
MakeFunction(0x404C74, 0x404C7A);
MakeUnkn(0x404C7C, 1);
MakeNameEx(0x404C7C, "DynArrayClear", 0x20);
MakeComm(0x404C7C, "'procedure DynArrayClear(var arr:Pointer; typeInfo:PDynArrayTypeInfo);'");
MakeCode(0x404C7C);
MakeFunction(0x404C7C, 0x404C82);
MakeUnkn(0x404C84, 1);
MakeNameEx(0x404C84, "DynArraySetLength", 0x20);
MakeComm(0x404C84, "'procedure DynArraySetLength(var arr:Pointer; typeInfo:PDynArrayTypeInfo; dimCnt:Longint; lenVec:PLongint);'");
MakeCode(0x404C84);
MakeCode(0x404CAE);
MakeCode(0x404CBD);
MakeCode(0x404CD1);
MakeCode(0x404CEB);
MakeCode(0x404CED);
MakeCode(0x404D07);
MakeCode(0x404D14);
MakeCode(0x404D39);
MakeCode(0x404D49);
MakeCode(0x404D63);
MakeCode(0x404D91);
MakeCode(0x404DA7);
MakeCode(0x404DE8);
MakeCode(0x404E02);
MakeCode(0x404E07);
MakeFunction(0x404C84, 0x404E10);
MakeUnkn(0x404E10, 1);
MakeNameEx(0x404E10, "@DynArraySetLength", 0x20);
MakeComm(0x404E10, "'procedure @DynArraySetLength(var Arr:Pointer; TypeInfo:PDynArrayTypeInfo; DimCnt:Longint; LengthVec:Longint);'");
MakeCode(0x404E10);
MakeFunction(0x404E10, 0x404E1B);
MakeUnkn(0x404E1C, 1);
MakeNameEx(0x404E1C, "@DynArrayClear", 0x20);
MakeComm(0x404E1C, "'procedure @DynArrayClear(var Arr:Pointer; TypeInfo:PDynArrayTypeInfo);'");
MakeCode(0x404E1C);
MakeCode(0x404E4C);
MakeFunction(0x404E1C, 0x404E56);
MakeUnkn(0x404E58, 1);
MakeNameEx(0x404E58, "@DynArrayAsg", 0x20);
MakeComm(0x404E58, "'procedure @DynArrayAsg(var Dest:Pointer; Source:Pointer; TypeInfo:PDynArrayTypeInfo);'");
MakeCode(0x404E58);
MakeCode(0x404E63);
MakeCode(0x404E7B);
MakeFunction(0x404E58, 0x404E7F);
MakeUnkn(0x404E80, 1);
MakeNameEx(0x404E80, "FindHInstance", 0x20);
MakeComm(0x404E80, "'function FindHInstance(Address:Pointer):Cardinal;'");
MakeCode(0x404E80);
MakeCode(0x404EA0);
MakeCode(0x404EA2);
MakeFunction(0x404E80, 0x404EA6);
MakeUnkn(0x404EA8, 1);
MakeNameEx(0x404EA8, "FindClassHInstance", 0x20);
MakeComm(0x404EA8, "'function FindClassHInstance(ClassType:TClass):Cardinal;'");
MakeCode(0x404EA8);
MakeFunction(0x404EA8, 0x404EAE);
MakeUnkn(0x404EB0, 1);
MakeNameEx(0x404EB0, "DelayLoadResourceModule", 0x20);
MakeComm(0x404EB0, "'function DelayLoadResourceModule(Module:PLibModule):Cardinal;'");
MakeCode(0x404EB0);
MakeCode(0x404EEB);
MakeFunction(0x404EB0, 0x404EF7);
MakeUnkn(0x404EF8, 1);
MakeNameEx(0x404EF8, "FindResourceHInstance", 0x20);
MakeComm(0x404EF8, "'function FindResourceHInstance(Instance:Cardinal):Cardinal;'");
MakeCode(0x404EF8);
MakeCode(0x404F02);
MakeCode(0x404F11);
MakeCode(0x404F19);
MakeFunction(0x404EF8, 0x404F20);
MakeUnkn(0x404F20, 1);
MakeNameEx(0x404F20, "FindBS", 0x20);
MakeComm(0x404F20, "'function FindBS(Current:PAnsiChar):PAnsiChar;'");
MakeCode(0x404F20);
MakeFunction(0x404F20, 0x404F34);
MakeUnkn(0x404F34, 1);
MakeNameEx(0x404F34, "ToLongPath", 0x20);
MakeComm(0x404F34, "'function ToLongPath(AFileName:PAnsiChar; BufSize:Integer):PAnsiChar;'");
MakeCode(0x404F34);
MakeCode(0x404F9C);
MakeCode(0x404FDC);
MakeCode(0x404FE2);
MakeCode(0x405000);
MakeCode(0x4050A1);
MakeCode(0x4050BE);
MakeFunction(0x404F34, 0x4050C8);
MakeUnkn(0x4050EC, 1);
MakeNameEx(0x4050EC, "LoadResourceModule", 0x20);
MakeComm(0x4050EC, "'function LoadResourceModule(ModuleName:PAnsiChar; CheckOwner:Boolean):Cardinal;'");
MakeCode(0x4050EC);
MakeCode(0x40516F);
MakeCode(0x4051D6);
MakeCode(0x4051DA);
MakeCode(0x4051E7);
MakeCode(0x4051F1);
MakeCode(0x4051F6);
MakeCode(0x4051F8);
MakeCode(0x40523F);
MakeCode(0x405257);
MakeCode(0x405258);
MakeCode(0x405267);
MakeCode(0x4052A4);
MakeCode(0x405312);
MakeFunction(0x4050EC, 0x40531A);
MakeUnkn(0x40535C, 1);
MakeNameEx(0x40535C, "AddModuleUnloadProc", 0x20);
MakeComm(0x40535C, "'procedure AddModuleUnloadProc(Proc:TModuleUnloadProc);'");
MakeCode(0x40535C);
MakeFunction(0x40535C, 0x405362);
MakeUnkn(0x405364, 1);
MakeNameEx(0x405364, "RemoveModuleUnloadProc", 0x20);
MakeComm(0x405364, "'procedure RemoveModuleUnloadProc(Proc:TModuleUnloadProc);'");
MakeCode(0x405364);
MakeFunction(0x405364, 0x40536A);
MakeUnkn(0x40536C, 1);
MakeNameEx(0x40536C, "AddModuleUnloadProc_0", 0x20);
MakeComm(0x40536C, "'procedure AddModuleUnloadProc(Proc:TModuleUnloadProcLW);'");
MakeCode(0x40536C);
MakeFunction(0x40536C, 0x40538B);
MakeUnkn(0x40538C, 1);
MakeNameEx(0x40538C, "RemoveModuleUnloadProc_0", 0x20);
MakeComm(0x40538C, "'procedure RemoveModuleUnloadProc(Proc:TModuleUnloadProcLW);'");
MakeCode(0x40538C);
MakeCode(0x4053BA);
MakeCode(0x4053C0);
MakeCode(0x4053E1);
MakeCode(0x4053E7);
MakeFunction(0x40538C, 0x4053EA);
MakeUnkn(0x4053EC, 1);
MakeNameEx(0x4053EC, "NotifyModuleUnload", 0x20);
MakeComm(0x4053EC, "'procedure NotifyModuleUnload(HInstance:Cardinal);'");
MakeCode(0x4053EC);
MakeCode(0x405406);
MakeCode(0x40541D);
MakeCode(0x405427);
MakeCode(0x405431);
MakeCode(0x40543F);
MakeFunction(0x4053EC, 0x405446);
MakeUnkn(0x405448, 1);
MakeNameEx(0x405448, "RegisterModule", 0x20);
MakeComm(0x405448, "'procedure RegisterModule(LibModule:PLibModule);'");
MakeCode(0x405448);
MakeFunction(0x405448, 0x405456);
MakeUnkn(0x405458, 1);
MakeNameEx(0x405458, "UnregisterModule", 0x20);
MakeComm(0x405458, "'procedure UnregisterModule(LibModule:PLibModule);'");
MakeCode(0x405458);
MakeCode(0x405478);
MakeCode(0x405485);
MakeCode(0x40549C);
MakeCode(0x4054A5);
MakeCode(0x4054B5);
MakeCode(0x4054BB);
MakeCode(0x4054BC);
MakeCode(0x4054C1);
MakeFunction(0x405458, 0x4054C6);
MakeUnkn(0x4054C8, 1);
MakeNameEx(0x4054C8, "@IntfClear", 0x20);
MakeComm(0x4054C8, "'function @IntfClear(var Dest:IInterface):Pointer;'");
MakeCode(0x4054C8);
MakeFunction(0x4054C8, 0x4054DD);
MakeUnkn(0x4054E0, 1);
MakeNameEx(0x4054E0, "@IntfCopy", 0x20);
MakeComm(0x4054E0, "'procedure @IntfCopy(var Dest:IInterface; const Source:IInterface);'");
MakeCode(0x4054E0);
MakeCode(0x4054F6);
MakeCode(0x4054FD);
MakeFunction(0x4054E0, 0x40550C);
MakeUnkn(0x40550C, 1);
MakeNameEx(0x40550C, "@IntfCast", 0x20);
MakeComm(0x40550C, "'procedure @IntfCast(var Dest:IInterface; const Source:IInterface; const IID:TGUID);'");
MakeCode(0x40550C);
MakeCode(0x40552B);
MakeCode(0x405537);
MakeFunction(0x40550C, 0x40553C);
MakeUnkn(0x40553C, 1);
MakeNameEx(0x40553C, "@IntfAddRef", 0x20);
MakeComm(0x40553C, "'procedure @IntfAddRef(const Dest:IInterface);'");
MakeCode(0x40553C);
MakeFunction(0x40553C, 0x405547);
MakeUnkn(0x405548, 1);
MakeNameEx(0x405548, "TInterfacedObject.AfterConstruction", 0x20);
MakeComm(0x405548, "'procedure TInterfacedObject.AfterConstruction;'");
MakeCode(0x405548);
MakeFunction(0x405548, 0x405552);
MakeUnkn(0x405554, 1);
MakeNameEx(0x405554, "TInterfacedObject.BeforeDestruction", 0x20);
MakeComm(0x405554, "'procedure TInterfacedObject.BeforeDestruction;'");
MakeCode(0x405554);
MakeFunction(0x405554, 0x405562);
MakeUnkn(0x405564, 1);
MakeNameEx(0x405564, "TInterfacedObject.NewInstance", 0x20);
MakeComm(0x405564, "'function TInterfacedObject.NewInstance:TObject;'");
MakeCode(0x405564);
MakeFunction(0x405564, 0x405571);
MakeUnkn(0x405574, 1);
MakeNameEx(0x405574, "TContainedObject.QueryInterface", 0x20);
MakeComm(0x405574, "'function TContainedObject.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x405574);
MakeCode(0x405590);
MakeCode(0x405595);
MakeFunction(0x405574, 0x40559A);
MakeUnkn(0x40559C, 1);
MakeNameEx(0x40559C, "TInterfacedObject._AddRef", 0x20);
MakeComm(0x40559C, "'function TInterfacedObject._AddRef:Integer; stdcall;'");
MakeCode(0x40559C);
MakeFunction(0x40559C, 0x4055AF);
MakeUnkn(0x4055B0, 1);
MakeNameEx(0x4055B0, "TInterfacedObject._Release", 0x20);
MakeComm(0x4055B0, "'function TInterfacedObject._Release:Integer; stdcall;'");
MakeCode(0x4055B0);
MakeCode(0x4055D0);
MakeFunction(0x4055B0, 0x4055D8);
MakeUnkn(0x4055D8, 1);
MakeNameEx(0x4055D8, "UnicodeToUtf8", 0x20);
MakeComm(0x4055D8, "'function UnicodeToUtf8(Dest:PAnsiChar; MaxDestBytes:Cardinal; Source:PWideChar; SourceChars:Cardinal):Cardinal;'");
MakeCode(0x4055D8);
MakeCode(0x405600);
MakeCode(0x405613);
MakeCode(0x40564C);
MakeCode(0x40566C);
MakeCode(0x405676);
MakeCode(0x40567F);
MakeCode(0x405685);
MakeCode(0x40568A);
MakeCode(0x4056A0);
MakeCode(0x4056A1);
MakeCode(0x4056A7);
MakeCode(0x4056AA);
MakeFunction(0x4055D8, 0x4056B4);
MakeUnkn(0x4056B4, 1);
MakeNameEx(0x4056B4, "Utf8ToUnicode", 0x20);
MakeComm(0x4056B4, "'function Utf8ToUnicode(Dest:PWideChar; MaxDestChars:Cardinal; Source:PAnsiChar; SourceBytes:Cardinal):Cardinal;'");
MakeCode(0x4056B4);
MakeCode(0x4056D5);
MakeCode(0x4056EF);
MakeCode(0x40573C);
MakeCode(0x405769);
MakeCode(0x405770);
MakeCode(0x405771);
MakeCode(0x40577F);
MakeCode(0x405788);
MakeCode(0x405793);
MakeCode(0x405798);
MakeCode(0x4057C5);
MakeCode(0x4057D4);
MakeCode(0x4057DA);
MakeCode(0x4057DE);
MakeFunction(0x4056B4, 0x4057E9);
MakeUnkn(0x4057EC, 1);
MakeNameEx(0x4057EC, "UTF8Encode", 0x20);
MakeComm(0x4057EC, "'function UTF8Encode(const WS:WideString):UTF8String;'");
MakeCode(0x4057EC);
MakeCode(0x405863);
MakeCode(0x40586B);
MakeCode(0x405875);
MakeCode(0x405882);
MakeCode(0x40588B);
MakeCode(0x405890);
MakeFunction(0x4057EC, 0x405897);
MakeUnkn(0x405898, 1);
MakeNameEx(0x405898, "UTF8Decode", 0x20);
MakeComm(0x405898, "'function UTF8Decode(const S:UTF8String):WideString;'");
MakeCode(0x405898);
MakeCode(0x405907);
MakeCode(0x40590F);
MakeCode(0x405919);
MakeCode(0x405926);
MakeCode(0x40592F);
MakeCode(0x405934);
MakeFunction(0x405898, 0x40593B);
MakeUnkn(0x40593C, 1);
MakeNameEx(0x40593C, "AnsiToUtf8", 0x20);
MakeComm(0x40593C, "'function AnsiToUtf8(const S:AnsiString):UTF8String;'");
MakeCode(0x40593C);
MakeCode(0x405969);
MakeCode(0x405976);
MakeCode(0x40597F);
MakeCode(0x405984);
MakeFunction(0x40593C, 0x40598B);
MakeUnkn(0x40598C, 1);
MakeNameEx(0x40598C, "LoadStr", 0x20);
MakeComm(0x40598C, "'function LoadStr(Ident:Integer):AnsiString;'");
MakeCode(0x40598C);
MakeCode(0x4059CF);
MakeCode(0x4059D9);
MakeFunction(0x40598C, 0x4059E2);
MakeUnkn(0x4059E4, 1);
MakeNameEx(0x4059E4, "LCIDToCodePage", 0x20);
MakeComm(0x4059E4, "'function LCIDToCodePage(ALcid:Cardinal):Integer;'");
MakeCode(0x4059E4);
MakeCode(0x405A34);
MakeCode(0x405A41);
MakeCode(0x405A4A);
MakeCode(0x405A4F);
MakeFunction(0x4059E4, 0x405A58);
MakeUnkn(0x405A58, 1);
MakeNameEx(0x405A58, "Finalization", 0x20);
MakeComm(0x405A58, "'procedure Finalization;'");
MakeCode(0x405A58);
MakeCode(0x405A94);
MakeCode(0x405AA1);
MakeCode(0x405AA2);
MakeCode(0x405AA7);
MakeFunction(0x405A58, 0x405AAB);
MakeCode(0x405AAC);
MakeCode(0x405AF3);
MakeCode(0x405B54);
MakeCode(0x405B65);
MakeCode(0x405B74);
MakeFunction(0x405AAC, 0x405B7F);
MakeUnkn(0x405B80, 1);
MakeNameEx(0x405B80, "kernel32._33", 0x20);
MakeComm(0x405B80, "'function kernel32.'+#5+:?;'");
MakeCode(0x405B80);
MakeFunction(0x405B80, 0x405B86);
MakeUnkn(0x405B88, 1);
MakeNameEx(0x405B88, "kernel32._34", 0x20);
MakeComm(0x405B88, "'kernel32.'+#5+;'");
MakeCode(0x405B88);
MakeFunction(0x405B88, 0x405B8E);
MakeUnkn(0x405B90, 1);
MakeNameEx(0x405B90, "kernel32._35", 0x20);
MakeComm(0x405B90, "'function kernel32.'+#5+:?;'");
MakeCode(0x405B90);
MakeFunction(0x405B90, 0x405B96);
MakeUnkn(0x405B98, 1);
MakeNameEx(0x405B98, "kernel32._36", 0x20);
MakeComm(0x405B98, "'kernel32.'+#5+;'");
MakeCode(0x405B98);
MakeFunction(0x405B98, 0x405B9E);
MakeUnkn(0x405BA0, 1);
MakeNameEx(0x405BA0, "AllocTlsBuffer", 0x20);
MakeComm(0x405BA0, "'function AllocTlsBuffer(Size:Integer):Pointer;'");
MakeCode(0x405BA0);
MakeFunction(0x405BA0, 0x405BA9);
MakeUnkn(0x405BAC, 1);
MakeNameEx(0x405BAC, "GetTlsSize", 0x20);
MakeComm(0x405BAC, "'function GetTlsSize:Integer;'");
MakeCode(0x405BAC);
MakeFunction(0x405BAC, 0x405BB2);
MakeUnkn(0x405BB4, 1);
MakeNameEx(0x405BB4, "InitThreadTLS", 0x20);
MakeComm(0x405BB4, "'procedure InitThreadTLS;'");
MakeCode(0x405BB4);
MakeCode(0x405BD3);
MakeCode(0x405BEA);
MakeCode(0x405BF6);
MakeFunction(0x405BB4, 0x405BF8);
MakeUnkn(0x405BF8, 1);
MakeNameEx(0x405BF8, "@GetTls", 0x20);
MakeComm(0x405BF8, "'function @GetTls:Pointer;'");
MakeCode(0x405BF8);
MakeCode(0x405C12);
MakeCode(0x405C27);
MakeCode(0x405C2D);
MakeFunction(0x405BF8, 0x405C38);
MakeUnkn(0x405C38, 1);
MakeNameEx(0x405C38, "InitializeModule", 0x20);
MakeComm(0x405C38, "'procedure InitializeModule;'");
MakeCode(0x405C38);
MakeFunction(0x405C38, 0x405C43);
MakeUnkn(0x405C44, 1);
MakeNameEx(0x405C44, "@InitExe", 0x20);
MakeComm(0x405C44, "'procedure @InitExe;'");
MakeCode(0x405C44);
MakeFunction(0x405C44, 0x405C85);
MakeCode(0x405C88);
MakeCode(0x405C9F);
MakeCode(0x405CAC);
MakeCode(0x405CAD);
MakeCode(0x405CB2);
MakeFunction(0x405C88, 0x405CB6);
MakeCode(0x405CB8);
MakeFunction(0x405CB8, 0x405CC0);
MakeCode(0x405CC0);
MakeFunction(0x405CC0, 0x405CDA);
MakeCode(0x405CDC);
MakeFunction(0x405CDC, 0x405CE2);
MakeCode(0x405CE4);
MakeFunction(0x405CE4, 0x405D00);
MakeCode(0x405D00);
MakeCode(0x405D17);
MakeCode(0x405D24);
MakeCode(0x405D25);
MakeCode(0x405D2A);
MakeFunction(0x405D00, 0x405D2E);
MakeCode(0x405D30);
MakeFunction(0x405D30, 0x405D38);
MakeUnkn(0x405D38, 1);
MakeNameEx(0x405D38, "RTTI_405D38_Enumeration_.1", 0);
MakeDword(0x405D38);
MakeUnkn(0x405D3C, 1);
MakeNameEx(0x405D3C, "", 0);
MakeByte(0x405D3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D3D, 0x405D40);
MakeByte(0x405D40);
MakeDword(0x405D41);
MakeDword(0x405D45);
MakeDword(0x405D49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D4D, 0x405D58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D58, 0x405D61);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D61, 0x405D6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D6C, 0x405D76);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D76, 0x405D80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D80, 0x405D8A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D8A, 0x405D95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405D95, 0x405DA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405DA0, 0x405DAA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405DAA, 0x405DB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405DB8, 0x405DC4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405DC4, 0x405DD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405DD0, 0x405DDF);
MakeUnkn(0x405DE8, 1);
MakeNameEx(0x405DE8, "RTTI_405DE8_Set_TOwnerDrawState", 0);
MakeDword(0x405DE8);
MakeUnkn(0x405DEC, 1);
MakeNameEx(0x405DEC, "", 0);
MakeByte(0x405DEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x405DED, 0x405DFD);
MakeByte(0x405DFD);
MakeDword(0x405DFE);
MakeUnkn(0x405E04, 1);
MakeNameEx(0x405E04, "advapi32._2", 0x20);
MakeComm(0x405E04, "'advapi32.'+#5+;'");
MakeCode(0x405E04);
MakeFunction(0x405E04, 0x405E0A);
MakeUnkn(0x405E0C, 1);
MakeNameEx(0x405E0C, "advapi32._3", 0x20);
MakeComm(0x405E0C, "'function advapi32.'+#5+:?;'");
MakeCode(0x405E0C);
MakeFunction(0x405E0C, 0x405E12);
MakeUnkn(0x405E14, 1);
MakeNameEx(0x405E14, "advapi32._4", 0x20);
MakeComm(0x405E14, "'function advapi32.'+#5+:?;'");
MakeCode(0x405E14);
MakeFunction(0x405E14, 0x405E1A);
MakeUnkn(0x405E1C, 1);
MakeNameEx(0x405E1C, "kernel32._37", 0x20);
MakeComm(0x405E1C, "'kernel32.'+#5+;'");
MakeCode(0x405E1C);
MakeFunction(0x405E1C, 0x405E22);
MakeUnkn(0x405E24, 1);
MakeNameEx(0x405E24, "kernel32._38", 0x20);
MakeComm(0x405E24, "'kernel32.'+#5+;'");
MakeCode(0x405E24);
MakeFunction(0x405E24, 0x405E2A);
MakeUnkn(0x405E2C, 1);
MakeNameEx(0x405E2C, "kernel32._39", 0x20);
MakeComm(0x405E2C, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E2C);
MakeFunction(0x405E2C, 0x405E32);
MakeUnkn(0x405E34, 1);
MakeNameEx(0x405E34, "kernel32._40", 0x20);
MakeComm(0x405E34, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E34);
MakeFunction(0x405E34, 0x405E3A);
MakeUnkn(0x405E3C, 1);
MakeNameEx(0x405E3C, "kernel32._41", 0x20);
MakeComm(0x405E3C, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E3C);
MakeFunction(0x405E3C, 0x405E42);
MakeUnkn(0x405E44, 1);
MakeNameEx(0x405E44, "kernel32._42", 0x20);
MakeComm(0x405E44, "'kernel32.'+#5+;'");
MakeCode(0x405E44);
MakeFunction(0x405E44, 0x405E4A);
MakeUnkn(0x405E4C, 1);
MakeNameEx(0x405E4C, "kernel32._43", 0x20);
MakeComm(0x405E4C, "'kernel32.'+#5+;'");
MakeCode(0x405E4C);
MakeFunction(0x405E4C, 0x405E52);
MakeUnkn(0x405E54, 1);
MakeNameEx(0x405E54, "kernel32._44", 0x20);
MakeComm(0x405E54, "'kernel32.'+#5+;'");
MakeCode(0x405E54);
MakeFunction(0x405E54, 0x405E5A);
MakeUnkn(0x405E5C, 1);
MakeNameEx(0x405E5C, "kernel32._45", 0x20);
MakeComm(0x405E5C, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E5C);
MakeFunction(0x405E5C, 0x405E62);
MakeUnkn(0x405E64, 1);
MakeNameEx(0x405E64, "kernel32._46", 0x20);
MakeComm(0x405E64, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E64);
MakeFunction(0x405E64, 0x405E6A);
MakeUnkn(0x405E6C, 1);
MakeNameEx(0x405E6C, "kernel32._47", 0x20);
MakeComm(0x405E6C, "'kernel32.'+#5+;'");
MakeCode(0x405E6C);
MakeFunction(0x405E6C, 0x405E72);
MakeUnkn(0x405E74, 1);
MakeNameEx(0x405E74, "kernel32._48", 0x20);
MakeComm(0x405E74, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E74);
MakeFunction(0x405E74, 0x405E7A);
MakeUnkn(0x405E7C, 1);
MakeNameEx(0x405E7C, "kernel32._49", 0x20);
MakeComm(0x405E7C, "'kernel32.'+#5+;'");
MakeCode(0x405E7C);
MakeFunction(0x405E7C, 0x405E82);
MakeUnkn(0x405E84, 1);
MakeNameEx(0x405E84, "kernel32._50", 0x20);
MakeComm(0x405E84, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E84);
MakeFunction(0x405E84, 0x405E8A);
MakeUnkn(0x405E8C, 1);
MakeNameEx(0x405E8C, "kernel32._51", 0x20);
MakeComm(0x405E8C, "'kernel32.'+#5+;'");
MakeCode(0x405E8C);
MakeFunction(0x405E8C, 0x405E92);
MakeUnkn(0x405E94, 1);
MakeNameEx(0x405E94, "kernel32._52", 0x20);
MakeComm(0x405E94, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E94);
MakeFunction(0x405E94, 0x405E9A);
MakeUnkn(0x405E9C, 1);
MakeNameEx(0x405E9C, "kernel32._53", 0x20);
MakeComm(0x405E9C, "'function kernel32.'+#5+:?;'");
MakeCode(0x405E9C);
MakeFunction(0x405E9C, 0x405EA2);
MakeUnkn(0x405EA4, 1);
MakeNameEx(0x405EA4, "kernel32._54", 0x20);
MakeComm(0x405EA4, "'kernel32.'+#5+;'");
MakeCode(0x405EA4);
MakeFunction(0x405EA4, 0x405EAA);
MakeUnkn(0x405EAC, 1);
MakeNameEx(0x405EAC, "kernel32._55", 0x20);
MakeComm(0x405EAC, "'function kernel32.'+#5+:?;'");
MakeCode(0x405EAC);
MakeFunction(0x405EAC, 0x405EB2);
MakeUnkn(0x405EB4, 1);
MakeNameEx(0x405EB4, "kernel32._56", 0x20);
MakeComm(0x405EB4, "'function kernel32.'+#5+:?;'");
MakeCode(0x405EB4);
MakeFunction(0x405EB4, 0x405EBA);
MakeUnkn(0x405EBC, 1);
MakeNameEx(0x405EBC, "kernel32._57", 0x20);
MakeComm(0x405EBC, "'function kernel32.'+#5+:?;'");
MakeCode(0x405EBC);
MakeFunction(0x405EBC, 0x405EC2);
MakeUnkn(0x405EC4, 1);
MakeNameEx(0x405EC4, "kernel32._58", 0x20);
MakeComm(0x405EC4, "'function kernel32.'+#5+:?;'");
MakeCode(0x405EC4);
MakeFunction(0x405EC4, 0x405ECA);
MakeUnkn(0x405ECC, 1);
MakeNameEx(0x405ECC, "kernel32._59", 0x20);
MakeComm(0x405ECC, "'kernel32.'+#5+;'");
MakeCode(0x405ECC);
MakeFunction(0x405ECC, 0x405ED2);
MakeUnkn(0x405ED4, 1);
MakeNameEx(0x405ED4, "kernel32._60", 0x20);
MakeComm(0x405ED4, "'function kernel32.'+#5+:?;'");
MakeCode(0x405ED4);
MakeFunction(0x405ED4, 0x405EDA);
MakeUnkn(0x405EDC, 1);
MakeNameEx(0x405EDC, "kernel32._61", 0x20);
MakeComm(0x405EDC, "'function kernel32.'+#5+:?;'");
MakeCode(0x405EDC);
MakeFunction(0x405EDC, 0x405EE2);
MakeUnkn(0x405EE4, 1);
MakeNameEx(0x405EE4, "kernel32._62", 0x20);
MakeComm(0x405EE4, "'function kernel32.'+#5+:?;'");
MakeCode(0x405EE4);
MakeFunction(0x405EE4, 0x405EEA);
MakeUnkn(0x405EEC, 1);
MakeNameEx(0x405EEC, "kernel32._63", 0x20);
MakeComm(0x405EEC, "'function kernel32.'+#5+:?;'");
MakeCode(0x405EEC);
MakeFunction(0x405EEC, 0x405EF2);
MakeUnkn(0x405EF4, 1);
MakeNameEx(0x405EF4, "kernel32._64", 0x20);
MakeComm(0x405EF4, "'kernel32.'+#5+;'");
MakeCode(0x405EF4);
MakeFunction(0x405EF4, 0x405EFA);
MakeUnkn(0x405EFC, 1);
MakeNameEx(0x405EFC, "kernel32._65", 0x20);
MakeComm(0x405EFC, "'kernel32.'+#5+;'");
MakeCode(0x405EFC);
MakeFunction(0x405EFC, 0x405F02);
MakeUnkn(0x405F04, 1);
MakeNameEx(0x405F04, "kernel32._66", 0x20);
MakeComm(0x405F04, "'kernel32.'+#5+;'");
MakeCode(0x405F04);
MakeFunction(0x405F04, 0x405F0A);
MakeUnkn(0x405F0C, 1);
MakeNameEx(0x405F0C, "kernel32._67", 0x20);
MakeComm(0x405F0C, "'kernel32.'+#5+;'");
MakeCode(0x405F0C);
MakeFunction(0x405F0C, 0x405F12);
MakeUnkn(0x405F14, 1);
MakeNameEx(0x405F14, "kernel32._68", 0x20);
MakeComm(0x405F14, "'function kernel32.'+#5+:?;'");
MakeCode(0x405F14);
MakeFunction(0x405F14, 0x405F1A);
MakeUnkn(0x405F1C, 1);
MakeNameEx(0x405F1C, "kernel32._69", 0x20);
MakeComm(0x405F1C, "'function kernel32.'+#5+:?;'");
MakeCode(0x405F1C);
MakeFunction(0x405F1C, 0x405F22);
MakeUnkn(0x405F24, 1);
MakeNameEx(0x405F24, "kernel32._70", 0x20);
MakeComm(0x405F24, "'kernel32.'+#5+;'");
MakeCode(0x405F24);
MakeFunction(0x405F24, 0x405F2A);
MakeUnkn(0x405F2C, 1);
MakeNameEx(0x405F2C, "kernel32._71", 0x20);
MakeComm(0x405F2C, "'function kernel32.'+#5+:?;'");
MakeCode(0x405F2C);
MakeFunction(0x405F2C, 0x405F32);
MakeUnkn(0x405F34, 1);
MakeNameEx(0x405F34, "kernel32._72", 0x20);
MakeComm(0x405F34, "'function kernel32.'+#5+:?;'");
MakeCode(0x405F34);
MakeFunction(0x405F34, 0x405F3A);
MakeUnkn(0x405F3C, 1);
MakeNameEx(0x405F3C, "kernel32._73", 0x20);
MakeComm(0x405F3C, "'kernel32.'+#5+;'");
MakeCode(0x405F3C);
MakeFunction(0x405F3C, 0x405F42);
MakeUnkn(0x405F44, 1);
MakeNameEx(0x405F44, "kernel32._74", 0x20);
MakeComm(0x405F44, "'kernel32.'+#5+;'");
MakeCode(0x405F44);
MakeFunction(0x405F44, 0x405F4A);
MakeUnkn(0x405F4C, 1);
MakeNameEx(0x405F4C, "kernel32._75", 0x20);
MakeComm(0x405F4C, "'kernel32.'+#5+;'");
MakeCode(0x405F4C);
MakeFunction(0x405F4C, 0x405F52);
MakeUnkn(0x405F54, 1);
MakeNameEx(0x405F54, "kernel32._76", 0x20);
MakeComm(0x405F54, "'kernel32.'+#5+;'");
MakeCode(0x405F54);
MakeFunction(0x405F54, 0x405F5A);
MakeUnkn(0x405F5C, 1);
MakeNameEx(0x405F5C, "kernel32._77", 0x20);
MakeComm(0x405F5C, "'kernel32.'+#5+;'");
MakeCode(0x405F5C);
MakeFunction(0x405F5C, 0x405F62);
MakeUnkn(0x405F64, 1);
MakeNameEx(0x405F64, "kernel32._78", 0x20);
MakeComm(0x405F64, "'kernel32.'+#5+;'");
MakeCode(0x405F64);
MakeFunction(0x405F64, 0x405F6A);
MakeUnkn(0x405F6C, 1);
MakeNameEx(0x405F6C, "kernel32._79", 0x20);
MakeComm(0x405F6C, "'kernel32.'+#5+;'");
MakeCode(0x405F6C);
MakeFunction(0x405F6C, 0x405F72);
MakeUnkn(0x405F74, 1);
MakeNameEx(0x405F74, "kernel32._80", 0x20);
MakeComm(0x405F74, "'kernel32.'+#5+;'");
MakeCode(0x405F74);
MakeFunction(0x405F74, 0x405F7A);
MakeUnkn(0x405F7C, 1);
MakeNameEx(0x405F7C, "kernel32._81", 0x20);
MakeComm(0x405F7C, "'kernel32.'+#5+;'");
MakeCode(0x405F7C);
MakeFunction(0x405F7C, 0x405F82);
MakeUnkn(0x405F84, 1);
MakeNameEx(0x405F84, "kernel32._82", 0x20);
MakeComm(0x405F84, "'kernel32.'+#5+;'");
MakeCode(0x405F84);
MakeFunction(0x405F84, 0x405F8A);
MakeUnkn(0x405F8C, 1);
MakeNameEx(0x405F8C, "kernel32._83", 0x20);
MakeComm(0x405F8C, "'function kernel32.'+#5+:?;'");
MakeCode(0x405F8C);
MakeFunction(0x405F8C, 0x405F92);
MakeUnkn(0x405F94, 1);
MakeNameEx(0x405F94, "kernel32._84", 0x20);
MakeComm(0x405F94, "'function kernel32.'+#5+:?;'");
MakeCode(0x405F94);
MakeFunction(0x405F94, 0x405F9A);
MakeUnkn(0x405F9C, 1);
MakeNameEx(0x405F9C, "kernel32._85", 0x20);
MakeComm(0x405F9C, "'function kernel32.'+#5+:?;'");
MakeCode(0x405F9C);
MakeFunction(0x405F9C, 0x405FA2);
MakeUnkn(0x405FA4, 1);
MakeNameEx(0x405FA4, "kernel32._86", 0x20);
MakeComm(0x405FA4, "'function kernel32.'+#5+:?;'");
MakeCode(0x405FA4);
MakeFunction(0x405FA4, 0x405FAA);
MakeUnkn(0x405FAC, 1);
MakeNameEx(0x405FAC, "kernel32._87", 0x20);
MakeComm(0x405FAC, "'function kernel32.'+#5+:?;'");
MakeCode(0x405FAC);
MakeFunction(0x405FAC, 0x405FB2);
MakeUnkn(0x405FB4, 1);
MakeNameEx(0x405FB4, "kernel32._88", 0x20);
MakeComm(0x405FB4, "'kernel32.'+#5+;'");
MakeCode(0x405FB4);
MakeFunction(0x405FB4, 0x405FBA);
MakeUnkn(0x405FBC, 1);
MakeNameEx(0x405FBC, "kernel32._89", 0x20);
MakeComm(0x405FBC, "'kernel32.'+#5+;'");
MakeCode(0x405FBC);
MakeFunction(0x405FBC, 0x405FC2);
MakeUnkn(0x405FC4, 1);
MakeNameEx(0x405FC4, "kernel32._90", 0x20);
MakeComm(0x405FC4, "'function kernel32.'+#5+:?;'");
MakeCode(0x405FC4);
MakeFunction(0x405FC4, 0x405FCA);
MakeUnkn(0x405FCC, 1);
MakeNameEx(0x405FCC, "kernel32._91", 0x20);
MakeComm(0x405FCC, "'kernel32.'+#5+;'");
MakeCode(0x405FCC);
MakeFunction(0x405FCC, 0x405FD2);
MakeUnkn(0x405FD4, 1);
MakeNameEx(0x405FD4, "kernel32._92", 0x20);
MakeComm(0x405FD4, "'function kernel32.'+#5+:?;'");
MakeCode(0x405FD4);
MakeFunction(0x405FD4, 0x405FDA);
MakeUnkn(0x405FDC, 1);
MakeNameEx(0x405FDC, "kernel32._93", 0x20);
MakeComm(0x405FDC, "'kernel32.'+#5+;'");
MakeCode(0x405FDC);
MakeFunction(0x405FDC, 0x405FE2);
MakeUnkn(0x405FE4, 1);
MakeNameEx(0x405FE4, "kernel32._94", 0x20);
MakeComm(0x405FE4, "'kernel32.'+#5+;'");
MakeCode(0x405FE4);
MakeFunction(0x405FE4, 0x405FEA);
MakeUnkn(0x405FEC, 1);
MakeNameEx(0x405FEC, "kernel32._95", 0x20);
MakeComm(0x405FEC, "'kernel32.'+#5+;'");
MakeCode(0x405FEC);
MakeFunction(0x405FEC, 0x405FF2);
MakeUnkn(0x405FF4, 1);
MakeNameEx(0x405FF4, "kernel32._96", 0x20);
MakeComm(0x405FF4, "'function kernel32.'+#5+:?;'");
MakeCode(0x405FF4);
MakeFunction(0x405FF4, 0x405FFA);
MakeUnkn(0x405FFC, 1);
MakeNameEx(0x405FFC, "kernel32._97", 0x20);
MakeComm(0x405FFC, "'kernel32.'+#5+;'");
MakeCode(0x405FFC);
MakeFunction(0x405FFC, 0x406002);
MakeUnkn(0x406004, 1);
MakeNameEx(0x406004, "kernel32._98", 0x20);
MakeComm(0x406004, "'function kernel32.'+#5+:?;'");
MakeCode(0x406004);
MakeFunction(0x406004, 0x40600A);
MakeUnkn(0x40600C, 1);
MakeNameEx(0x40600C, "kernel32._99", 0x20);
MakeComm(0x40600C, "'function kernel32.'+#5+:?;'");
MakeCode(0x40600C);
MakeFunction(0x40600C, 0x406012);
MakeUnkn(0x406014, 1);
MakeNameEx(0x406014, "kernel32._100", 0x20);
MakeComm(0x406014, "'kernel32.'+#5+;'");
MakeCode(0x406014);
MakeFunction(0x406014, 0x40601A);
MakeUnkn(0x40601C, 1);
MakeNameEx(0x40601C, "version.", 0x20);
MakeComm(0x40601C, "'function version.'+#5+:?;'");
MakeCode(0x40601C);
MakeFunction(0x40601C, 0x406022);
MakeUnkn(0x406024, 1);
MakeNameEx(0x406024, "version._0", 0x20);
MakeComm(0x406024, "'function version.'+#5+:?;'");
MakeCode(0x406024);
MakeFunction(0x406024, 0x40602A);
MakeUnkn(0x40602C, 1);
MakeNameEx(0x40602C, "version._1", 0x20);
MakeComm(0x40602C, "'function version.'+#5+:?;'");
MakeCode(0x40602C);
MakeFunction(0x40602C, 0x406032);
MakeUnkn(0x406034, 1);
MakeNameEx(0x406034, "gdi32.", 0x20);
MakeComm(0x406034, "'gdi32.'+#5+;'");
MakeCode(0x406034);
MakeFunction(0x406034, 0x40603A);
MakeUnkn(0x40603C, 1);
MakeNameEx(0x40603C, "gdi32._0", 0x20);
MakeComm(0x40603C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40603C);
MakeFunction(0x40603C, 0x406042);
MakeUnkn(0x406044, 1);
MakeNameEx(0x406044, "gdi32._1", 0x20);
MakeComm(0x406044, "'gdi32.'+#5+;'");
MakeCode(0x406044);
MakeFunction(0x406044, 0x40604A);
MakeUnkn(0x40604C, 1);
MakeNameEx(0x40604C, "gdi32._2", 0x20);
MakeComm(0x40604C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40604C);
MakeFunction(0x40604C, 0x406052);
MakeUnkn(0x406054, 1);
MakeNameEx(0x406054, "gdi32._3", 0x20);
MakeComm(0x406054, "'function gdi32.'+#5+:?;'");
MakeCode(0x406054);
MakeFunction(0x406054, 0x40605A);
MakeUnkn(0x40605C, 1);
MakeNameEx(0x40605C, "gdi32._4", 0x20);
MakeComm(0x40605C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40605C);
MakeFunction(0x40605C, 0x406062);
MakeUnkn(0x406064, 1);
MakeNameEx(0x406064, "gdi32._5", 0x20);
MakeComm(0x406064, "'function gdi32.'+#5+:?;'");
MakeCode(0x406064);
MakeFunction(0x406064, 0x40606A);
MakeUnkn(0x40606C, 1);
MakeNameEx(0x40606C, "gdi32._6", 0x20);
MakeComm(0x40606C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40606C);
MakeFunction(0x40606C, 0x406072);
MakeUnkn(0x406074, 1);
MakeNameEx(0x406074, "gdi32._7", 0x20);
MakeComm(0x406074, "'gdi32.'+#5+;'");
MakeCode(0x406074);
MakeFunction(0x406074, 0x40607A);
MakeUnkn(0x40607C, 1);
MakeNameEx(0x40607C, "gdi32._8", 0x20);
MakeComm(0x40607C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40607C);
MakeFunction(0x40607C, 0x406082);
MakeUnkn(0x406084, 1);
MakeNameEx(0x406084, "gdi32._9", 0x20);
MakeComm(0x406084, "'gdi32.'+#5+;'");
MakeCode(0x406084);
MakeFunction(0x406084, 0x40608A);
MakeUnkn(0x40608C, 1);
MakeNameEx(0x40608C, "gdi32._10", 0x20);
MakeComm(0x40608C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40608C);
MakeFunction(0x40608C, 0x406092);
MakeUnkn(0x406094, 1);
MakeNameEx(0x406094, "gdi32._11", 0x20);
MakeComm(0x406094, "'gdi32.'+#5+;'");
MakeCode(0x406094);
MakeFunction(0x406094, 0x40609A);
MakeUnkn(0x40609C, 1);
MakeNameEx(0x40609C, "gdi32._12", 0x20);
MakeComm(0x40609C, "'gdi32.'+#5+;'");
MakeCode(0x40609C);
MakeFunction(0x40609C, 0x4060A2);
MakeUnkn(0x4060A4, 1);
MakeNameEx(0x4060A4, "gdi32._13", 0x20);
MakeComm(0x4060A4, "'function gdi32.'+#5+:?;'");
MakeCode(0x4060A4);
MakeFunction(0x4060A4, 0x4060AA);
MakeUnkn(0x4060AC, 1);
MakeNameEx(0x4060AC, "gdi32._14", 0x20);
MakeComm(0x4060AC, "'gdi32.'+#5+;'");
MakeCode(0x4060AC);
MakeFunction(0x4060AC, 0x4060B2);
MakeUnkn(0x4060B4, 1);
MakeNameEx(0x4060B4, "gdi32._15", 0x20);
MakeComm(0x4060B4, "'gdi32.'+#5+;'");
MakeCode(0x4060B4);
MakeFunction(0x4060B4, 0x4060BA);
MakeUnkn(0x4060BC, 1);
MakeNameEx(0x4060BC, "gdi32._16", 0x20);
MakeComm(0x4060BC, "'function gdi32.'+#5+:?;'");
MakeCode(0x4060BC);
MakeFunction(0x4060BC, 0x4060C2);
MakeUnkn(0x4060C4, 1);
MakeNameEx(0x4060C4, "gdi32._17", 0x20);
MakeComm(0x4060C4, "'gdi32.'+#5+;'");
MakeCode(0x4060C4);
MakeFunction(0x4060C4, 0x4060CA);
MakeUnkn(0x4060CC, 1);
MakeNameEx(0x4060CC, "gdi32._18", 0x20);
MakeComm(0x4060CC, "'function gdi32.'+#5+:?;'");
MakeCode(0x4060CC);
MakeFunction(0x4060CC, 0x4060D2);
MakeUnkn(0x4060D4, 1);
MakeNameEx(0x4060D4, "gdi32._19", 0x20);
MakeComm(0x4060D4, "'function gdi32.'+#5+:?;'");
MakeCode(0x4060D4);
MakeFunction(0x4060D4, 0x4060DA);
MakeUnkn(0x4060DC, 1);
MakeNameEx(0x4060DC, "gdi32._20", 0x20);
MakeComm(0x4060DC, "'function gdi32.'+#5+:?;'");
MakeCode(0x4060DC);
MakeFunction(0x4060DC, 0x4060E2);
MakeUnkn(0x4060E4, 1);
MakeNameEx(0x4060E4, "gdi32._21", 0x20);
MakeComm(0x4060E4, "'function gdi32.'+#5+:?;'");
MakeCode(0x4060E4);
MakeFunction(0x4060E4, 0x4060EA);
MakeUnkn(0x4060EC, 1);
MakeNameEx(0x4060EC, "gdi32._22", 0x20);
MakeComm(0x4060EC, "'function gdi32.'+#5+:?;'");
MakeCode(0x4060EC);
MakeFunction(0x4060EC, 0x4060F2);
MakeUnkn(0x4060F4, 1);
MakeNameEx(0x4060F4, "gdi32._23", 0x20);
MakeComm(0x4060F4, "'gdi32.'+#5+;'");
MakeCode(0x4060F4);
MakeFunction(0x4060F4, 0x4060FA);
MakeUnkn(0x4060FC, 1);
MakeNameEx(0x4060FC, "gdi32._24", 0x20);
MakeComm(0x4060FC, "'gdi32.'+#5+;'");
MakeCode(0x4060FC);
MakeFunction(0x4060FC, 0x406102);
MakeUnkn(0x406104, 1);
MakeNameEx(0x406104, "gdi32._25", 0x20);
MakeComm(0x406104, "'function gdi32.'+#5+:?;'");
MakeCode(0x406104);
MakeFunction(0x406104, 0x40610A);
MakeUnkn(0x40610C, 1);
MakeNameEx(0x40610C, "gdi32._26", 0x20);
MakeComm(0x40610C, "'gdi32.'+#5+;'");
MakeCode(0x40610C);
MakeFunction(0x40610C, 0x406112);
MakeUnkn(0x406114, 1);
MakeNameEx(0x406114, "gdi32._27", 0x20);
MakeComm(0x406114, "'gdi32.'+#5+;'");
MakeCode(0x406114);
MakeFunction(0x406114, 0x40611A);
MakeUnkn(0x40611C, 1);
MakeNameEx(0x40611C, "gdi32._28", 0x20);
MakeComm(0x40611C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40611C);
MakeFunction(0x40611C, 0x406122);
MakeUnkn(0x406124, 1);
MakeNameEx(0x406124, "gdi32._29", 0x20);
MakeComm(0x406124, "'gdi32.'+#5+;'");
MakeCode(0x406124);
MakeFunction(0x406124, 0x40612A);
MakeUnkn(0x40612C, 1);
MakeNameEx(0x40612C, "gdi32._30", 0x20);
MakeComm(0x40612C, "'gdi32.'+#5+;'");
MakeCode(0x40612C);
MakeFunction(0x40612C, 0x406132);
MakeUnkn(0x406134, 1);
MakeNameEx(0x406134, "gdi32._31", 0x20);
MakeComm(0x406134, "'gdi32.'+#5+;'");
MakeCode(0x406134);
MakeFunction(0x406134, 0x40613A);
MakeUnkn(0x40613C, 1);
MakeNameEx(0x40613C, "gdi32._32", 0x20);
MakeComm(0x40613C, "'gdi32.'+#5+;'");
MakeCode(0x40613C);
MakeFunction(0x40613C, 0x406142);
MakeUnkn(0x406144, 1);
MakeNameEx(0x406144, "gdi32._33", 0x20);
MakeComm(0x406144, "'gdi32.'+#5+;'");
MakeCode(0x406144);
MakeFunction(0x406144, 0x40614A);
MakeUnkn(0x40614C, 1);
MakeNameEx(0x40614C, "gdi32._34", 0x20);
MakeComm(0x40614C, "'gdi32.'+#5+;'");
MakeCode(0x40614C);
MakeFunction(0x40614C, 0x406152);
MakeUnkn(0x406154, 1);
MakeNameEx(0x406154, "gdi32._35", 0x20);
MakeComm(0x406154, "'function gdi32.'+#5+:?;'");
MakeCode(0x406154);
MakeFunction(0x406154, 0x40615A);
MakeUnkn(0x40615C, 1);
MakeNameEx(0x40615C, "gdi32._36", 0x20);
MakeComm(0x40615C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40615C);
MakeFunction(0x40615C, 0x406162);
MakeUnkn(0x406164, 1);
MakeNameEx(0x406164, "gdi32._37", 0x20);
MakeComm(0x406164, "'gdi32.'+#5+;'");
MakeCode(0x406164);
MakeFunction(0x406164, 0x40616A);
MakeUnkn(0x40616C, 1);
MakeNameEx(0x40616C, "gdi32._38", 0x20);
MakeComm(0x40616C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40616C);
MakeFunction(0x40616C, 0x406172);
MakeUnkn(0x406174, 1);
MakeNameEx(0x406174, "gdi32._39", 0x20);
MakeComm(0x406174, "'function gdi32.'+#5+:?;'");
MakeCode(0x406174);
MakeFunction(0x406174, 0x40617A);
MakeUnkn(0x40617C, 1);
MakeNameEx(0x40617C, "gdi32._40", 0x20);
MakeComm(0x40617C, "'function gdi32.'+#5+:?;'");
MakeCode(0x40617C);
MakeFunction(0x40617C, 0x406182);
MakeUnkn(0x406184, 1);
MakeNameEx(0x406184, "gdi32._41", 0x20);
MakeComm(0x406184, "'function gdi32.'+#5+:?;'");
MakeCode(0x406184);
MakeFunction(0x406184, 0x40618A);
MakeUnkn(0x40618C, 1);
MakeNameEx(0x40618C, "gdi32._42", 0x20);
MakeComm(0x40618C, "'gdi32.'+#5+;'");
MakeCode(0x40618C);
MakeFunction(0x40618C, 0x406192);
MakeUnkn(0x406194, 1);
MakeNameEx(0x406194, "gdi32._43", 0x20);
MakeComm(0x406194, "'gdi32.'+#5+;'");
MakeCode(0x406194);
MakeFunction(0x406194, 0x40619A);
MakeUnkn(0x40619C, 1);
MakeNameEx(0x40619C, "gdi32._44", 0x20);
MakeComm(0x40619C, "'gdi32.'+#5+;'");
MakeCode(0x40619C);
MakeFunction(0x40619C, 0x4061A2);
MakeUnkn(0x4061A4, 1);
MakeNameEx(0x4061A4, "gdi32._45", 0x20);
MakeComm(0x4061A4, "'gdi32.'+#5+;'");
MakeCode(0x4061A4);
MakeFunction(0x4061A4, 0x4061AA);
MakeUnkn(0x4061AC, 1);
MakeNameEx(0x4061AC, "gdi32._46", 0x20);
MakeComm(0x4061AC, "'gdi32.'+#5+;'");
MakeCode(0x4061AC);
MakeFunction(0x4061AC, 0x4061B2);
MakeUnkn(0x4061B4, 1);
MakeNameEx(0x4061B4, "gdi32._47", 0x20);
MakeComm(0x4061B4, "'gdi32.'+#5+;'");
MakeCode(0x4061B4);
MakeFunction(0x4061B4, 0x4061BA);
MakeUnkn(0x4061BC, 1);
MakeNameEx(0x4061BC, "gdi32._48", 0x20);
MakeComm(0x4061BC, "'function gdi32.'+#5+:?;'");
MakeCode(0x4061BC);
MakeFunction(0x4061BC, 0x4061C2);
MakeUnkn(0x4061C4, 1);
MakeNameEx(0x4061C4, "gdi32._49", 0x20);
MakeComm(0x4061C4, "'gdi32.'+#5+;'");
MakeCode(0x4061C4);
MakeFunction(0x4061C4, 0x4061CA);
MakeUnkn(0x4061CC, 1);
MakeNameEx(0x4061CC, "gdi32._50", 0x20);
MakeComm(0x4061CC, "'gdi32.'+#5+;'");
MakeCode(0x4061CC);
MakeFunction(0x4061CC, 0x4061D2);
MakeUnkn(0x4061D4, 1);
MakeNameEx(0x4061D4, "gdi32._51", 0x20);
MakeComm(0x4061D4, "'gdi32.'+#5+;'");
MakeCode(0x4061D4);
MakeFunction(0x4061D4, 0x4061DA);
MakeUnkn(0x4061DC, 1);
MakeNameEx(0x4061DC, "gdi32._52", 0x20);
MakeComm(0x4061DC, "'gdi32.'+#5+;'");
MakeCode(0x4061DC);
MakeFunction(0x4061DC, 0x4061E2);
MakeUnkn(0x4061E4, 1);
MakeNameEx(0x4061E4, "user32._3", 0x20);
MakeComm(0x4061E4, "'user32.'+#5+;'");
MakeCode(0x4061E4);
MakeFunction(0x4061E4, 0x4061EA);
MakeUnkn(0x4061EC, 1);
MakeNameEx(0x4061EC, "user32._4", 0x20);
MakeComm(0x4061EC, "'user32.'+#5+;'");
MakeCode(0x4061EC);
MakeFunction(0x4061EC, 0x4061F2);
MakeUnkn(0x4061F4, 1);
MakeNameEx(0x4061F4, "user32._5", 0x20);
MakeComm(0x4061F4, "'user32.'+#5+;'");
MakeCode(0x4061F4);
MakeFunction(0x4061F4, 0x4061FA);
MakeUnkn(0x4061FC, 1);
MakeNameEx(0x4061FC, "user32._6", 0x20);
MakeComm(0x4061FC, "'function user32.'+#5+:?;'");
MakeCode(0x4061FC);
MakeFunction(0x4061FC, 0x406202);
MakeUnkn(0x406204, 1);
MakeNameEx(0x406204, "user32._7", 0x20);
MakeComm(0x406204, "'function user32.'+#5+:?;'");
MakeCode(0x406204);
MakeFunction(0x406204, 0x40620A);
MakeUnkn(0x40620C, 1);
MakeNameEx(0x40620C, "user32._8", 0x20);
MakeComm(0x40620C, "'function user32.'+#5+:?;'");
MakeCode(0x40620C);
MakeFunction(0x40620C, 0x406212);
MakeUnkn(0x406214, 1);
MakeNameEx(0x406214, "user32._9", 0x20);
MakeComm(0x406214, "'user32.'+#5+;'");
MakeCode(0x406214);
MakeFunction(0x406214, 0x40621A);
MakeUnkn(0x40621C, 1);
MakeNameEx(0x40621C, "user32._10", 0x20);
MakeComm(0x40621C, "'user32.'+#5+;'");
MakeCode(0x40621C);
MakeFunction(0x40621C, 0x406222);
MakeUnkn(0x406224, 1);
MakeNameEx(0x406224, "user32._11", 0x20);
MakeComm(0x406224, "'user32.'+#5+;'");
MakeCode(0x406224);
MakeFunction(0x406224, 0x40622A);
MakeUnkn(0x40622C, 1);
MakeNameEx(0x40622C, "user32._12", 0x20);
MakeComm(0x40622C, "'user32.'+#5+;'");
MakeCode(0x40622C);
MakeFunction(0x40622C, 0x406232);
MakeUnkn(0x406234, 1);
MakeNameEx(0x406234, "user32._13", 0x20);
MakeComm(0x406234, "'user32.'+#5+;'");
MakeCode(0x406234);
MakeFunction(0x406234, 0x40623A);
MakeUnkn(0x40623C, 1);
MakeNameEx(0x40623C, "user32._14", 0x20);
MakeComm(0x40623C, "'user32.'+#5+;'");
MakeCode(0x40623C);
MakeFunction(0x40623C, 0x406242);
MakeUnkn(0x406244, 1);
MakeNameEx(0x406244, "user32._15", 0x20);
MakeComm(0x406244, "'user32.'+#5+;'");
MakeCode(0x406244);
MakeFunction(0x406244, 0x40624A);
MakeUnkn(0x40624C, 1);
MakeNameEx(0x40624C, "user32._16", 0x20);
MakeComm(0x40624C, "'function user32.'+#5+:?;'");
MakeCode(0x40624C);
MakeFunction(0x40624C, 0x406252);
MakeUnkn(0x406254, 1);
MakeNameEx(0x406254, "user32._17", 0x20);
MakeComm(0x406254, "'user32.'+#5+;'");
MakeCode(0x406254);
MakeFunction(0x406254, 0x40625A);
MakeUnkn(0x40625C, 1);
MakeNameEx(0x40625C, "user32._18", 0x20);
MakeComm(0x40625C, "'function user32.'+#5+:?;'");
MakeCode(0x40625C);
MakeFunction(0x40625C, 0x406262);
MakeUnkn(0x406264, 1);
MakeNameEx(0x406264, "user32._19", 0x20);
MakeComm(0x406264, "'user32.'+#5+;'");
MakeCode(0x406264);
MakeFunction(0x406264, 0x40626A);
MakeUnkn(0x40626C, 1);
MakeNameEx(0x40626C, "user32._20", 0x20);
MakeComm(0x40626C, "'user32.'+#5+;'");
MakeCode(0x40626C);
MakeFunction(0x40626C, 0x406272);
MakeUnkn(0x406274, 1);
MakeNameEx(0x406274, "user32._21", 0x20);
MakeComm(0x406274, "'user32.'+#5+;'");
MakeCode(0x406274);
MakeFunction(0x406274, 0x40627A);
MakeUnkn(0x40627C, 1);
MakeNameEx(0x40627C, "user32._22", 0x20);
MakeComm(0x40627C, "'user32.'+#5+;'");
MakeCode(0x40627C);
MakeFunction(0x40627C, 0x406282);
MakeUnkn(0x406284, 1);
MakeNameEx(0x406284, "user32._23", 0x20);
MakeComm(0x406284, "'function user32.'+#5+:?;'");
MakeCode(0x406284);
MakeFunction(0x406284, 0x40628A);
MakeUnkn(0x40628C, 1);
MakeNameEx(0x40628C, "user32._24", 0x20);
MakeComm(0x40628C, "'user32.'+#5+;'");
MakeCode(0x40628C);
MakeFunction(0x40628C, 0x406292);
MakeUnkn(0x406294, 1);
MakeNameEx(0x406294, "user32._25", 0x20);
MakeComm(0x406294, "'user32.'+#5+;'");
MakeCode(0x406294);
MakeFunction(0x406294, 0x40629A);
MakeUnkn(0x40629C, 1);
MakeNameEx(0x40629C, "user32._26", 0x20);
MakeComm(0x40629C, "'user32.'+#5+;'");
MakeCode(0x40629C);
MakeFunction(0x40629C, 0x4062A2);
MakeUnkn(0x4062A4, 1);
MakeNameEx(0x4062A4, "user32._27", 0x20);
MakeComm(0x4062A4, "'user32.'+#5+;'");
MakeCode(0x4062A4);
MakeFunction(0x4062A4, 0x4062AA);
MakeUnkn(0x4062AC, 1);
MakeNameEx(0x4062AC, "user32._28", 0x20);
MakeComm(0x4062AC, "'user32.'+#5+;'");
MakeCode(0x4062AC);
MakeFunction(0x4062AC, 0x4062B2);
MakeUnkn(0x4062B4, 1);
MakeNameEx(0x4062B4, "user32._29", 0x20);
MakeComm(0x4062B4, "'user32.'+#5+;'");
MakeCode(0x4062B4);
MakeFunction(0x4062B4, 0x4062BA);
MakeUnkn(0x4062BC, 1);
MakeNameEx(0x4062BC, "user32._30", 0x20);
MakeComm(0x4062BC, "'user32.'+#5+;'");
MakeCode(0x4062BC);
MakeFunction(0x4062BC, 0x4062C2);
MakeUnkn(0x4062C4, 1);
MakeNameEx(0x4062C4, "user32._31", 0x20);
MakeComm(0x4062C4, "'user32.'+#5+;'");
MakeCode(0x4062C4);
MakeFunction(0x4062C4, 0x4062CA);
MakeUnkn(0x4062CC, 1);
MakeNameEx(0x4062CC, "user32._32", 0x20);
MakeComm(0x4062CC, "'user32.'+#5+;'");
MakeCode(0x4062CC);
MakeFunction(0x4062CC, 0x4062D2);
MakeUnkn(0x4062D4, 1);
MakeNameEx(0x4062D4, "user32._33", 0x20);
MakeComm(0x4062D4, "'user32.'+#5+;'");
MakeCode(0x4062D4);
MakeFunction(0x4062D4, 0x4062DA);
MakeUnkn(0x4062DC, 1);
MakeNameEx(0x4062DC, "user32._34", 0x20);
MakeComm(0x4062DC, "'user32.'+#5+;'");
MakeCode(0x4062DC);
MakeFunction(0x4062DC, 0x4062E2);
MakeUnkn(0x4062E4, 1);
MakeNameEx(0x4062E4, "user32._35", 0x20);
MakeComm(0x4062E4, "'user32.'+#5+;'");
MakeCode(0x4062E4);
MakeFunction(0x4062E4, 0x4062EA);
MakeUnkn(0x4062EC, 1);
MakeNameEx(0x4062EC, "user32._36", 0x20);
MakeComm(0x4062EC, "'user32.'+#5+;'");
MakeCode(0x4062EC);
MakeFunction(0x4062EC, 0x4062F2);
MakeUnkn(0x4062F4, 1);
MakeNameEx(0x4062F4, "user32._37", 0x20);
MakeComm(0x4062F4, "'function user32.'+#5+:?;'");
MakeCode(0x4062F4);
MakeFunction(0x4062F4, 0x4062FA);
MakeUnkn(0x4062FC, 1);
MakeNameEx(0x4062FC, "user32._38", 0x20);
MakeComm(0x4062FC, "'user32.'+#5+;'");
MakeCode(0x4062FC);
MakeFunction(0x4062FC, 0x406302);
MakeUnkn(0x406304, 1);
MakeNameEx(0x406304, "user32._39", 0x20);
MakeComm(0x406304, "'function user32.'+#5+:?;'");
MakeCode(0x406304);
MakeFunction(0x406304, 0x40630A);
MakeUnkn(0x40630C, 1);
MakeNameEx(0x40630C, "user32._40", 0x20);
MakeComm(0x40630C, "'user32.'+#5+;'");
MakeCode(0x40630C);
MakeFunction(0x40630C, 0x406312);
MakeUnkn(0x406314, 1);
MakeNameEx(0x406314, "user32._41", 0x20);
MakeComm(0x406314, "'function user32.'+#5+:?;'");
MakeCode(0x406314);
MakeFunction(0x406314, 0x40631A);
MakeUnkn(0x40631C, 1);
MakeNameEx(0x40631C, "user32._42", 0x20);
MakeComm(0x40631C, "'function user32.'+#5+:?;'");
MakeCode(0x40631C);
MakeFunction(0x40631C, 0x406322);
MakeUnkn(0x406324, 1);
MakeNameEx(0x406324, "user32._43", 0x20);
MakeComm(0x406324, "'function user32.'+#5+:?;'");
MakeCode(0x406324);
MakeFunction(0x406324, 0x40632A);
MakeUnkn(0x40632C, 1);
MakeNameEx(0x40632C, "user32._44", 0x20);
MakeComm(0x40632C, "'user32.'+#5+;'");
MakeCode(0x40632C);
MakeFunction(0x40632C, 0x406332);
MakeUnkn(0x406334, 1);
MakeNameEx(0x406334, "user32._45", 0x20);
MakeComm(0x406334, "'function user32.'+#5+:?;'");
MakeCode(0x406334);
MakeFunction(0x406334, 0x40633A);
MakeUnkn(0x40633C, 1);
MakeNameEx(0x40633C, "user32._46", 0x20);
MakeComm(0x40633C, "'user32.'+#5+;'");
MakeCode(0x40633C);
MakeFunction(0x40633C, 0x406342);
MakeUnkn(0x406344, 1);
MakeNameEx(0x406344, "user32._47", 0x20);
MakeComm(0x406344, "'user32.'+#5+;'");
MakeCode(0x406344);
MakeFunction(0x406344, 0x40634A);
MakeUnkn(0x40634C, 1);
MakeNameEx(0x40634C, "user32._48", 0x20);
MakeComm(0x40634C, "'function user32.'+#5+:?;'");
MakeCode(0x40634C);
MakeFunction(0x40634C, 0x406352);
MakeUnkn(0x406354, 1);
MakeNameEx(0x406354, "user32._49", 0x20);
MakeComm(0x406354, "'function user32.'+#5+:?;'");
MakeCode(0x406354);
MakeFunction(0x406354, 0x40635A);
MakeUnkn(0x40635C, 1);
MakeNameEx(0x40635C, "user32._50", 0x20);
MakeComm(0x40635C, "'function user32.'+#5+:?;'");
MakeCode(0x40635C);
MakeFunction(0x40635C, 0x406362);
MakeUnkn(0x406364, 1);
MakeNameEx(0x406364, "user32._51", 0x20);
MakeComm(0x406364, "'function user32.'+#5+:?;'");
MakeCode(0x406364);
MakeFunction(0x406364, 0x40636A);
MakeUnkn(0x40636C, 1);
MakeNameEx(0x40636C, "user32._52", 0x20);
MakeComm(0x40636C, "'function user32.'+#5+:?;'");
MakeCode(0x40636C);
MakeFunction(0x40636C, 0x406372);
MakeUnkn(0x406374, 1);
MakeNameEx(0x406374, "user32._53", 0x20);
MakeComm(0x406374, "'function user32.'+#5+:?;'");
MakeCode(0x406374);
MakeFunction(0x406374, 0x40637A);
MakeUnkn(0x40637C, 1);
MakeNameEx(0x40637C, "user32._54", 0x20);
MakeComm(0x40637C, "'user32.'+#5+;'");
MakeCode(0x40637C);
MakeFunction(0x40637C, 0x406382);
MakeUnkn(0x406384, 1);
MakeNameEx(0x406384, "user32._55", 0x20);
MakeComm(0x406384, "'function user32.'+#5+:?;'");
MakeCode(0x406384);
MakeFunction(0x406384, 0x40638A);
MakeUnkn(0x40638C, 1);
MakeNameEx(0x40638C, "user32._56", 0x20);
MakeComm(0x40638C, "'function user32.'+#5+:?;'");
MakeCode(0x40638C);
MakeFunction(0x40638C, 0x406392);
MakeUnkn(0x406394, 1);
MakeNameEx(0x406394, "user32._57", 0x20);
MakeComm(0x406394, "'function user32.'+#5+:?;'");
MakeCode(0x406394);
MakeFunction(0x406394, 0x40639A);
MakeUnkn(0x40639C, 1);
MakeNameEx(0x40639C, "user32._58", 0x20);
MakeComm(0x40639C, "'user32.'+#5+;'");
MakeCode(0x40639C);
MakeFunction(0x40639C, 0x4063A2);
MakeUnkn(0x4063A4, 1);
MakeNameEx(0x4063A4, "user32._59", 0x20);
MakeComm(0x4063A4, "'function user32.'+#5+:?;'");
MakeCode(0x4063A4);
MakeFunction(0x4063A4, 0x4063AA);
MakeUnkn(0x4063AC, 1);
MakeNameEx(0x4063AC, "user32._60", 0x20);
MakeComm(0x4063AC, "'function user32.'+#5+:?;'");
MakeCode(0x4063AC);
MakeFunction(0x4063AC, 0x4063B2);
MakeUnkn(0x4063B4, 1);
MakeNameEx(0x4063B4, "user32._61", 0x20);
MakeComm(0x4063B4, "'user32.'+#5+;'");
MakeCode(0x4063B4);
MakeFunction(0x4063B4, 0x4063BA);
MakeUnkn(0x4063BC, 1);
MakeNameEx(0x4063BC, "user32._62", 0x20);
MakeComm(0x4063BC, "'function user32.'+#5+:?;'");
MakeCode(0x4063BC);
MakeFunction(0x4063BC, 0x4063C2);
MakeUnkn(0x4063C4, 1);
MakeNameEx(0x4063C4, "user32._63", 0x20);
MakeComm(0x4063C4, "'user32.'+#5+;'");
MakeCode(0x4063C4);
MakeFunction(0x4063C4, 0x4063CA);
MakeUnkn(0x4063CC, 1);
MakeNameEx(0x4063CC, "user32._64", 0x20);
MakeComm(0x4063CC, "'user32.'+#5+;'");
MakeCode(0x4063CC);
MakeFunction(0x4063CC, 0x4063D2);
MakeUnkn(0x4063D4, 1);
MakeNameEx(0x4063D4, "user32._65", 0x20);
MakeComm(0x4063D4, "'user32.'+#5+;'");
MakeCode(0x4063D4);
MakeFunction(0x4063D4, 0x4063DA);
MakeUnkn(0x4063DC, 1);
MakeNameEx(0x4063DC, "user32._66", 0x20);
MakeComm(0x4063DC, "'function user32.'+#5+:?;'");
MakeCode(0x4063DC);
MakeFunction(0x4063DC, 0x4063E2);
MakeUnkn(0x4063E4, 1);
MakeNameEx(0x4063E4, "user32._67", 0x20);
MakeComm(0x4063E4, "'function user32.'+#5+:?;'");
MakeCode(0x4063E4);
MakeFunction(0x4063E4, 0x4063EA);
MakeUnkn(0x4063EC, 1);
MakeNameEx(0x4063EC, "user32._68", 0x20);
MakeComm(0x4063EC, "'function user32.'+#5+:?;'");
MakeCode(0x4063EC);
MakeFunction(0x4063EC, 0x4063F2);
MakeUnkn(0x4063F4, 1);
MakeNameEx(0x4063F4, "user32._69", 0x20);
MakeComm(0x4063F4, "'user32.'+#5+;'");
MakeCode(0x4063F4);
MakeFunction(0x4063F4, 0x4063FA);
MakeUnkn(0x4063FC, 1);
MakeNameEx(0x4063FC, "user32._70", 0x20);
MakeComm(0x4063FC, "'user32.'+#5+;'");
MakeCode(0x4063FC);
MakeFunction(0x4063FC, 0x406402);
MakeUnkn(0x406404, 1);
MakeNameEx(0x406404, "user32._71", 0x20);
MakeComm(0x406404, "'user32.'+#5+;'");
MakeCode(0x406404);
MakeFunction(0x406404, 0x40640A);
MakeUnkn(0x40640C, 1);
MakeNameEx(0x40640C, "user32._72", 0x20);
MakeComm(0x40640C, "'function user32.'+#5+:?;'");
MakeCode(0x40640C);
MakeFunction(0x40640C, 0x406412);
MakeUnkn(0x406414, 1);
MakeNameEx(0x406414, "user32._73", 0x20);
MakeComm(0x406414, "'user32.'+#5+;'");
MakeCode(0x406414);
MakeFunction(0x406414, 0x40641A);
MakeUnkn(0x40641C, 1);
MakeNameEx(0x40641C, "user32._74", 0x20);
MakeComm(0x40641C, "'user32.'+#5+;'");
MakeCode(0x40641C);
MakeFunction(0x40641C, 0x406422);
MakeUnkn(0x406424, 1);
MakeNameEx(0x406424, "user32._75", 0x20);
MakeComm(0x406424, "'function user32.'+#5+:?;'");
MakeCode(0x406424);
MakeFunction(0x406424, 0x40642A);
MakeUnkn(0x40642C, 1);
MakeNameEx(0x40642C, "user32._76", 0x20);
MakeComm(0x40642C, "'function user32.'+#5+:?;'");
MakeCode(0x40642C);
MakeFunction(0x40642C, 0x406432);
MakeUnkn(0x406434, 1);
MakeNameEx(0x406434, "user32._77", 0x20);
MakeComm(0x406434, "'function user32.'+#5+:?;'");
MakeCode(0x406434);
MakeFunction(0x406434, 0x40643A);
MakeUnkn(0x40643C, 1);
MakeNameEx(0x40643C, "user32._78", 0x20);
MakeComm(0x40643C, "'function user32.'+#5+:?;'");
MakeCode(0x40643C);
MakeFunction(0x40643C, 0x406442);
MakeUnkn(0x406444, 1);
MakeNameEx(0x406444, "user32._79", 0x20);
MakeComm(0x406444, "'function user32.'+#5+:?;'");
MakeCode(0x406444);
MakeFunction(0x406444, 0x40644A);
MakeUnkn(0x40644C, 1);
MakeNameEx(0x40644C, "user32._80", 0x20);
MakeComm(0x40644C, "'function user32.'+#5+:?;'");
MakeCode(0x40644C);
MakeFunction(0x40644C, 0x406452);
MakeUnkn(0x406454, 1);
MakeNameEx(0x406454, "user32._81", 0x20);
MakeComm(0x406454, "'user32.'+#5+;'");
MakeCode(0x406454);
MakeFunction(0x406454, 0x40645A);
MakeUnkn(0x40645C, 1);
MakeNameEx(0x40645C, "user32._82", 0x20);
MakeComm(0x40645C, "'user32.'+#5+;'");
MakeCode(0x40645C);
MakeFunction(0x40645C, 0x406462);
MakeUnkn(0x406464, 1);
MakeNameEx(0x406464, "user32._83", 0x20);
MakeComm(0x406464, "'function user32.'+#5+:?;'");
MakeCode(0x406464);
MakeFunction(0x406464, 0x40646A);
MakeUnkn(0x40646C, 1);
MakeNameEx(0x40646C, "user32._84", 0x20);
MakeComm(0x40646C, "'function user32.'+#5+:?;'");
MakeCode(0x40646C);
MakeFunction(0x40646C, 0x406472);
MakeUnkn(0x406474, 1);
MakeNameEx(0x406474, "user32._85", 0x20);
MakeComm(0x406474, "'function user32.'+#5+:?;'");
MakeCode(0x406474);
MakeFunction(0x406474, 0x40647A);
MakeUnkn(0x40647C, 1);
MakeNameEx(0x40647C, "user32._86", 0x20);
MakeComm(0x40647C, "'user32.'+#5+;'");
MakeCode(0x40647C);
MakeFunction(0x40647C, 0x406482);
MakeUnkn(0x406484, 1);
MakeNameEx(0x406484, "user32._87", 0x20);
MakeComm(0x406484, "'user32.'+#5+;'");
MakeCode(0x406484);
MakeFunction(0x406484, 0x40648A);
MakeUnkn(0x40648C, 1);
MakeNameEx(0x40648C, "user32._88", 0x20);
MakeComm(0x40648C, "'user32.'+#5+;'");
MakeCode(0x40648C);
MakeFunction(0x40648C, 0x406492);
MakeUnkn(0x406494, 1);
MakeNameEx(0x406494, "user32._89", 0x20);
MakeComm(0x406494, "'function user32.'+#5+:?;'");
MakeCode(0x406494);
MakeFunction(0x406494, 0x40649A);
MakeUnkn(0x40649C, 1);
MakeNameEx(0x40649C, "user32._90", 0x20);
MakeComm(0x40649C, "'user32.'+#5+;'");
MakeCode(0x40649C);
MakeFunction(0x40649C, 0x4064A2);
MakeUnkn(0x4064A4, 1);
MakeNameEx(0x4064A4, "user32._91", 0x20);
MakeComm(0x4064A4, "'function user32.'+#5+:?;'");
MakeCode(0x4064A4);
MakeFunction(0x4064A4, 0x4064AA);
MakeUnkn(0x4064AC, 1);
MakeNameEx(0x4064AC, "user32._92", 0x20);
MakeComm(0x4064AC, "'function user32.'+#5+:?;'");
MakeCode(0x4064AC);
MakeFunction(0x4064AC, 0x4064B2);
MakeUnkn(0x4064B4, 1);
MakeNameEx(0x4064B4, "user32._93", 0x20);
MakeComm(0x4064B4, "'function user32.'+#5+:?;'");
MakeCode(0x4064B4);
MakeFunction(0x4064B4, 0x4064BA);
MakeUnkn(0x4064BC, 1);
MakeNameEx(0x4064BC, "user32._94", 0x20);
MakeComm(0x4064BC, "'function user32.'+#5+:?;'");
MakeCode(0x4064BC);
MakeFunction(0x4064BC, 0x4064C2);
MakeUnkn(0x4064C4, 1);
MakeNameEx(0x4064C4, "user32._95", 0x20);
MakeComm(0x4064C4, "'function user32.'+#5+:?;'");
MakeCode(0x4064C4);
MakeFunction(0x4064C4, 0x4064CA);
MakeUnkn(0x4064CC, 1);
MakeNameEx(0x4064CC, "user32._96", 0x20);
MakeComm(0x4064CC, "'function user32.'+#5+:?;'");
MakeCode(0x4064CC);
MakeFunction(0x4064CC, 0x4064D2);
MakeUnkn(0x4064D4, 1);
MakeNameEx(0x4064D4, "user32._97", 0x20);
MakeComm(0x4064D4, "'function user32.'+#5+:?;'");
MakeCode(0x4064D4);
MakeFunction(0x4064D4, 0x4064DA);
MakeUnkn(0x4064DC, 1);
MakeNameEx(0x4064DC, "user32._98", 0x20);
MakeComm(0x4064DC, "'function user32.'+#5+:?;'");
MakeCode(0x4064DC);
MakeFunction(0x4064DC, 0x4064E2);
MakeUnkn(0x4064E4, 1);
MakeNameEx(0x4064E4, "user32._99", 0x20);
MakeComm(0x4064E4, "'user32.'+#5+;'");
MakeCode(0x4064E4);
MakeFunction(0x4064E4, 0x4064EA);
MakeUnkn(0x4064EC, 1);
MakeNameEx(0x4064EC, "user32._100", 0x20);
MakeComm(0x4064EC, "'user32.'+#5+;'");
MakeCode(0x4064EC);
MakeFunction(0x4064EC, 0x4064F2);
MakeUnkn(0x4064F4, 1);
MakeNameEx(0x4064F4, "user32._101", 0x20);
MakeComm(0x4064F4, "'function user32.'+#5+:?;'");
MakeCode(0x4064F4);
MakeFunction(0x4064F4, 0x4064FA);
MakeUnkn(0x4064FC, 1);
MakeNameEx(0x4064FC, "user32._102", 0x20);
MakeComm(0x4064FC, "'function user32.'+#5+:?;'");
MakeCode(0x4064FC);
MakeFunction(0x4064FC, 0x406502);
MakeUnkn(0x406504, 1);
MakeNameEx(0x406504, "user32._103", 0x20);
MakeComm(0x406504, "'user32.'+#5+;'");
MakeCode(0x406504);
MakeFunction(0x406504, 0x40650A);
MakeUnkn(0x40650C, 1);
MakeNameEx(0x40650C, "user32._104", 0x20);
MakeComm(0x40650C, "'user32.'+#5+;'");
MakeCode(0x40650C);
MakeFunction(0x40650C, 0x406512);
MakeUnkn(0x406514, 1);
MakeNameEx(0x406514, "user32._105", 0x20);
MakeComm(0x406514, "'function user32.'+#5+:?;'");
MakeCode(0x406514);
MakeFunction(0x406514, 0x40651A);
MakeUnkn(0x40651C, 1);
MakeNameEx(0x40651C, "user32._106", 0x20);
MakeComm(0x40651C, "'user32.'+#5+;'");
MakeCode(0x40651C);
MakeFunction(0x40651C, 0x406522);
MakeUnkn(0x406524, 1);
MakeNameEx(0x406524, "user32._107", 0x20);
MakeComm(0x406524, "'function user32.'+#5+:?;'");
MakeCode(0x406524);
MakeFunction(0x406524, 0x40652A);
MakeUnkn(0x40652C, 1);
MakeNameEx(0x40652C, "user32._108", 0x20);
MakeComm(0x40652C, "'user32.'+#5+;'");
MakeCode(0x40652C);
MakeFunction(0x40652C, 0x406532);
MakeUnkn(0x406534, 1);
MakeNameEx(0x406534, "user32._109", 0x20);
MakeComm(0x406534, "'user32.'+#5+;'");
MakeCode(0x406534);
MakeFunction(0x406534, 0x40653A);
MakeUnkn(0x40653C, 1);
MakeNameEx(0x40653C, "user32._110", 0x20);
MakeComm(0x40653C, "'function user32.'+#5+:?;'");
MakeCode(0x40653C);
MakeFunction(0x40653C, 0x406542);
MakeUnkn(0x406544, 1);
MakeNameEx(0x406544, "user32._111", 0x20);
MakeComm(0x406544, "'user32.'+#5+;'");
MakeCode(0x406544);
MakeFunction(0x406544, 0x40654A);
MakeUnkn(0x40654C, 1);
MakeNameEx(0x40654C, "user32._112", 0x20);
MakeComm(0x40654C, "'user32.'+#5+;'");
MakeCode(0x40654C);
MakeFunction(0x40654C, 0x406552);
MakeUnkn(0x406554, 1);
MakeNameEx(0x406554, "user32._113", 0x20);
MakeComm(0x406554, "'function user32.'+#5+:?;'");
MakeCode(0x406554);
MakeFunction(0x406554, 0x40655A);
MakeUnkn(0x40655C, 1);
MakeNameEx(0x40655C, "user32._114", 0x20);
MakeComm(0x40655C, "'user32.'+#5+;'");
MakeCode(0x40655C);
MakeFunction(0x40655C, 0x406562);
MakeUnkn(0x406564, 1);
MakeNameEx(0x406564, "user32._115", 0x20);
MakeComm(0x406564, "'function user32.'+#5+:?;'");
MakeCode(0x406564);
MakeFunction(0x406564, 0x40656A);
MakeUnkn(0x40656C, 1);
MakeNameEx(0x40656C, "user32._116", 0x20);
MakeComm(0x40656C, "'function user32.'+#5+:?;'");
MakeCode(0x40656C);
MakeFunction(0x40656C, 0x406572);
MakeUnkn(0x406574, 1);
MakeNameEx(0x406574, "user32._117", 0x20);
MakeComm(0x406574, "'function user32.'+#5+:?;'");
MakeCode(0x406574);
MakeFunction(0x406574, 0x40657A);
MakeUnkn(0x40657C, 1);
MakeNameEx(0x40657C, "user32._118", 0x20);
MakeComm(0x40657C, "'user32.'+#5+;'");
MakeCode(0x40657C);
MakeFunction(0x40657C, 0x406582);
MakeUnkn(0x406584, 1);
MakeNameEx(0x406584, "user32._119", 0x20);
MakeComm(0x406584, "'user32.'+#5+;'");
MakeCode(0x406584);
MakeFunction(0x406584, 0x40658A);
MakeUnkn(0x40658C, 1);
MakeNameEx(0x40658C, "user32._120", 0x20);
MakeComm(0x40658C, "'user32.'+#5+;'");
MakeCode(0x40658C);
MakeFunction(0x40658C, 0x406592);
MakeUnkn(0x406594, 1);
MakeNameEx(0x406594, "user32._121", 0x20);
MakeComm(0x406594, "'user32.'+#5+;'");
MakeCode(0x406594);
MakeFunction(0x406594, 0x40659A);
MakeUnkn(0x40659C, 1);
MakeNameEx(0x40659C, "user32._122", 0x20);
MakeComm(0x40659C, "'user32.'+#5+;'");
MakeCode(0x40659C);
MakeFunction(0x40659C, 0x4065A2);
MakeUnkn(0x4065A4, 1);
MakeNameEx(0x4065A4, "user32._123", 0x20);
MakeComm(0x4065A4, "'user32.'+#5+;'");
MakeCode(0x4065A4);
MakeFunction(0x4065A4, 0x4065AA);
MakeUnkn(0x4065AC, 1);
MakeNameEx(0x4065AC, "user32._124", 0x20);
MakeComm(0x4065AC, "'function user32.'+#5+:?;'");
MakeCode(0x4065AC);
MakeFunction(0x4065AC, 0x4065B2);
MakeUnkn(0x4065B4, 1);
MakeNameEx(0x4065B4, "user32._125", 0x20);
MakeComm(0x4065B4, "'user32.'+#5+;'");
MakeCode(0x4065B4);
MakeFunction(0x4065B4, 0x4065BA);
MakeUnkn(0x4065BC, 1);
MakeNameEx(0x4065BC, "user32._126", 0x20);
MakeComm(0x4065BC, "'user32.'+#5+;'");
MakeCode(0x4065BC);
MakeFunction(0x4065BC, 0x4065C2);
MakeUnkn(0x4065C4, 1);
MakeNameEx(0x4065C4, "user32._127", 0x20);
MakeComm(0x4065C4, "'user32.'+#5+;'");
MakeCode(0x4065C4);
MakeFunction(0x4065C4, 0x4065CA);
MakeUnkn(0x4065CC, 1);
MakeNameEx(0x4065CC, "user32._128", 0x20);
MakeComm(0x4065CC, "'user32.'+#5+;'");
MakeCode(0x4065CC);
MakeFunction(0x4065CC, 0x4065D2);
MakeUnkn(0x4065D4, 1);
MakeNameEx(0x4065D4, "user32._129", 0x20);
MakeComm(0x4065D4, "'function user32.'+#5+:?;'");
MakeCode(0x4065D4);
MakeFunction(0x4065D4, 0x4065DA);
MakeUnkn(0x4065DC, 1);
MakeNameEx(0x4065DC, "user32._130", 0x20);
MakeComm(0x4065DC, "'user32.'+#5+;'");
MakeCode(0x4065DC);
MakeFunction(0x4065DC, 0x4065E2);
MakeUnkn(0x4065E4, 1);
MakeNameEx(0x4065E4, "user32._131", 0x20);
MakeComm(0x4065E4, "'user32.'+#5+;'");
MakeCode(0x4065E4);
MakeFunction(0x4065E4, 0x4065EA);
MakeUnkn(0x4065EC, 1);
MakeNameEx(0x4065EC, "user32._132", 0x20);
MakeComm(0x4065EC, "'user32.'+#5+;'");
MakeCode(0x4065EC);
MakeFunction(0x4065EC, 0x4065F2);
MakeUnkn(0x4065F4, 1);
MakeNameEx(0x4065F4, "user32._133", 0x20);
MakeComm(0x4065F4, "'user32.'+#5+;'");
MakeCode(0x4065F4);
MakeFunction(0x4065F4, 0x4065FA);
MakeUnkn(0x4065FC, 1);
MakeNameEx(0x4065FC, "user32._134", 0x20);
MakeComm(0x4065FC, "'user32.'+#5+;'");
MakeCode(0x4065FC);
MakeFunction(0x4065FC, 0x406602);
MakeUnkn(0x406604, 1);
MakeNameEx(0x406604, "user32._135", 0x20);
MakeComm(0x406604, "'user32.'+#5+;'");
MakeCode(0x406604);
MakeFunction(0x406604, 0x40660A);
MakeUnkn(0x40660C, 1);
MakeNameEx(0x40660C, "user32._136", 0x20);
MakeComm(0x40660C, "'user32.'+#5+;'");
MakeCode(0x40660C);
MakeFunction(0x40660C, 0x406612);
MakeUnkn(0x406614, 1);
MakeNameEx(0x406614, "user32._137", 0x20);
MakeComm(0x406614, "'user32.'+#5+;'");
MakeCode(0x406614);
MakeFunction(0x406614, 0x40661A);
MakeUnkn(0x40661C, 1);
MakeNameEx(0x40661C, "user32._138", 0x20);
MakeComm(0x40661C, "'user32.'+#5+;'");
MakeCode(0x40661C);
MakeFunction(0x40661C, 0x406622);
MakeUnkn(0x406624, 1);
MakeNameEx(0x406624, "user32._139", 0x20);
MakeComm(0x406624, "'function user32.'+#5+:?;'");
MakeCode(0x406624);
MakeFunction(0x406624, 0x40662A);
MakeUnkn(0x40662C, 1);
MakeNameEx(0x40662C, "user32._140", 0x20);
MakeComm(0x40662C, "'user32.'+#5+;'");
MakeCode(0x40662C);
MakeFunction(0x40662C, 0x406632);
MakeUnkn(0x406634, 1);
MakeNameEx(0x406634, "user32._141", 0x20);
MakeComm(0x406634, "'user32.'+#5+;'");
MakeCode(0x406634);
MakeFunction(0x406634, 0x40663A);
MakeUnkn(0x40663C, 1);
MakeNameEx(0x40663C, "user32._142", 0x20);
MakeComm(0x40663C, "'user32.'+#5+;'");
MakeCode(0x40663C);
MakeFunction(0x40663C, 0x406642);
MakeUnkn(0x406644, 1);
MakeNameEx(0x406644, "user32._143", 0x20);
MakeComm(0x406644, "'user32.'+#5+;'");
MakeCode(0x406644);
MakeFunction(0x406644, 0x40664A);
MakeUnkn(0x40664C, 1);
MakeNameEx(0x40664C, "user32._144", 0x20);
MakeComm(0x40664C, "'function user32.'+#5+:?;'");
MakeCode(0x40664C);
MakeFunction(0x40664C, 0x406652);
MakeUnkn(0x406654, 1);
MakeNameEx(0x406654, "user32._145", 0x20);
MakeComm(0x406654, "'user32.'+#5+;'");
MakeCode(0x406654);
MakeFunction(0x406654, 0x40665A);
MakeUnkn(0x40665C, 1);
MakeNameEx(0x40665C, "user32._146", 0x20);
MakeComm(0x40665C, "'user32.'+#5+;'");
MakeCode(0x40665C);
MakeFunction(0x40665C, 0x406662);
MakeUnkn(0x406664, 1);
MakeNameEx(0x406664, "user32._147", 0x20);
MakeComm(0x406664, "'user32.'+#5+;'");
MakeCode(0x406664);
MakeFunction(0x406664, 0x40666A);
MakeUnkn(0x40666C, 1);
MakeNameEx(0x40666C, "user32._148", 0x20);
MakeComm(0x40666C, "'user32.'+#5+;'");
MakeCode(0x40666C);
MakeFunction(0x40666C, 0x406672);
MakeUnkn(0x406674, 1);
MakeNameEx(0x406674, "user32._149", 0x20);
MakeComm(0x406674, "'function user32.'+#5+:?;'");
MakeCode(0x406674);
MakeFunction(0x406674, 0x40667A);
MakeUnkn(0x40667C, 1);
MakeNameEx(0x40667C, "user32._150", 0x20);
MakeComm(0x40667C, "'user32.'+#5+;'");
MakeCode(0x40667C);
MakeFunction(0x40667C, 0x406682);
MakeUnkn(0x406684, 1);
MakeNameEx(0x406684, "user32._151", 0x20);
MakeComm(0x406684, "'function user32.'+#5+:?;'");
MakeCode(0x406684);
MakeFunction(0x406684, 0x40668A);
MakeUnkn(0x40668C, 1);
MakeNameEx(0x40668C, "user32._152", 0x20);
MakeComm(0x40668C, "'user32.'+#5+;'");
MakeCode(0x40668C);
MakeFunction(0x40668C, 0x406692);
MakeUnkn(0x406694, 1);
MakeNameEx(0x406694, "user32._153", 0x20);
MakeComm(0x406694, "'user32.'+#5+;'");
MakeCode(0x406694);
MakeFunction(0x406694, 0x40669A);
MakeUnkn(0x40669C, 1);
MakeNameEx(0x40669C, "user32._154", 0x20);
MakeComm(0x40669C, "'user32.'+#5+;'");
MakeCode(0x40669C);
MakeFunction(0x40669C, 0x4066A2);
MakeUnkn(0x4066A4, 1);
MakeNameEx(0x4066A4, "user32._155", 0x20);
MakeComm(0x4066A4, "'user32.'+#5+;'");
MakeCode(0x4066A4);
MakeFunction(0x4066A4, 0x4066AA);
MakeUnkn(0x4066AC, 1);
MakeNameEx(0x4066AC, "user32._156", 0x20);
MakeComm(0x4066AC, "'user32.'+#5+;'");
MakeCode(0x4066AC);
MakeFunction(0x4066AC, 0x4066B2);
MakeUnkn(0x4066B4, 1);
MakeNameEx(0x4066B4, "user32._157", 0x20);
MakeComm(0x4066B4, "'user32.'+#5+;'");
MakeCode(0x4066B4);
MakeFunction(0x4066B4, 0x4066BA);
MakeUnkn(0x4066BC, 1);
MakeNameEx(0x4066BC, "user32._158", 0x20);
MakeComm(0x4066BC, "'function user32.'+#5+:?;'");
MakeCode(0x4066BC);
MakeFunction(0x4066BC, 0x4066C2);
MakeUnkn(0x4066C4, 1);
MakeNameEx(0x4066C4, "MakeLong", 0x20);
MakeComm(0x4066C4, "'function MakeLong(a:Word; b:Word):Longint;'");
MakeCode(0x4066C4);
MakeFunction(0x4066C4, 0x4066D0);
MakeUnkn(0x4066D0, 1);
MakeNameEx(0x4066D0, "GetCurrentTime", 0x20);
MakeComm(0x4066D0, "'function GetCurrentTime:Longint;'");
MakeCode(0x4066D0);
MakeFunction(0x4066D0, 0x4066D6);
MakeUnkn(0x4066D8, 1);
MakeNameEx(0x4066D8, "UnlockResource", 0x20);
MakeComm(0x4066D8, "'function UnlockResource(hResData:THandle):LongBool;'");
MakeCode(0x4066D8);
MakeFunction(0x4066D8, 0x4066DB);
MakeUnkn(0x4066DC, 1);
MakeNameEx(0x4066DC, "GlobalAllocPtr", 0x20);
MakeComm(0x4066DC, "'function GlobalAllocPtr(Flags:Integer; Bytes:Longint):Pointer;'");
MakeCode(0x4066DC);
MakeFunction(0x4066DC, 0x4066EA);
MakeUnkn(0x4066EC, 1);
MakeNameEx(0x4066EC, "GlobalReAllocPtr", 0x20);
MakeComm(0x4066EC, "'function GlobalReAllocPtr(P:Pointer; Bytes:Longint; Flags:Integer):Pointer;'");
MakeCode(0x4066EC);
MakeFunction(0x4066EC, 0x406707);
MakeUnkn(0x406708, 1);
MakeNameEx(0x406708, "GlobalFreePtr", 0x20);
MakeComm(0x406708, "'function GlobalFreePtr(P:Pointer):THandle;'");
MakeCode(0x406708);
MakeFunction(0x406708, 0x40671B);
MakeUnkn(0x40671C, 1);
MakeNameEx(0x40671C, "MakeROP4", 0x20);
MakeComm(0x40671C, "'function MakeROP4(fore:DWORD; back:DWORD):DWORD;'");
MakeCode(0x40671C);
MakeFunction(0x40671C, 0x406728);
MakeUnkn(0x406728, 1);
MakeNameEx(0x406728, "SmallPointToPoint", 0x20);
MakeComm(0x406728, "'function SmallPointToPoint(const P:TSmallPoint):TPoint;'");
MakeCode(0x406728);
MakeFunction(0x406728, 0x40673C);
MakeUnkn(0x40673C, 1);
MakeNameEx(0x40673C, "PointToSmallPoint", 0x20);
MakeComm(0x40673C, "'function PointToSmallPoint(const P:TPoint):TSmallPoint;'");
MakeCode(0x40673C);
MakeFunction(0x40673C, 0x406752);
MakeUnkn(0x406754, 1);
MakeNameEx(0x406754, "MakeWParam", 0x20);
MakeComm(0x406754, "'function MakeWParam(l:Word; h:Word):Longint;'");
MakeCode(0x406754);
MakeFunction(0x406754, 0x40675A);
MakeUnkn(0x40675C, 1);
MakeNameEx(0x40675C, "user32._159", 0x20);
MakeComm(0x40675C, "'function user32.'+#5+:?;'");
MakeCode(0x40675C);
MakeFunction(0x40675C, 0x406762);
MakeUnkn(0x406764, 1);
MakeNameEx(0x406764, "CreateWindowEx", 0x20);
MakeComm(0x406764, "'function CreateWindowEx(dwExStyle:DWORD; lpClassName:PChar; lpWindowName:PChar; dwStyle:DWORD; X:Integer; Y:Integer; nWidth:Integer; nHeight:Integer; hWndParent:HWND; hMenu:HMENU; hInstance:HINST; lpParam:Pointer):HWND;'");
MakeCode(0x406764);
MakeFunction(0x406764, 0x4067BB);
MakeUnkn(0x4067BC, 1);
MakeNameEx(0x4067BC, "CreateWindow", 0x20);
MakeComm(0x4067BC, "'function CreateWindow(lpClassName:PChar; lpWindowName:PChar; dwStyle:DWORD; X:Integer; Y:Integer; nWidth:Integer; nHeight:Integer; hWndParent:HWND; hMenu:HMENU; hInstance:HINST; lpParam:Pointer):HWND;'");
MakeCode(0x4067BC);
MakeFunction(0x4067BC, 0x406811);
MakeUnkn(0x406814, 1);
MakeNameEx(0x406814, "HwndMSWheel", 0x20);
MakeComm(0x406814, "'function HwndMSWheel(var puiMsh_MsgMouseWheel:LongWord; var puiMsh_Msg3DSupport:LongWord; var puiMsh_MsgScrollLines:LongWord; var pf3DSupport:LongBool; var piScrollLines:Integer):HWND;'");
MakeCode(0x406814);
MakeCode(0x406877);
MakeCode(0x40687E);
MakeCode(0x40689B);
MakeCode(0x4068A4);
MakeFunction(0x406814, 0x4068AE);
MakeCode(0x40690C);
MakeCode(0x406923);
MakeCode(0x406930);
MakeCode(0x406931);
MakeCode(0x406936);
MakeFunction(0x40690C, 0x40693A);
MakeCode(0x40693C);
MakeFunction(0x40693C, 0x406944);
MakeCode(0x406944);
MakeCode(0x40695B);
MakeCode(0x406968);
MakeCode(0x406969);
MakeCode(0x40696E);
MakeFunction(0x406944, 0x406972);
MakeCode(0x406974);
MakeFunction(0x406974, 0x40697C);
MakeComm(0x40697C, "'SInvalidInteger'");
MakeDword(0x40697C);
MakeDword(0x406980);
MakeComm(0x406984, "'SOutOfMemory'");
MakeDword(0x406984);
MakeDword(0x406988);
MakeComm(0x40698C, "'SInOutError'");
MakeDword(0x40698C);
MakeDword(0x406990);
MakeComm(0x406994, "'SFileNotFound'");
MakeDword(0x406994);
MakeDword(0x406998);
MakeComm(0x40699C, "'SInvalidFilename'");
MakeDword(0x40699C);
MakeDword(0x4069A0);
MakeComm(0x4069A4, "'STooManyOpenFiles'");
MakeDword(0x4069A4);
MakeDword(0x4069A8);
MakeComm(0x4069AC, "'SAccessDenied'");
MakeDword(0x4069AC);
MakeDword(0x4069B0);
MakeComm(0x4069B4, "'SEndOfFile'");
MakeDword(0x4069B4);
MakeDword(0x4069B8);
MakeComm(0x4069BC, "'SDiskFull'");
MakeDword(0x4069BC);
MakeDword(0x4069C0);
MakeComm(0x4069C4, "'SInvalidInput'");
MakeDword(0x4069C4);
MakeDword(0x4069C8);
MakeComm(0x4069CC, "'SDivByZero'");
MakeDword(0x4069CC);
MakeDword(0x4069D0);
MakeComm(0x4069D4, "'SRangeError'");
MakeDword(0x4069D4);
MakeDword(0x4069D8);
MakeComm(0x4069DC, "'SIntOverflow'");
MakeDword(0x4069DC);
MakeDword(0x4069E0);
MakeComm(0x4069E4, "'SInvalidOp'");
MakeDword(0x4069E4);
MakeDword(0x4069E8);
MakeComm(0x4069EC, "'SZeroDivide'");
MakeDword(0x4069EC);
MakeDword(0x4069F0);
MakeComm(0x4069F4, "'SOverflow'");
MakeDword(0x4069F4);
MakeDword(0x4069F8);
MakeComm(0x4069FC, "'SUnderflow'");
MakeDword(0x4069FC);
MakeDword(0x406A00);
MakeComm(0x406A04, "'SInvalidPointer'");
MakeDword(0x406A04);
MakeDword(0x406A08);
MakeComm(0x406A0C, "'SInvalidCast'");
MakeDword(0x406A0C);
MakeDword(0x406A10);
MakeComm(0x406A14, "'SAccessViolationArg3'");
MakeDword(0x406A14);
MakeDword(0x406A18);
MakeComm(0x406A1C, "'SAccessViolationNoArg'");
MakeDword(0x406A1C);
MakeDword(0x406A20);
MakeComm(0x406A24, "'SStackOverflow'");
MakeDword(0x406A24);
MakeDword(0x406A28);
MakeComm(0x406A2C, "'SControlC'");
MakeDword(0x406A2C);
MakeDword(0x406A30);
MakeComm(0x406A34, "'SPrivilege'");
MakeDword(0x406A34);
MakeDword(0x406A38);
MakeComm(0x406A3C, "'SResString4'");
MakeDword(0x406A3C);
MakeDword(0x406A40);
MakeComm(0x406A44, "'SExceptTitle'");
MakeDword(0x406A44);
MakeDword(0x406A48);
MakeComm(0x406A4C, "'SInvalidFormat'");
MakeDword(0x406A4C);
MakeDword(0x406A50);
MakeComm(0x406A54, "'SArgumentMissing'");
MakeDword(0x406A54);
MakeDword(0x406A58);
MakeComm(0x406A5C, "'SDispatchError'");
MakeDword(0x406A5C);
MakeDword(0x406A60);
MakeComm(0x406A64, "'SReadAccess'");
MakeDword(0x406A64);
MakeDword(0x406A68);
MakeComm(0x406A6C, "'SWriteAccess'");
MakeDword(0x406A6C);
MakeDword(0x406A70);
MakeComm(0x406A74, "'SVarArrayCreate'");
MakeDword(0x406A74);
MakeDword(0x406A78);
MakeComm(0x406A7C, "'SVarArrayBounds'");
MakeDword(0x406A7C);
MakeDword(0x406A80);
MakeComm(0x406A84, "'SVarArrayLocked'");
MakeDword(0x406A84);
MakeDword(0x406A88);
MakeComm(0x406A8C, "'SInvalidVarCast'");
MakeDword(0x406A8C);
MakeDword(0x406A90);
MakeComm(0x406A94, "'SInvalidVarOp'");
MakeDword(0x406A94);
MakeDword(0x406A98);
MakeComm(0x406A9C, "'SResString5'");
MakeDword(0x406A9C);
MakeDword(0x406AA0);
MakeComm(0x406AA4, "'SVarTypeCouldNotConvert'");
MakeDword(0x406AA4);
MakeDword(0x406AA8);
MakeComm(0x406AAC, "'SVarTypeConvertOverflow'");
MakeDword(0x406AAC);
MakeDword(0x406AB0);
MakeComm(0x406AB4, "'SVarOverflow'");
MakeDword(0x406AB4);
MakeDword(0x406AB8);
MakeComm(0x406ABC, "'SVarInvalid'");
MakeDword(0x406ABC);
MakeDword(0x406AC0);
MakeComm(0x406AC4, "'SVarBadType'");
MakeDword(0x406AC4);
MakeDword(0x406AC8);
MakeComm(0x406ACC, "'SVarNotImplemented'");
MakeDword(0x406ACC);
MakeDword(0x406AD0);
MakeComm(0x406AD4, "'SVarUnexpected'");
MakeDword(0x406AD4);
MakeDword(0x406AD8);
MakeComm(0x406ADC, "'SExternalException'");
MakeDword(0x406ADC);
MakeDword(0x406AE0);
MakeComm(0x406AE4, "'SAssertionFailed'");
MakeDword(0x406AE4);
MakeDword(0x406AE8);
MakeComm(0x406AEC, "'SIntfCastError'");
MakeDword(0x406AEC);
MakeDword(0x406AF0);
MakeComm(0x406AF4, "'SSafecallException'");
MakeDword(0x406AF4);
MakeDword(0x406AF8);
MakeComm(0x406AFC, "'SAssertError'");
MakeDword(0x406AFC);
MakeDword(0x406B00);
MakeComm(0x406B04, "'SAbstractError'");
MakeDword(0x406B04);
MakeDword(0x406B08);
MakeComm(0x406B0C, "'SModuleAccessViolation'");
MakeDword(0x406B0C);
MakeDword(0x406B10);
MakeComm(0x406B14, "'SResString6'");
MakeDword(0x406B14);
MakeDword(0x406B18);
MakeComm(0x406B1C, "'SUnkOSError'");
MakeDword(0x406B1C);
MakeDword(0x406B20);
MakeComm(0x406B24, "'SShortMonthNameJan'");
MakeDword(0x406B24);
MakeDword(0x406B28);
MakeComm(0x406B2C, "'SShortMonthNameFeb'");
MakeDword(0x406B2C);
MakeDword(0x406B30);
MakeComm(0x406B34, "'SShortMonthNameMar'");
MakeDword(0x406B34);
MakeDword(0x406B38);
MakeComm(0x406B3C, "'SShortMonthNameApr'");
MakeDword(0x406B3C);
MakeDword(0x406B40);
MakeComm(0x406B44, "'SLongMonthNameMay'");
MakeDword(0x406B44);
MakeDword(0x406B48);
MakeComm(0x406B4C, "'SShortMonthNameJun'");
MakeDword(0x406B4C);
MakeDword(0x406B50);
MakeComm(0x406B54, "'SShortMonthNameJul'");
MakeDword(0x406B54);
MakeDword(0x406B58);
MakeComm(0x406B5C, "'SShortMonthNameAug'");
MakeDword(0x406B5C);
MakeDword(0x406B60);
MakeComm(0x406B64, "'SShortMonthNameSep'");
MakeDword(0x406B64);
MakeDword(0x406B68);
MakeComm(0x406B6C, "'SShortMonthNameOct'");
MakeDword(0x406B6C);
MakeDword(0x406B70);
MakeComm(0x406B74, "'SShortMonthNameNov'");
MakeDword(0x406B74);
MakeDword(0x406B78);
MakeComm(0x406B7C, "'SShortMonthNameDec'");
MakeDword(0x406B7C);
MakeDword(0x406B80);
MakeComm(0x406B84, "'SLongMonthNameJan'");
MakeDword(0x406B84);
MakeDword(0x406B88);
MakeComm(0x406B8C, "'SLongMonthNameFeb'");
MakeDword(0x406B8C);
MakeDword(0x406B90);
MakeComm(0x406B94, "'SLongMonthNameMar'");
MakeDword(0x406B94);
MakeDword(0x406B98);
MakeComm(0x406B9C, "'SLongMonthNameApr'");
MakeDword(0x406B9C);
MakeDword(0x406BA0);
MakeComm(0x406BA4, "'SLongMonthNameMay'");
MakeDword(0x406BA4);
MakeDword(0x406BA8);
MakeComm(0x406BAC, "'SLongMonthNameJun'");
MakeDword(0x406BAC);
MakeDword(0x406BB0);
MakeComm(0x406BB4, "'SLongMonthNameJul'");
MakeDword(0x406BB4);
MakeDword(0x406BB8);
MakeComm(0x406BBC, "'SLongMonthNameAug'");
MakeDword(0x406BBC);
MakeDword(0x406BC0);
MakeComm(0x406BC4, "'SLongMonthNameSep'");
MakeDword(0x406BC4);
MakeDword(0x406BC8);
MakeComm(0x406BCC, "'SLongMonthNameOct'");
MakeDword(0x406BCC);
MakeDword(0x406BD0);
MakeComm(0x406BD4, "'SLongMonthNameNov'");
MakeDword(0x406BD4);
MakeDword(0x406BD8);
MakeComm(0x406BDC, "'SLongMonthNameDec'");
MakeDword(0x406BDC);
MakeDword(0x406BE0);
MakeComm(0x406BE4, "'SShortDayNameSun'");
MakeDword(0x406BE4);
MakeDword(0x406BE8);
MakeComm(0x406BEC, "'SShortDayNameMon'");
MakeDword(0x406BEC);
MakeDword(0x406BF0);
MakeComm(0x406BF4, "'SShortDayNameTue'");
MakeDword(0x406BF4);
MakeDword(0x406BF8);
MakeComm(0x406BFC, "'SShortDayNameWed'");
MakeDword(0x406BFC);
MakeDword(0x406C00);
MakeComm(0x406C04, "'SShortDayNameThu'");
MakeDword(0x406C04);
MakeDword(0x406C08);
MakeComm(0x406C0C, "'SShortDayNameFri'");
MakeDword(0x406C0C);
MakeDword(0x406C10);
MakeComm(0x406C14, "'SShortDayNameSat'");
MakeDword(0x406C14);
MakeDword(0x406C18);
MakeComm(0x406C1C, "'SLongDayNameSun'");
MakeDword(0x406C1C);
MakeDword(0x406C20);
MakeComm(0x406C24, "'SLongDayNameMon'");
MakeDword(0x406C24);
MakeDword(0x406C28);
MakeComm(0x406C2C, "'SLongDayNameTue'");
MakeDword(0x406C2C);
MakeDword(0x406C30);
MakeComm(0x406C34, "'SLongDayNameWed'");
MakeDword(0x406C34);
MakeDword(0x406C38);
MakeComm(0x406C3C, "'SLongDayNameThu'");
MakeDword(0x406C3C);
MakeDword(0x406C40);
MakeComm(0x406C44, "'SLongDayNameFri'");
MakeDword(0x406C44);
MakeDword(0x406C48);
MakeComm(0x406C4C, "'SLongDayNameSat'");
MakeDword(0x406C4C);
MakeDword(0x406C50);
MakeCode(0x406C54);
MakeCode(0x406C6B);
MakeCode(0x406C78);
MakeCode(0x406C79);
MakeCode(0x406C7E);
MakeFunction(0x406C54, 0x406C82);
MakeCode(0x406C84);
MakeFunction(0x406C84, 0x406C8C);
MakeUnkn(0x406C8C, 1);
MakeNameEx(0x406C8C, "VMT_406C8C_Exception", 0);
MakeDword(0x406C8C);
MakeDword(0x406C90);
MakeDword(0x406C94);
MakeDword(0x406C98);
MakeUnkn(0x406CD8, 1);
MakeNameEx(0x406CD8, "Exception_InitTable", 0);
MakeByte(0x406CD8);
MakeByte(0x406CD9);
MakeDword(0x406CDA);
MakeDword(0x406CDE);
MakeDword(0x406CE2);
MakeDword(0x406CE6);
MakeDword(0x406C9C);
MakeDword(0x406CA0);
MakeDword(0x406CA4);
MakeDword(0x406CA8);
MakeDword(0x406CAC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406CEA, 0x406CF4);
MakeDword(0x406CB0);
MakeDword(0x406CB4);
MakeDword(0x406CB8);
MakeDword(0x406CBC);
MakeDword(0x406CC0);
MakeDword(0x406CC4);
MakeDword(0x406CC8);
MakeDword(0x406CCC);
MakeDword(0x406CD0);
MakeDword(0x406CD4);
MakeUnkn(0x406CF4, 1);
MakeNameEx(0x406CF4, "VMT_406CF4_EHeapException", 0);
MakeDword(0x406CF4);
MakeDword(0x406CF8);
MakeDword(0x406CFC);
MakeDword(0x406D00);
MakeDword(0x406D04);
MakeDword(0x406D08);
MakeDword(0x406D0C);
MakeDword(0x406D10);
MakeDword(0x406D14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406D40, 0x406D4F);
MakeDword(0x406D18);
MakeDword(0x406D1C);
MakeDword(0x406D20);
MakeDword(0x406D24);
MakeDword(0x406D28);
MakeDword(0x406D2C);
MakeDword(0x406D30);
MakeDword(0x406D34);
MakeDword(0x406D38);
MakeDword(0x406D3C);
MakeUnkn(0x406D50, 1);
MakeNameEx(0x406D50, "VMT_406D50_EOutOfMemory", 0);
MakeDword(0x406D50);
MakeDword(0x406D54);
MakeDword(0x406D58);
MakeDword(0x406D5C);
MakeDword(0x406D60);
MakeDword(0x406D64);
MakeDword(0x406D68);
MakeDword(0x406D6C);
MakeDword(0x406D70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406D9C, 0x406DA9);
MakeDword(0x406D74);
MakeDword(0x406D78);
MakeDword(0x406D7C);
MakeDword(0x406D80);
MakeDword(0x406D84);
MakeDword(0x406D88);
MakeDword(0x406D8C);
MakeDword(0x406D90);
MakeDword(0x406D94);
MakeDword(0x406D98);
MakeUnkn(0x406DAC, 1);
MakeNameEx(0x406DAC, "VMT_406DAC_EInOutError", 0);
MakeDword(0x406DAC);
MakeDword(0x406DB0);
MakeDword(0x406DB4);
MakeDword(0x406DB8);
MakeDword(0x406DBC);
MakeDword(0x406DC0);
MakeDword(0x406DC4);
MakeDword(0x406DC8);
MakeDword(0x406DCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406DF8, 0x406E04);
MakeDword(0x406DD0);
MakeDword(0x406DD4);
MakeDword(0x406DD8);
MakeDword(0x406DDC);
MakeDword(0x406DE0);
MakeDword(0x406DE4);
MakeDword(0x406DE8);
MakeDword(0x406DEC);
MakeDword(0x406DF0);
MakeDword(0x406DF4);
MakeUnkn(0x406E04, 1);
MakeNameEx(0x406E04, "VMT_406E04_EExternal", 0);
MakeDword(0x406E04);
MakeDword(0x406E08);
MakeDword(0x406E0C);
MakeDword(0x406E10);
MakeDword(0x406E14);
MakeDword(0x406E18);
MakeDword(0x406E1C);
MakeDword(0x406E20);
MakeDword(0x406E24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406E50, 0x406E5A);
MakeDword(0x406E28);
MakeDword(0x406E2C);
MakeDword(0x406E30);
MakeDword(0x406E34);
MakeDword(0x406E38);
MakeDword(0x406E3C);
MakeDword(0x406E40);
MakeDword(0x406E44);
MakeDword(0x406E48);
MakeDword(0x406E4C);
MakeUnkn(0x406E5C, 1);
MakeNameEx(0x406E5C, "VMT_406E5C_EExternalException", 0);
MakeDword(0x406E5C);
MakeDword(0x406E60);
MakeDword(0x406E64);
MakeDword(0x406E68);
MakeDword(0x406E6C);
MakeDword(0x406E70);
MakeDword(0x406E74);
MakeDword(0x406E78);
MakeDword(0x406E7C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406EA8, 0x406EBB);
MakeDword(0x406E80);
MakeDword(0x406E84);
MakeDword(0x406E88);
MakeDword(0x406E8C);
MakeDword(0x406E90);
MakeDword(0x406E94);
MakeDword(0x406E98);
MakeDword(0x406E9C);
MakeDword(0x406EA0);
MakeDword(0x406EA4);
MakeUnkn(0x406EBC, 1);
MakeNameEx(0x406EBC, "VMT_406EBC_EIntError", 0);
MakeDword(0x406EBC);
MakeDword(0x406EC0);
MakeDword(0x406EC4);
MakeDword(0x406EC8);
MakeDword(0x406ECC);
MakeDword(0x406ED0);
MakeDword(0x406ED4);
MakeDword(0x406ED8);
MakeDword(0x406EDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406F08, 0x406F12);
MakeDword(0x406EE0);
MakeDword(0x406EE4);
MakeDword(0x406EE8);
MakeDword(0x406EEC);
MakeDword(0x406EF0);
MakeDword(0x406EF4);
MakeDword(0x406EF8);
MakeDword(0x406EFC);
MakeDword(0x406F00);
MakeDword(0x406F04);
MakeUnkn(0x406F14, 1);
MakeNameEx(0x406F14, "VMT_406F14_EDivByZero", 0);
MakeDword(0x406F14);
MakeDword(0x406F18);
MakeDword(0x406F1C);
MakeDword(0x406F20);
MakeDword(0x406F24);
MakeDword(0x406F28);
MakeDword(0x406F2C);
MakeDword(0x406F30);
MakeDword(0x406F34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406F60, 0x406F6B);
MakeDword(0x406F38);
MakeDword(0x406F3C);
MakeDword(0x406F40);
MakeDword(0x406F44);
MakeDword(0x406F48);
MakeDword(0x406F4C);
MakeDword(0x406F50);
MakeDword(0x406F54);
MakeDword(0x406F58);
MakeDword(0x406F5C);
MakeUnkn(0x406F6C, 1);
MakeNameEx(0x406F6C, "VMT_406F6C_ERangeError", 0);
MakeDword(0x406F6C);
MakeDword(0x406F70);
MakeDword(0x406F74);
MakeDword(0x406F78);
MakeDword(0x406F7C);
MakeDword(0x406F80);
MakeDword(0x406F84);
MakeDword(0x406F88);
MakeDword(0x406F8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x406FB8, 0x406FC4);
MakeDword(0x406F90);
MakeDword(0x406F94);
MakeDword(0x406F98);
MakeDword(0x406F9C);
MakeDword(0x406FA0);
MakeDword(0x406FA4);
MakeDword(0x406FA8);
MakeDword(0x406FAC);
MakeDword(0x406FB0);
MakeDword(0x406FB4);
MakeUnkn(0x406FC4, 1);
MakeNameEx(0x406FC4, "VMT_406FC4_EIntOverflow", 0);
MakeDword(0x406FC4);
MakeDword(0x406FC8);
MakeDword(0x406FCC);
MakeDword(0x406FD0);
MakeDword(0x406FD4);
MakeDword(0x406FD8);
MakeDword(0x406FDC);
MakeDword(0x406FE0);
MakeDword(0x406FE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407010, 0x40701D);
MakeDword(0x406FE8);
MakeDword(0x406FEC);
MakeDword(0x406FF0);
MakeDword(0x406FF4);
MakeDword(0x406FF8);
MakeDword(0x406FFC);
MakeDword(0x407000);
MakeDword(0x407004);
MakeDword(0x407008);
MakeDword(0x40700C);
MakeUnkn(0x407020, 1);
MakeNameEx(0x407020, "VMT_407020_EMathError", 0);
MakeDword(0x407020);
MakeDword(0x407024);
MakeDword(0x407028);
MakeDword(0x40702C);
MakeDword(0x407030);
MakeDword(0x407034);
MakeDword(0x407038);
MakeDword(0x40703C);
MakeDword(0x407040);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40706C, 0x407077);
MakeDword(0x407044);
MakeDword(0x407048);
MakeDword(0x40704C);
MakeDword(0x407050);
MakeDword(0x407054);
MakeDword(0x407058);
MakeDword(0x40705C);
MakeDword(0x407060);
MakeDword(0x407064);
MakeDword(0x407068);
MakeUnkn(0x407078, 1);
MakeNameEx(0x407078, "VMT_407078_EInvalidOp", 0);
MakeDword(0x407078);
MakeDword(0x40707C);
MakeDword(0x407080);
MakeDword(0x407084);
MakeDword(0x407088);
MakeDword(0x40708C);
MakeDword(0x407090);
MakeDword(0x407094);
MakeDword(0x407098);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4070C4, 0x4070CF);
MakeDword(0x40709C);
MakeDword(0x4070A0);
MakeDword(0x4070A4);
MakeDword(0x4070A8);
MakeDword(0x4070AC);
MakeDword(0x4070B0);
MakeDword(0x4070B4);
MakeDword(0x4070B8);
MakeDword(0x4070BC);
MakeDword(0x4070C0);
MakeUnkn(0x4070D0, 1);
MakeNameEx(0x4070D0, "VMT_4070D0_EZeroDivide", 0);
MakeDword(0x4070D0);
MakeDword(0x4070D4);
MakeDword(0x4070D8);
MakeDword(0x4070DC);
MakeDword(0x4070E0);
MakeDword(0x4070E4);
MakeDword(0x4070E8);
MakeDword(0x4070EC);
MakeDword(0x4070F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40711C, 0x407128);
MakeDword(0x4070F4);
MakeDword(0x4070F8);
MakeDword(0x4070FC);
MakeDword(0x407100);
MakeDword(0x407104);
MakeDword(0x407108);
MakeDword(0x40710C);
MakeDword(0x407110);
MakeDword(0x407114);
MakeDword(0x407118);
MakeUnkn(0x407128, 1);
MakeNameEx(0x407128, "VMT_407128_EOverflow", 0);
MakeDword(0x407128);
MakeDword(0x40712C);
MakeDword(0x407130);
MakeDword(0x407134);
MakeDword(0x407138);
MakeDword(0x40713C);
MakeDword(0x407140);
MakeDword(0x407144);
MakeDword(0x407148);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407174, 0x40717E);
MakeDword(0x40714C);
MakeDword(0x407150);
MakeDword(0x407154);
MakeDword(0x407158);
MakeDword(0x40715C);
MakeDword(0x407160);
MakeDword(0x407164);
MakeDword(0x407168);
MakeDword(0x40716C);
MakeDword(0x407170);
MakeUnkn(0x407180, 1);
MakeNameEx(0x407180, "VMT_407180_EUnderflow", 0);
MakeDword(0x407180);
MakeDword(0x407184);
MakeDword(0x407188);
MakeDword(0x40718C);
MakeDword(0x407190);
MakeDword(0x407194);
MakeDword(0x407198);
MakeDword(0x40719C);
MakeDword(0x4071A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4071CC, 0x4071D7);
MakeDword(0x4071A4);
MakeDword(0x4071A8);
MakeDword(0x4071AC);
MakeDword(0x4071B0);
MakeDword(0x4071B4);
MakeDword(0x4071B8);
MakeDword(0x4071BC);
MakeDword(0x4071C0);
MakeDword(0x4071C4);
MakeDword(0x4071C8);
MakeUnkn(0x4071D8, 1);
MakeNameEx(0x4071D8, "VMT_4071D8_EInvalidPointer", 0);
MakeDword(0x4071D8);
MakeDword(0x4071DC);
MakeDword(0x4071E0);
MakeDword(0x4071E4);
MakeDword(0x4071E8);
MakeDword(0x4071EC);
MakeDword(0x4071F0);
MakeDword(0x4071F4);
MakeDword(0x4071F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407224, 0x407234);
MakeDword(0x4071FC);
MakeDword(0x407200);
MakeDword(0x407204);
MakeDword(0x407208);
MakeDword(0x40720C);
MakeDword(0x407210);
MakeDword(0x407214);
MakeDword(0x407218);
MakeDword(0x40721C);
MakeDword(0x407220);
MakeUnkn(0x407234, 1);
MakeNameEx(0x407234, "VMT_407234_EInvalidCast", 0);
MakeDword(0x407234);
MakeDword(0x407238);
MakeDword(0x40723C);
MakeDword(0x407240);
MakeDword(0x407244);
MakeDword(0x407248);
MakeDword(0x40724C);
MakeDword(0x407250);
MakeDword(0x407254);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407280, 0x40728D);
MakeDword(0x407258);
MakeDword(0x40725C);
MakeDword(0x407260);
MakeDword(0x407264);
MakeDword(0x407268);
MakeDword(0x40726C);
MakeDword(0x407270);
MakeDword(0x407274);
MakeDword(0x407278);
MakeDword(0x40727C);
MakeUnkn(0x407290, 1);
MakeNameEx(0x407290, "VMT_407290_EConvertError", 0);
MakeDword(0x407290);
MakeDword(0x407294);
MakeDword(0x407298);
MakeDword(0x40729C);
MakeDword(0x4072A0);
MakeDword(0x4072A4);
MakeDword(0x4072A8);
MakeDword(0x4072AC);
MakeDword(0x4072B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4072DC, 0x4072EA);
MakeDword(0x4072B4);
MakeDword(0x4072B8);
MakeDword(0x4072BC);
MakeDword(0x4072C0);
MakeDword(0x4072C4);
MakeDword(0x4072C8);
MakeDword(0x4072CC);
MakeDword(0x4072D0);
MakeDword(0x4072D4);
MakeDword(0x4072D8);
MakeUnkn(0x4072EC, 1);
MakeNameEx(0x4072EC, "VMT_4072EC_EAccessViolation", 0);
MakeDword(0x4072EC);
MakeDword(0x4072F0);
MakeDword(0x4072F4);
MakeDword(0x4072F8);
MakeDword(0x4072FC);
MakeDword(0x407300);
MakeDword(0x407304);
MakeDword(0x407308);
MakeDword(0x40730C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407338, 0x407349);
MakeDword(0x407310);
MakeDword(0x407314);
MakeDword(0x407318);
MakeDword(0x40731C);
MakeDword(0x407320);
MakeDword(0x407324);
MakeDword(0x407328);
MakeDword(0x40732C);
MakeDword(0x407330);
MakeDword(0x407334);
MakeUnkn(0x40734C, 1);
MakeNameEx(0x40734C, "VMT_40734C_EPrivilege", 0);
MakeDword(0x40734C);
MakeDword(0x407350);
MakeDword(0x407354);
MakeDword(0x407358);
MakeDword(0x40735C);
MakeDword(0x407360);
MakeDword(0x407364);
MakeDword(0x407368);
MakeDword(0x40736C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407398, 0x4073A3);
MakeDword(0x407370);
MakeDword(0x407374);
MakeDword(0x407378);
MakeDword(0x40737C);
MakeDword(0x407380);
MakeDword(0x407384);
MakeDword(0x407388);
MakeDword(0x40738C);
MakeDword(0x407390);
MakeDword(0x407394);
MakeUnkn(0x4073A4, 1);
MakeNameEx(0x4073A4, "VMT_4073A4_EStackOverflow", 0);
MakeDword(0x4073A4);
MakeDword(0x4073A8);
MakeDword(0x4073AC);
MakeDword(0x4073B0);
MakeDword(0x4073B4);
MakeDword(0x4073B8);
MakeDword(0x4073BC);
MakeDword(0x4073C0);
MakeDword(0x4073C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4073F0, 0x4073FF);
MakeDword(0x4073C8);
MakeDword(0x4073CC);
MakeDword(0x4073D0);
MakeDword(0x4073D4);
MakeDword(0x4073D8);
MakeDword(0x4073DC);
MakeDword(0x4073E0);
MakeDword(0x4073E4);
MakeDword(0x4073E8);
MakeDword(0x4073EC);
MakeUnkn(0x407400, 1);
MakeNameEx(0x407400, "VMT_407400_EControlC", 0);
MakeDword(0x407400);
MakeDword(0x407404);
MakeDword(0x407408);
MakeDword(0x40740C);
MakeDword(0x407410);
MakeDword(0x407414);
MakeDword(0x407418);
MakeDword(0x40741C);
MakeDword(0x407420);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40744C, 0x407456);
MakeDword(0x407424);
MakeDword(0x407428);
MakeDword(0x40742C);
MakeDword(0x407430);
MakeDword(0x407434);
MakeDword(0x407438);
MakeDword(0x40743C);
MakeDword(0x407440);
MakeDword(0x407444);
MakeDword(0x407448);
MakeUnkn(0x407458, 1);
MakeNameEx(0x407458, "VMT_407458_EVariantError", 0);
MakeDword(0x407458);
MakeDword(0x40745C);
MakeDword(0x407460);
MakeDword(0x407464);
MakeDword(0x407468);
MakeDword(0x40746C);
MakeDword(0x407470);
MakeDword(0x407474);
MakeDword(0x407478);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4074A4, 0x4074B2);
MakeDword(0x40747C);
MakeDword(0x407480);
MakeDword(0x407484);
MakeDword(0x407488);
MakeDword(0x40748C);
MakeDword(0x407490);
MakeDword(0x407494);
MakeDword(0x407498);
MakeDword(0x40749C);
MakeDword(0x4074A0);
MakeUnkn(0x4074B4, 1);
MakeNameEx(0x4074B4, "VMT_4074B4_EAssertionFailed", 0);
MakeDword(0x4074B4);
MakeDword(0x4074B8);
MakeDword(0x4074BC);
MakeDword(0x4074C0);
MakeDword(0x4074C4);
MakeDword(0x4074C8);
MakeDword(0x4074CC);
MakeDword(0x4074D0);
MakeDword(0x4074D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407500, 0x407511);
MakeDword(0x4074D8);
MakeDword(0x4074DC);
MakeDword(0x4074E0);
MakeDword(0x4074E4);
MakeDword(0x4074E8);
MakeDword(0x4074EC);
MakeDword(0x4074F0);
MakeDword(0x4074F4);
MakeDword(0x4074F8);
MakeDword(0x4074FC);
MakeUnkn(0x407514, 1);
MakeNameEx(0x407514, "VMT_407514_EAbstractError", 0);
MakeDword(0x407514);
MakeDword(0x407518);
MakeDword(0x40751C);
MakeDword(0x407520);
MakeDword(0x407524);
MakeDword(0x407528);
MakeDword(0x40752C);
MakeDword(0x407530);
MakeDword(0x407534);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407560, 0x40756F);
MakeDword(0x407538);
MakeDword(0x40753C);
MakeDword(0x407540);
MakeDword(0x407544);
MakeDword(0x407548);
MakeDword(0x40754C);
MakeDword(0x407550);
MakeDword(0x407554);
MakeDword(0x407558);
MakeDword(0x40755C);
MakeUnkn(0x407570, 1);
MakeNameEx(0x407570, "VMT_407570_EIntfCastError", 0);
MakeDword(0x407570);
MakeDword(0x407574);
MakeDword(0x407578);
MakeDword(0x40757C);
MakeDword(0x407580);
MakeDword(0x407584);
MakeDword(0x407588);
MakeDword(0x40758C);
MakeDword(0x407590);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4075BC, 0x4075CB);
MakeDword(0x407594);
MakeDword(0x407598);
MakeDword(0x40759C);
MakeDword(0x4075A0);
MakeDword(0x4075A4);
MakeDword(0x4075A8);
MakeDword(0x4075AC);
MakeDword(0x4075B0);
MakeDword(0x4075B4);
MakeDword(0x4075B8);
MakeUnkn(0x4075CC, 1);
MakeNameEx(0x4075CC, "VMT_4075CC_EOSError", 0);
MakeDword(0x4075CC);
MakeDword(0x4075D0);
MakeDword(0x4075D4);
MakeDword(0x4075D8);
MakeDword(0x4075DC);
MakeDword(0x4075E0);
MakeDword(0x4075E4);
MakeDword(0x4075E8);
MakeDword(0x4075EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407618, 0x407621);
MakeDword(0x4075F0);
MakeDword(0x4075F4);
MakeDword(0x4075F8);
MakeDword(0x4075FC);
MakeDword(0x407600);
MakeDword(0x407604);
MakeDword(0x407608);
MakeDword(0x40760C);
MakeDword(0x407610);
MakeDword(0x407614);
MakeUnkn(0x407624, 1);
MakeNameEx(0x407624, "VMT_407624_ESafecallException", 0);
MakeDword(0x407624);
MakeDword(0x407628);
MakeDword(0x40762C);
MakeDword(0x407630);
MakeDword(0x407634);
MakeDword(0x407638);
MakeDword(0x40763C);
MakeDword(0x407640);
MakeDword(0x407644);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407670, 0x407683);
MakeDword(0x407648);
MakeDword(0x40764C);
MakeDword(0x407650);
MakeDword(0x407654);
MakeDword(0x407658);
MakeDword(0x40765C);
MakeDword(0x407660);
MakeDword(0x407664);
MakeDword(0x407668);
MakeDword(0x40766C);
MakeUnkn(0x407684, 1);
MakeNameEx(0x407684, "RTTI_407684_DynArray_.74", 0);
MakeDword(0x407684);
MakeUnkn(0x407688, 1);
MakeNameEx(0x407688, "", 0);
MakeByte(0x407688);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407689, 0x40768D);
MakeDword(0x40768D);
MakeDword(0x407691);
MakeDword(0x407695);
MakeDword(0x407699);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40769D, 0x4076A6);
MakeUnkn(0x4076A8, 1);
MakeNameEx(0x4076A8, "RTTI_4076A8_DynArray_.84", 0);
MakeDword(0x4076A8);
MakeUnkn(0x4076AC, 1);
MakeNameEx(0x4076AC, "", 0);
MakeByte(0x4076AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4076AD, 0x4076B1);
MakeDword(0x4076B1);
MakeDword(0x4076B5);
MakeDword(0x4076B9);
MakeDword(0x4076BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4076C1, 0x4076CA);
MakeUnkn(0x4076D8, 1);
MakeNameEx(0x4076D8, "VMT_4076D8_TThreadLocalCounter", 0);
MakeDword(0x4076D8);
MakeDword(0x4076DC);
MakeDword(0x4076E0);
MakeDword(0x4076E4);
MakeDword(0x4076E8);
MakeDword(0x4076EC);
MakeDword(0x4076F0);
MakeDword(0x4076F4);
MakeDword(0x4076F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407724, 0x407738);
MakeDword(0x4076FC);
MakeDword(0x407700);
MakeDword(0x407704);
MakeDword(0x407708);
MakeDword(0x40770C);
MakeDword(0x407710);
MakeDword(0x407714);
MakeDword(0x407718);
MakeDword(0x40771C);
MakeDword(0x407720);
MakeUnkn(0x4077B4, 1);
MakeNameEx(0x4077B4, "VMT_4077B4_TMultiReadExclusiveWriteSynchronizer", 0);
MakeDword(0x4077B4);
MakeDword(0x4077B8);
MakeUnkn(0x407794, 1);
MakeNameEx(0x407794, "TMultiReadExclusiveWriteSynchronizer_IntfTable", 0);
MakeDword(0x407794);
MakeByte(0x407798);
MakeArray(0x407798, 16);
MakeDword(0x4077A8);
MakeDword(0x407778);
MakeFunction(0x407759, -1);
MakeCode(0x407759);
MakeDword(0x40777C);
MakeFunction(0x407763, -1);
MakeCode(0x407763);
MakeDword(0x407780);
MakeFunction(0x40776D, -1);
MakeCode(0x40776D);
MakeDword(0x407784);
MakeFunction(0x407739, -1);
MakeCode(0x407739);
MakeDword(0x407788);
MakeFunction(0x407741, -1);
MakeCode(0x407741);
MakeDword(0x40778C);
MakeFunction(0x407749, -1);
MakeCode(0x407749);
MakeDword(0x407790);
MakeFunction(0x407751, -1);
MakeCode(0x407751);
MakeByte(0x407738);
MakeDword(0x4077AC);
MakeDword(0x4077B0);
MakeDword(0x4077BC);
MakeDword(0x4077C0);
MakeDword(0x4077C4);
MakeDword(0x4077C8);
MakeDword(0x4077CC);
MakeDword(0x4077D0);
MakeDword(0x4077D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407800, 0x407825);
MakeDword(0x4077D8);
MakeDword(0x4077DC);
MakeDword(0x4077E0);
MakeDword(0x4077E4);
MakeDword(0x4077E8);
MakeDword(0x4077EC);
MakeDword(0x4077F0);
MakeDword(0x4077F4);
MakeDword(0x4077F8);
MakeDword(0x4077FC);
MakeUnkn(0x407828, 1);
MakeNameEx(0x407828, "DivMod", 0x20);
MakeComm(0x407828, "'procedure DivMod(Dividend:Integer; Divisor:Word; var Result:Word; var Remainder:Word);'");
MakeCode(0x407828);
MakeFunction(0x407828, 0x407844);
MakeUnkn(0x407844, 1);
MakeNameEx(0x407844, "ConvertErrorFmt", 0x20);
MakeComm(0x407844, "'procedure ConvertErrorFmt(ResString:PResStringRec; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1);'");
MakeCode(0x407844);
MakeFunction(0x407844, 0x407866);
MakeUnkn(0x407868, 1);
MakeNameEx(0x407868, "AllocMem", 0x20);
MakeComm(0x407868, "'function AllocMem(Size:Cardinal):Pointer;'");
MakeCode(0x407868);
MakeFunction(0x407868, 0x407885);
MakeUnkn(0x407888, 1);
MakeNameEx(0x407888, "DoExitProc", 0x20);
MakeComm(0x407888, "'procedure DoExitProc;'");
MakeCode(0x407888);
MakeFunction(0x407888, 0x4078B2);
MakeUnkn(0x4078B4, 1);
MakeNameEx(0x4078B4, "AddExitProc", 0x20);
MakeComm(0x4078B4, "'procedure AddExitProc(Proc:TProcedure);'");
MakeCode(0x4078B4);
MakeFunction(0x4078B4, 0x4078E9);
MakeUnkn(0x4078EC, 1);
MakeNameEx(0x4078EC, "UpperCase", 0x20);
MakeComm(0x4078EC, "'function UpperCase(const S:AnsiString):AnsiString;'");
MakeCode(0x4078EC);
MakeCode(0x40790D);
MakeCode(0x407919);
MakeCode(0x407922);
MakeFunction(0x4078EC, 0x407926);
MakeUnkn(0x407928, 1);
MakeNameEx(0x407928, "LowerCase", 0x20);
MakeComm(0x407928, "'function LowerCase(const S:AnsiString):AnsiString;'");
MakeCode(0x407928);
MakeCode(0x407949);
MakeCode(0x407955);
MakeCode(0x40795E);
MakeFunction(0x407928, 0x407962);
MakeUnkn(0x407964, 1);
MakeNameEx(0x407964, "CompareStr", 0x20);
MakeComm(0x407964, "'function CompareStr(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x407964);
MakeCode(0x407971);
MakeCode(0x407978);
MakeCode(0x407980);
MakeCode(0x40798E);
MakeFunction(0x407964, 0x407993);
MakeUnkn(0x407994, 1);
MakeNameEx(0x407994, "CompareMem", 0x20);
MakeComm(0x407994, "'function CompareMem(P1:Pointer; P2:Pointer; Length:Integer):Boolean;'");
MakeCode(0x407994);
MakeCode(0x4079B0);
MakeCode(0x4079B1);
MakeFunction(0x407994, 0x4079B4);
MakeUnkn(0x4079B4, 1);
MakeNameEx(0x4079B4, "CompareText", 0x20);
MakeComm(0x4079B4, "'function CompareText(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x4079B4);
MakeCode(0x4079C2);
MakeCode(0x4079C9);
MakeCode(0x4079D1);
MakeCode(0x4079D3);
MakeCode(0x4079E7);
MakeCode(0x4079F7);
MakeCode(0x407A01);
MakeFunction(0x4079B4, 0x407A07);
MakeUnkn(0x407A08, 1);
MakeNameEx(0x407A08, "SameText", 0x20);
MakeComm(0x407A08, "'function SameText(const S1:AnsiString; const S2:AnsiString):Boolean;'");
MakeCode(0x407A08);
MakeCode(0x407A25);
MakeCode(0x407A27);
MakeCode(0x407A28);
MakeFunction(0x407A08, 0x407A2B);
MakeUnkn(0x407A2C, 1);
MakeNameEx(0x407A2C, "AnsiCompareStr", 0x20);
MakeComm(0x407A2C, "'function AnsiCompareStr(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x407A2C);
MakeFunction(0x407A2C, 0x407A64);
MakeUnkn(0x407A64, 1);
MakeNameEx(0x407A64, "AnsiCompareText", 0x20);
MakeComm(0x407A64, "'function AnsiCompareText(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x407A64);
MakeFunction(0x407A64, 0x407A9C);
MakeUnkn(0x407A9C, 1);
MakeNameEx(0x407A9C, "AnsiSameText", 0x20);
MakeComm(0x407A9C, "'function AnsiSameText(const S1:AnsiString; const S2:AnsiString):Boolean;'");
MakeCode(0x407A9C);
MakeFunction(0x407A9C, 0x407AB3);
MakeUnkn(0x407AB4, 1);
MakeNameEx(0x407AB4, "AnsiStrLIComp", 0x20);
MakeComm(0x407AB4, "'function AnsiStrLIComp(S1:PChar; S2:PChar; MaxLen:Cardinal):Integer;'");
MakeCode(0x407AB4);
MakeFunction(0x407AB4, 0x407AD4);
MakeUnkn(0x407AD4, 1);
MakeNameEx(0x407AD4, "Trim", 0x20);
MakeComm(0x407AD4, "'function Trim(const S:AnsiString):AnsiString;'");
MakeCode(0x407AD4);
MakeCode(0x407AEC);
MakeCode(0x407AED);
MakeCode(0x407AF8);
MakeCode(0x407B05);
MakeCode(0x407B06);
MakeCode(0x407B1C);
MakeFunction(0x407AD4, 0x407B21);
MakeUnkn(0x407B24, 1);
MakeNameEx(0x407B24, "IsValidIdent", 0x20);
MakeComm(0x407B24, "'function IsValidIdent(const Ident:AnsiString):Boolean;'");
MakeCode(0x407B24);
MakeCode(0x407B48);
MakeCode(0x407B5A);
MakeCode(0x407B7B);
MakeCode(0x407B7F);
MakeCode(0x407B81);
MakeFunction(0x407B24, 0x407B87);
MakeUnkn(0x407B88, 1);
MakeNameEx(0x407B88, "CvtInt", 0x20);
MakeComm(0x407B88, "'procedure CvtInt;'");
MakeCode(0x407B88);
MakeCode(0x407B9E);
MakeCode(0x407BA3);
MakeCode(0x407BA5);
MakeCode(0x407BB5);
MakeCode(0x407BCB);
MakeCode(0x407BCE);
MakeFunction(0x407B88, 0x407BD4);
MakeUnkn(0x407BD4, 1);
MakeNameEx(0x407BD4, "IntToStr", 0x20);
MakeComm(0x407BD4, "'function IntToStr(Value:Integer):AnsiString;'");
MakeCode(0x407BD4);
MakeFunction(0x407BD4, 0x407BF1);
MakeUnkn(0x407BF4, 1);
MakeNameEx(0x407BF4, "CvtInt64", 0x20);
MakeComm(0x407BF4, "'procedure CvtInt64;'");
MakeCode(0x407BF4);
MakeFunction(0x407BF4, 0x407C28);
MakeUnkn(0x407CC0, 1);
MakeNameEx(0x407CC0, "IntToStr_0", 0x20);
MakeComm(0x407CC0, "'function IntToStr(Value:Int64):AnsiString;'");
MakeCode(0x407CC0);
MakeFunction(0x407CC0, 0x407CE6);
MakeUnkn(0x407CE8, 1);
MakeNameEx(0x407CE8, "IntToHex", 0x20);
MakeComm(0x407CE8, "'function IntToHex(Value:Integer; Digits:Integer):AnsiString;'");
MakeCode(0x407CE8);
MakeCode(0x407CEF);
MakeFunction(0x407CE8, 0x407D0D);
MakeUnkn(0x407D10, 1);
MakeNameEx(0x407D10, "StrToInt", 0x20);
MakeComm(0x407D10, "'function StrToInt(const S:AnsiString):Integer;'");
MakeCode(0x407D10);
MakeCode(0x407D41);
MakeFunction(0x407D10, 0x407D49);
MakeUnkn(0x407D4C, 1);
MakeNameEx(0x407D4C, "StrToIntDef", 0x20);
MakeComm(0x407D4C, "'function StrToIntDef(const S:AnsiString; Default:Integer):Integer;'");
MakeCode(0x407D4C);
MakeCode(0x407D5F);
MakeFunction(0x407D4C, 0x407D62);
MakeUnkn(0x407D64, 1);
MakeNameEx(0x407D64, "TryStrToInt", 0x20);
MakeComm(0x407D64, "'function TryStrToInt(const S:AnsiString; var Value:Integer):Boolean;'");
MakeCode(0x407D64);
MakeFunction(0x407D64, 0x407D81);
MakeUnkn(0x407D84, 1);
MakeNameEx(0x407D84, "VerifyBoolStrArray", 0x20);
MakeComm(0x407D84, "'procedure VerifyBoolStrArray;'");
MakeCode(0x407D84);
MakeCode(0x407DBB);
MakeFunction(0x407D84, 0x407DF3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x407DFC, -1);
MakeDword(0x407DF8);
MakeDword(0x407DF4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x407E0C, -1);
MakeDword(0x407E08);
MakeDword(0x407E04);
MakeUnkn(0x407E14, 1);
MakeNameEx(0x407E14, "CompareWith", 0x20);
MakeComm(0x407E14, "'function CompareWith(const aArray:array[$0..-$1] of System.AnsiString; const _Dv_:$0..-$1):Boolean;'");
MakeCode(0x407E14);
MakeCode(0x407E28);
MakeCode(0x407E3F);
MakeCode(0x407E45);
MakeFunction(0x407E14, 0x407E4E);
MakeUnkn(0x407E50, 1);
MakeNameEx(0x407E50, "TryStrToBool", 0x20);
MakeComm(0x407E50, "'function TryStrToBool(const S:AnsiString; var Value:Boolean):Boolean;'");
MakeCode(0x407E50);
MakeCode(0x407E7E);
MakeCode(0x407EA6);
MakeCode(0x407EC7);
MakeFunction(0x407E50, 0x407ECE);
MakeUnkn(0x407EEC, 1);
MakeNameEx(0x407EEC, "BoolToStr", 0x20);
MakeComm(0x407EEC, "'function BoolToStr(B:Boolean; UseBoolStrs:Boolean):AnsiString;'");
MakeCode(0x407EEC);
MakeCode(0x407F10);
MakeCode(0x407F22);
MakeCode(0x407F34);
MakeFunction(0x407EEC, 0x407F37);
MakeUnkn(0x407F38, 1);
MakeNameEx(0x407F38, "FileOpen", 0x20);
MakeComm(0x407F38, "'function FileOpen(const FileName:AnsiString; Mode:LongWord):Integer;'");
MakeCode(0x407F38);
MakeCode(0x407F8B);
MakeFunction(0x407F38, 0x407F8F);
MakeUnkn(0x407F90, 1);
MakeNameEx(0x407F90, "FileCreate", 0x20);
MakeComm(0x407F90, "'function FileCreate(const FileName:AnsiString):Integer;'");
MakeCode(0x407F90);
MakeFunction(0x407F90, 0x407FB4);
MakeUnkn(0x407FB4, 1);
MakeNameEx(0x407FB4, "FileCreate_0", 0x20);
MakeComm(0x407FB4, "'function FileCreate(const FileName:AnsiString; Rights:Integer):Integer;'");
MakeCode(0x407FB4);
MakeFunction(0x407FB4, 0x407FBA);
MakeUnkn(0x407FBC, 1);
MakeNameEx(0x407FBC, "FileRead", 0x20);
MakeComm(0x407FBC, "'function FileRead(Handle:Integer; var Buffer:void ; Count:LongWord):Integer;'");
MakeCode(0x407FBC);
MakeCode(0x407FE0);
MakeFunction(0x407FBC, 0x407FE8);
MakeUnkn(0x407FE8, 1);
MakeNameEx(0x407FE8, "FileWrite", 0x20);
MakeComm(0x407FE8, "'function FileWrite(Handle:Integer; const Buffer:void ; Count:LongWord):Integer;'");
MakeCode(0x407FE8);
MakeCode(0x40800C);
MakeFunction(0x407FE8, 0x408014);
MakeUnkn(0x408014, 1);
MakeNameEx(0x408014, "FileSeek", 0x20);
MakeComm(0x408014, "'function FileSeek(Handle:Integer; Origin:Integer; const Offset:Int64):Int64;'");
MakeCode(0x408014);
MakeFunction(0x408014, 0x40804C);
MakeUnkn(0x40804C, 1);
MakeNameEx(0x40804C, "FileClose", 0x20);
MakeComm(0x40804C, "'procedure FileClose(Handle:Integer);'");
MakeCode(0x40804C);
MakeFunction(0x40804C, 0x408053);
MakeUnkn(0x408054, 1);
MakeNameEx(0x408054, "AnsiLastChar", 0x20);
MakeComm(0x408054, "'function AnsiLastChar(const S:AnsiString):PChar;'");
MakeCode(0x408054);
MakeCode(0x408067);
MakeCode(0x408068);
MakeCode(0x40807C);
MakeFunction(0x408054, 0x408081);
MakeUnkn(0x408084, 1);
MakeNameEx(0x408084, "LastDelimiter", 0x20);
MakeComm(0x408084, "'function LastDelimiter(const Delimiters:AnsiString; const S:AnsiString):Integer;'");
MakeCode(0x408084);
MakeCode(0x4080A2);
MakeCode(0x4080C5);
MakeCode(0x4080CA);
MakeFunction(0x408084, 0x4080D1);
MakeUnkn(0x4080D4, 1);
MakeNameEx(0x4080D4, "ExtractFileName", 0x20);
MakeComm(0x4080D4, "'function ExtractFileName(const FileName:AnsiString):AnsiString;'");
MakeCode(0x4080D4);
MakeFunction(0x4080D4, 0x4080FD);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x408108, -1);
MakeDword(0x408104);
MakeDword(0x408100);
MakeUnkn(0x40810C, 1);
MakeNameEx(0x40810C, "ExpandFileName", 0x20);
MakeComm(0x40810C, "'function ExpandFileName(const FileName:AnsiString):AnsiString;'");
MakeCode(0x40810C);
MakeFunction(0x40810C, 0x408146);
MakeUnkn(0x408148, 1);
MakeNameEx(0x408148, "BackfillGetDiskFreeSpaceEx", 0x20);
MakeComm(0x408148, "'function BackfillGetDiskFreeSpaceEx(Directory:PChar; var FreeAvailable:TLargeInteger; var TotalSpace:TLargeInteger; TotalFree:PLargeInteger):BOOL; stdcall;'");
MakeCode(0x408148);
MakeCode(0x408158);
MakeFunction(0x408148, 0x4081BB);
MakeUnkn(0x4081BC, 1);
MakeNameEx(0x4081BC, "StrLen", 0x20);
MakeComm(0x4081BC, "'function StrLen(const Str:PChar):Cardinal;'");
MakeCode(0x4081BC);
MakeFunction(0x4081BC, 0x4081D3);
MakeUnkn(0x4081D4, 1);
MakeNameEx(0x4081D4, "StrEnd", 0x20);
MakeComm(0x4081D4, "'function StrEnd(const Str:PChar):PChar;'");
MakeCode(0x4081D4);
MakeFunction(0x4081D4, 0x4081E7);
MakeUnkn(0x4081E8, 1);
MakeNameEx(0x4081E8, "StrMove", 0x20);
MakeComm(0x4081E8, "'function StrMove(Dest:PChar; const Source:PChar; Count:Cardinal):PChar;'");
MakeCode(0x4081E8);
MakeFunction(0x4081E8, 0x4081F5);
MakeUnkn(0x4081F8, 1);
MakeNameEx(0x4081F8, "StrCopy", 0x20);
MakeComm(0x4081F8, "'function StrCopy(Dest:PChar; const Source:PChar):PChar;'");
MakeCode(0x4081F8);
MakeFunction(0x4081F8, 0x408220);
MakeUnkn(0x408220, 1);
MakeNameEx(0x408220, "StrLCopy", 0x20);
MakeComm(0x408220, "'function StrLCopy(Dest:PChar; const Source:PChar; MaxLen:Cardinal):PChar;'");
MakeCode(0x408220);
MakeCode(0x408234);
MakeFunction(0x408220, 0x408251);
MakeUnkn(0x408254, 1);
MakeNameEx(0x408254, "StrPCopy", 0x20);
MakeComm(0x408254, "'function StrPCopy(Dest:PChar; const Source:AnsiString):PChar;'");
MakeCode(0x408254);
MakeFunction(0x408254, 0x408276);
MakeUnkn(0x408278, 1);
MakeNameEx(0x408278, "StrPLCopy", 0x20);
MakeComm(0x408278, "'function StrPLCopy(Dest:PChar; const Source:AnsiString; MaxLen:Cardinal):PChar;'");
MakeCode(0x408278);
MakeFunction(0x408278, 0x408297);
MakeUnkn(0x408298, 1);
MakeNameEx(0x408298, "StrComp", 0x20);
MakeComm(0x408298, "'function StrComp(const Str1:PChar; const Str2:PChar):Integer;'");
MakeCode(0x408298);
MakeFunction(0x408298, 0x4082BA);
MakeUnkn(0x4082BC, 1);
MakeNameEx(0x4082BC, "StrIComp", 0x20);
MakeComm(0x4082BC, "'function StrIComp(const Str1:PChar; const Str2:PChar):Integer;'");
MakeCode(0x4082BC);
MakeCode(0x4082D1);
MakeCode(0x4082E2);
MakeCode(0x4082F2);
MakeCode(0x4082F6);
MakeFunction(0x4082BC, 0x4082F9);
MakeUnkn(0x4082FC, 1);
MakeNameEx(0x4082FC, "StrLIComp", 0x20);
MakeComm(0x4082FC, "'function StrLIComp(const Str1:PChar; const Str2:PChar; MaxLen:Cardinal):Integer;'");
MakeCode(0x4082FC);
MakeCode(0x408315);
MakeCode(0x408326);
MakeCode(0x408336);
MakeCode(0x40833A);
MakeFunction(0x4082FC, 0x40833E);
MakeUnkn(0x408340, 1);
MakeNameEx(0x408340, "StrScan", 0x20);
MakeComm(0x408340, "'function StrScan(const Str:PChar; Chr:Char):PChar;'");
MakeCode(0x408340);
MakeFunction(0x408340, 0x408351);
MakeUnkn(0x408354, 1);
MakeNameEx(0x408354, "StrPos", 0x20);
MakeComm(0x408354, "'function StrPos(const Str1:PChar; const Str2:PChar):PChar;'");
MakeCode(0x408354);
MakeCode(0x408387);
MakeCode(0x40839F);
MakeCode(0x4083A1);
MakeFunction(0x408354, 0x4083A5);
MakeUnkn(0x4083A8, 1);
MakeNameEx(0x4083A8, "StrAlloc", 0x20);
MakeComm(0x4083A8, "'function StrAlloc(Size:Cardinal):PChar;'");
MakeCode(0x4083A8);
MakeFunction(0x4083A8, 0x4083BC);
MakeUnkn(0x4083BC, 1);
MakeNameEx(0x4083BC, "StrBufSize", 0x20);
MakeComm(0x4083BC, "'function StrBufSize(const Str:PChar):Cardinal;'");
MakeCode(0x4083BC);
MakeFunction(0x4083BC, 0x4083C5);
MakeUnkn(0x4083C8, 1);
MakeNameEx(0x4083C8, "StrNew", 0x20);
MakeComm(0x4083C8, "'function StrNew(const Str:PChar):PChar;'");
MakeCode(0x4083C8);
MakeCode(0x4083D5);
MakeFunction(0x4083C8, 0x4083F2);
MakeUnkn(0x4083F4, 1);
MakeNameEx(0x4083F4, "StrDispose", 0x20);
MakeComm(0x4083F4, "'procedure StrDispose(Str:PChar);'");
MakeCode(0x4083F4);
MakeFunction(0x4083F4, 0x408403);
MakeUnkn(0x408404, 1);
MakeNameEx(0x408404, "FormatError", 0x20);
MakeComm(0x408404, "'procedure FormatError(ErrorCode:Integer; Format:PChar; FmtLen:Cardinal);'");
MakeCode(0x408404);
MakeCode(0x40841A);
MakeCode(0x408429);
MakeFunction(0x408404, 0x40845C);
MakeUnkn(0x40845C, 1);
MakeNameEx(0x40845C, "FormatVarToStr", 0x20);
MakeComm(0x40845C, "'procedure FormatVarToStr(var S:AnsiString; const V:TVarData);'");
MakeCode(0x40845C);
MakeCode(0x408474);
MakeFunction(0x40845C, 0x40847D);
MakeUnkn(0x408480, 1);
MakeNameEx(0x408480, "FormatClearStr", 0x20);
MakeComm(0x408480, "'procedure FormatClearStr(var S:AnsiString);'");
MakeCode(0x408480);
MakeFunction(0x408480, 0x40848C);
MakeUnkn(0x40848C, 1);
MakeNameEx(0x40848C, "FormatBuf", 0x20);
MakeComm(0x40848C, "'function FormatBuf(var Buffer:void ; BufLen:Cardinal; const Format:void ; FmtLen:Cardinal; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1):Cardinal;'");
MakeCode(0x40848C);
MakeCode(0x4084B5);
MakeCode(0x4084B9);
MakeCode(0x4084C2);
MakeCode(0x4084C6);
MakeCode(0x4084D0);
MakeCode(0x4084DF);
MakeCode(0x4084EB);
MakeCode(0x4084FE);
MakeCode(0x408514);
MakeCode(0x40852B);
MakeCode(0x408539);
MakeCode(0x40853B);
MakeCode(0x408545);
MakeCode(0x408553);
MakeCode(0x408565);
MakeCode(0x40856E);
MakeCode(0x408574);
MakeCode(0x408590);
MakeCode(0x408596);
MakeCode(0x4085B0);
MakeFunction(0x40848C, 0x4085B6);
MakeUnkn(0x408804, 1);
MakeNameEx(0x408804, "StrFmt", 0x20);
MakeComm(0x408804, "'function StrFmt(Buffer:PChar; Format:PChar; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1):PChar;'");
MakeCode(0x408804);
MakeCode(0x40883B);
MakeCode(0x40883D);
MakeFunction(0x408804, 0x408844);
MakeUnkn(0x408844, 1);
MakeNameEx(0x408844, "StrLFmt", 0x20);
MakeComm(0x408844, "'function StrLFmt(Buffer:PChar; MaxBufLen:Cardinal; Format:PChar; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1):PChar;'");
MakeCode(0x408844);
MakeCode(0x40887B);
MakeCode(0x40887D);
MakeFunction(0x408844, 0x408884);
MakeUnkn(0x408884, 1);
MakeNameEx(0x408884, "Format", 0x20);
MakeComm(0x408884, "'function Format(const Format:AnsiString; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1):AnsiString;'");
MakeCode(0x408884);
MakeFunction(0x408884, 0x408897);
MakeUnkn(0x408898, 1);
MakeNameEx(0x408898, "FmtStr", 0x20);
MakeComm(0x408898, "'procedure FmtStr(var Result:AnsiString; const Format:AnsiString; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1);'");
MakeCode(0x408898);
MakeCode(0x4088E9);
MakeCode(0x4088F5);
MakeCode(0x4088FE);
MakeCode(0x40892E);
MakeCode(0x40893F);
MakeCode(0x40894D);
MakeFunction(0x408898, 0x408955);
MakeUnkn(0x408958, 1);
MakeNameEx(0x408958, "PutExponent", 0x20);
MakeComm(0x408958, "'procedure PutExponent;'");
MakeCode(0x408958);
MakeCode(0x408964);
MakeCode(0x40896E);
MakeCode(0x408974);
MakeCode(0x408975);
MakeCode(0x408979);
MakeCode(0x408990);
MakeFunction(0x408958, 0x40899B);
MakeUnkn(0x40899C, 1);
MakeNameEx(0x40899C, "FloatToText", 0x20);
MakeComm(0x40899C, "'function FloatToText(BufferArg:PChar; const Value:void ; ValueType:TFloatValue; Format:TFloatFormat; Precision:Integer; Digits:Integer):Integer;'");
MakeCode(0x40899C);
MakeCode(0x4089EE);
MakeCode(0x4089F8);
MakeCode(0x408A0A);
MakeCode(0x408A3E);
MakeCode(0x408A58);
MakeCode(0x408A5A);
MakeCode(0x408A6B);
MakeCode(0x408A92);
MakeFunction(0x40899C, 0x408A9B);
MakeUnkn(0x408C70, 1);
MakeNameEx(0x408C70, "FloatToDecimal", 0x20);
MakeComm(0x408C70, "'procedure FloatToDecimal(var Result:TFloatRec; const Value:void ; ValueType:TFloatValue; Precision:Integer; Decimals:Integer);'");
MakeCode(0x408C70);
MakeCode(0x408C93);
MakeCode(0x408C9D);
MakeCode(0x408CC7);
MakeCode(0x408CC8);
MakeCode(0x408CCA);
MakeCode(0x408CD3);
MakeCode(0x408D1E);
MakeCode(0x408D2A);
MakeCode(0x408D51);
MakeCode(0x408D59);
MakeCode(0x408D65);
MakeCode(0x408D7A);
MakeCode(0x408D85);
MakeCode(0x408D8A);
MakeCode(0x408D99);
MakeCode(0x408D9D);
MakeCode(0x408DA0);
MakeCode(0x408DAB);
MakeCode(0x408DBF);
MakeCode(0x408E93);
MakeFunction(0x408C70, 0x408E9C);
MakeUnkn(0x408E9C, 1);
MakeNameEx(0x408E9C, "TextToFloat", 0x20);
MakeComm(0x408E9C, "'function TextToFloat(Buffer:PChar; var Value:void ; ValueType:TFloatValue):Boolean;'");
MakeCode(0x408E9C);
MakeCode(0x408EDA);
MakeCode(0x408EDB);
MakeCode(0x408EF3);
MakeCode(0x408F09);
MakeCode(0x408F1D);
MakeCode(0x408F2E);
MakeCode(0x408F37);
MakeCode(0x408F39);
MakeCode(0x408F46);
MakeCode(0x408F48);
MakeCode(0x408F4A);
MakeCode(0x408F53);
MakeCode(0x408F5C);
MakeCode(0x408F5E);
MakeCode(0x408F62);
MakeCode(0x408F78);
MakeCode(0x408F7A);
MakeCode(0x408F8A);
MakeCode(0x408F8B);
MakeCode(0x408FA1);
MakeCode(0x408FA8);
MakeCode(0x408FA9);
MakeFunction(0x408E9C, 0x408FB0);
MakeUnkn(0x408FB0, 1);
MakeNameEx(0x408FB0, "FloatToStr", 0x20);
MakeComm(0x408FB0, "'function FloatToStr(Value:Extended):AnsiString;'");
MakeCode(0x408FB0);
MakeFunction(0x408FB0, 0x408FDF);
MakeUnkn(0x409010, 1);
MakeNameEx(0x409010, "TryStrToFloat", 0x20);
MakeComm(0x409010, "'function TryStrToFloat(const S:AnsiString; const FormatSettings:TFormatSettings; var Value:Extended):Boolean;'");
MakeUnkn(0x4090E4, 1);
MakeNameEx(0x4090E4, "TryEncodeTime", 0x20);
MakeComm(0x4090E4, "'function TryEncodeTime(Hour:Word; Min:Word; Sec:Word; MSec:Word; var Time:TDateTime):Boolean;'");
MakeUnkn(0x4091EC, 1);
MakeNameEx(0x4091EC, "TryEncodeDate", 0x20);
MakeComm(0x4091EC, "'function TryEncodeDate(Year:Word; Month:Word; Day:Word; var Date:TDateTime):Boolean;'");
MakeUnkn(0x409448, 1);
MakeNameEx(0x409448, "CurrentYear", 0x20);
MakeComm(0x409448, "'function CurrentYear:Word;'");
MakeUnkn(0x409FD4, 1);
MakeNameEx(0x409FD4, "DateTimeToString", 0x20);
MakeComm(0x409FD4, "'procedure DateTimeToString(var Result:AnsiString; const Format:AnsiString; DateTime:TDateTime);'");
MakeUnkn(0x40A030, 1);
MakeNameEx(0x40A030, "DateTimeToStr", 0x20);
MakeComm(0x40A030, "'function DateTimeToStr(const DateTime:TDateTime):AnsiString;'");
MakeCode(0x40A030);
MakeFunction(0x40A030, 0x40A044);
MakeUnkn(0x40A044, 1);
MakeNameEx(0x40A044, "ScanBlanks", 0x20);
MakeComm(0x40A044, "'procedure ScanBlanks(const S:AnsiString; var Pos:Integer);'");
MakeCode(0x40A044);
MakeCode(0x40A04F);
MakeCode(0x40A050);
MakeCode(0x40A062);
MakeFunction(0x40A044, 0x40A068);
MakeUnkn(0x40A068, 1);
MakeNameEx(0x40A068, "ScanNumber", 0x20);
MakeComm(0x40A068, "'function ScanNumber(const S:AnsiString; var Pos:Integer; var Number:Word; var CharCount:Byte):Boolean;'");
MakeCode(0x40A068);
MakeCode(0x40A096);
MakeCode(0x40A0AD);
MakeCode(0x40A0C9);
MakeCode(0x40A0ED);
MakeFunction(0x40A068, 0x40A0F9);
MakeUnkn(0x40A0FC, 1);
MakeNameEx(0x40A0FC, "ScanString", 0x20);
MakeComm(0x40A0FC, "'function ScanString(const S:AnsiString; var Pos:Integer; const Symbol:AnsiString):Boolean;'");
MakeCode(0x40A0FC);
MakeCode(0x40A15F);
MakeCode(0x40A16C);
MakeCode(0x40A175);
MakeCode(0x40A17A);
MakeFunction(0x40A0FC, 0x40A185);
MakeUnkn(0x40A188, 1);
MakeNameEx(0x40A188, "ScanChar", 0x20);
MakeComm(0x40A188, "'function ScanChar(const S:AnsiString; var Pos:Integer; Ch:Char):Boolean;'");
MakeCode(0x40A188);
MakeCode(0x40A1B8);
MakeFunction(0x40A188, 0x40A1BF);
MakeUnkn(0x40A1C0, 1);
MakeNameEx(0x40A1C0, "GetDateOrder", 0x20);
MakeComm(0x40A1C0, "'function GetDateOrder(const DateFormat:AnsiString):TDateOrder;'");
MakeCode(0x40A1C0);
MakeCode(0x40A1CE);
MakeCode(0x40A1E6);
MakeCode(0x40A1EA);
MakeCode(0x40A1EE);
MakeCode(0x40A1F2);
MakeCode(0x40A1F6);
MakeCode(0x40A1F7);
MakeCode(0x40A204);
MakeFunction(0x40A1C0, 0x40A20A);
MakeUnkn(0x40A20C, 1);
MakeNameEx(0x40A20C, "ScanToNumber", 0x20);
MakeComm(0x40A20C, "'procedure ScanToNumber(const S:AnsiString; var Pos:Integer);'");
MakeCode(0x40A20C);
MakeCode(0x40A214);
MakeCode(0x40A235);
MakeCode(0x40A237);
MakeCode(0x40A24E);
MakeFunction(0x40A20C, 0x40A251);
MakeUnkn(0x40A254, 1);
MakeNameEx(0x40A254, "GetEraYearOffset", 0x20);
MakeComm(0x40A254, "'function GetEraYearOffset(const Name:AnsiString):Integer;'");
MakeCode(0x40A254);
MakeCode(0x40A26F);
MakeCode(0x40A294);
MakeCode(0x40A29D);
MakeFunction(0x40A254, 0x40A2A6);
MakeUnkn(0x40A2A8, 1);
MakeNameEx(0x40A2A8, "EraToYear", 0x20);
MakeComm(0x40A2A8, "'function EraToYear(Year:Integer):Integer;'");
MakeCode(0x40A2A8);
MakeCode(0x40A2E0);
MakeCode(0x40A2F1);
MakeCode(0x40A2F7);
MakeFunction(0x40A2A8, 0x40A302);
MakeUnkn(0x40A304, 1);
MakeNameEx(0x40A304, "ScanDate", 0x20);
MakeComm(0x40A304, "'function ScanDate(const S:AnsiString; var Pos:Integer; var Date:TDateTime):Boolean;'");
MakeCode(0x40A304);
MakeCode(0x40A39F);
MakeCode(0x40A3BB);
MakeCode(0x40A440);
MakeCode(0x40A45C);
MakeCode(0x40A478);
MakeCode(0x40A492);
MakeCode(0x40A4A6);
MakeCode(0x40A4E7);
MakeCode(0x40A506);
MakeCode(0x40A516);
MakeCode(0x40A570);
MakeCode(0x40A572);
MakeCode(0x40A586);
MakeCode(0x40A5EE);
MakeCode(0x40A604);
MakeCode(0x40A611);
MakeCode(0x40A61F);
MakeCode(0x40A624);
MakeFunction(0x40A304, 0x40A630);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40A638, -1);
MakeDword(0x40A634);
MakeDword(0x40A630);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40A644, -1);
MakeDword(0x40A640);
MakeDword(0x40A63C);
MakeUnkn(0x40A648, 1);
MakeNameEx(0x40A648, "ScanTime", 0x20);
MakeComm(0x40A648, "'function ScanTime(const S:AnsiString; var Pos:Integer; var Time:TDateTime):Boolean;'");
MakeCode(0x40A648);
MakeCode(0x40A680);
MakeCode(0x40A684);
MakeCode(0x40A6A9);
MakeCode(0x40A6AE);
MakeCode(0x40A6BB);
MakeCode(0x40A771);
MakeCode(0x40A79A);
MakeCode(0x40A79E);
MakeCode(0x40A7C3);
MakeCode(0x40A7C8);
MakeCode(0x40A7EB);
MakeCode(0x40A7F0);
MakeCode(0x40A81A);
MakeFunction(0x40A648, 0x40A824);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40A82C, -1);
MakeDword(0x40A828);
MakeDword(0x40A824);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40A838, -1);
MakeDword(0x40A834);
MakeDword(0x40A830);
MakeUnkn(0x40A83C, 1);
MakeNameEx(0x40A83C, "TryStrToTime", 0x20);
MakeComm(0x40A83C, "'function TryStrToTime(const S:AnsiString; var Value:TDateTime):Boolean;'");
MakeCode(0x40A83C);
MakeCode(0x40A865);
MakeCode(0x40A869);
MakeCode(0x40A86B);
MakeFunction(0x40A83C, 0x40A86F);
MakeUnkn(0x40A870, 1);
MakeNameEx(0x40A870, "TryStrToDateTime", 0x20);
MakeComm(0x40A870, "'function TryStrToDateTime(const S:AnsiString; var Value:TDateTime):Boolean;'");
MakeCode(0x40A870);
MakeCode(0x40A8BB);
MakeCode(0x40A8C8);
MakeCode(0x40A8E4);
MakeCode(0x40A8EF);
MakeFunction(0x40A870, 0x40A8F8);
MakeUnkn(0x40A8FC, 1);
MakeNameEx(0x40A8FC, "SysErrorMessage", 0x20);
MakeComm(0x40A8FC, "'function SysErrorMessage(ErrorCode:Integer):AnsiString;'");
MakeCode(0x40A8FC);
MakeCode(0x40A922);
MakeCode(0x40A923);
MakeCode(0x40A935);
MakeFunction(0x40A8FC, 0x40A947);
MakeUnkn(0x40A948, 1);
MakeNameEx(0x40A948, "GetLocaleStr", 0x20);
MakeComm(0x40A948, "'function GetLocaleStr(Locale:Integer; LocaleType:Integer; const Default:AnsiString):AnsiString;'");
MakeCode(0x40A948);
MakeCode(0x40A981);
MakeCode(0x40A98A);
MakeFunction(0x40A948, 0x40A992);
MakeUnkn(0x40A994, 1);
MakeNameEx(0x40A994, "GetLocaleChar", 0x20);
MakeComm(0x40A994, "'function GetLocaleChar(Locale:Integer; LocaleType:Integer; Default:Char):Char;'");
MakeCode(0x40A994);
MakeCode(0x40A9B5);
MakeCode(0x40A9B7);
MakeFunction(0x40A994, 0x40A9BC);
MakeUnkn(0x40A9BC, 1);
MakeNameEx(0x40A9BC, "LocalGetLocaleStr", 0x20);
MakeComm(0x40A9BC, "'function LocalGetLocaleStr(LocaleType:Integer; Index:Integer; const DefValues:array[$0..-$1] of System.Pointer; const _Dv_:$0..-$1):AnsiString;'");
MakeCode(0x40A9BC);
MakeCode(0x40A9EF);
MakeFunction(0x40A9BC, 0x40A9F7);
MakeUnkn(0x40A9F8, 1);
MakeNameEx(0x40A9F8, "GetMonthDayNames", 0x20);
MakeComm(0x40A9F8, "'procedure GetMonthDayNames;'");
MakeCode(0x40A9F8);
MakeCode(0x40AA2B);
MakeCode(0x40AA8C);
MakeCode(0x40AAF0);
MakeCode(0x40AAFD);
MakeCode(0x40AB0B);
MakeCode(0x40AB10);
MakeFunction(0x40A9F8, 0x40AB19);
MakeUnkn(0x40AB1C, 1);
MakeNameEx(0x40AB1C, "EnumEraNames", 0x20);
MakeComm(0x40AB1C, "'function EnumEraNames(Names:PChar):Integer; stdcall;'");
MakeCode(0x40AB1C);
MakeCode(0x40AB2A);
MakeCode(0x40AB30);
MakeCode(0x40AB4E);
MakeFunction(0x40AB1C, 0x40AB56);
MakeUnkn(0x40AB58, 1);
MakeNameEx(0x40AB58, "EnumEraYearOffsets", 0x20);
MakeComm(0x40AB58, "'function EnumEraYearOffsets(YearOffsets:PChar):Integer; stdcall;'");
MakeCode(0x40AB58);
MakeCode(0x40AB76);
MakeCode(0x40AB7C);
MakeCode(0x40ABA7);
MakeCode(0x40ABB4);
MakeCode(0x40ABBD);
MakeCode(0x40ABC2);
MakeFunction(0x40AB58, 0x40ABCD);
MakeUnkn(0x40ABD0, 1);
MakeNameEx(0x40ABD0, "GetEraNamesAndYearOffsets", 0x20);
MakeComm(0x40ABD0, "'procedure GetEraNamesAndYearOffsets;'");
MakeCode(0x40ABD0);
MakeCode(0x40AC32);
MakeCode(0x40AC51);
MakeCode(0x40AC5E);
MakeCode(0x40AC67);
MakeCode(0x40AC6C);
MakeFunction(0x40ABD0, 0x40AC72);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40AC7C, -1);
MakeDword(0x40AC78);
MakeDword(0x40AC74);
MakeUnkn(0x40AC80, 1);
MakeNameEx(0x40AC80, "TranslateDateFormat", 0x20);
MakeComm(0x40AC80, "'function TranslateDateFormat(const FormatStr:AnsiString):AnsiString;'");
MakeCode(0x40AC80);
MakeCode(0x40ACF2);
MakeCode(0x40ACF4);
MakeCode(0x40ACFA);
MakeCode(0x40AD1C);
MakeCode(0x40AD1D);
MakeCode(0x40AD2D);
MakeCode(0x40AD3B);
MakeCode(0x40AD7B);
MakeCode(0x40ADA1);
MakeCode(0x40ADC9);
MakeCode(0x40ADEF);
MakeCode(0x40ADFB);
MakeCode(0x40AE09);
MakeCode(0x40AE1F);
MakeCode(0x40AE20);
MakeCode(0x40AE2F);
MakeCode(0x40AE3C);
MakeCode(0x40AE4A);
MakeCode(0x40AE4F);
MakeFunction(0x40AC80, 0x40AE58);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40AE60, -1);
MakeDword(0x40AE5C);
MakeDword(0x40AE58);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40AE70, -1);
MakeDword(0x40AE6C);
MakeDword(0x40AE68);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40AE84, -1);
MakeDword(0x40AE80);
MakeDword(0x40AE7C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40AE98, -1);
MakeDword(0x40AE94);
MakeDword(0x40AE90);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40AEA4, -1);
MakeDword(0x40AEA0);
MakeDword(0x40AE9C);
MakeUnkn(0x40AEA8, 1);
MakeNameEx(0x40AEA8, "ConvertAddr", 0x20);
MakeComm(0x40AEA8, "'function ConvertAddr(Address:Pointer):Pointer;'");
MakeCode(0x40AEA8);
MakeFunction(0x40AEA8, 0x40AEB2);
MakeUnkn(0x40AEB4, 1);
MakeNameEx(0x40AEB4, "ExceptionErrorMessage", 0x20);
MakeComm(0x40AEB4, "'function ExceptionErrorMessage(ExceptObject:TObject; ExceptAddr:Pointer; Buffer:PChar; Size:Integer):Integer;'");
MakeCode(0x40AEB4);
MakeCode(0x40AEFE);
MakeCode(0x40AF21);
MakeCode(0x40AF2A);
MakeCode(0x40AF86);
MakeFunction(0x40AEB4, 0x40B033);
MakeUnkn(0x40B03C, 1);
MakeNameEx(0x40B03C, "ShowException", 0x20);
MakeComm(0x40B03C, "'procedure ShowException(ExceptObject:TObject; ExceptAddr:Pointer);'");
MakeCode(0x40B03C);
MakeCode(0x40B0B8);
MakeCode(0x40B0EE);
MakeFunction(0x40B03C, 0x40B0F5);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40B100, -1);
MakeDword(0x40B0FC);
MakeDword(0x40B0F8);
MakeUnkn(0x40B104, 1);
MakeNameEx(0x40B104, "Exception.Create", 0x20);
MakeComm(0x40B104, "'constructor Exception.Create(const Msg:AnsiString);'");
MakeCode(0x40B104);
MakeCode(0x40B113);
MakeCode(0x40B138);
MakeFunction(0x40B104, 0x40B13E);
MakeUnkn(0x40B140, 1);
MakeNameEx(0x40B140, "Exception.CreateFmt", 0x20);
MakeComm(0x40B140, "'constructor Exception.CreateFmt(const Msg:AnsiString; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1);'");
MakeCode(0x40B140);
MakeCode(0x40B154);
MakeCode(0x40B184);
MakeCode(0x40B191);
MakeCode(0x40B19A);
MakeCode(0x40B19F);
MakeCode(0x40B1B6);
MakeFunction(0x40B140, 0x40B1C0);
MakeUnkn(0x40B1C0, 1);
MakeNameEx(0x40B1C0, "Exception.CreateRes", 0x20);
MakeComm(0x40B1C0, "'constructor Exception.CreateRes(ResStringRec:PResStringRec);'");
MakeCode(0x40B1C0);
MakeCode(0x40B1CF);
MakeCode(0x40B1F4);
MakeFunction(0x40B1C0, 0x40B1FA);
MakeUnkn(0x40B1FC, 1);
MakeNameEx(0x40B1FC, "Exception.CreateResFmt", 0x20);
MakeComm(0x40B1FC, "'constructor Exception.CreateResFmt(Ident:Integer; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1);'");
MakeCode(0x40B1FC);
MakeCode(0x40B212);
MakeCode(0x40B24D);
MakeCode(0x40B25A);
MakeCode(0x40B268);
MakeCode(0x40B26D);
MakeCode(0x40B284);
MakeFunction(0x40B1FC, 0x40B28F);
MakeUnkn(0x40B290, 1);
MakeNameEx(0x40B290, "EHeapException.FreeInstance", 0x20);
MakeComm(0x40B290, "'procedure EHeapException.FreeInstance;'");
MakeCode(0x40B290);
MakeFunction(0x40B290, 0x40B29C);
MakeUnkn(0x40B29C, 1);
MakeNameEx(0x40B29C, "RTTI_40B29C_Record_TErrorRec", 0);
MakeDword(0x40B29C);
MakeUnkn(0x40B2A0, 1);
MakeNameEx(0x40B2A0, "", 0);
MakeByte(0x40B2A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40B2A1, 0x40B2AB);
MakeDword(0x40B2AB);
MakeDword(0x40B2AF);
MakeDword(0x40B2B3);
MakeDword(0x40B2B7);
MakeUnkn(0x40B2BC, 1);
MakeNameEx(0x40B2BC, "CreateInOutError", 0x20);
MakeComm(0x40B2BC, "'function CreateInOutError:EInOutError;'");
MakeCode(0x40B2BC);
MakeCode(0x40B2CC);
MakeCode(0x40B2CD);
MakeCode(0x40B2DB);
MakeCode(0x40B2F5);
MakeCode(0x40B312);
MakeFunction(0x40B2BC, 0x40B31A);
MakeUnkn(0x40B31C, 1);
MakeNameEx(0x40B31C, "RTTI_40B31C_Record_TExceptRec", 0);
MakeDword(0x40B31C);
MakeUnkn(0x40B320, 1);
MakeNameEx(0x40B320, "", 0);
MakeByte(0x40B320);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40B321, 0x40B32C);
MakeDword(0x40B32C);
MakeDword(0x40B330);
MakeDword(0x40B334);
MakeDword(0x40B338);
MakeUnkn(0x40B33C, 1);
MakeNameEx(0x40B33C, "ErrorHandler", 0x20);
MakeComm(0x40B33C, "'procedure ErrorHandler(ErrorCode:Byte; ErrorAddr:Pointer);'");
MakeCode(0x40B33C);
MakeCode(0x40B351);
MakeCode(0x40B359);
MakeCode(0x40B361);
MakeCode(0x40B37D);
MakeCode(0x40B384);
MakeFunction(0x40B33C, 0x40B38E);
MakeUnkn(0x40B390, 1);
MakeNameEx(0x40B390, "CreateAssertException", 0x20);
MakeComm(0x40B390, "'function CreateAssertException(const Message:AnsiString; const Filename:AnsiString; LineNumber:Integer):Exception;'");
MakeCode(0x40B390);
MakeCode(0x40B3C5);
MakeCode(0x40B3D2);
MakeCode(0x40B40E);
MakeCode(0x40B41B);
MakeCode(0x40B42C);
MakeCode(0x40B431);
MakeFunction(0x40B390, 0x40B43C);
MakeUnkn(0x40B43C, 1);
MakeNameEx(0x40B43C, "RaiseAssertException", 0x20);
MakeComm(0x40B43C, "'procedure RaiseAssertException(const E:Exception; const ErrorAddr:Pointer; const ErrorStack:Pointer);'");
MakeCode(0x40B43C);
MakeFunction(0x40B43C, 0x40B44A);
MakeUnkn(0x40B44C, 1);
MakeNameEx(0x40B44C, "AssertErrorHandler", 0x20);
MakeComm(0x40B44C, "'procedure AssertErrorHandler(const Message:AnsiString; const Filename:AnsiString; LineNumber:Integer; ErrorAddr:Pointer);'");
MakeCode(0x40B44C);
MakeFunction(0x40B44C, 0x40B466);
MakeUnkn(0x40B468, 1);
MakeNameEx(0x40B468, "AbstractErrorHandler", 0x20);
MakeComm(0x40B468, "'procedure AbstractErrorHandler;'");
MakeCode(0x40B468);
MakeFunction(0x40B468, 0x40B480);
MakeUnkn(0x40B480, 1);
MakeNameEx(0x40B480, "MapException", 0x20);
MakeComm(0x40B480, "'function MapException(P:PExceptionRecord):TRuntimeError;'");
MakeCode(0x40B480);
MakeCode(0x40B4A7);
MakeCode(0x40B4B5);
MakeCode(0x40B4CD);
MakeCode(0x40B4DB);
MakeCode(0x40B4DE);
MakeCode(0x40B4E1);
MakeCode(0x40B4E4);
MakeCode(0x40B4E7);
MakeCode(0x40B4EA);
MakeCode(0x40B4ED);
MakeCode(0x40B4F0);
MakeCode(0x40B4F3);
MakeCode(0x40B4F6);
MakeCode(0x40B4F9);
MakeCode(0x40B4FC);
MakeFunction(0x40B480, 0x40B4FF);
MakeUnkn(0x40B500, 1);
MakeNameEx(0x40B500, "GetExceptionClass", 0x20);
MakeComm(0x40B500, "'function GetExceptionClass(P:PExceptionRecord):ExceptClass;'");
MakeCode(0x40B500);
MakeFunction(0x40B500, 0x40B518);
MakeUnkn(0x40B518, 1);
MakeNameEx(0x40B518, "CreateAVObject", 0x20);
MakeComm(0x40B518, "'function CreateAVObject:Exception;'");
MakeCode(0x40B518);
MakeCode(0x40B569);
MakeCode(0x40B576);
MakeCode(0x40B648);
MakeCode(0x40B6A2);
MakeCode(0x40B6AF);
MakeCode(0x40B6D3);
MakeCode(0x40B6D8);
MakeFunction(0x40B518, 0x40B6E2);
MakeUnkn(0x40B6E4, 1);
MakeNameEx(0x40B6E4, "GetExceptionObject", 0x20);
MakeComm(0x40B6E4, "'function GetExceptionObject(P:PExceptionRecord):Exception;'");
MakeCode(0x40B6E4);
MakeCode(0x40B720);
MakeCode(0x40B737);
MakeCode(0x40B742);
MakeCode(0x40B772);
MakeCode(0x40B789);
MakeCode(0x40B796);
MakeCode(0x40B79F);
MakeCode(0x40B7A4);
MakeFunction(0x40B6E4, 0x40B7AD);
MakeUnkn(0x40B7B0, 1);
MakeNameEx(0x40B7B0, "ExceptHandler", 0x20);
MakeComm(0x40B7B0, "'procedure ExceptHandler(ExceptObject:TObject; ExceptAddr:Pointer);'");
MakeCode(0x40B7B0);
MakeFunction(0x40B7B0, 0x40B7C0);
MakeUnkn(0x40B7C0, 1);
MakeNameEx(0x40B7C0, "InitExceptions", 0x20);
MakeComm(0x40B7C0, "'procedure InitExceptions;'");
MakeCode(0x40B7C0);
MakeFunction(0x40B7C0, 0x40B842);
MakeUnkn(0x40B844, 1);
MakeNameEx(0x40B844, "DoneExceptions", 0x20);
MakeComm(0x40B844, "'procedure DoneExceptions;'");
MakeCode(0x40B844);
MakeCode(0x40B867);
MakeCode(0x40B88A);
MakeFunction(0x40B844, 0x40B8C1);
MakeUnkn(0x40B8C4, 1);
MakeNameEx(0x40B8C4, "InitPlatformId", 0x20);
MakeComm(0x40B8C4, "'procedure InitPlatformId;'");
MakeCode(0x40B8C4);
MakeCode(0x40B90F);
MakeCode(0x40B918);
MakeCode(0x40B92B);
MakeFunction(0x40B8C4, 0x40B932);
MakeUnkn(0x40B934, 1);
MakeNameEx(0x40B934, "CheckWin32Version", 0x20);
MakeComm(0x40B934, "'function CheckWin32Version(AMajor:Integer; AMinor:Integer):Boolean;'");
MakeCode(0x40B934);
MakeCode(0x40B94C);
MakeCode(0x40B94F);
MakeFunction(0x40B934, 0x40B952);
MakeUnkn(0x40B954, 1);
MakeNameEx(0x40B954, "GetFileVersion", 0x20);
MakeComm(0x40B954, "'function GetFileVersion(const AFileName:AnsiString):Cardinal;'");
MakeCode(0x40B954);
MakeCode(0x40B9F7);
MakeCode(0x40BA04);
MakeCode(0x40BA0D);
MakeCode(0x40BA12);
MakeCode(0x40BA14);
MakeCode(0x40BA21);
MakeCode(0x40BA2A);
MakeCode(0x40BA2F);
MakeFunction(0x40B954, 0x40BA39);
MakeUnkn(0x40BA40, 1);
MakeNameEx(0x40BA40, "ByteTypeTest", 0x20);
MakeComm(0x40BA40, "'function ByteTypeTest(P:PChar; Index:Integer):TMbcsByteType;'");
MakeCode(0x40BA40);
MakeCode(0x40BA68);
MakeCode(0x40BA6D);
MakeCode(0x40BA6E);
MakeCode(0x40BA84);
MakeCode(0x40BA95);
MakeCode(0x40BA9D);
MakeCode(0x40BAB0);
MakeFunction(0x40BA40, 0x40BAB5);
MakeUnkn(0x40BAB8, 1);
MakeNameEx(0x40BAB8, "ByteType", 0x20);
MakeComm(0x40BAB8, "'function ByteType(const S:AnsiString; Index:Integer):TMbcsByteType;'");
MakeCode(0x40BAB8);
MakeCode(0x40BAD8);
MakeFunction(0x40BAB8, 0x40BADB);
MakeUnkn(0x40BADC, 1);
MakeNameEx(0x40BADC, "StrByteType", 0x20);
MakeComm(0x40BADC, "'function StrByteType(Str:PChar; Index:Cardinal):TMbcsByteType;'");
MakeCode(0x40BADC);
MakeCode(0x40BAEE);
MakeFunction(0x40BADC, 0x40BAF1);
MakeUnkn(0x40BAF4, 1);
MakeNameEx(0x40BAF4, "ByteToCharLen", 0x20);
MakeComm(0x40BAF4, "'function ByteToCharLen(const S:AnsiString; MaxLen:Integer):Integer;'");
MakeCode(0x40BAF4);
MakeCode(0x40BB0E);
MakeFunction(0x40BAF4, 0x40BB1A);
MakeUnkn(0x40BB1C, 1);
MakeNameEx(0x40BB1C, "ByteToCharIndex", 0x20);
MakeComm(0x40BB1C, "'function ByteToCharIndex(const S:AnsiString; Index:Integer):Integer;'");
MakeCode(0x40BB1C);
MakeCode(0x40BB4A);
MakeCode(0x40BB68);
MakeCode(0x40BB69);
MakeCode(0x40BB6E);
MakeFunction(0x40BB1C, 0x40BB74);
MakeUnkn(0x40BB74, 1);
MakeNameEx(0x40BB74, "CountChars", 0x20);
MakeComm(0x40BB74, "'procedure CountChars(const S:AnsiString; MaxChars:Integer; var CharCount:Integer; var ByteCount:Integer);'");
MakeCode(0x40BB74);
MakeCode(0x40BB9B);
MakeCode(0x40BBBB);
MakeCode(0x40BBBC);
MakeCode(0x40BBC6);
MakeCode(0x40BBEE);
MakeFunction(0x40BB74, 0x40BC01);
MakeUnkn(0x40BC04, 1);
MakeNameEx(0x40BC04, "CharToByteIndex", 0x20);
MakeComm(0x40BC04, "'function CharToByteIndex(const S:AnsiString; Index:Integer):Integer;'");
MakeCode(0x40BC04);
MakeCode(0x40BC51);
MakeCode(0x40BC58);
MakeCode(0x40BC5D);
MakeCode(0x40BC60);
MakeFunction(0x40BC04, 0x40BC68);
MakeUnkn(0x40BC68, 1);
MakeNameEx(0x40BC68, "CharToByteLen", 0x20);
MakeComm(0x40BC68, "'function CharToByteLen(const S:AnsiString; MaxLen:Integer):Integer;'");
MakeCode(0x40BC68);
MakeCode(0x40BC8E);
MakeCode(0x40BCBD);
MakeCode(0x40BCC0);
MakeFunction(0x40BC68, 0x40BCC8);
MakeUnkn(0x40BCC8, 1);
MakeNameEx(0x40BCC8, "StrCharLength", 0x20);
MakeComm(0x40BCC8, "'function StrCharLength(const Str:PChar):Integer;'");
MakeCode(0x40BCC8);
MakeCode(0x40BCDE);
MakeFunction(0x40BCC8, 0x40BCE5);
MakeUnkn(0x40BCE8, 1);
MakeNameEx(0x40BCE8, "StrNextChar", 0x20);
MakeComm(0x40BCE8, "'function StrNextChar(const Str:PChar):PChar;'");
MakeCode(0x40BCE8);
MakeFunction(0x40BCE8, 0x40BCEF);
MakeUnkn(0x40BCF0, 1);
MakeNameEx(0x40BCF0, "CharLength", 0x20);
MakeComm(0x40BCF0, "'function CharLength(const S:AnsiString; Index:Integer):Integer;'");
MakeCode(0x40BCF0);
MakeCode(0x40BD26);
MakeFunction(0x40BCF0, 0x40BD29);
MakeUnkn(0x40BD2C, 1);
MakeNameEx(0x40BD2C, "NextCharIndex", 0x20);
MakeComm(0x40BD2C, "'function NextCharIndex(const S:AnsiString; Index:Integer):Integer;'");
MakeCode(0x40BD2C);
MakeCode(0x40BD62);
MakeFunction(0x40BD2C, 0x40BD65);
MakeUnkn(0x40BD68, 1);
MakeNameEx(0x40BD68, "IsPathDelimiter", 0x20);
MakeComm(0x40BD68, "'function IsPathDelimiter(const S:AnsiString; Index:Integer):Boolean;'");
MakeCode(0x40BD68);
MakeCode(0x40BD91);
MakeCode(0x40BD96);
MakeFunction(0x40BD68, 0x40BD9B);
MakeUnkn(0x40BD9C, 1);
MakeNameEx(0x40BD9C, "IncludeTrailingPathDelimiter", 0x20);
MakeComm(0x40BD9C, "'function IncludeTrailingPathDelimiter(const S:AnsiString):AnsiString;'");
MakeCode(0x40BD9C);
MakeCode(0x40BDCB);
MakeFunction(0x40BD9C, 0x40BDCE);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40BDD8, -1);
MakeDword(0x40BDD4);
MakeDword(0x40BDD0);
MakeUnkn(0x40BDDC, 1);
MakeNameEx(0x40BDDC, "AnsiPos", 0x20);
MakeComm(0x40BDDC, "'function AnsiPos(const Substr:AnsiString; const S:AnsiString):Integer;'");
MakeCode(0x40BDDC);
MakeCode(0x40BE0A);
MakeFunction(0x40BDDC, 0x40BE11);
MakeUnkn(0x40BE14, 1);
MakeNameEx(0x40BE14, "AnsiStrPos", 0x20);
MakeComm(0x40BE14, "'function AnsiStrPos(Str:PChar; SubStr:PChar):PChar;'");
MakeCode(0x40BE14);
MakeCode(0x40BE58);
MakeCode(0x40BE83);
MakeCode(0x40BE8B);
MakeCode(0x40BE97);
MakeCode(0x40BEA8);
MakeCode(0x40BEAA);
MakeFunction(0x40BE14, 0x40BEB3);
MakeUnkn(0x40BEB4, 1);
MakeNameEx(0x40BEB4, "AnsiStrRScan", 0x20);
MakeComm(0x40BEB4, "'function AnsiStrRScan(Str:PChar; Chr:Char):PChar;'");
MakeCode(0x40BEB4);
MakeCode(0x40BEC9);
MakeCode(0x40BED7);
MakeFunction(0x40BEB4, 0x40BEDC);
MakeUnkn(0x40BEDC, 1);
MakeNameEx(0x40BEDC, "AnsiStrScan", 0x20);
MakeComm(0x40BEDC, "'function AnsiStrScan(Str:PChar; Chr:Char):PChar;'");
MakeCode(0x40BEDC);
MakeCode(0x40BEF2);
MakeCode(0x40BF05);
MakeCode(0x40BF06);
MakeCode(0x40BF16);
MakeFunction(0x40BEDC, 0x40BF1C);
MakeUnkn(0x40BF1C, 1);
MakeNameEx(0x40BF1C, "LCIDToCodePage_0", 0x20);
MakeComm(0x40BF1C, "'function LCIDToCodePage(ALcid:LCID):Integer;'");
MakeCode(0x40BF1C);
MakeCode(0x40BF6A);
MakeCode(0x40BF77);
MakeCode(0x40BF80);
MakeCode(0x40BF85);
MakeFunction(0x40BF1C, 0x40BF8E);
MakeUnkn(0x40BF90, 1);
MakeNameEx(0x40BF90, "InitLeadBytes", 0x20);
MakeComm(0x40BF90, "'procedure InitLeadBytes;'");
MakeCode(0x40BF90);
MakeCode(0x40BFB2);
MakeCode(0x40BFC2);
MakeCode(0x40BFD8);
MakeCode(0x40BFDB);
MakeCode(0x40BFEA);
MakeFunction(0x40BF90, 0x40BFF0);
MakeUnkn(0x40BFF0, 1);
MakeNameEx(0x40BFF0, "IsWesternGroup", 0x20);
MakeComm(0x40BFF0, "'function IsWesternGroup:Boolean;'");
MakeCode(0x40BFF0);
MakeCode(0x40C001);
MakeFunction(0x40BFF0, 0x40C005);
MakeUnkn(0x40C008, 1);
MakeNameEx(0x40C008, "InitSysLocale", 0x20);
MakeComm(0x40C008, "'procedure InitSysLocale;'");
MakeCode(0x40C008);
MakeCode(0x40C040);
MakeCode(0x40C060);
MakeCode(0x40C09A);
MakeCode(0x40C0CB);
MakeCode(0x40C0D6);
MakeCode(0x40C10C);
MakeCode(0x40C125);
MakeCode(0x40C153);
MakeFunction(0x40C008, 0x40C15A);
MakeUnkn(0x40C17C, 1);
MakeNameEx(0x40C17C, "GetFormatSettings", 0x20);
MakeComm(0x40C17C, "'procedure GetFormatSettings;'");
MakeCode(0x40C17C);
MakeCode(0x40C184);
MakeCode(0x40C1B2);
MakeCode(0x40C370);
MakeCode(0x40C37D);
MakeCode(0x40C3D2);
MakeCode(0x40C3DF);
MakeCode(0x40C42C);
MakeCode(0x40C439);
MakeCode(0x40C447);
MakeCode(0x40C44C);
MakeFunction(0x40C17C, 0x40C453);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C45C, -1);
MakeDword(0x40C458);
MakeDword(0x40C454);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C468, -1);
MakeDword(0x40C464);
MakeDword(0x40C460);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C478, -1);
MakeDword(0x40C474);
MakeDword(0x40C470);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C490, -1);
MakeDword(0x40C48C);
MakeDword(0x40C488);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C49C, -1);
MakeDword(0x40C498);
MakeDword(0x40C494);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C4A8, -1);
MakeDword(0x40C4A4);
MakeDword(0x40C4A0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C4B4, -1);
MakeDword(0x40C4B0);
MakeDword(0x40C4AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C4C0, -1);
MakeDword(0x40C4BC);
MakeDword(0x40C4B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C4D0, -1);
MakeDword(0x40C4CC);
MakeDword(0x40C4C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C4E0, -1);
MakeDword(0x40C4DC);
MakeDword(0x40C4D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C4EC, -1);
MakeDword(0x40C4E8);
MakeDword(0x40C4E4);
MakeUnkn(0x40C4F4, 1);
MakeNameEx(0x40C4F4, "kernel32._101", 0x20);
MakeComm(0x40C4F4, "'kernel32.'+#5+;'");
MakeCode(0x40C4F4);
MakeFunction(0x40C4F4, 0x40C4FA);
MakeUnkn(0x40C4FC, 1);
MakeNameEx(0x40C4FC, "RaiseLastOSError", 0x20);
MakeComm(0x40C4FC, "'procedure RaiseLastOSError;'");
MakeCode(0x40C4FC);
MakeCode(0x40C558);
MakeCode(0x40C56C);
MakeCode(0x40C576);
MakeCode(0x40C583);
MakeCode(0x40C58C);
MakeCode(0x40C591);
MakeFunction(0x40C4FC, 0x40C598);
MakeUnkn(0x40C598, 1);
MakeNameEx(0x40C598, "Win32Check", 0x20);
MakeComm(0x40C598, "'function Win32Check(RetVal:BOOL):BOOL;'");
MakeCode(0x40C598);
MakeCode(0x40C5A4);
MakeFunction(0x40C598, 0x40C5A8);
MakeUnkn(0x40C5A8, 1);
MakeNameEx(0x40C5A8, "CallTerminateProcs", 0x20);
MakeComm(0x40C5A8, "'function CallTerminateProcs:Boolean;'");
MakeCode(0x40C5A8);
MakeCode(0x40C5B3);
MakeCode(0x40C5B8);
MakeCode(0x40C5C0);
MakeFunction(0x40C5A8, 0x40C5C2);
MakeUnkn(0x40C5C4, 1);
MakeNameEx(0x40C5C4, "FreeTerminateProcs", 0x20);
MakeComm(0x40C5C4, "'procedure FreeTerminateProcs;'");
MakeCode(0x40C5C4);
MakeCode(0x40C5CC);
MakeCode(0x40C5DC);
MakeFunction(0x40C5C4, 0x40C5E3);
MakeUnkn(0x40C5E4, 1);
MakeNameEx(0x40C5E4, "InitDriveSpacePtr", 0x20);
MakeComm(0x40C5E4, "'procedure InitDriveSpacePtr;'");
MakeCode(0x40C5E4);
MakeCode(0x40C605);
MakeCode(0x40C618);
MakeFunction(0x40C5E4, 0x40C61A);
MakeUnkn(0x40C640, 1);
MakeNameEx(0x40C640, "InterlockedIncrement", 0x20);
MakeComm(0x40C640, "'function InterlockedIncrement(var I:Integer):Integer;'");
MakeCode(0x40C640);
MakeFunction(0x40C640, 0x40C64C);
MakeUnkn(0x40C64C, 1);
MakeNameEx(0x40C64C, "InterlockedDecrement", 0x20);
MakeComm(0x40C64C, "'function InterlockedDecrement(var I:Integer):Integer;'");
MakeCode(0x40C64C);
MakeFunction(0x40C64C, 0x40C658);
MakeUnkn(0x40C658, 1);
MakeNameEx(0x40C658, "InterlockedExchange", 0x20);
MakeComm(0x40C658, "'function InterlockedExchange(var A:Integer; B:Integer):Integer;'");
MakeCode(0x40C658);
MakeFunction(0x40C658, 0x40C65D);
MakeUnkn(0x40C660, 1);
MakeNameEx(0x40C660, "InterlockedExchangeAdd", 0x20);
MakeComm(0x40C660, "'function InterlockedExchangeAdd(var A:Integer; B:Integer):Integer;'");
MakeCode(0x40C660);
MakeFunction(0x40C660, 0x40C666);
MakeUnkn(0x40C668, 1);
MakeNameEx(0x40C668, "TThreadLocalCounter.Destroy", 0x20);
MakeComm(0x40C668, "'destructor TThreadLocalCounter.Destroy;'");
MakeCode(0x40C668);
MakeCode(0x40C677);
MakeCode(0x40C685);
MakeCode(0x40C693);
MakeCode(0x40C6B0);
MakeFunction(0x40C668, 0x40C6B5);
MakeUnkn(0x40C6B8, 1);
MakeNameEx(0x40C6B8, "TThreadLocalCounter.HashIndex", 0x20);
MakeComm(0x40C6B8, "'function TThreadLocalCounter.HashIndex:Byte;'");
MakeCode(0x40C6B8);
MakeFunction(0x40C6B8, 0x40C6D0);
MakeUnkn(0x40C6D0, 1);
MakeNameEx(0x40C6D0, "TThreadLocalCounter.Open", 0x20);
MakeComm(0x40C6D0, "'procedure TThreadLocalCounter.Open(var Thread:PThreadInfo);'");
MakeCode(0x40C6D0);
MakeCode(0x40C6F4);
MakeCode(0x40C6F7);
MakeCode(0x40C700);
MakeCode(0x40C73C);
MakeFunction(0x40C6D0, 0x40C747);
MakeUnkn(0x40C748, 1);
MakeNameEx(0x40C748, "TThreadLocalCounter.Delete", 0x20);
MakeComm(0x40C748, "'procedure TThreadLocalCounter.Delete(var Thread:PThreadInfo);'");
MakeCode(0x40C748);
MakeFunction(0x40C748, 0x40C757);
MakeUnkn(0x40C758, 1);
MakeNameEx(0x40C758, "TThreadLocalCounter.Recycle", 0x20);
MakeComm(0x40C758, "'function TThreadLocalCounter.Recycle:PThreadInfo;'");
MakeCode(0x40C758);
MakeCode(0x40C76F);
MakeCode(0x40C78D);
MakeCode(0x40C793);
MakeFunction(0x40C758, 0x40C797);
MakeUnkn(0x40C798, 1);
MakeNameEx(0x40C798, "TMultiReadExclusiveWriteSynchronizer.Create", 0x20);
MakeComm(0x40C798, "'constructor TMultiReadExclusiveWriteSynchronizer.Create;'");
MakeCode(0x40C798);
MakeCode(0x40C7A6);
MakeCode(0x40C805);
MakeFunction(0x40C798, 0x40C80A);
MakeUnkn(0x40C80C, 1);
MakeNameEx(0x40C80C, "TMultiReadExclusiveWriteSynchronizer.Destroy", 0x20);
MakeComm(0x40C80C, "'destructor TMultiReadExclusiveWriteSynchronizer.Destroy;'");
MakeCode(0x40C80C);
MakeCode(0x40C84F);
MakeFunction(0x40C80C, 0x40C852);
MakeUnkn(0x40C854, 1);
MakeNameEx(0x40C854, "TMultiReadExclusiveWriteSynchronizer.BlockReaders", 0x20);
MakeComm(0x40C854, "'procedure TMultiReadExclusiveWriteSynchronizer.BlockReaders;'");
MakeCode(0x40C854);
MakeFunction(0x40C854, 0x40C85E);
MakeUnkn(0x40C860, 1);
MakeNameEx(0x40C860, "TMultiReadExclusiveWriteSynchronizer.UnblockReaders", 0x20);
MakeComm(0x40C860, "'procedure TMultiReadExclusiveWriteSynchronizer.UnblockReaders;'");
MakeCode(0x40C860);
MakeFunction(0x40C860, 0x40C86A);
MakeUnkn(0x40C86C, 1);
MakeNameEx(0x40C86C, "TMultiReadExclusiveWriteSynchronizer.UnblockOneWriter", 0x20);
MakeComm(0x40C86C, "'procedure TMultiReadExclusiveWriteSynchronizer.UnblockOneWriter;'");
MakeCode(0x40C86C);
MakeFunction(0x40C86C, 0x40C876);
MakeUnkn(0x40C878, 1);
MakeNameEx(0x40C878, "TMultiReadExclusiveWriteSynchronizer.WaitForReadSignal", 0x20);
MakeComm(0x40C878, "'procedure TMultiReadExclusiveWriteSynchronizer.WaitForReadSignal;'");
MakeCode(0x40C878);
MakeFunction(0x40C878, 0x40C886);
MakeUnkn(0x40C888, 1);
MakeNameEx(0x40C888, "TMultiReadExclusiveWriteSynchronizer.WaitForWriteSignal", 0x20);
MakeComm(0x40C888, "'procedure TMultiReadExclusiveWriteSynchronizer.WaitForWriteSignal;'");
MakeCode(0x40C888);
MakeFunction(0x40C888, 0x40C896);
MakeUnkn(0x40C898, 1);
MakeNameEx(0x40C898, "TMultiReadExclusiveWriteSynchronizer.BeginWrite", 0x20);
MakeComm(0x40C898, "'function TMultiReadExclusiveWriteSynchronizer.BeginWrite:Boolean;'");
MakeCode(0x40C898);
MakeCode(0x40C8D9);
MakeCode(0x40C8F1);
MakeCode(0x40C918);
MakeCode(0x40C929);
MakeFunction(0x40C898, 0x40C934);
MakeUnkn(0x40C934, 1);
MakeNameEx(0x40C934, "TMultiReadExclusiveWriteSynchronizer.EndWrite", 0x20);
MakeComm(0x40C934, "'procedure TMultiReadExclusiveWriteSynchronizer.EndWrite;'");
MakeCode(0x40C934);
MakeCode(0x40C96B);
MakeCode(0x40C97E);
MakeFunction(0x40C934, 0x40C981);
MakeUnkn(0x40C984, 1);
MakeNameEx(0x40C984, "TMultiReadExclusiveWriteSynchronizer.BeginRead", 0x20);
MakeComm(0x40C984, "'procedure TMultiReadExclusiveWriteSynchronizer.BeginRead;'");
MakeCode(0x40C984);
MakeCode(0x40C9BA);
MakeCode(0x40C9D0);
MakeCode(0x40C9DE);
MakeCode(0x40C9EA);
MakeFunction(0x40C984, 0x40C9EE);
MakeUnkn(0x40C9F0, 1);
MakeNameEx(0x40C9F0, "TMultiReadExclusiveWriteSynchronizer.EndRead", 0x20);
MakeComm(0x40C9F0, "'procedure TMultiReadExclusiveWriteSynchronizer.EndRead;'");
MakeCode(0x40C9F0);
MakeCode(0x40CA3C);
MakeCode(0x40CA55);
MakeFunction(0x40C9F0, 0x40CA58);
MakeUnkn(0x40CA58, 1);
MakeNameEx(0x40CA58, "FreeAndNil", 0x20);
MakeComm(0x40CA58, "'procedure FreeAndNil(var Obj:void );'");
MakeCode(0x40CA58);
MakeFunction(0x40CA58, 0x40CA66);
MakeUnkn(0x40CA68, 1);
MakeNameEx(0x40CA68, "Supports", 0x20);
MakeComm(0x40CA68, "'function Supports(const Instance:IInterface; const IID:TGUID; var Intf:void ):Boolean;'");
MakeCode(0x40CA68);
MakeCode(0x40CA80);
MakeCode(0x40CA84);
MakeCode(0x40CA86);
MakeFunction(0x40CA68, 0x40CA8A);
MakeUnkn(0x40CA8C, 1);
MakeNameEx(0x40CA8C, "Supports_0", 0x20);
MakeComm(0x40CA8C, "'function Supports(const Instance:TObject; const IID:TGUID; var Intf:void ):Boolean;'");
MakeCode(0x40CA8C);
MakeCode(0x40CAD6);
MakeCode(0x40CAE5);
MakeCode(0x40CAE9);
MakeCode(0x40CAEB);
MakeCode(0x40CAED);
MakeCode(0x40CAFA);
MakeCode(0x40CB03);
MakeCode(0x40CB08);
MakeFunction(0x40CA8C, 0x40CB12);
MakeUnkn(0x40CB24, 1);
MakeNameEx(0x40CB24, "SafeLoadLibrary", 0x20);
MakeComm(0x40CB24, "'function SafeLoadLibrary(const FileName:AnsiString; ErrorMode:UINT):HMODULE;'");
MakeCode(0x40CB24);
MakeCode(0x40CB65);
MakeCode(0x40CB72);
MakeCode(0x40CB78);
MakeCode(0x40CB7D);
MakeCode(0x40CB7F);
MakeCode(0x40CB8C);
MakeCode(0x40CB96);
MakeCode(0x40CB9B);
MakeFunction(0x40CB24, 0x40CBA5);
MakeUnkn(0x40CBA8, 1);
MakeNameEx(0x40CBA8, "_NF__C58", 0x20);
MakeComm(0x40CBA8, "'procedure _NF__C58;'");
MakeCode(0x40CBA8);
MakeCode(0x40CC30);
MakeCode(0x40CC38);
MakeCode(0x40CCA0);
MakeCode(0x40CCD0);
MakeCode(0x40CCE4);
MakeCode(0x40CD20);
MakeCode(0x40CD2C);
MakeCode(0x40CD68);
MakeCode(0x40CD80);
MakeCode(0x40CD98);
MakeCode(0x40CDBC);
MakeCode(0x40CDC8);
MakeCode(0x40CDD4);
MakeCode(0x40CE10);
MakeCode(0x40CE28);
MakeCode(0x40CE40);
MakeCode(0x40CE58);
MakeCode(0x40CE70);
MakeCode(0x40CE88);
MakeCode(0x40CEA0);
MakeCode(0x40CFDF);
MakeCode(0x40CFEC);
MakeCode(0x40CFED);
MakeCode(0x40CFF2);
MakeFunction(0x40CBA8, 0x40CFF6);
MakeCode(0x40CFF8);
MakeCode(0x40D03E);
MakeCode(0x40D052);
MakeCode(0x40D05F);
MakeCode(0x40D060);
MakeCode(0x40D065);
MakeFunction(0x40CFF8, 0x40D069);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40D074, -1);
MakeDword(0x40D070);
MakeDword(0x40D06C);
MakeUnkn(0x40D078, 1);
MakeNameEx(0x40D078, "oleaut32._2", 0x20);
MakeComm(0x40D078, "'oleaut32.'+#5+;'");
MakeCode(0x40D078);
MakeFunction(0x40D078, 0x40D07E);
MakeUnkn(0x40D080, 1);
MakeNameEx(0x40D080, "oleaut32._3", 0x20);
MakeComm(0x40D080, "'oleaut32.'+#5+;'");
MakeCode(0x40D080);
MakeFunction(0x40D080, 0x40D086);
MakeUnkn(0x40D088, 1);
MakeNameEx(0x40D088, "oleaut32._4", 0x20);
MakeComm(0x40D088, "'oleaut32.'+#5+;'");
MakeCode(0x40D088);
MakeFunction(0x40D088, 0x40D08E);
MakeUnkn(0x40D090, 1);
MakeNameEx(0x40D090, "oleaut32._5", 0x20);
MakeComm(0x40D090, "'oleaut32.'+#5+;'");
MakeCode(0x40D090);
MakeFunction(0x40D090, 0x40D096);
MakeCode(0x40D098);
MakeCode(0x40D0AB);
MakeCode(0x40D0C2);
MakeFunction(0x40D098, 0x40D0C6);
MakeCode(0x40D0C8);
MakeFunction(0x40D0C8, 0x40D0D4);
MakeCode(0x40D0D4);
MakeFunction(0x40D0D4, 0x40D0E0);
MakeCode(0x40D0E0);
MakeFunction(0x40D0E0, 0x40D0EC);
MakeUnkn(0x40D4DC, 1);
MakeNameEx(0x40D4DC, "oleaut32._6", 0x20);
MakeComm(0x40D4DC, "'function oleaut32.'+#5+:?;'");
MakeCode(0x40D4DC);
MakeFunction(0x40D4DC, 0x40D4E2);
MakeUnkn(0x40D4E4, 1);
MakeNameEx(0x40D4E4, "oleaut32._7", 0x20);
MakeComm(0x40D4E4, "'oleaut32.'+#5+;'");
MakeCode(0x40D4E4);
MakeFunction(0x40D4E4, 0x40D4EA);
MakeUnkn(0x40D4EC, 1);
MakeNameEx(0x40D4EC, "oleaut32._8", 0x20);
MakeComm(0x40D4EC, "'oleaut32.'+#5+;'");
MakeCode(0x40D4EC);
MakeFunction(0x40D4EC, 0x40D4F2);
MakeUnkn(0x40D4F4, 1);
MakeNameEx(0x40D4F4, "oleaut32._9", 0x20);
MakeComm(0x40D4F4, "'oleaut32.'+#5+;'");
MakeCode(0x40D4F4);
MakeFunction(0x40D4F4, 0x40D4FA);
MakeCode(0x40D4FC);
MakeCode(0x40D522);
MakeFunction(0x40D4FC, 0x40D527);
MakeCode(0x40D528);
MakeFunction(0x40D528, 0x40D720);
MakeCode(0x40D834);
MakeCode(0x40D84B);
MakeCode(0x40D858);
MakeCode(0x40D859);
MakeCode(0x40D85E);
MakeFunction(0x40D834, 0x40D862);
MakeCode(0x40D864);
MakeFunction(0x40D864, 0x40D873);
MakeUnkn(0x40D8C4, 1);
MakeNameEx(0x40D8C4, "VMT_40D8C4_TCustomVariantType", 0);
MakeDword(0x40D8C4);
MakeDword(0x40D8C8);
MakeUnkn(0x40D8A2, 1);
MakeNameEx(0x40D8A2, "TCustomVariantType_IntfTable", 0);
MakeDword(0x40D8A2);
MakeByte(0x40D8A6);
MakeArray(0x40D8A6, 16);
MakeDword(0x40D8B6);
MakeDword(0x40D896);
MakeFunction(0x40D875, -1);
MakeCode(0x40D875);
MakeDword(0x40D89A);
MakeFunction(0x40D882, -1);
MakeCode(0x40D882);
MakeDword(0x40D89E);
MakeFunction(0x40D88C, -1);
MakeCode(0x40D88C);
MakeByte(0x40D874);
MakeDword(0x40D8BA);
MakeDword(0x40D8BE);
MakeDword(0x40D8CC);
MakeDword(0x40D8D0);
MakeDword(0x40D8D4);
MakeDword(0x40D8D8);
MakeDword(0x40D8DC);
MakeDword(0x40D8E0);
MakeDword(0x40D8E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40D94C, 0x40D95F);
MakeDword(0x40D8E8);
MakeDword(0x40D8EC);
MakeDword(0x40D8F0);
MakeDword(0x40D8F4);
MakeDword(0x40D8F8);
MakeDword(0x40D8FC);
MakeDword(0x40D900);
MakeDword(0x40D904);
MakeDword(0x40D908);
MakeDword(0x40D90C);
MakeComm(0x40D910, "'+0'");
MakeDword(0x40D910);
MakeComm(0x40D914, "'+4'");
MakeDword(0x40D914);
MakeComm(0x40D918, "'+8'");
MakeDword(0x40D918);
MakeComm(0x40D91C, "'+C'");
MakeDword(0x40D91C);
MakeComm(0x40D920, "'+10'");
MakeDword(0x40D920);
MakeComm(0x40D924, "'+14'");
MakeDword(0x40D924);
MakeComm(0x40D928, "'+18'");
MakeDword(0x40D928);
MakeComm(0x40D92C, "'+1C'");
MakeDword(0x40D92C);
MakeComm(0x40D930, "'+20'");
MakeDword(0x40D930);
MakeComm(0x40D934, "'+24'");
MakeDword(0x40D934);
MakeComm(0x40D938, "'+28'");
MakeDword(0x40D938);
MakeComm(0x40D93C, "'+2C'");
MakeDword(0x40D93C);
MakeComm(0x40D940, "'+30'");
MakeDword(0x40D940);
MakeComm(0x40D944, "'+34'");
MakeDword(0x40D944);
MakeComm(0x40D948, "'+38'");
MakeDword(0x40D948);
MakeUnkn(0x40D960, 1);
MakeNameEx(0x40D960, "RTTI_40D960_Class_TCustomVariantType", 0);
MakeDword(0x40D960);
MakeUnkn(0x40D964, 1);
MakeNameEx(0x40D964, "", 0);
MakeByte(0x40D964);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40D965, 0x40D978);
MakeDword(0x40D978);
MakeDword(0x40D97C);
MakeWord(0x40D980);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40D982, 0x40D98B);
MakeWord(0x40D98B);
MakeUnkn(0x40D990, 1);
MakeNameEx(0x40D990, "VMT_40D990_EVariantInvalidOpError", 0);
MakeDword(0x40D990);
MakeDword(0x40D994);
MakeDword(0x40D998);
MakeDword(0x40D99C);
MakeDword(0x40D9A0);
MakeDword(0x40D9A4);
MakeDword(0x40D9A8);
MakeDword(0x40D9AC);
MakeDword(0x40D9B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40D9DC, 0x40D9F3);
MakeDword(0x40D9B4);
MakeDword(0x40D9B8);
MakeDword(0x40D9BC);
MakeDword(0x40D9C0);
MakeDword(0x40D9C4);
MakeDword(0x40D9C8);
MakeDword(0x40D9CC);
MakeDword(0x40D9D0);
MakeDword(0x40D9D4);
MakeDword(0x40D9D8);
MakeUnkn(0x40D9F4, 1);
MakeNameEx(0x40D9F4, "VMT_40D9F4_EVariantTypeCastError", 0);
MakeDword(0x40D9F4);
MakeDword(0x40D9F8);
MakeDword(0x40D9FC);
MakeDword(0x40DA00);
MakeDword(0x40DA04);
MakeDword(0x40DA08);
MakeDword(0x40DA0C);
MakeDword(0x40DA10);
MakeDword(0x40DA14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DA40, 0x40DA56);
MakeDword(0x40DA18);
MakeDword(0x40DA1C);
MakeDword(0x40DA20);
MakeDword(0x40DA24);
MakeDword(0x40DA28);
MakeDword(0x40DA2C);
MakeDword(0x40DA30);
MakeDword(0x40DA34);
MakeDword(0x40DA38);
MakeDword(0x40DA3C);
MakeUnkn(0x40DA58, 1);
MakeNameEx(0x40DA58, "VMT_40DA58_EVariantOverflowError", 0);
MakeDword(0x40DA58);
MakeDword(0x40DA5C);
MakeDword(0x40DA60);
MakeDword(0x40DA64);
MakeDword(0x40DA68);
MakeDword(0x40DA6C);
MakeDword(0x40DA70);
MakeDword(0x40DA74);
MakeDword(0x40DA78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DAA4, 0x40DABA);
MakeDword(0x40DA7C);
MakeDword(0x40DA80);
MakeDword(0x40DA84);
MakeDword(0x40DA88);
MakeDword(0x40DA8C);
MakeDword(0x40DA90);
MakeDword(0x40DA94);
MakeDword(0x40DA98);
MakeDword(0x40DA9C);
MakeDword(0x40DAA0);
MakeUnkn(0x40DABC, 1);
MakeNameEx(0x40DABC, "VMT_40DABC_EVariantInvalidArgError", 0);
MakeDword(0x40DABC);
MakeDword(0x40DAC0);
MakeDword(0x40DAC4);
MakeDword(0x40DAC8);
MakeDword(0x40DACC);
MakeDword(0x40DAD0);
MakeDword(0x40DAD4);
MakeDword(0x40DAD8);
MakeDword(0x40DADC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DB08, 0x40DB20);
MakeDword(0x40DAE0);
MakeDword(0x40DAE4);
MakeDword(0x40DAE8);
MakeDword(0x40DAEC);
MakeDword(0x40DAF0);
MakeDword(0x40DAF4);
MakeDword(0x40DAF8);
MakeDword(0x40DAFC);
MakeDword(0x40DB00);
MakeDword(0x40DB04);
MakeUnkn(0x40DB20, 1);
MakeNameEx(0x40DB20, "VMT_40DB20_EVariantBadVarTypeError", 0);
MakeDword(0x40DB20);
MakeDword(0x40DB24);
MakeDword(0x40DB28);
MakeDword(0x40DB2C);
MakeDword(0x40DB30);
MakeDword(0x40DB34);
MakeDword(0x40DB38);
MakeDword(0x40DB3C);
MakeDword(0x40DB40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DB6C, 0x40DB84);
MakeDword(0x40DB44);
MakeDword(0x40DB48);
MakeDword(0x40DB4C);
MakeDword(0x40DB50);
MakeDword(0x40DB54);
MakeDword(0x40DB58);
MakeDword(0x40DB5C);
MakeDword(0x40DB60);
MakeDword(0x40DB64);
MakeDword(0x40DB68);
MakeUnkn(0x40DB84, 1);
MakeNameEx(0x40DB84, "VMT_40DB84_EVariantBadIndexError", 0);
MakeDword(0x40DB84);
MakeDword(0x40DB88);
MakeDword(0x40DB8C);
MakeDword(0x40DB90);
MakeDword(0x40DB94);
MakeDword(0x40DB98);
MakeDword(0x40DB9C);
MakeDword(0x40DBA0);
MakeDword(0x40DBA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DBD0, 0x40DBE6);
MakeDword(0x40DBA8);
MakeDword(0x40DBAC);
MakeDword(0x40DBB0);
MakeDword(0x40DBB4);
MakeDword(0x40DBB8);
MakeDword(0x40DBBC);
MakeDword(0x40DBC0);
MakeDword(0x40DBC4);
MakeDword(0x40DBC8);
MakeDword(0x40DBCC);
MakeUnkn(0x40DBE8, 1);
MakeNameEx(0x40DBE8, "VMT_40DBE8_EVariantArrayLockedError", 0);
MakeDword(0x40DBE8);
MakeDword(0x40DBEC);
MakeDword(0x40DBF0);
MakeDword(0x40DBF4);
MakeDword(0x40DBF8);
MakeDword(0x40DBFC);
MakeDword(0x40DC00);
MakeDword(0x40DC04);
MakeDword(0x40DC08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DC34, 0x40DC4D);
MakeDword(0x40DC0C);
MakeDword(0x40DC10);
MakeDword(0x40DC14);
MakeDword(0x40DC18);
MakeDword(0x40DC1C);
MakeDword(0x40DC20);
MakeDword(0x40DC24);
MakeDword(0x40DC28);
MakeDword(0x40DC2C);
MakeDword(0x40DC30);
MakeUnkn(0x40DC50, 1);
MakeNameEx(0x40DC50, "VMT_40DC50_EVariantArrayCreateError", 0);
MakeDword(0x40DC50);
MakeDword(0x40DC54);
MakeDword(0x40DC58);
MakeDword(0x40DC5C);
MakeDword(0x40DC60);
MakeDword(0x40DC64);
MakeDword(0x40DC68);
MakeDword(0x40DC6C);
MakeDword(0x40DC70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DC9C, 0x40DCB5);
MakeDword(0x40DC74);
MakeDword(0x40DC78);
MakeDword(0x40DC7C);
MakeDword(0x40DC80);
MakeDword(0x40DC84);
MakeDword(0x40DC88);
MakeDword(0x40DC8C);
MakeDword(0x40DC90);
MakeDword(0x40DC94);
MakeDword(0x40DC98);
MakeUnkn(0x40DCB8, 1);
MakeNameEx(0x40DCB8, "VMT_40DCB8_EVariantNotImplError", 0);
MakeDword(0x40DCB8);
MakeDword(0x40DCBC);
MakeDword(0x40DCC0);
MakeDword(0x40DCC4);
MakeDword(0x40DCC8);
MakeDword(0x40DCCC);
MakeDword(0x40DCD0);
MakeDword(0x40DCD4);
MakeDword(0x40DCD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DD04, 0x40DD19);
MakeDword(0x40DCDC);
MakeDword(0x40DCE0);
MakeDword(0x40DCE4);
MakeDword(0x40DCE8);
MakeDword(0x40DCEC);
MakeDword(0x40DCF0);
MakeDword(0x40DCF4);
MakeDword(0x40DCF8);
MakeDword(0x40DCFC);
MakeDword(0x40DD00);
MakeUnkn(0x40DD1C, 1);
MakeNameEx(0x40DD1C, "VMT_40DD1C_EVariantOutOfMemoryError", 0);
MakeDword(0x40DD1C);
MakeDword(0x40DD20);
MakeDword(0x40DD24);
MakeDword(0x40DD28);
MakeDword(0x40DD2C);
MakeDword(0x40DD30);
MakeDword(0x40DD34);
MakeDword(0x40DD38);
MakeDword(0x40DD3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DD68, 0x40DD81);
MakeDword(0x40DD40);
MakeDword(0x40DD44);
MakeDword(0x40DD48);
MakeDword(0x40DD4C);
MakeDword(0x40DD50);
MakeDword(0x40DD54);
MakeDword(0x40DD58);
MakeDword(0x40DD5C);
MakeDword(0x40DD60);
MakeDword(0x40DD64);
MakeUnkn(0x40DD84, 1);
MakeNameEx(0x40DD84, "VMT_40DD84_EVariantUnexpectedError", 0);
MakeDword(0x40DD84);
MakeDword(0x40DD88);
MakeDword(0x40DD8C);
MakeDword(0x40DD90);
MakeDword(0x40DD94);
MakeDword(0x40DD98);
MakeDword(0x40DD9C);
MakeDword(0x40DDA0);
MakeDword(0x40DDA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DDD0, 0x40DDE8);
MakeDword(0x40DDA8);
MakeDword(0x40DDAC);
MakeDword(0x40DDB0);
MakeDword(0x40DDB4);
MakeDword(0x40DDB8);
MakeDword(0x40DDBC);
MakeDword(0x40DDC0);
MakeDword(0x40DDC4);
MakeDword(0x40DDC8);
MakeDword(0x40DDCC);
MakeUnkn(0x40DDE8, 1);
MakeNameEx(0x40DDE8, "VMT_40DDE8_EVariantDispatchError", 0);
MakeDword(0x40DDE8);
MakeDword(0x40DDEC);
MakeDword(0x40DDF0);
MakeDword(0x40DDF4);
MakeDword(0x40DDF8);
MakeDword(0x40DDFC);
MakeDword(0x40DE00);
MakeDword(0x40DE04);
MakeDword(0x40DE08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40DE34, 0x40DE4A);
MakeDword(0x40DE0C);
MakeDword(0x40DE10);
MakeDword(0x40DE14);
MakeDword(0x40DE18);
MakeDword(0x40DE1C);
MakeDword(0x40DE20);
MakeDword(0x40DE24);
MakeDword(0x40DE28);
MakeDword(0x40DE2C);
MakeDword(0x40DE30);
MakeUnkn(0x40DE4C, 1);
MakeNameEx(0x40DE4C, "VarCastError", 0x20);
MakeComm(0x40DE4C, "'procedure VarCastError;'");
MakeCode(0x40DE4C);
MakeCode(0x40DE80);
MakeCode(0x40DE8D);
MakeCode(0x40DE96);
MakeCode(0x40DE9B);
MakeFunction(0x40DE4C, 0x40DEA0);
MakeUnkn(0x40DF3C, 1);
MakeNameEx(0x40DF3C, "VarInvalidOp", 0x20);
MakeComm(0x40DF3C, "'procedure VarInvalidOp;'");
MakeCode(0x40DF3C);
MakeCode(0x40DF70);
MakeCode(0x40DF7D);
MakeCode(0x40DF86);
MakeCode(0x40DF8B);
MakeFunction(0x40DF3C, 0x40DF90);
MakeUnkn(0x40E02C, 1);
MakeNameEx(0x40E02C, "VarArrayCreateError", 0x20);
MakeComm(0x40E02C, "'procedure VarArrayCreateError;'");
MakeCode(0x40E02C);
MakeCode(0x40E060);
MakeCode(0x40E06D);
MakeCode(0x40E076);
MakeCode(0x40E07B);
MakeFunction(0x40E02C, 0x40E080);
MakeUnkn(0x40E080, 1);
MakeNameEx(0x40E080, "TranslateResult", 0x20);
MakeComm(0x40E080, "'procedure TranslateResult(AResult:HRESULT);'");
MakeCode(0x40E080);
MakeCode(0x40E088);
MakeCode(0x40E0D3);
MakeCode(0x40E0E2);
MakeCode(0x40E10F);
MakeCode(0x40E119);
MakeCode(0x40E13F);
MakeCode(0x40E149);
MakeCode(0x40E16F);
MakeCode(0x40E195);
MakeCode(0x40E1BB);
MakeCode(0x40E1E1);
MakeCode(0x40E207);
MakeCode(0x40E22A);
MakeCode(0x40E24D);
MakeCode(0x40E29D);
MakeCode(0x40E2AA);
MakeCode(0x40E2C5);
MakeCode(0x40E2CA);
MakeFunction(0x40E080, 0x40E2D1);
MakeUnkn(0x40E2D4, 1);
MakeNameEx(0x40E2D4, "VarResultCheck", 0x20);
MakeComm(0x40E2D4, "'procedure VarResultCheck(AResult:HRESULT);'");
MakeCode(0x40E2D4);
MakeFunction(0x40E2D4, 0x40E2DE);
MakeCode(0x40E314);
MakeComm(0x40E33E, "'EVariantDispatchError.Create'");
MakeCode(0x40E348);
MakeCode(0x40E355);
MakeCode(0x40E35E);
MakeCode(0x40E363);
MakeFunction(0x40E314, 0x40E368);
MakeUnkn(0x40E368, 1);
MakeNameEx(0x40E368, "@VarNull", 0x20);
MakeComm(0x40E368, "'procedure @VarNull(var V:TVarData);'");
MakeCode(0x40E368);
MakeFunction(0x40E368, 0x40E379);
MakeUnkn(0x40E37C, 1);
MakeNameEx(0x40E37C, "InBounds", 0x20);
MakeComm(0x40E37C, "'function InBounds(At:Integer):Boolean;'");
MakeCode(0x40E37C);
MakeCode(0x40E389);
MakeCode(0x40E3A6);
MakeFunction(0x40E37C, 0x40E3AB);
MakeUnkn(0x40E3AC, 1);
MakeNameEx(0x40E3AC, "Increment", 0x20);
MakeComm(0x40E3AC, "'function Increment(At:Integer):Boolean;'");
MakeCode(0x40E3AC);
MakeCode(0x40E3E7);
MakeCode(0x40E401);
MakeFunction(0x40E3AC, 0x40E407);
MakeUnkn(0x40E408, 1);
MakeNameEx(0x40E408, "VarArrayClear", 0x20);
MakeComm(0x40E408, "'procedure VarArrayClear(var V:TVarData);'");
MakeCode(0x40E408);
MakeCode(0x40E430);
MakeCode(0x40E468);
MakeCode(0x40E477);
MakeCode(0x40E49A);
MakeCode(0x40E4FC);
MakeCode(0x40E514);
MakeCode(0x40E521);
MakeCode(0x40E55F);
MakeCode(0x40E56C);
MakeFunction(0x40E408, 0x40E584);
MakeUnkn(0x40E584, 1);
MakeNameEx(0x40E584, "VarClearDeep", 0x20);
MakeComm(0x40E584, "'procedure VarClearDeep(var V:TVarData);'");
MakeCode(0x40E584);
MakeCode(0x40E59F);
MakeCode(0x40E5B5);
MakeCode(0x40E5C6);
MakeCode(0x40E5D6);
MakeCode(0x40E5EF);
MakeCode(0x40E5FA);
MakeFunction(0x40E584, 0x40E5FE);
MakeUnkn(0x40E600, 1);
MakeNameEx(0x40E600, "@VarClear", 0x20);
MakeComm(0x40E600, "'procedure @VarClear(var V:TVarData);'");
MakeCode(0x40E600);
MakeCode(0x40E60D);
MakeFunction(0x40E600, 0x40E613);
MakeUnkn(0x40E614, 1);
MakeNameEx(0x40E614, "@VarClr_0", 0x20);
MakeComm(0x40E614, "'procedure @VarClr(var V:TVarData);'");
MakeCode(0x40E614);
MakeFunction(0x40E614, 0x40E61C);
MakeUnkn(0x40E61C, 1);
MakeNameEx(0x40E61C, "InBounds_0", 0x20);
MakeComm(0x40E61C, "'function InBounds(At:Integer):Boolean;'");
MakeCode(0x40E61C);
MakeCode(0x40E629);
MakeCode(0x40E646);
MakeFunction(0x40E61C, 0x40E64B);
MakeUnkn(0x40E64C, 1);
MakeNameEx(0x40E64C, "Increment_0", 0x20);
MakeComm(0x40E64C, "'function Increment(At:Integer):Boolean;'");
MakeCode(0x40E64C);
MakeCode(0x40E687);
MakeCode(0x40E6A1);
MakeFunction(0x40E64C, 0x40E6A7);
MakeUnkn(0x40E6A8, 1);
MakeNameEx(0x40E6A8, "VarArrayCopyForEach", 0x20);
MakeComm(0x40E6A8, "'procedure VarArrayCopyForEach(var Dest:TVarData; const Src:TVarData; AProc:TVarArrayForEach);'");
MakeCode(0x40E6A8);
MakeCode(0x40E6D2);
MakeCode(0x40E6F8);
MakeCode(0x40E701);
MakeCode(0x40E724);
MakeCode(0x40E786);
MakeCode(0x40E7A6);
MakeCode(0x40E7DD);
MakeCode(0x40E7EA);
MakeCode(0x40E84A);
MakeCode(0x40E859);
MakeCode(0x40E86B);
MakeFunction(0x40E6A8, 0x40E872);
MakeUnkn(0x40E874, 1);
MakeNameEx(0x40E874, "VarCopyCopyProc", 0x20);
MakeComm(0x40E874, "'procedure VarCopyCopyProc(var Dest:TVarData; const Src:TVarData);'");
MakeCode(0x40E874);
MakeFunction(0x40E874, 0x40E87A);
MakeUnkn(0x40E87C, 1);
MakeNameEx(0x40E87C, "VarCopyDeep", 0x20);
MakeComm(0x40E87C, "'procedure VarCopyDeep(var Dest:TVarData; const Source:TVarData);'");
MakeCode(0x40E87C);
MakeCode(0x40E892);
MakeCode(0x40E8A9);
MakeCode(0x40E8C7);
MakeCode(0x40E8E1);
MakeCode(0x40E8F8);
MakeCode(0x40E916);
MakeCode(0x40E922);
MakeFunction(0x40E87C, 0x40E927);
MakeUnkn(0x40E928, 1);
MakeNameEx(0x40E928, "@VarCopy", 0x20);
MakeComm(0x40E928, "'procedure @VarCopy(var Dest:TVarData; const Source:TVarData);'");
MakeCode(0x40E928);
MakeCode(0x40E947);
MakeCode(0x40E95F);
MakeCode(0x40E968);
MakeFunction(0x40E928, 0x40E96B);
MakeUnkn(0x40F8DC, 1);
MakeNameEx(0x40F8DC, "@VarFromInt", 0x20);
MakeComm(0x40F8DC, "'procedure @VarFromInt(var V:TVarData; const Value:Integer; const Range:Shortint);'");
MakeCode(0x40F8DC);
MakeCode(0x40F8F3);
MakeCode(0x40F90C);
MakeCode(0x40F911);
MakeFunction(0x40F8DC, 0x40F918);
MakeUnkn(0x40F918, 1);
MakeNameEx(0x40F918, "@VarFromInt64", 0x20);
MakeComm(0x40F918, "'procedure @VarFromInt64(var V:TVarData; const Value:Int64);'");
MakeCode(0x40F918);
MakeCode(0x40F92C);
MakeFunction(0x40F918, 0x40F942);
MakeUnkn(0x40F944, 1);
MakeNameEx(0x40F944, "@VarFromBool", 0x20);
MakeComm(0x40F944, "'procedure @VarFromBool(var V:TVarData; const Value:Boolean);'");
MakeCode(0x40F944);
MakeCode(0x40F958);
MakeFunction(0x40F944, 0x40F96A);
MakeUnkn(0x40F96C, 1);
MakeNameEx(0x40F96C, "@VarFromReal", 0x20);
MakeComm(0x40F96C, "'procedure @VarFromReal(var v:Variant);'");
MakeCode(0x40F96C);
MakeFunction(0x40F96C, 0x40F97D);
MakeUnkn(0x40F980, 1);
MakeNameEx(0x40F980, "@VarFromTDateTime", 0x20);
MakeComm(0x40F980, "'procedure @VarFromTDateTime(var v:Variant);'");
MakeCode(0x40F980);
MakeFunction(0x40F980, 0x40F991);
MakeUnkn(0x40F994, 1);
MakeNameEx(0x40F994, "@VarFromCurr", 0x20);
MakeComm(0x40F994, "'procedure @VarFromCurr(var v:Variant);'");
MakeCode(0x40F994);
MakeFunction(0x40F994, 0x40F9A5);
MakeUnkn(0x40F9A8, 1);
MakeNameEx(0x40F9A8, "@VarFromLStr", 0x20);
MakeComm(0x40F9A8, "'procedure @VarFromLStr(var V:TVarData; const Value:AnsiString);'");
MakeCode(0x40F9A8);
MakeCode(0x40F9BC);
MakeFunction(0x40F9A8, 0x40F9D3);
MakeUnkn(0x40F9D4, 1);
MakeNameEx(0x40F9D4, "@VarFromWStr", 0x20);
MakeComm(0x40F9D4, "'procedure @VarFromWStr(var V:TVarData; const Value:WideString);'");
MakeCode(0x40F9D4);
MakeCode(0x40F9E8);
MakeFunction(0x40F9D4, 0x40FA0A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FA38, -1);
MakeDword(0x40FA34);
MakeDword(0x40FA30);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FA48, -1);
MakeDword(0x40FA44);
MakeDword(0x40FA40);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FA58, -1);
MakeDword(0x40FA54);
MakeDword(0x40FA50);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FA6C, -1);
MakeDword(0x40FA68);
MakeDword(0x40FA64);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FA7C, -1);
MakeDword(0x40FA78);
MakeDword(0x40FA74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FA8C, -1);
MakeDword(0x40FA88);
MakeDword(0x40FA84);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FA9C, -1);
MakeDword(0x40FA98);
MakeDword(0x40FA94);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FAB0, -1);
MakeDword(0x40FAAC);
MakeDword(0x40FAA8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FAC0, -1);
MakeDword(0x40FABC);
MakeDword(0x40FAB8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FAD0, -1);
MakeDword(0x40FACC);
MakeDword(0x40FAC8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FAE4, -1);
MakeDword(0x40FAE0);
MakeDword(0x40FADC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FAF4, -1);
MakeDword(0x40FAF0);
MakeDword(0x40FAEC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB04, -1);
MakeDword(0x40FB00);
MakeDword(0x40FAFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB14, -1);
MakeDword(0x40FB10);
MakeDword(0x40FB0C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB24, -1);
MakeDword(0x40FB20);
MakeDword(0x40FB1C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB34, -1);
MakeDword(0x40FB30);
MakeDword(0x40FB2C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB40, -1);
MakeDword(0x40FB3C);
MakeDword(0x40FB38);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB54, -1);
MakeDword(0x40FB50);
MakeDword(0x40FB4C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB64, -1);
MakeDword(0x40FB60);
MakeDword(0x40FB5C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB74, -1);
MakeDword(0x40FB70);
MakeDword(0x40FB6C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FB88, -1);
MakeDword(0x40FB84);
MakeDword(0x40FB80);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FCCC, -1);
MakeDword(0x40FCC8);
MakeDword(0x40FCC4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FCDC, -1);
MakeDword(0x40FCD8);
MakeDword(0x40FCD4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FCE8, -1);
MakeDword(0x40FCE4);
MakeDword(0x40FCE0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40FCF8, -1);
MakeDword(0x40FCF4);
MakeDword(0x40FCF0);
MakeUnkn(0x40FD00, 1);
MakeNameEx(0x40FD00, "SetVarAsError", 0x20);
MakeComm(0x40FD00, "'procedure SetVarAsError(var V:TVarData; AResult:HRESULT);'");
MakeCode(0x40FD00);
MakeFunction(0x40FD00, 0x40FD18);
MakeUnkn(0x40FD18, 1);
MakeNameEx(0x40FD18, "SetClearVarToEmptyParam", 0x20);
MakeComm(0x40FD18, "'procedure SetClearVarToEmptyParam(var V:TVarData);'");
MakeCode(0x40FD18);
MakeFunction(0x40FD18, 0x40FD23);
MakeUnkn(0x40FD24, 1);
MakeNameEx(0x40FD24, "RTTI_40FD24_DynArray_.02", 0);
MakeDword(0x40FD24);
MakeUnkn(0x40FD28, 1);
MakeNameEx(0x40FD28, "", 0);
MakeByte(0x40FD28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FD29, 0x40FD2D);
MakeDword(0x40FD2D);
MakeDword(0x40FD31);
MakeDword(0x40FD35);
MakeDword(0x40FD39);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FD3D, 0x40FD46);
MakeUnkn(0x40FD48, 1);
MakeNameEx(0x40FD48, "ClearVariantTypeList", 0x20);
MakeComm(0x40FD48, "'procedure ClearVariantTypeList;'");
MakeCode(0x40FD48);
MakeCode(0x40FD79);
MakeCode(0x40FD8B);
MakeCode(0x40FD91);
MakeCode(0x40FD9E);
MakeCode(0x40FDA9);
MakeCode(0x40FDAE);
MakeFunction(0x40FD48, 0x40FDB4);
MakeUnkn(0x40FDB4, 1);
MakeNameEx(0x40FDB4, "TCustomVariantType.BinaryOp", 0x20);
MakeComm(0x40FDB4, "'procedure TCustomVariantType.BinaryOp(var Left:TVarData; const Right:TVarData; const Operator:TVarOp);'");
MakeCode(0x40FDB4);
MakeFunction(0x40FDB4, 0x40FDC0);
MakeUnkn(0x40FDC0, 1);
MakeNameEx(0x40FDC0, "TCustomVariantType.Cast", 0x20);
MakeComm(0x40FDC0, "'procedure TCustomVariantType.Cast(var Dest:TVarData; const Source:TVarData);'");
MakeCode(0x40FDC0);
MakeCode(0x40FDEC);
MakeCode(0x40FDF3);
MakeFunction(0x40FDC0, 0x40FDF8);
MakeUnkn(0x40FDF8, 1);
MakeNameEx(0x40FDF8, "TCustomVariantType.CastTo", 0x20);
MakeComm(0x40FDF8, "'procedure TCustomVariantType.CastTo(var Dest:TVarData; const Source:TVarData; const AVarType:TVarType);'");
MakeCode(0x40FDF8);
MakeCode(0x40FE30);
MakeCode(0x40FE37);
MakeFunction(0x40FDF8, 0x40FE40);
MakeUnkn(0x40FE40, 1);
MakeNameEx(0x40FE40, "TCustomVariantType.Compare", 0x20);
MakeComm(0x40FE40, "'procedure TCustomVariantType.Compare(const Left:TVarData; const Right:TVarData; var Relationship:TVarCompareResult);'");
MakeCode(0x40FE40);
MakeFunction(0x40FE40, 0x40FE4C);
MakeUnkn(0x40FE4C, 1);
MakeNameEx(0x40FE4C, "TCustomVariantType.CompareOp", 0x20);
MakeComm(0x40FE4C, "'function TCustomVariantType.CompareOp(const Left:TVarData; const Right:TVarData; const Operator:TVarOp):Boolean;'");
MakeCode(0x40FE4C);
MakeFunction(0x40FE4C, 0x40FE81);
MakeUnkn(0x40FE84, 1);
MakeNameEx(0x40FE84, "TCustomVariantType.CastToOle", 0x20);
MakeComm(0x40FE84, "'procedure TCustomVariantType.CastToOle(var Dest:TVarData; const Source:TVarData);'");
MakeCode(0x40FE84);
MakeCode(0x40FEB0);
MakeCode(0x40FEB7);
MakeFunction(0x40FE84, 0x40FEBD);
MakeUnkn(0x40FEC0, 1);
MakeNameEx(0x40FEC0, "TCustomVariantType.Destroy", 0x20);
MakeComm(0x40FEC0, "'destructor TCustomVariantType.Destroy;'");
MakeCode(0x40FEC0);
MakeCode(0x40FF0B);
MakeCode(0x40FF18);
MakeCode(0x40FF23);
MakeCode(0x40FF28);
MakeCode(0x40FF46);
MakeFunction(0x40FEC0, 0x40FF4A);
MakeCode(0x40FF4C);
MakeFunction(0x40FF4C, 0x40FF4F);
MakeUnkn(0x40FF50, 1);
MakeNameEx(0x40FF50, "TCustomVariantType.LeftPromotion", 0x20);
MakeComm(0x40FF50, "'function TCustomVariantType.LeftPromotion(const V:TVarData; const Operator:TVarOp; var RequiredVarType:TVarType):Boolean;'");
MakeCode(0x40FF50);
MakeFunction(0x40FF50, 0x40FF63);
MakeUnkn(0x40FF64, 1);
MakeNameEx(0x40FF64, "TCustomVariantType.OlePromotion", 0x20);
MakeComm(0x40FF64, "'function TCustomVariantType.OlePromotion(const V:TVarData; var RequiredVarType:TVarType):Boolean;'");
MakeCode(0x40FF64);
MakeFunction(0x40FF64, 0x40FF6C);
MakeCode(0x40FF6C);
MakeFunction(0x40FF6C, 0x40FF72);
MakeCode(0x40FF74);
MakeFunction(0x40FF74, 0x40FF7A);
MakeCode(0x40FF7C);
MakeFunction(0x40FF7C, 0x40FF82);
MakeUnkn(0x40FF84, 1);
MakeNameEx(0x40FF84, "TCustomVariantType.RightPromotion", 0x20);
MakeComm(0x40FF84, "'function TCustomVariantType.RightPromotion(const V:TVarData; const Operator:TVarOp; var RequiredVarType:TVarType):Boolean;'");
MakeCode(0x40FF84);
MakeFunction(0x40FF84, 0x40FF97);
MakeCode(0x40FF98);
MakeFunction(0x40FF98, 0x40FF9E);
MakeUnkn(0x40FFA0, 1);
MakeNameEx(0x40FFA0, "TCustomVariantType.DispInvoke", 0x20);
MakeComm(0x40FFA0, "'procedure TCustomVariantType.DispInvoke(Dest:PVarData; const Source:TVarData; CallDesc:PCallDesc; Params:Pointer);'");
MakeCode(0x40FFA0);
MakeFunction(0x40FFA0, 0x40FFAC);
MakeUnkn(0x40FFAC, 1);
MakeNameEx(0x40FFAC, "TCustomVariantType._AddRef", 0x20);
MakeComm(0x40FFAC, "'function TCustomVariantType._AddRef:Integer; stdcall;'");
MakeCode(0x40FFAC);
MakeFunction(0x40FFAC, 0x40FFB6);
MakeUnkn(0x40FFB8, 1);
MakeNameEx(0x40FFB8, "TCustomVariantType._Release", 0x20);
MakeComm(0x40FFB8, "'function TCustomVariantType._Release:Integer; stdcall;'");
MakeCode(0x40FFB8);
MakeFunction(0x40FFB8, 0x40FFC2);
MakeUnkn(0x40FFC4, 1);
MakeNameEx(0x40FFC4, "TCustomVariantType.QueryInterface", 0x20);
MakeComm(0x40FFC4, "'function TCustomVariantType.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x40FFC4);
MakeCode(0x40FFE0);
MakeCode(0x40FFE5);
MakeFunction(0x40FFC4, 0x40FFEA);
MakeUnkn(0x40FFEC, 1);
MakeNameEx(0x40FFEC, "FindCustomVariantType", 0x20);
MakeComm(0x40FFEC, "'function FindCustomVariantType(const AVarType:TVarType; var CustomVariantType:TCustomVariantType):Boolean;'");
MakeCode(0x40FFEC);
MakeCode(0x41000E);
MakeCode(0x410012);
MakeCode(0x410014);
MakeCode(0x410073);
MakeCode(0x410077);
MakeCode(0x410079);
MakeCode(0x41007C);
MakeCode(0x410089);
MakeCode(0x410094);
MakeCode(0x410099);
MakeCode(0x41009B);
MakeFunction(0x40FFEC, 0x4100A4);
MakeUnkn(0x4100A4, 1);
MakeNameEx(0x4100A4, "FindCustomVariantType_0", 0x20);
MakeComm(0x4100A4, "'function FindCustomVariantType(const TypeName:AnsiString; var CustomVariantType:TCustomVariantType):Boolean;'");
MakeCode(0x4100A4);
MakeCode(0x4100F8);
MakeCode(0x410141);
MakeCode(0x410145);
MakeCode(0x410152);
MakeCode(0x41015D);
MakeCode(0x410162);
MakeCode(0x410164);
MakeCode(0x410171);
MakeCode(0x41017A);
MakeCode(0x41017F);
MakeFunction(0x4100A4, 0x41018B);
MakeUnkn(0x41018C, 1);
MakeNameEx(0x41018C, "Null", 0x20);
MakeComm(0x41018C, "'function Null:Variant;'");
MakeCode(0x41018C);
MakeFunction(0x41018C, 0x410192);
MakeCode(0x410194);
MakeCode(0x4101F5);
MakeCode(0x410202);
MakeCode(0x410203);
MakeCode(0x410208);
MakeFunction(0x410194, 0x41020C);
MakeCode(0x41020C);
MakeCode(0x41029F);
MakeCode(0x4102AC);
MakeCode(0x4102AD);
MakeCode(0x4102B2);
MakeFunction(0x41020C, 0x4102B6);
MakeComm(0x4102B8, "'SAncestorNotFound'");
MakeDword(0x4102B8);
MakeDword(0x4102BC);
MakeComm(0x4102C0, "'SAssignError'");
MakeDword(0x4102C0);
MakeDword(0x4102C4);
MakeComm(0x4102C8, "'SBitsIndexError'");
MakeDword(0x4102C8);
MakeDword(0x4102CC);
MakeComm(0x4102D0, "'SCantWriteResourceStreamError'");
MakeDword(0x4102D0);
MakeDword(0x4102D4);
MakeComm(0x4102D8, "'SCheckSynchronizeError'");
MakeDword(0x4102D8);
MakeDword(0x4102DC);
MakeComm(0x4102E0, "'SClassNotFound'");
MakeDword(0x4102E0);
MakeDword(0x4102E4);
MakeComm(0x4102E8, "'SDuplicateClass'");
MakeDword(0x4102E8);
MakeDword(0x4102EC);
MakeComm(0x4102F0, "'SDuplicateItem'");
MakeDword(0x4102F0);
MakeDword(0x4102F4);
MakeComm(0x4102F8, "'SDuplicateName'");
MakeDword(0x4102F8);
MakeDword(0x4102FC);
MakeComm(0x410300, "'SDuplicateString'");
MakeDword(0x410300);
MakeDword(0x410304);
MakeComm(0x410308, "'SFCreateErrorEx'");
MakeDword(0x410308);
MakeDword(0x41030C);
MakeComm(0x410310, "'SFOpenErrorEx'");
MakeDword(0x410310);
MakeDword(0x410314);
MakeComm(0x410318, "'SInvalidImage'");
MakeDword(0x410318);
MakeDword(0x41031C);
MakeComm(0x410320, "'SInvalidName'");
MakeDword(0x410320);
MakeDword(0x410324);
MakeComm(0x410328, "'SInvalidPropertyPath'");
MakeDword(0x410328);
MakeDword(0x41032C);
MakeComm(0x410330, "'SInvalidProperty'");
MakeDword(0x410330);
MakeDword(0x410334);
MakeComm(0x410338, "'SListCapacityError'");
MakeDword(0x410338);
MakeDword(0x41033C);
MakeComm(0x410340, "'SListCountError'");
MakeDword(0x410340);
MakeDword(0x410344);
MakeComm(0x410348, "'SListIndexError'");
MakeDword(0x410348);
MakeDword(0x41034C);
MakeComm(0x410350, "'SMemoryStreamError'");
MakeDword(0x410350);
MakeDword(0x410354);
MakeComm(0x410358, "'SPropertyException'");
MakeDword(0x410358);
MakeDword(0x41035C);
MakeComm(0x410360, "'SReadError'");
MakeDword(0x410360);
MakeDword(0x410364);
MakeComm(0x410368, "'SReadOnlyProperty'");
MakeDword(0x410368);
MakeDword(0x41036C);
MakeComm(0x410370, "'SResNotFound'");
MakeDword(0x410370);
MakeDword(0x410374);
MakeComm(0x410378, "'SSeekNotImplemented'");
MakeDword(0x410378);
MakeDword(0x41037C);
MakeComm(0x410380, "'SSortedListError'");
MakeDword(0x410380);
MakeDword(0x410384);
MakeComm(0x410388, "'SUnknownGroup'");
MakeDword(0x410388);
MakeDword(0x41038C);
MakeComm(0x410390, "'SUnknownProperty'");
MakeDword(0x410390);
MakeDword(0x410394);
MakeComm(0x410398, "'SWriteError'");
MakeDword(0x410398);
MakeDword(0x41039C);
MakeCode(0x4103A0);
MakeCode(0x4103B7);
MakeCode(0x4103C4);
MakeCode(0x4103C5);
MakeCode(0x4103CA);
MakeFunction(0x4103A0, 0x4103CE);
MakeCode(0x4103D0);
MakeFunction(0x4103D0, 0x4103D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4103E0, -1);
MakeDword(0x4103DC);
MakeDword(0x4103D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4103F0, -1);
MakeDword(0x4103EC);
MakeDword(0x4103E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x410400, -1);
MakeDword(0x4103FC);
MakeDword(0x4103F8);
MakeUnkn(0x410404, 1);
MakeNameEx(0x410404, "GetTypeData", 0x20);
MakeComm(0x410404, "'function GetTypeData(TypeInfo:PTypeInfo):PTypeData;'");
MakeCode(0x410404);
MakeFunction(0x410404, 0x41040E);
MakeUnkn(0x410410, 1);
MakeNameEx(0x410410, "GetEnumNameValue", 0x20);
MakeComm(0x410410, "'function GetEnumNameValue(TypeInfo:PTypeInfo; const Name:AnsiString):Integer;'");
MakeCode(0x410410);
MakeCode(0x41042F);
MakeCode(0x410436);
MakeCode(0x410447);
MakeCode(0x410449);
MakeCode(0x410452);
MakeCode(0x410455);
MakeFunction(0x410410, 0x410459);
MakeUnkn(0x41045C, 1);
MakeNameEx(0x41045C, "GetEnumValue", 0x20);
MakeComm(0x41045C, "'function GetEnumValue(TypeInfo:PTypeInfo; const Name:AnsiString):Integer;'");
MakeCode(0x41045C);
MakeCode(0x410471);
MakeCode(0x410493);
MakeCode(0x4104A9);
MakeCode(0x4104B2);
MakeCode(0x4104BB);
MakeFunction(0x41045C, 0x4104BE);
MakeUnkn(0x4104C0, 1);
MakeNameEx(0x4104C0, "GetPropInfo", 0x20);
MakeComm(0x4104C0, "'function GetPropInfo(TypeInfo:PTypeInfo; const PropName:AnsiString):PPropInfo;'");
MakeCode(0x4104C0);
MakeCode(0x4104D8);
MakeCode(0x4104F1);
MakeCode(0x4104FC);
MakeCode(0x410505);
MakeCode(0x410510);
MakeCode(0x41051A);
MakeCode(0x41051C);
MakeCode(0x41052C);
MakeFunction(0x4104C0, 0x410530);
MakeUnkn(0x410530, 1);
MakeNameEx(0x410530, "GetOrdProp", 0x20);
MakeComm(0x410530, "'function GetOrdProp(Instance:TObject; PropInfo:PPropInfo):Longint;'");
MakeCode(0x410530);
MakeCode(0x410546);
MakeCode(0x41055D);
MakeCode(0x410561);
MakeCode(0x41057A);
MakeCode(0x410594);
MakeCode(0x41059E);
MakeFunction(0x410530, 0x4105A1);
MakeUnkn(0x4105A4, 1);
MakeNameEx(0x4105A4, "SetOrdProp", 0x20);
MakeComm(0x4105A4, "'procedure SetOrdProp(Instance:TObject; PropInfo:PPropInfo; Value:Longint);'");
MakeCode(0x4105A4);
MakeCode(0x4105BD);
MakeCode(0x4105CA);
MakeCode(0x4105DE);
MakeCode(0x4105E2);
MakeCode(0x4105FB);
MakeFunction(0x4105A4, 0x4105FF);
MakeUnkn(0x410600, 1);
MakeNameEx(0x410600, "SetShortStrProp", 0x20);
MakeComm(0x410600, "'procedure SetShortStrProp(Instance:TObject; PropInfo:PPropInfo; const Value:ShortString);'");
MakeCode(0x410600);
MakeCode(0x410611);
MakeCode(0x410626);
MakeCode(0x41062B);
MakeCode(0x410649);
MakeFunction(0x410600, 0x410651);
MakeUnkn(0x410654, 1);
MakeNameEx(0x410654, "SetShortStrPropAsLongStr", 0x20);
MakeComm(0x410654, "'procedure SetShortStrPropAsLongStr(Instance:TObject; PropInfo:PPropInfo; const Value:AnsiString);'");
MakeCode(0x410654);
MakeFunction(0x410654, 0x410686);
MakeUnkn(0x410688, 1);
MakeNameEx(0x410688, "AssignLongStr", 0x20);
MakeComm(0x410688, "'procedure AssignLongStr(var Dest:AnsiString; const Source:AnsiString);'");
MakeCode(0x410688);
MakeFunction(0x410688, 0x41069A);
MakeUnkn(0x41069C, 1);
MakeNameEx(0x41069C, "SetLongStrProp", 0x20);
MakeComm(0x41069C, "'procedure SetLongStrProp(Instance:TObject; PropInfo:PPropInfo; const Value:AnsiString);'");
MakeCode(0x41069C);
MakeCode(0x4106AD);
MakeCode(0x4106C2);
MakeCode(0x4106C7);
MakeFunction(0x41069C, 0x4106D9);
MakeUnkn(0x4106DC, 1);
MakeNameEx(0x4106DC, "SetWideStrPropAsLongStr", 0x20);
MakeComm(0x4106DC, "'procedure SetWideStrPropAsLongStr(Instance:TObject; PropInfo:PPropInfo; const Value:AnsiString);'");
MakeCode(0x4106DC);
MakeCode(0x41070E);
MakeCode(0x41071B);
MakeCode(0x410724);
MakeCode(0x410729);
MakeFunction(0x4106DC, 0x410731);
MakeUnkn(0x410734, 1);
MakeNameEx(0x410734, "SetStrProp", 0x20);
MakeComm(0x410734, "'procedure SetStrProp(Instance:TObject; PropInfo:PPropInfo; const Value:AnsiString);'");
MakeCode(0x410734);
MakeCode(0x41074B);
MakeCode(0x410752);
MakeCode(0x410759);
MakeCode(0x41075E);
MakeFunction(0x410734, 0x410760);
MakeUnkn(0x410760, 1);
MakeNameEx(0x410760, "SetWideStrProp", 0x20);
MakeComm(0x410760, "'procedure SetWideStrProp(Instance:TObject; PropInfo:PPropInfo; const Value:WideString);'");
MakeCode(0x410760);
MakeCode(0x410796);
MakeCode(0x4107AE);
MakeCode(0x4107D6);
MakeCode(0x4107EC);
MakeCode(0x4107EF);
MakeCode(0x410806);
MakeCode(0x410810);
MakeCode(0x41081D);
MakeCode(0x410826);
MakeCode(0x41082B);
MakeFunction(0x410760, 0x410834);
MakeUnkn(0x410834, 1);
MakeNameEx(0x410834, "SetFloatProp", 0x20);
MakeComm(0x410834, "'procedure SetFloatProp(Instance:TObject; PropInfo:PPropInfo; const Value:Extended);'");
MakeCode(0x410834);
MakeCode(0x410890);
MakeCode(0x41089B);
MakeCode(0x4108A6);
MakeCode(0x4108BE);
MakeCode(0x4108C9);
MakeCode(0x4108DA);
MakeCode(0x4108F0);
MakeCode(0x4108F3);
MakeCode(0x41092C);
MakeCode(0x410941);
MakeCode(0x410956);
MakeCode(0x41096C);
MakeCode(0x410981);
MakeCode(0x41099C);
MakeCode(0x4109BF);
MakeCode(0x4109D1);
MakeCode(0x4109E3);
MakeCode(0x4109F6);
MakeCode(0x410A08);
MakeCode(0x410A1E);
MakeFunction(0x410834, 0x410A27);
MakeUnkn(0x410A2C, 1);
MakeNameEx(0x410A2C, "AssignVariant", 0x20);
MakeComm(0x410A2C, "'procedure AssignVariant(var Dest:Variant; const Source:Variant);'");
MakeCode(0x410A2C);
MakeFunction(0x410A2C, 0x410A3E);
MakeUnkn(0x410A40, 1);
MakeNameEx(0x410A40, "SetVariantProp", 0x20);
MakeComm(0x410A40, "'procedure SetVariantProp(Instance:TObject; PropInfo:PPropInfo; const Value:Variant);'");
MakeCode(0x410A40);
MakeCode(0x410A51);
MakeCode(0x410A66);
MakeCode(0x410A6B);
MakeFunction(0x410A40, 0x410A7D);
MakeUnkn(0x410A80, 1);
MakeNameEx(0x410A80, "SetMethodProp", 0x20);
MakeComm(0x410A80, "'procedure SetMethodProp(Instance:TObject; PropInfo:PPropInfo; const Value:TMethod);'");
MakeCode(0x410A80);
MakeCode(0x410A9D);
MakeCode(0x410AA1);
MakeFunction(0x410A80, 0x410AB5);
MakeUnkn(0x410AB8, 1);
MakeNameEx(0x410AB8, "SetInt64Prop", 0x20);
MakeComm(0x410AB8, "'procedure SetInt64Prop(Instance:TObject; PropInfo:PPropInfo; const Value:Int64);'");
MakeCode(0x410AB8);
MakeCode(0x410AD8);
MakeCode(0x410ADC);
MakeCode(0x410AEF);
MakeFunction(0x410AB8, 0x410AF3);
MakeUnkn(0x410AF4, 1);
MakeNameEx(0x410AF4, "SetInterfaceProp", 0x20);
MakeComm(0x410AF4, "'procedure SetInterfaceProp(Instance:TObject; PropInfo:PPropInfo; const Value:IInterface);'");
MakeCode(0x410AF4);
MakeCode(0x410B23);
MakeCode(0x410B39);
MakeCode(0x410B3C);
MakeCode(0x410B55);
MakeCode(0x410B60);
MakeFunction(0x410AF4, 0x410B65);
MakeUnkn(0x410B68, 1);
MakeNameEx(0x410B68, "Finalization_0", 0x20);
MakeComm(0x410B68, "'procedure Finalization;'");
MakeCode(0x410B68);
MakeCode(0x410BA0);
MakeCode(0x410BAD);
MakeCode(0x410BAE);
MakeCode(0x410BB3);
MakeFunction(0x410B68, 0x410BB7);
MakeCode(0x410BB8);
MakeFunction(0x410BB8, 0x410BC0);
MakeCode(0x410BC0);
MakeCode(0x410BD7);
MakeCode(0x410BE4);
MakeCode(0x410BE5);
MakeCode(0x410BEA);
MakeFunction(0x410BC0, 0x410BEE);
MakeCode(0x410BF0);
MakeFunction(0x410BF0, 0x410BF8);
MakeUnkn(0x410BF8, 1);
MakeNameEx(0x410BF8, "RTTI_410BF8_Enumeration_TAlignment", 0);
MakeDword(0x410BF8);
MakeUnkn(0x410BFC, 1);
MakeNameEx(0x410BFC, "", 0);
MakeByte(0x410BFC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410BFD, 0x410C08);
MakeByte(0x410C08);
MakeDword(0x410C09);
MakeDword(0x410C0D);
MakeDword(0x410C11);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410C15, 0x410C23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410C23, 0x410C32);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410C32, 0x410C3B);
MakeUnkn(0x410C44, 1);
MakeNameEx(0x410C44, "RTTI_410C44_Enumeration_TBiDiMode", 0);
MakeDword(0x410C44);
MakeUnkn(0x410C48, 1);
MakeNameEx(0x410C48, "", 0);
MakeByte(0x410C48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410C49, 0x410C53);
MakeByte(0x410C53);
MakeDword(0x410C54);
MakeDword(0x410C58);
MakeDword(0x410C5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410C60, 0x410C6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410C6E, 0x410C7C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410C7C, 0x410C91);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410C91, 0x410CAA);
MakeUnkn(0x410CB4, 1);
MakeNameEx(0x410CB4, "RTTI_410CB4_Enumeration_.1", 0);
MakeDword(0x410CB4);
MakeUnkn(0x410CB8, 1);
MakeNameEx(0x410CB8, "", 0);
MakeByte(0x410CB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410CB9, 0x410CBC);
MakeByte(0x410CBC);
MakeDword(0x410CBD);
MakeDword(0x410CC1);
MakeDword(0x410CC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410CC9, 0x410CD1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410CD1, 0x410CD7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410CD7, 0x410CDE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410CDE, 0x410CE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410CE5, 0x410CED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410CED, 0x410CF6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410CF6, 0x410CFF);
MakeUnkn(0x410D08, 1);
MakeNameEx(0x410D08, "RTTI_410D08_Set_TShiftState", 0);
MakeDword(0x410D08);
MakeUnkn(0x410D0C, 1);
MakeNameEx(0x410D0C, "", 0);
MakeByte(0x410D0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410D0D, 0x410D19);
MakeByte(0x410D19);
MakeDword(0x410D1A);
MakeUnkn(0x410D20, 1);
MakeNameEx(0x410D20, "RTTI_410D20_Integer_THelpContext", 0);
MakeDword(0x410D20);
MakeUnkn(0x410D24, 1);
MakeNameEx(0x410D24, "", 0);
MakeByte(0x410D24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410D25, 0x410D32);
MakeByte(0x410D32);
MakeDword(0x410D33);
MakeDword(0x410D37);
MakeUnkn(0x410D3C, 1);
MakeNameEx(0x410D3C, "RTTI_410D3C_Enumeration_THelpType", 0);
MakeDword(0x410D3C);
MakeUnkn(0x410D40, 1);
MakeNameEx(0x410D40, "", 0);
MakeByte(0x410D40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410D41, 0x410D4B);
MakeByte(0x410D4B);
MakeDword(0x410D4C);
MakeDword(0x410D50);
MakeDword(0x410D54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410D58, 0x410D62);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410D62, 0x410D6C);
MakeUnkn(0x410D74, 1);
MakeNameEx(0x410D74, "RTTI_410D74_Integer_TShortCut", 0);
MakeDword(0x410D74);
MakeUnkn(0x410D78, 1);
MakeNameEx(0x410D78, "", 0);
MakeByte(0x410D78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410D79, 0x410D83);
MakeByte(0x410D83);
MakeDword(0x410D84);
MakeDword(0x410D88);
MakeUnkn(0x410D8C, 1);
MakeNameEx(0x410D8C, "RTTI_410D8C_Method_TNotifyEvent", 0);
MakeDword(0x410D8C);
MakeUnkn(0x410D90, 1);
MakeNameEx(0x410D90, "", 0);
MakeByte(0x410D90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410D91, 0x410D9E);
MakeByte(0x410D9E);
MakeByte(0x410D9F);
MakeByte(0x410DA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410DA1, 0x410DA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410DA8, 0x410DB0);
MakeByte(0x410DB0);
MakeDword(0x410DB1);
MakeUnkn(0x410DB8, 1);
MakeNameEx(0x410DB8, "VMT_410DB8_EStreamError", 0);
MakeDword(0x410DB8);
MakeDword(0x410DBC);
MakeDword(0x410DC0);
MakeDword(0x410DC4);
MakeDword(0x410DC8);
MakeDword(0x410DCC);
MakeDword(0x410DD0);
MakeDword(0x410DD4);
MakeDword(0x410DD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410E04, 0x410E11);
MakeDword(0x410DDC);
MakeDword(0x410DE0);
MakeDword(0x410DE4);
MakeDword(0x410DE8);
MakeDword(0x410DEC);
MakeDword(0x410DF0);
MakeDword(0x410DF4);
MakeDword(0x410DF8);
MakeDword(0x410DFC);
MakeDword(0x410E00);
MakeUnkn(0x410E14, 1);
MakeNameEx(0x410E14, "VMT_410E14_EFileStreamError", 0);
MakeDword(0x410E14);
MakeDword(0x410E18);
MakeDword(0x410E1C);
MakeDword(0x410E20);
MakeDword(0x410E24);
MakeDword(0x410E28);
MakeDword(0x410E2C);
MakeDword(0x410E30);
MakeDword(0x410E34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410E60, 0x410E71);
MakeDword(0x410E38);
MakeDword(0x410E3C);
MakeDword(0x410E40);
MakeDword(0x410E44);
MakeDword(0x410E48);
MakeDword(0x410E4C);
MakeDword(0x410E50);
MakeDword(0x410E54);
MakeDword(0x410E58);
MakeDword(0x410E5C);
MakeUnkn(0x410E74, 1);
MakeNameEx(0x410E74, "VMT_410E74_EFCreateError", 0);
MakeDword(0x410E74);
MakeDword(0x410E78);
MakeDword(0x410E7C);
MakeDword(0x410E80);
MakeDword(0x410E84);
MakeDword(0x410E88);
MakeDword(0x410E8C);
MakeDword(0x410E90);
MakeDword(0x410E94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410EC0, 0x410ECE);
MakeDword(0x410E98);
MakeDword(0x410E9C);
MakeDword(0x410EA0);
MakeDword(0x410EA4);
MakeDword(0x410EA8);
MakeDword(0x410EAC);
MakeDword(0x410EB0);
MakeDword(0x410EB4);
MakeDword(0x410EB8);
MakeDword(0x410EBC);
MakeUnkn(0x410ED0, 1);
MakeNameEx(0x410ED0, "VMT_410ED0_EFOpenError", 0);
MakeDword(0x410ED0);
MakeDword(0x410ED4);
MakeDword(0x410ED8);
MakeDword(0x410EDC);
MakeDword(0x410EE0);
MakeDword(0x410EE4);
MakeDword(0x410EE8);
MakeDword(0x410EEC);
MakeDword(0x410EF0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410F1C, 0x410F28);
MakeDword(0x410EF4);
MakeDword(0x410EF8);
MakeDword(0x410EFC);
MakeDword(0x410F00);
MakeDword(0x410F04);
MakeDword(0x410F08);
MakeDword(0x410F0C);
MakeDword(0x410F10);
MakeDword(0x410F14);
MakeDword(0x410F18);
MakeUnkn(0x410F28, 1);
MakeNameEx(0x410F28, "VMT_410F28_EFilerError", 0);
MakeDword(0x410F28);
MakeDword(0x410F2C);
MakeDword(0x410F30);
MakeDword(0x410F34);
MakeDword(0x410F38);
MakeDword(0x410F3C);
MakeDword(0x410F40);
MakeDword(0x410F44);
MakeDword(0x410F48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410F74, 0x410F80);
MakeDword(0x410F4C);
MakeDword(0x410F50);
MakeDword(0x410F54);
MakeDword(0x410F58);
MakeDword(0x410F5C);
MakeDword(0x410F60);
MakeDword(0x410F64);
MakeDword(0x410F68);
MakeDword(0x410F6C);
MakeDword(0x410F70);
MakeUnkn(0x410F80, 1);
MakeNameEx(0x410F80, "VMT_410F80_EReadError", 0);
MakeDword(0x410F80);
MakeDword(0x410F84);
MakeDword(0x410F88);
MakeDword(0x410F8C);
MakeDword(0x410F90);
MakeDword(0x410F94);
MakeDword(0x410F98);
MakeDword(0x410F9C);
MakeDword(0x410FA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x410FCC, 0x410FD7);
MakeDword(0x410FA4);
MakeDword(0x410FA8);
MakeDword(0x410FAC);
MakeDword(0x410FB0);
MakeDword(0x410FB4);
MakeDword(0x410FB8);
MakeDword(0x410FBC);
MakeDword(0x410FC0);
MakeDword(0x410FC4);
MakeDword(0x410FC8);
MakeUnkn(0x410FD8, 1);
MakeNameEx(0x410FD8, "VMT_410FD8_EWriteError", 0);
MakeDword(0x410FD8);
MakeDword(0x410FDC);
MakeDword(0x410FE0);
MakeDword(0x410FE4);
MakeDword(0x410FE8);
MakeDword(0x410FEC);
MakeDword(0x410FF0);
MakeDword(0x410FF4);
MakeDword(0x410FF8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411024, 0x411030);
MakeDword(0x410FFC);
MakeDword(0x411000);
MakeDword(0x411004);
MakeDword(0x411008);
MakeDword(0x41100C);
MakeDword(0x411010);
MakeDword(0x411014);
MakeDword(0x411018);
MakeDword(0x41101C);
MakeDword(0x411020);
MakeUnkn(0x411030, 1);
MakeNameEx(0x411030, "VMT_411030_EClassNotFound", 0);
MakeDword(0x411030);
MakeDword(0x411034);
MakeDword(0x411038);
MakeDword(0x41103C);
MakeDword(0x411040);
MakeDword(0x411044);
MakeDword(0x411048);
MakeDword(0x41104C);
MakeDword(0x411050);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41107C, 0x41108B);
MakeDword(0x411054);
MakeDword(0x411058);
MakeDword(0x41105C);
MakeDword(0x411060);
MakeDword(0x411064);
MakeDword(0x411068);
MakeDword(0x41106C);
MakeDword(0x411070);
MakeDword(0x411074);
MakeDword(0x411078);
MakeUnkn(0x41108C, 1);
MakeNameEx(0x41108C, "VMT_41108C_EResNotFound", 0);
MakeDword(0x41108C);
MakeDword(0x411090);
MakeDword(0x411094);
MakeDword(0x411098);
MakeDword(0x41109C);
MakeDword(0x4110A0);
MakeDword(0x4110A4);
MakeDword(0x4110A8);
MakeDword(0x4110AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4110D8, 0x4110E5);
MakeDword(0x4110B0);
MakeDword(0x4110B4);
MakeDword(0x4110B8);
MakeDword(0x4110BC);
MakeDword(0x4110C0);
MakeDword(0x4110C4);
MakeDword(0x4110C8);
MakeDword(0x4110CC);
MakeDword(0x4110D0);
MakeDword(0x4110D4);
MakeUnkn(0x4110E8, 1);
MakeNameEx(0x4110E8, "VMT_4110E8_EListError", 0);
MakeDword(0x4110E8);
MakeDword(0x4110EC);
MakeDword(0x4110F0);
MakeDword(0x4110F4);
MakeDword(0x4110F8);
MakeDword(0x4110FC);
MakeDword(0x411100);
MakeDword(0x411104);
MakeDword(0x411108);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411134, 0x41113F);
MakeDword(0x41110C);
MakeDword(0x411110);
MakeDword(0x411114);
MakeDword(0x411118);
MakeDword(0x41111C);
MakeDword(0x411120);
MakeDword(0x411124);
MakeDword(0x411128);
MakeDword(0x41112C);
MakeDword(0x411130);
MakeUnkn(0x411140, 1);
MakeNameEx(0x411140, "VMT_411140_EBitsError", 0);
MakeDword(0x411140);
MakeDword(0x411144);
MakeDword(0x411148);
MakeDword(0x41114C);
MakeDword(0x411150);
MakeDword(0x411154);
MakeDword(0x411158);
MakeDword(0x41115C);
MakeDword(0x411160);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41118C, 0x411197);
MakeDword(0x411164);
MakeDword(0x411168);
MakeDword(0x41116C);
MakeDword(0x411170);
MakeDword(0x411174);
MakeDword(0x411178);
MakeDword(0x41117C);
MakeDword(0x411180);
MakeDword(0x411184);
MakeDword(0x411188);
MakeUnkn(0x411198, 1);
MakeNameEx(0x411198, "VMT_411198_EStringListError", 0);
MakeDword(0x411198);
MakeDword(0x41119C);
MakeDword(0x4111A0);
MakeDword(0x4111A4);
MakeDword(0x4111A8);
MakeDword(0x4111AC);
MakeDword(0x4111B0);
MakeDword(0x4111B4);
MakeDword(0x4111B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4111E4, 0x4111F5);
MakeDword(0x4111BC);
MakeDword(0x4111C0);
MakeDword(0x4111C4);
MakeDword(0x4111C8);
MakeDword(0x4111CC);
MakeDword(0x4111D0);
MakeDword(0x4111D4);
MakeDword(0x4111D8);
MakeDword(0x4111DC);
MakeDword(0x4111E0);
MakeUnkn(0x4111F8, 1);
MakeNameEx(0x4111F8, "VMT_4111F8_EComponentError", 0);
MakeDword(0x4111F8);
MakeDword(0x4111FC);
MakeDword(0x411200);
MakeDword(0x411204);
MakeDword(0x411208);
MakeDword(0x41120C);
MakeDword(0x411210);
MakeDword(0x411214);
MakeDword(0x411218);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411244, 0x411254);
MakeDword(0x41121C);
MakeDword(0x411220);
MakeDword(0x411224);
MakeDword(0x411228);
MakeDword(0x41122C);
MakeDword(0x411230);
MakeDword(0x411234);
MakeDword(0x411238);
MakeDword(0x41123C);
MakeDword(0x411240);
MakeCode(0x411221);
MakeCode(0x41126A);
MakeCode(0x411295);
MakeCode(0x4112BA);
MakeCode(0x4112C4);
MakeCode(0x4112C6);
MakeCode(0x4112F5);
MakeCode(0x4112FE);
MakeCode(0x41131F);
MakeCode(0x411322);
MakeCode(0x411363);
MakeCode(0x411382);
MakeFunction(0x411221, 0x411385);
MakeUnkn(0x4113CC, 1);
MakeNameEx(0x4113CC, "VMT_4113CC_TBits", 0);
MakeDword(0x4113CC);
MakeDword(0x4113D0);
MakeDword(0x4113D4);
MakeDword(0x4113D8);
MakeDword(0x4113DC);
MakeDword(0x4113E0);
MakeDword(0x4113E4);
MakeDword(0x4113E8);
MakeDword(0x4113EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411418, 0x41141E);
MakeDword(0x4113F0);
MakeDword(0x4113F4);
MakeDword(0x4113F8);
MakeDword(0x4113FC);
MakeDword(0x411400);
MakeDword(0x411404);
MakeDword(0x411408);
MakeDword(0x41140C);
MakeDword(0x411410);
MakeDword(0x411414);
MakeUnkn(0x411420, 1);
MakeNameEx(0x411420, "VMT_411420_TPersistent", 0);
MakeDword(0x411420);
MakeDword(0x411424);
MakeDword(0x411428);
MakeDword(0x41142C);
MakeDword(0x411430);
MakeDword(0x411434);
MakeDword(0x411438);
MakeDword(0x41143C);
MakeUnkn(0x411478, 1);
MakeNameEx(0x411478, "TPersistent_DynamicTable", 0);
MakeWord(0x411478);
MakeWord(0x41147A);
MakeWord(0x41147C);
MakeDword(0x41147E);
MakeDword(0x411482);
MakeDword(0x411440);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411486, 0x411492);
MakeDword(0x411444);
MakeDword(0x411448);
MakeDword(0x41144C);
MakeDword(0x411450);
MakeDword(0x411454);
MakeDword(0x411458);
MakeDword(0x41145C);
MakeDword(0x411460);
MakeDword(0x411464);
MakeDword(0x411468);
MakeComm(0x41146C, "'+0'");
MakeDword(0x41146C);
MakeComm(0x411470, "'+4'");
MakeDword(0x411470);
MakeComm(0x411474, "'+8'");
MakeDword(0x411474);
MakeUnkn(0x411494, 1);
MakeNameEx(0x411494, "RTTI_411494_Class_TPersistent", 0);
MakeDword(0x411494);
MakeUnkn(0x411498, 1);
MakeNameEx(0x411498, "", 0);
MakeByte(0x411498);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411499, 0x4114A5);
MakeDword(0x4114A5);
MakeDword(0x4114A9);
MakeWord(0x4114AD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4114AF, 0x4114B7);
MakeWord(0x4114B7);
MakeUnkn(0x411510, 1);
MakeNameEx(0x411510, "VMT_411510_TInterfacedPersistent", 0);
MakeDword(0x411510);
MakeDword(0x411514);
MakeUnkn(0x4114ED, 1);
MakeNameEx(0x4114ED, "TInterfacedPersistent_IntfTable", 0);
MakeDword(0x4114ED);
MakeByte(0x4114F1);
MakeArray(0x4114F1, 16);
MakeDword(0x411501);
MakeDword(0x4114E1);
MakeFunction(0x4114BD, -1);
MakeCode(0x4114BD);
MakeDword(0x4114E5);
MakeFunction(0x4114CB, -1);
MakeCode(0x4114CB);
MakeDword(0x4114E9);
MakeFunction(0x4114D5, -1);
MakeCode(0x4114D5);
MakeByte(0x4114BC);
MakeDword(0x411505);
MakeDword(0x411509);
MakeDword(0x411518);
MakeDword(0x41151C);
MakeUnkn(0x41156C, 1);
MakeNameEx(0x41156C, "TInterfacedPersistent_InitTable", 0);
MakeByte(0x41156C);
MakeByte(0x41156D);
MakeDword(0x41156E);
MakeDword(0x411572);
MakeDword(0x411576);
MakeDword(0x41157A);
MakeDword(0x411520);
MakeDword(0x411524);
MakeDword(0x411528);
MakeDword(0x41152C);
MakeDword(0x411530);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41157E, 0x411594);
MakeDword(0x411534);
MakeDword(0x411538);
MakeDword(0x41153C);
MakeDword(0x411540);
MakeDword(0x411544);
MakeDword(0x411548);
MakeDword(0x41154C);
MakeDword(0x411550);
MakeDword(0x411554);
MakeDword(0x411558);
MakeComm(0x41155C, "'+0'");
MakeDword(0x41155C);
MakeComm(0x411560, "'+4'");
MakeDword(0x411560);
MakeComm(0x411564, "'+8'");
MakeDword(0x411564);
MakeComm(0x411568, "'+C'");
MakeDword(0x411568);
MakeUnkn(0x411594, 1);
MakeNameEx(0x411594, "RTTI_411594_Class_TInterfacedPersistent", 0);
MakeDword(0x411594);
MakeUnkn(0x411598, 1);
MakeNameEx(0x411598, "", 0);
MakeByte(0x411598);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411599, 0x4115AF);
MakeDword(0x4115AF);
MakeDword(0x4115B3);
MakeWord(0x4115B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4115B9, 0x4115C1);
MakeWord(0x4115C1);
MakeUnkn(0x4115C4, 1);
MakeNameEx(0x4115C4, "RTTI_4115C4_Interface_IStringsAdapter", 0);
MakeDword(0x4115C4);
MakeUnkn(0x4115C8, 1);
MakeNameEx(0x4115C8, "", 0);
MakeByte(0x4115C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4115C9, 0x4115D9);
MakeDword(0x4115D9);
MakeByte(0x4115DD);
MakeByte(0x4115DE);
MakeArray(0x4115DE, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4115EE, 0x4115F6);
MakeWord(0x4115F6);
MakeWord(0x4115F8);
MakeUnkn(0x4115FC, 1);
MakeNameEx(0x4115FC, "VMT_4115FC_TStrings", 0);
MakeDword(0x4115FC);
MakeDword(0x411600);
MakeDword(0x411604);
MakeDword(0x411608);
MakeUnkn(0x4116C8, 1);
MakeNameEx(0x4116C8, "TStrings_InitTable", 0);
MakeByte(0x4116C8);
MakeByte(0x4116C9);
MakeDword(0x4116CA);
MakeDword(0x4116CE);
MakeDword(0x4116D2);
MakeDword(0x4116D6);
MakeDword(0x41160C);
MakeDword(0x411610);
MakeDword(0x411614);
MakeDword(0x411618);
MakeDword(0x41161C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4116DA, 0x4116E3);
MakeDword(0x411620);
MakeDword(0x411624);
MakeDword(0x411628);
MakeDword(0x41162C);
MakeDword(0x411630);
MakeDword(0x411634);
MakeDword(0x411638);
MakeDword(0x41163C);
MakeDword(0x411640);
MakeDword(0x411644);
MakeComm(0x411648, "'+0'");
MakeDword(0x411648);
MakeComm(0x41164C, "'+4'");
MakeDword(0x41164C);
MakeComm(0x411650, "'+8'");
MakeDword(0x411650);
MakeComm(0x411654, "'+C'");
MakeDword(0x411654);
MakeComm(0x411658, "'+10'");
MakeDword(0x411658);
MakeComm(0x41165C, "'+14'");
MakeDword(0x41165C);
MakeComm(0x411660, "'+18'");
MakeDword(0x411660);
MakeComm(0x411664, "'+1C'");
MakeDword(0x411664);
MakeComm(0x411668, "'+20'");
MakeDword(0x411668);
MakeComm(0x41166C, "'+24'");
MakeDword(0x41166C);
MakeComm(0x411670, "'+28'");
MakeDword(0x411670);
MakeComm(0x411674, "'+2C'");
MakeDword(0x411674);
MakeComm(0x411678, "'+30'");
MakeDword(0x411678);
MakeComm(0x41167C, "'+34'");
MakeDword(0x41167C);
MakeComm(0x411680, "'+38'");
MakeDword(0x411680);
MakeComm(0x411684, "'+3C'");
MakeDword(0x411684);
MakeComm(0x411688, "'+40'");
MakeDword(0x411688);
MakeComm(0x41168C, "'+44'");
MakeDword(0x41168C);
MakeComm(0x411690, "'+48'");
MakeDword(0x411690);
MakeComm(0x411694, "'+4C'");
MakeDword(0x411694);
MakeComm(0x411698, "'+50'");
MakeDword(0x411698);
MakeComm(0x41169C, "'+54'");
MakeDword(0x41169C);
MakeComm(0x4116A0, "'+58'");
MakeDword(0x4116A0);
MakeComm(0x4116A4, "'+5C'");
MakeDword(0x4116A4);
MakeComm(0x4116A8, "'+60'");
MakeDword(0x4116A8);
MakeComm(0x4116AC, "'+64'");
MakeDword(0x4116AC);
MakeComm(0x4116B0, "'+68'");
MakeDword(0x4116B0);
MakeComm(0x4116B4, "'+6C'");
MakeDword(0x4116B4);
MakeComm(0x4116B8, "'+70'");
MakeDword(0x4116B8);
MakeComm(0x4116BC, "'+74'");
MakeDword(0x4116BC);
MakeComm(0x4116C0, "'+78'");
MakeDword(0x4116C0);
MakeComm(0x4116C4, "'+7C'");
MakeDword(0x4116C4);
MakeUnkn(0x4116E4, 1);
MakeNameEx(0x4116E4, "RTTI_4116E4_Class_TStrings", 0);
MakeDword(0x4116E4);
MakeUnkn(0x4116E8, 1);
MakeNameEx(0x4116E8, "", 0);
MakeByte(0x4116E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4116E9, 0x4116F2);
MakeDword(0x4116F2);
MakeDword(0x4116F6);
MakeWord(0x4116FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4116FC, 0x411704);
MakeWord(0x411704);
MakeUnkn(0x411708, 1);
MakeNameEx(0x411708, "RTTI_411708_Record_TStringItem", 0);
MakeDword(0x411708);
MakeUnkn(0x41170C, 1);
MakeNameEx(0x41170C, "", 0);
MakeByte(0x41170C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41170D, 0x411719);
MakeDword(0x411719);
MakeDword(0x41171D);
MakeDword(0x411721);
MakeDword(0x411725);
MakeUnkn(0x41172C, 1);
MakeNameEx(0x41172C, "VMT_41172C_TStringList", 0);
MakeDword(0x41172C);
MakeDword(0x411730);
MakeDword(0x411734);
MakeDword(0x411738);
MakeDword(0x41173C);
MakeDword(0x411740);
MakeDword(0x411744);
MakeDword(0x411748);
MakeDword(0x41174C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411810, 0x41181C);
MakeDword(0x411750);
MakeDword(0x411754);
MakeDword(0x411758);
MakeDword(0x41175C);
MakeDword(0x411760);
MakeDword(0x411764);
MakeDword(0x411768);
MakeDword(0x41176C);
MakeDword(0x411770);
MakeDword(0x411774);
MakeComm(0x411778, "'+0'");
MakeDword(0x411778);
MakeComm(0x41177C, "'+4'");
MakeDword(0x41177C);
MakeComm(0x411780, "'+8'");
MakeDword(0x411780);
MakeComm(0x411784, "'+C'");
MakeDword(0x411784);
MakeComm(0x411788, "'+10'");
MakeDword(0x411788);
MakeComm(0x41178C, "'+14'");
MakeDword(0x41178C);
MakeComm(0x411790, "'+18'");
MakeDword(0x411790);
MakeComm(0x411794, "'+1C'");
MakeDword(0x411794);
MakeComm(0x411798, "'+20'");
MakeDword(0x411798);
MakeComm(0x41179C, "'+24'");
MakeDword(0x41179C);
MakeComm(0x4117A0, "'+28'");
MakeDword(0x4117A0);
MakeComm(0x4117A4, "'+2C'");
MakeDword(0x4117A4);
MakeComm(0x4117A8, "'+30'");
MakeDword(0x4117A8);
MakeComm(0x4117AC, "'+34'");
MakeDword(0x4117AC);
MakeComm(0x4117B0, "'+38'");
MakeDword(0x4117B0);
MakeComm(0x4117B4, "'+3C'");
MakeDword(0x4117B4);
MakeComm(0x4117B8, "'+40'");
MakeDword(0x4117B8);
MakeComm(0x4117BC, "'+44'");
MakeDword(0x4117BC);
MakeComm(0x4117C0, "'+48'");
MakeDword(0x4117C0);
MakeComm(0x4117C4, "'+4C'");
MakeDword(0x4117C4);
MakeComm(0x4117C8, "'+50'");
MakeDword(0x4117C8);
MakeComm(0x4117CC, "'+54'");
MakeDword(0x4117CC);
MakeComm(0x4117D0, "'+58'");
MakeDword(0x4117D0);
MakeComm(0x4117D4, "'+5C'");
MakeDword(0x4117D4);
MakeComm(0x4117D8, "'+60'");
MakeDword(0x4117D8);
MakeComm(0x4117DC, "'+64'");
MakeDword(0x4117DC);
MakeComm(0x4117E0, "'+68'");
MakeDword(0x4117E0);
MakeComm(0x4117E4, "'+6C'");
MakeDword(0x4117E4);
MakeComm(0x4117E8, "'+70'");
MakeDword(0x4117E8);
MakeComm(0x4117EC, "'+74'");
MakeDword(0x4117EC);
MakeComm(0x4117F0, "'+78'");
MakeDword(0x4117F0);
MakeComm(0x4117F4, "'+7C'");
MakeDword(0x4117F4);
MakeComm(0x4117F8, "'+80'");
MakeDword(0x4117F8);
MakeComm(0x4117FC, "'+84'");
MakeDword(0x4117FC);
MakeComm(0x411800, "'+88'");
MakeDword(0x411800);
MakeComm(0x411804, "'+8C'");
MakeDword(0x411804);
MakeComm(0x411808, "'+90'");
MakeDword(0x411808);
MakeComm(0x41180C, "'+94'");
MakeDword(0x41180C);
MakeUnkn(0x41181C, 1);
MakeNameEx(0x41181C, "RTTI_41181C_Class_TStringList", 0);
MakeDword(0x41181C);
MakeUnkn(0x411820, 1);
MakeNameEx(0x411820, "", 0);
MakeByte(0x411820);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411821, 0x41182D);
MakeDword(0x41182D);
MakeDword(0x411831);
MakeWord(0x411835);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411837, 0x41183F);
MakeWord(0x41183F);
MakeUnkn(0x411844, 1);
MakeNameEx(0x411844, "VMT_411844_TStream", 0);
MakeDword(0x411844);
MakeDword(0x411848);
MakeDword(0x41184C);
MakeDword(0x411850);
MakeDword(0x411854);
MakeDword(0x411858);
MakeDword(0x41185C);
MakeDword(0x411860);
MakeDword(0x411864);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4118AC, 0x4118B4);
MakeDword(0x411868);
MakeDword(0x41186C);
MakeDword(0x411870);
MakeDword(0x411874);
MakeDword(0x411878);
MakeDword(0x41187C);
MakeDword(0x411880);
MakeDword(0x411884);
MakeDword(0x411888);
MakeDword(0x41188C);
MakeComm(0x411890, "'+0'");
MakeDword(0x411890);
MakeComm(0x411894, "'+4'");
MakeDword(0x411894);
MakeComm(0x411898, "'+8'");
MakeDword(0x411898);
MakeComm(0x41189C, "'+C'");
MakeDword(0x41189C);
MakeComm(0x4118A0, "'+10'");
MakeDword(0x4118A0);
MakeComm(0x4118A4, "'+14'");
MakeDword(0x4118A4);
MakeComm(0x4118A8, "'+18'");
MakeDword(0x4118A8);
MakeUnkn(0x4118B4, 1);
MakeNameEx(0x4118B4, "VMT_4118B4_THandleStream", 0);
MakeDword(0x4118B4);
MakeDword(0x4118B8);
MakeDword(0x4118BC);
MakeDword(0x4118C0);
MakeDword(0x4118C4);
MakeDword(0x4118C8);
MakeDword(0x4118CC);
MakeDword(0x4118D0);
MakeDword(0x4118D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41191C, 0x41192A);
MakeDword(0x4118D8);
MakeDword(0x4118DC);
MakeDword(0x4118E0);
MakeDword(0x4118E4);
MakeDword(0x4118E8);
MakeDword(0x4118EC);
MakeDword(0x4118F0);
MakeDword(0x4118F4);
MakeDword(0x4118F8);
MakeDword(0x4118FC);
MakeComm(0x411900, "'+0'");
MakeDword(0x411900);
MakeComm(0x411904, "'+4'");
MakeDword(0x411904);
MakeComm(0x411908, "'+8'");
MakeDword(0x411908);
MakeComm(0x41190C, "'+C'");
MakeDword(0x41190C);
MakeComm(0x411910, "'+10'");
MakeDword(0x411910);
MakeComm(0x411914, "'+14'");
MakeDword(0x411914);
MakeComm(0x411918, "'+18'");
MakeDword(0x411918);
MakeUnkn(0x41192C, 1);
MakeNameEx(0x41192C, "VMT_41192C_TFileStream", 0);
MakeDword(0x41192C);
MakeDword(0x411930);
MakeDword(0x411934);
MakeDword(0x411938);
MakeDword(0x41193C);
MakeDword(0x411940);
MakeDword(0x411944);
MakeDword(0x411948);
MakeDword(0x41194C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411994, 0x4119A0);
MakeDword(0x411950);
MakeDword(0x411954);
MakeDword(0x411958);
MakeDword(0x41195C);
MakeDword(0x411960);
MakeDword(0x411964);
MakeDword(0x411968);
MakeDword(0x41196C);
MakeDword(0x411970);
MakeDword(0x411974);
MakeComm(0x411978, "'+0'");
MakeDword(0x411978);
MakeComm(0x41197C, "'+4'");
MakeDword(0x41197C);
MakeComm(0x411980, "'+8'");
MakeDword(0x411980);
MakeComm(0x411984, "'+C'");
MakeDword(0x411984);
MakeComm(0x411988, "'+10'");
MakeDword(0x411988);
MakeComm(0x41198C, "'+14'");
MakeDword(0x41198C);
MakeComm(0x411990, "'+18'");
MakeDword(0x411990);
MakeUnkn(0x4119A0, 1);
MakeNameEx(0x4119A0, "VMT_4119A0_TCustomMemoryStream", 0);
MakeDword(0x4119A0);
MakeDword(0x4119A4);
MakeDword(0x4119A8);
MakeDword(0x4119AC);
MakeDword(0x4119B0);
MakeDword(0x4119B4);
MakeDword(0x4119B8);
MakeDword(0x4119BC);
MakeDword(0x4119C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411A08, 0x411A1C);
MakeDword(0x4119C4);
MakeDword(0x4119C8);
MakeDword(0x4119CC);
MakeDword(0x4119D0);
MakeDword(0x4119D4);
MakeDword(0x4119D8);
MakeDword(0x4119DC);
MakeDword(0x4119E0);
MakeDword(0x4119E4);
MakeDword(0x4119E8);
MakeComm(0x4119EC, "'+0'");
MakeDword(0x4119EC);
MakeComm(0x4119F0, "'+4'");
MakeDword(0x4119F0);
MakeComm(0x4119F4, "'+8'");
MakeDword(0x4119F4);
MakeComm(0x4119F8, "'+C'");
MakeDword(0x4119F8);
MakeComm(0x4119FC, "'+10'");
MakeDword(0x4119FC);
MakeComm(0x411A00, "'+14'");
MakeDword(0x411A00);
MakeComm(0x411A04, "'+18'");
MakeDword(0x411A04);
MakeUnkn(0x411A1C, 1);
MakeNameEx(0x411A1C, "VMT_411A1C_TMemoryStream", 0);
MakeDword(0x411A1C);
MakeDword(0x411A20);
MakeDword(0x411A24);
MakeDword(0x411A28);
MakeDword(0x411A2C);
MakeDword(0x411A30);
MakeDword(0x411A34);
MakeDword(0x411A38);
MakeDword(0x411A3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411A88, 0x411A96);
MakeDword(0x411A40);
MakeDword(0x411A44);
MakeDword(0x411A48);
MakeDword(0x411A4C);
MakeDword(0x411A50);
MakeDword(0x411A54);
MakeDword(0x411A58);
MakeDword(0x411A5C);
MakeDword(0x411A60);
MakeDword(0x411A64);
MakeComm(0x411A68, "'+0'");
MakeDword(0x411A68);
MakeComm(0x411A6C, "'+4'");
MakeDword(0x411A6C);
MakeComm(0x411A70, "'+8'");
MakeDword(0x411A70);
MakeComm(0x411A74, "'+C'");
MakeDword(0x411A74);
MakeComm(0x411A78, "'+10'");
MakeDword(0x411A78);
MakeComm(0x411A7C, "'+14'");
MakeDword(0x411A7C);
MakeComm(0x411A80, "'+18'");
MakeDword(0x411A80);
MakeComm(0x411A84, "'+1C'");
MakeDword(0x411A84);
MakeUnkn(0x411A98, 1);
MakeNameEx(0x411A98, "VMT_411A98_TResourceStream", 0);
MakeDword(0x411A98);
MakeDword(0x411A9C);
MakeDword(0x411AA0);
MakeDword(0x411AA4);
MakeDword(0x411AA8);
MakeDword(0x411AAC);
MakeDword(0x411AB0);
MakeDword(0x411AB4);
MakeDword(0x411AB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411B00, 0x411B10);
MakeDword(0x411ABC);
MakeDword(0x411AC0);
MakeDword(0x411AC4);
MakeDword(0x411AC8);
MakeDword(0x411ACC);
MakeDword(0x411AD0);
MakeDword(0x411AD4);
MakeDword(0x411AD8);
MakeDword(0x411ADC);
MakeDword(0x411AE0);
MakeComm(0x411AE4, "'+0'");
MakeDword(0x411AE4);
MakeComm(0x411AE8, "'+4'");
MakeDword(0x411AE8);
MakeComm(0x411AEC, "'+8'");
MakeDword(0x411AEC);
MakeComm(0x411AF0, "'+C'");
MakeDword(0x411AF0);
MakeComm(0x411AF4, "'+10'");
MakeDword(0x411AF4);
MakeComm(0x411AF8, "'+14'");
MakeDword(0x411AF8);
MakeComm(0x411AFC, "'+18'");
MakeDword(0x411AFC);
MakeUnkn(0x411C24, 1);
MakeNameEx(0x411C24, "VMT_411C24_TStreamAdapter", 0);
MakeDword(0x411C24);
MakeDword(0x411C28);
MakeUnkn(0x411C02, 1);
MakeNameEx(0x411C02, "TStreamAdapter_IntfTable", 0);
MakeDword(0x411C02);
MakeByte(0x411C06);
MakeArray(0x411C06, 16);
MakeDword(0x411C16);
MakeDword(0x411BCA);
MakeFunction(0x411BAA, -1);
MakeCode(0x411BAA);
MakeDword(0x411BCE);
MakeFunction(0x411BB4, -1);
MakeCode(0x411BB4);
MakeDword(0x411BD2);
MakeFunction(0x411BBE, -1);
MakeCode(0x411BBE);
MakeDword(0x411BD6);
MakeFunction(0x411B8F, -1);
MakeCode(0x411B8F);
MakeDword(0x411BDA);
MakeFunction(0x411B9C, -1);
MakeCode(0x411B9C);
MakeDword(0x411BDE);
MakeFunction(0x411B11, -1);
MakeCode(0x411B11);
MakeDword(0x411BE2);
MakeFunction(0x411B1F, -1);
MakeCode(0x411B1F);
MakeDword(0x411BE6);
MakeFunction(0x411B2D, -1);
MakeCode(0x411B2D);
MakeDword(0x411BEA);
MakeFunction(0x411B3B, -1);
MakeCode(0x411B3B);
MakeDword(0x411BEE);
MakeFunction(0x411B49, -1);
MakeCode(0x411B49);
MakeDword(0x411BF2);
MakeFunction(0x411B57, -1);
MakeCode(0x411B57);
MakeDword(0x411BF6);
MakeFunction(0x411B65, -1);
MakeCode(0x411B65);
MakeDword(0x411BFA);
MakeFunction(0x411B73, -1);
MakeCode(0x411B73);
MakeDword(0x411BFE);
MakeFunction(0x411B81, -1);
MakeCode(0x411B81);
MakeByte(0x411B10);
MakeDword(0x411C1A);
MakeDword(0x411C1E);
MakeDword(0x411C2C);
MakeDword(0x411C30);
MakeDword(0x411C34);
MakeDword(0x411C38);
MakeDword(0x411C3C);
MakeDword(0x411C40);
MakeDword(0x411C44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411C9C, 0x411CAB);
MakeDword(0x411C48);
MakeDword(0x411C4C);
MakeDword(0x411C50);
MakeDword(0x411C54);
MakeDword(0x411C58);
MakeDword(0x411C5C);
MakeDword(0x411C60);
MakeDword(0x411C64);
MakeDword(0x411C68);
MakeDword(0x411C6C);
MakeComm(0x411C70, "'+0'");
MakeDword(0x411C70);
MakeComm(0x411C74, "'+4'");
MakeDword(0x411C74);
MakeComm(0x411C78, "'+8'");
MakeDword(0x411C78);
MakeComm(0x411C7C, "'+C'");
MakeDword(0x411C7C);
MakeComm(0x411C80, "'+10'");
MakeDword(0x411C80);
MakeComm(0x411C84, "'+14'");
MakeDword(0x411C84);
MakeComm(0x411C88, "'+18'");
MakeDword(0x411C88);
MakeComm(0x411C8C, "'+1C'");
MakeDword(0x411C8C);
MakeComm(0x411C90, "'+20'");
MakeDword(0x411C90);
MakeComm(0x411C94, "'+24'");
MakeDword(0x411C94);
MakeComm(0x411C98, "'+28'");
MakeDword(0x411C98);
MakeUnkn(0x411CAC, 1);
MakeNameEx(0x411CAC, "VMT_411CAC_TClassFinder", 0);
MakeDword(0x411CAC);
MakeDword(0x411CB0);
MakeDword(0x411CB4);
MakeDword(0x411CB8);
MakeDword(0x411CBC);
MakeDword(0x411CC0);
MakeDword(0x411CC4);
MakeDword(0x411CC8);
MakeDword(0x411CCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411CF8, 0x411D05);
MakeDword(0x411CD0);
MakeDword(0x411CD4);
MakeDword(0x411CD8);
MakeDword(0x411CDC);
MakeDword(0x411CE0);
MakeDword(0x411CE4);
MakeDword(0x411CE8);
MakeDword(0x411CEC);
MakeDword(0x411CF0);
MakeDword(0x411CF4);
MakeUnkn(0x411D08, 1);
MakeNameEx(0x411D08, "VMT_411D08_TFiler", 0);
MakeDword(0x411D08);
MakeDword(0x411D0C);
MakeDword(0x411D10);
MakeDword(0x411D14);
MakeDword(0x411D18);
MakeDword(0x411D1C);
MakeDword(0x411D20);
MakeDword(0x411D24);
MakeDword(0x411D28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411D64, 0x411D6B);
MakeDword(0x411D2C);
MakeDword(0x411D30);
MakeDword(0x411D34);
MakeDword(0x411D38);
MakeDword(0x411D3C);
MakeDword(0x411D40);
MakeDword(0x411D44);
MakeDword(0x411D48);
MakeDword(0x411D4C);
MakeDword(0x411D50);
MakeComm(0x411D54, "'+0'");
MakeDword(0x411D54);
MakeComm(0x411D58, "'+4'");
MakeDword(0x411D58);
MakeComm(0x411D5C, "'+8'");
MakeDword(0x411D5C);
MakeComm(0x411D60, "'+C'");
MakeDword(0x411D60);
MakeUnkn(0x411D6C, 1);
MakeNameEx(0x411D6C, "VMT_411D6C_TReader", 0);
MakeDword(0x411D6C);
MakeDword(0x411D70);
MakeDword(0x411D74);
MakeDword(0x411D78);
MakeUnkn(0x411DE0, 1);
MakeNameEx(0x411DE0, "TReader_InitTable", 0);
MakeByte(0x411DE0);
MakeByte(0x411DE1);
MakeDword(0x411DE2);
MakeDword(0x411DE6);
MakeDword(0x411DEA);
MakeDword(0x411DEE);
MakeDword(0x411D7C);
MakeDword(0x411D80);
MakeDword(0x411D84);
MakeDword(0x411D88);
MakeDword(0x411D8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411DF2, 0x411DFA);
MakeDword(0x411D90);
MakeDword(0x411D94);
MakeDword(0x411D98);
MakeDword(0x411D9C);
MakeDword(0x411DA0);
MakeDword(0x411DA4);
MakeDword(0x411DA8);
MakeDword(0x411DAC);
MakeDword(0x411DB0);
MakeDword(0x411DB4);
MakeComm(0x411DB8, "'+0'");
MakeDword(0x411DB8);
MakeComm(0x411DBC, "'+4'");
MakeDword(0x411DBC);
MakeComm(0x411DC0, "'+8'");
MakeDword(0x411DC0);
MakeComm(0x411DC4, "'+C'");
MakeDword(0x411DC4);
MakeComm(0x411DC8, "'+10'");
MakeDword(0x411DC8);
MakeComm(0x411DCC, "'+14'");
MakeDword(0x411DCC);
MakeComm(0x411DD0, "'+18'");
MakeDword(0x411DD0);
MakeComm(0x411DD4, "'+1C'");
MakeDword(0x411DD4);
MakeComm(0x411DD8, "'+20'");
MakeDword(0x411DD8);
MakeComm(0x411DDC, "'+24'");
MakeDword(0x411DDC);
MakeUnkn(0x411DFC, 1);
MakeNameEx(0x411DFC, "VMT_411DFC_EThread", 0);
MakeDword(0x411DFC);
MakeDword(0x411E00);
MakeDword(0x411E04);
MakeDword(0x411E08);
MakeDword(0x411E0C);
MakeDword(0x411E10);
MakeDword(0x411E14);
MakeDword(0x411E18);
MakeDword(0x411E1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411E48, 0x411E50);
MakeDword(0x411E20);
MakeDword(0x411E24);
MakeDword(0x411E28);
MakeDword(0x411E2C);
MakeDword(0x411E30);
MakeDword(0x411E34);
MakeDword(0x411E38);
MakeDword(0x411E3C);
MakeDword(0x411E40);
MakeDword(0x411E44);
MakeUnkn(0x411E50, 1);
MakeNameEx(0x411E50, "RTTI_411E50_AnsiString_TComponentName", 0);
MakeDword(0x411E50);
MakeUnkn(0x411E54, 1);
MakeNameEx(0x411E54, "", 0);
MakeByte(0x411E54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411E55, 0x411E64);
MakeUnkn(0x411E64, 1);
MakeNameEx(0x411E64, "RTTI_411E64_Interface_IDesignerNotify", 0);
MakeDword(0x411E64);
MakeUnkn(0x411E68, 1);
MakeNameEx(0x411E68, "", 0);
MakeByte(0x411E68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411E69, 0x411E79);
MakeDword(0x411E79);
MakeByte(0x411E7D);
MakeByte(0x411E7E);
MakeArray(0x411E7E, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x411E8E, 0x411E96);
MakeWord(0x411E96);
MakeWord(0x411E98);
MakeUnkn(0x411F44, 1);
MakeNameEx(0x411F44, "VMT_411F44_TComponent", 0);
MakeDword(0x411F44);
MakeDword(0x411F48);
MakeUnkn(0x411F06, 1);
MakeNameEx(0x411F06, "TComponent_IntfTable", 0);
MakeDword(0x411F06);
MakeByte(0x411F0A);
MakeArray(0x411F0A, 16);
MakeDword(0x411F1A);
MakeDword(0x411EEA);
MakeFunction(0x411EA5, -1);
MakeCode(0x411EA5);
MakeDword(0x411EEE);
MakeFunction(0x411EB3, -1);
MakeCode(0x411EB3);
MakeDword(0x411EF2);
MakeFunction(0x411EBD, -1);
MakeCode(0x411EBD);
MakeDword(0x411EF6);
MakeFunction(0x411E9D, -1);
MakeCode(0x411E9D);
MakeDword(0x411EFA);
MakeFunction(0x411EC7, -1);
MakeCode(0x411EC7);
MakeDword(0x411EFE);
MakeFunction(0x411ED5, -1);
MakeCode(0x411ED5);
MakeDword(0x411F02);
MakeFunction(0x411EDF, -1);
MakeCode(0x411EDF);
MakeByte(0x411E9C);
MakeDword(0x411F1E);
MakeDword(0x411F22);
MakeByte(0x411F26);
MakeArray(0x411F26, 16);
MakeDword(0x411F36);
MakeDword(0x411EFA);
MakeFunction(0x411EC7, -1);
MakeCode(0x411EC7);
MakeDword(0x411EFE);
MakeFunction(0x411ED5, -1);
MakeCode(0x411ED5);
MakeDword(0x411F02);
MakeFunction(0x411EDF, -1);
MakeCode(0x411EDF);
MakeByte(0x411EC6);
MakeDword(0x411F3A);
MakeDword(0x411F3E);
MakeDword(0x411F4C);
MakeDword(0x411F50);
MakeUnkn(0x411FC0, 1);
MakeNameEx(0x411FC0, "TComponent_InitTable", 0);
MakeByte(0x411FC0);
MakeByte(0x411FC1);
MakeDword(0x411FC2);
MakeDword(0x411FC6);
MakeDword(0x411FCA);
MakeDword(0x411FCE);
MakeDword(0x411F54);
MakeDword(0x411F58);
MakeDword(0x411F5C);
MakeDword(0x411F60);
MakeUnkn(0x411FD2, 1);
MakeNameEx(0x411FD2, "TComponent_DynamicTable", 0);
MakeWord(0x411FD2);
MakeWord(0x411FD4);
MakeWord(0x411FD6);
MakeWord(0x411FD8);
MakeWord(0x411FDA);
MakeWord(0x411FDC);
MakeWord(0x411FDE);
MakeWord(0x411FE0);
MakeWord(0x411FE2);
MakeWord(0x411FE4);
MakeWord(0x411FE6);
MakeWord(0x411FE8);
MakeWord(0x411FEA);
MakeWord(0x411FEC);
MakeWord(0x411FEE);
MakeWord(0x411FF0);
MakeWord(0x411FF2);
MakeDword(0x411FF4);
MakeDword(0x411FF8);
MakeDword(0x411FFC);
MakeDword(0x412000);
MakeDword(0x412004);
MakeDword(0x412008);
MakeDword(0x41200C);
MakeDword(0x412010);
MakeDword(0x412014);
MakeDword(0x412018);
MakeDword(0x41201C);
MakeDword(0x412020);
MakeDword(0x412024);
MakeDword(0x412028);
MakeDword(0x41202C);
MakeDword(0x412030);
MakeDword(0x411F64);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x412034, 0x41203F);
MakeDword(0x411F68);
MakeDword(0x411F6C);
MakeDword(0x411F70);
MakeDword(0x411F74);
MakeDword(0x411F78);
MakeDword(0x411F7C);
MakeDword(0x411F80);
MakeDword(0x411F84);
MakeDword(0x411F88);
MakeDword(0x411F8C);
MakeComm(0x411F90, "'+0'");
MakeDword(0x411F90);
MakeComm(0x411F94, "'+4'");
MakeDword(0x411F94);
MakeComm(0x411F98, "'+8'");
MakeDword(0x411F98);
MakeComm(0x411F9C, "'+C'");
MakeDword(0x411F9C);
MakeComm(0x411FA0, "'+10'");
MakeDword(0x411FA0);
MakeComm(0x411FA4, "'+14'");
MakeDword(0x411FA4);
MakeComm(0x411FA8, "'+18'");
MakeDword(0x411FA8);
MakeComm(0x411FAC, "'+1C'");
MakeDword(0x411FAC);
MakeComm(0x411FB0, "'+20'");
MakeDword(0x411FB0);
MakeComm(0x411FB4, "'+24'");
MakeDword(0x411FB4);
MakeComm(0x411FB8, "'+28'");
MakeDword(0x411FB8);
MakeComm(0x411FBC, "'+2C'");
MakeDword(0x411FBC);
MakeUnkn(0x412040, 1);
MakeNameEx(0x412040, "RTTI_412040_Class_TComponent", 0);
MakeDword(0x412040);
MakeUnkn(0x412044, 1);
MakeNameEx(0x412044, "", 0);
MakeByte(0x412044);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x412045, 0x412050);
MakeDword(0x412050);
MakeDword(0x412054);
MakeWord(0x412058);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41205A, 0x412062);
MakeWord(0x412062);
MakeDword(0x412064);
MakeDword(0x412068);
MakeDword(0x41206C);
MakeDword(0x412070);
MakeDword(0x412074);
MakeDword(0x412078);
MakeWord(0x41207C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41207E, 0x412083);
MakeDword(0x412083);
MakeDword(0x412087);
MakeDword(0x41208B);
MakeDword(0x41208F);
MakeDword(0x412093);
MakeDword(0x412097);
MakeWord(0x41209B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41209D, 0x4120A1);
MakeUnkn(0x4120A4, 1);
MakeNameEx(0x4120A4, "VMT_4120A4_TBasicActionLink", 0);
MakeDword(0x4120A4);
MakeDword(0x4120A8);
MakeDword(0x4120AC);
MakeDword(0x4120B0);
MakeDword(0x4120B4);
MakeDword(0x4120B8);
MakeDword(0x4120BC);
MakeDword(0x4120C0);
MakeDword(0x4120C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x412110, 0x412121);
MakeDword(0x4120C8);
MakeDword(0x4120CC);
MakeDword(0x4120D0);
MakeDword(0x4120D4);
MakeDword(0x4120D8);
MakeDword(0x4120DC);
MakeDword(0x4120E0);
MakeDword(0x4120E4);
MakeDword(0x4120E8);
MakeDword(0x4120EC);
MakeComm(0x4120F0, "'+0'");
MakeDword(0x4120F0);
MakeComm(0x4120F4, "'+4'");
MakeDword(0x4120F4);
MakeComm(0x4120F8, "'+8'");
MakeDword(0x4120F8);
MakeComm(0x4120FC, "'+C'");
MakeDword(0x4120FC);
MakeComm(0x412100, "'+10'");
MakeDword(0x412100);
MakeComm(0x412104, "'+14'");
MakeDword(0x412104);
MakeComm(0x412108, "'+18'");
MakeDword(0x412108);
MakeComm(0x41210C, "'+1C'");
MakeDword(0x41210C);
MakeUnkn(0x412124, 1);
MakeNameEx(0x412124, "VMT_412124_TBasicAction", 0);
MakeDword(0x412124);
MakeDword(0x412128);
MakeDword(0x41212C);
MakeDword(0x412130);
MakeDword(0x412134);
MakeDword(0x412138);
MakeDword(0x41213C);
MakeDword(0x412140);
MakeUnkn(0x4121B8, 1);
MakeNameEx(0x4121B8, "TBasicAction_DynamicTable", 0);
MakeWord(0x4121B8);
MakeWord(0x4121BA);
MakeDword(0x4121BC);
MakeDword(0x412144);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4121C0, 0x4121CD);
MakeDword(0x412148);
MakeDword(0x41214C);
MakeDword(0x412150);
MakeDword(0x412154);
MakeDword(0x412158);
MakeDword(0x41215C);
MakeDword(0x412160);
MakeDword(0x412164);
MakeDword(0x412168);
MakeDword(0x41216C);
MakeComm(0x412170, "'+0'");
MakeDword(0x412170);
MakeComm(0x412174, "'+4'");
MakeDword(0x412174);
MakeComm(0x412178, "'+8'");
MakeDword(0x412178);
MakeComm(0x41217C, "'+C'");
MakeDword(0x41217C);
MakeComm(0x412180, "'+10'");
MakeDword(0x412180);
MakeComm(0x412184, "'+14'");
MakeDword(0x412184);
MakeComm(0x412188, "'+18'");
MakeDword(0x412188);
MakeComm(0x41218C, "'+1C'");
MakeDword(0x41218C);
MakeComm(0x412190, "'+20'");
MakeDword(0x412190);
MakeComm(0x412194, "'+24'");
MakeDword(0x412194);
MakeComm(0x412198, "'+28'");
MakeDword(0x412198);
MakeComm(0x41219C, "'+2C'");
MakeDword(0x41219C);
MakeComm(0x4121A0, "'+30'");
MakeDword(0x4121A0);
MakeComm(0x4121A4, "'+34'");
MakeDword(0x4121A4);
MakeComm(0x4121A8, "'+38'");
MakeDword(0x4121A8);
MakeComm(0x4121AC, "'+3C'");
MakeDword(0x4121AC);
MakeComm(0x4121B0, "'+40'");
MakeDword(0x4121B0);
MakeComm(0x4121B4, "'+44'");
MakeDword(0x4121B4);
MakeUnkn(0x4121D0, 1);
MakeNameEx(0x4121D0, "RTTI_4121D0_Class_TBasicAction", 0);
MakeDword(0x4121D0);
MakeUnkn(0x4121D4, 1);
MakeNameEx(0x4121D4, "", 0);
MakeByte(0x4121D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4121D5, 0x4121E2);
MakeDword(0x4121E2);
MakeDword(0x4121E6);
MakeWord(0x4121EA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4121EC, 0x4121F4);
MakeWord(0x4121F4);
MakeUnkn(0x4121F8, 1);
MakeNameEx(0x4121F8, "RTTI_4121F8_Record_TIdentMapEntry", 0);
MakeDword(0x4121F8);
MakeUnkn(0x4121FC, 1);
MakeNameEx(0x4121FC, "", 0);
MakeByte(0x4121FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4121FD, 0x41220C);
MakeDword(0x41220C);
MakeDword(0x412210);
MakeDword(0x412214);
MakeDword(0x412218);
MakeUnkn(0x41221C, 1);
MakeNameEx(0x41221C, "Point", 0x20);
MakeComm(0x41221C, "'function Point(AX:Integer; AY:Integer):TPoint;'");
MakeCode(0x41221C);
MakeFunction(0x41221C, 0x412234);
MakeUnkn(0x412234, 1);
MakeNameEx(0x412234, "SmallPoint", 0x20);
MakeComm(0x412234, "'function SmallPoint(AX:Smallint; AY:Smallint):TSmallPoint;'");
MakeCode(0x412234);
MakeFunction(0x412234, 0x412243);
MakeUnkn(0x412244, 1);
MakeNameEx(0x412244, "Bounds", 0x20);
MakeComm(0x412244, "'function Bounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer):TRect;'");
MakeCode(0x412244);
MakeFunction(0x412244, 0x41226A);
MakeUnkn(0x41226C, 1);
MakeNameEx(0x41226C, "Rect", 0x20);
MakeComm(0x41226C, "'function Rect(ALeft:Integer; ATop:Integer; ARight:Integer; ABottom:Integer):TRect;'");
MakeCode(0x41226C);
MakeFunction(0x41226C, 0x412292);
MakeUnkn(0x412294, 1);
MakeNameEx(0x412294, "InvalidPoint", 0x20);
MakeComm(0x412294, "'function InvalidPoint(const At:TPoint):Boolean;'");
MakeCode(0x412294);
MakeCode(0x41229F);
MakeCode(0x4122A2);
MakeFunction(0x412294, 0x4122A5);
MakeUnkn(0x4122A8, 1);
MakeNameEx(0x4122A8, "VMT_4122A8_TRegGroup", 0);
MakeDword(0x4122A8);
MakeDword(0x4122AC);
MakeDword(0x4122B0);
MakeDword(0x4122B4);
MakeDword(0x4122B8);
MakeDword(0x4122BC);
MakeDword(0x4122C0);
MakeDword(0x4122C4);
MakeDword(0x4122C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4122F4, 0x4122FE);
MakeDword(0x4122CC);
MakeDword(0x4122D0);
MakeDword(0x4122D4);
MakeDword(0x4122D8);
MakeDword(0x4122DC);
MakeDword(0x4122E0);
MakeDword(0x4122E4);
MakeDword(0x4122E8);
MakeDword(0x4122EC);
MakeDword(0x4122F0);
MakeUnkn(0x412300, 1);
MakeNameEx(0x412300, "VMT_412300_TRegGroups", 0);
MakeDword(0x412300);
MakeDword(0x412304);
MakeDword(0x412308);
MakeDword(0x41230C);
MakeDword(0x412310);
MakeDword(0x412314);
MakeDword(0x412318);
MakeDword(0x41231C);
MakeDword(0x412320);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41234C, 0x412357);
MakeDword(0x412324);
MakeDword(0x412328);
MakeDword(0x41232C);
MakeDword(0x412330);
MakeDword(0x412334);
MakeDword(0x412338);
MakeDword(0x41233C);
MakeDword(0x412340);
MakeDword(0x412344);
MakeDword(0x412348);
MakeUnkn(0x412358, 1);
MakeNameEx(0x412358, "TRegGroup.AddClass", 0x20);
MakeComm(0x412358, "'procedure TRegGroup.AddClass(AClass:TPersistentClass);'");
MakeCode(0x412358);
MakeFunction(0x412358, 0x412361);
MakeUnkn(0x412364, 1);
MakeNameEx(0x412364, "TRegGroup.BestClass", 0x20);
MakeComm(0x412364, "'function TRegGroup.BestClass(AClass:TPersistentClass):TPersistentClass;'");
MakeCode(0x412364);
MakeCode(0x412385);
MakeCode(0x4123B4);
MakeCode(0x4123B6);
MakeCode(0x4123BA);
MakeFunction(0x412364, 0x4123C3);
MakeUnkn(0x4123C4, 1);
MakeNameEx(0x4123C4, "TRegGroup.BestGroup", 0x20);
MakeComm(0x4123C4, "'function TRegGroup.BestGroup(Group1:TRegGroup; Group2:TRegGroup; AClass:TPersistentClass):TRegGroup;'");
MakeCode(0x4123C4);
MakeCode(0x4123E4);
MakeCode(0x4123E6);
MakeCode(0x4123FA);
MakeCode(0x4123FC);
MakeCode(0x412408);
MakeCode(0x41240D);
MakeCode(0x412415);
MakeCode(0x412426);
MakeCode(0x412429);
MakeFunction(0x4123C4, 0x412431);
MakeUnkn(0x412434, 1);
MakeNameEx(0x412434, "TRegGroup.Create", 0x20);
MakeComm(0x412434, "'constructor TRegGroup.Create(AClass:TPersistentClass);'");
MakeCode(0x412434);
MakeCode(0x412447);
MakeCode(0x4124A6);
MakeFunction(0x412434, 0x4124AE);
MakeUnkn(0x4124B0, 1);
MakeNameEx(0x4124B0, "TRegGroup.Destroy", 0x20);
MakeComm(0x4124B0, "'destructor TRegGroup.Destroy;'");
MakeCode(0x4124B0);
MakeCode(0x4124EA);
MakeFunction(0x4124B0, 0x4124ED);
MakeUnkn(0x4124F0, 1);
MakeNameEx(0x4124F0, "TRegGroup.GetClass", 0x20);
MakeComm(0x4124F0, "'function TRegGroup.GetClass(const AClassName:AnsiString):TPersistentClass;'");
MakeCode(0x4124F0);
MakeCode(0x412508);
MakeCode(0x412526);
MakeCode(0x412545);
MakeCode(0x412547);
MakeFunction(0x4124F0, 0x41254F);
MakeUnkn(0x412550, 1);
MakeNameEx(0x412550, "TRegGroup.InGroup", 0x20);
MakeComm(0x412550, "'function TRegGroup.InGroup(AClass:TPersistentClass):Boolean;'");
MakeCode(0x412550);
MakeCode(0x41256B);
MakeCode(0x412586);
MakeCode(0x41258A);
MakeFunction(0x412550, 0x412593);
MakeUnkn(0x412594, 1);
MakeNameEx(0x412594, "TRegGroup.RegisterClass", 0x20);
MakeComm(0x412594, "'procedure TRegGroup.RegisterClass(AClass:TPersistentClass);'");
MakeCode(0x412594);
MakeCode(0x41260F);
MakeCode(0x412619);
MakeCode(0x412626);
MakeCode(0x41262F);
MakeCode(0x412634);
MakeFunction(0x412594, 0x41263C);
MakeUnkn(0x41263C, 1);
MakeNameEx(0x41263C, "TRegGroup.Registered", 0x20);
MakeComm(0x41263C, "'function TRegGroup.Registered(AClass:TPersistentClass):Boolean;'");
MakeCode(0x41263C);
MakeFunction(0x41263C, 0x412654);
MakeUnkn(0x412654, 1);
MakeNameEx(0x412654, "PointerInModule", 0x20);
MakeComm(0x412654, "'function PointerInModule(Ptr:Pointer; Module:HMODULE):Boolean;'");
MakeCode(0x412654);
MakeCode(0x41266E);
MakeFunction(0x412654, 0x412673);
MakeUnkn(0x412674, 1);
MakeNameEx(0x412674, "TRegGroup.UnregisterModuleClasses", 0x20);
MakeComm(0x412674, "'procedure TRegGroup.UnregisterModuleClasses(Module:HMODULE);'");
MakeCode(0x412674);
MakeCode(0x412687);
MakeCode(0x4126A6);
MakeCode(0x4126AC);
MakeCode(0x4126B8);
MakeCode(0x4126D7);
MakeCode(0x4126DD);
MakeCode(0x4126ED);
MakeCode(0x41270C);
MakeCode(0x412712);
MakeFunction(0x412674, 0x412716);
MakeUnkn(0x412718, 1);
MakeNameEx(0x412718, "TRegGroups.Activate", 0x20);
MakeComm(0x412718, "'procedure TRegGroups.Activate(AClass:TPersistentClass);'");
MakeCode(0x412718);
MakeCode(0x41273E);
MakeCode(0x41275B);
MakeFunction(0x412718, 0x412761);
MakeUnkn(0x412764, 1);
MakeNameEx(0x412764, "TRegGroups.Create", 0x20);
MakeComm(0x412764, "'constructor TRegGroups.Create;'");
MakeCode(0x412764);
MakeCode(0x412773);
MakeCode(0x4127CF);
MakeFunction(0x412764, 0x4127D5);
MakeUnkn(0x4127D8, 1);
MakeNameEx(0x4127D8, "TRegGroups.Destroy", 0x20);
MakeComm(0x4127D8, "'destructor TRegGroups.Destroy;'");
MakeCode(0x4127D8);
MakeCode(0x4127FC);
MakeCode(0x41280F);
MakeCode(0x41282E);
MakeFunction(0x4127D8, 0x412833);
MakeUnkn(0x412834, 1);
MakeNameEx(0x412834, "TRegGroups.FindGroup", 0x20);
MakeComm(0x412834, "'function TRegGroups.FindGroup(AClass:TPersistentClass):TRegGroup;'");
MakeCode(0x412834);
MakeCode(0x41284E);
MakeCode(0x412870);
MakeFunction(0x412834, 0x412878);
MakeUnkn(0x412878, 1);
MakeNameEx(0x412878, "TRegGroups.GetClass", 0x20);
MakeComm(0x412878, "'function TRegGroups.GetClass(const AClassName:AnsiString):TPersistentClass;'");
MakeCode(0x412878);
MakeCode(0x412892);
MakeCode(0x4128AC);
MakeCode(0x4128B4);
MakeFunction(0x412878, 0x4128BC);
MakeCode(0x4128BC);
MakeComm(0x41291C, "'EFilerError.Create'");
MakeCode(0x412926);
MakeCode(0x412933);
MakeCode(0x41293F);
MakeCode(0x412944);
MakeFunction(0x4128BC, 0x41294A);
MakeUnkn(0x41294C, 1);
MakeNameEx(0x41294C, "TRegGroups.GroupWith", 0x20);
MakeComm(0x41294C, "'procedure TRegGroups.GroupWith(AClass:TPersistentClass; AGroupClass:TPersistentClass);'");
MakeCode(0x41294C);
MakeCode(0x412979);
MakeCode(0x41299D);
MakeCode(0x4129BE);
MakeCode(0x4129FE);
MakeCode(0x412A04);
MakeCode(0x412A0C);
MakeFunction(0x41294C, 0x412A13);
MakeUnkn(0x412A14, 1);
MakeNameEx(0x412A14, "TRegGroups.Lock", 0x20);
MakeComm(0x412A14, "'procedure TRegGroups.Lock;'");
MakeCode(0x412A14);
MakeFunction(0x412A14, 0x412A1E);
MakeUnkn(0x412A20, 1);
MakeNameEx(0x412A20, "TRegGroups.RegisterClass", 0x20);
MakeComm(0x412A20, "'procedure TRegGroups.RegisterClass(AClass:TPersistentClass);'");
MakeCode(0x412A20);
MakeCode(0x412A35);
MakeFunction(0x412A20, 0x412A37);
MakeUnkn(0x412A38, 1);
MakeNameEx(0x412A38, "TRegGroups.Registered", 0x20);
MakeComm(0x412A38, "'function TRegGroups.Registered(AClass:TPersistentClass):Boolean;'");
MakeCode(0x412A38);
MakeCode(0x412A53);
MakeCode(0x412A6C);
MakeCode(0x412A70);
MakeFunction(0x412A38, 0x412A79);
MakeUnkn(0x412A7C, 1);
MakeNameEx(0x412A7C, "TRegGroups.StartGroup", 0x20);
MakeComm(0x412A7C, "'procedure TRegGroups.StartGroup(AClass:TPersistentClass);'");
MakeCode(0x412A7C);
MakeCode(0x412A92);
MakeCode(0x412AAE);
MakeCode(0x412AC6);
MakeFunction(0x412A7C, 0x412ACB);
MakeUnkn(0x412ACC, 1);
MakeNameEx(0x412ACC, "TRegGroups.Unlock", 0x20);
MakeComm(0x412ACC, "'procedure TRegGroups.Unlock;'");
MakeCode(0x412ACC);
MakeFunction(0x412ACC, 0x412AD6);
MakeUnkn(0x412AD8, 1);
MakeNameEx(0x412AD8, "TRegGroups.UnregisterModuleClasses", 0x20);
MakeComm(0x412AD8, "'procedure TRegGroups.UnregisterModuleClasses(Module:HMODULE);'");
MakeCode(0x412AD8);
MakeCode(0x412AEC);
MakeCode(0x412B1B);
MakeCode(0x412B21);
MakeFunction(0x412AD8, 0x412B26);
MakeUnkn(0x412B28, 1);
MakeNameEx(0x412B28, "TClassFinder.Create", 0x20);
MakeComm(0x412B28, "'constructor TClassFinder.Create(AClass:TPersistentClass; AIncludeActiveGroups:Boolean);'");
MakeCode(0x412B28);
MakeCode(0x412B3D);
MakeCode(0x412B8B);
MakeCode(0x412B9E);
MakeCode(0x412BCA);
MakeCode(0x412BCE);
MakeCode(0x412BE7);
MakeCode(0x412C0B);
MakeCode(0x412C0F);
MakeCode(0x412C1C);
MakeCode(0x412C27);
MakeCode(0x412C2C);
MakeCode(0x412C46);
MakeFunction(0x412B28, 0x412C52);
MakeUnkn(0x412C54, 1);
MakeNameEx(0x412C54, "TClassFinder.Destroy", 0x20);
MakeComm(0x412C54, "'destructor TClassFinder.Destroy;'");
MakeCode(0x412C54);
MakeCode(0x412C7E);
MakeFunction(0x412C54, 0x412C81);
MakeUnkn(0x412C84, 1);
MakeNameEx(0x412C84, "TClassFinder.GetClass", 0x20);
MakeComm(0x412C84, "'function TClassFinder.GetClass(const AClassName:AnsiString):TPersistentClass;'");
MakeCode(0x412C84);
MakeCode(0x412CBD);
MakeCode(0x412CDF);
MakeCode(0x412CE3);
MakeCode(0x412CF0);
MakeCode(0x412CFB);
MakeCode(0x412D00);
MakeCode(0x412D02);
MakeFunction(0x412C84, 0x412D0C);
MakeUnkn(0x412D0C, 1);
MakeNameEx(0x412D0C, "GetFieldClassTable", 0x20);
MakeComm(0x412D0C, "'function GetFieldClassTable(AClass:TClass):PFieldClassTable;'");
MakeCode(0x412D0C);
MakeFunction(0x412D0C, 0x412D17);
MakeUnkn(0x412D18, 1);
MakeNameEx(0x412D18, "ClassNotFound", 0x20);
MakeComm(0x412D18, "'procedure ClassNotFound(const ClassName:AnsiString);'");
MakeCode(0x412D18);
MakeCode(0x412D62);
MakeCode(0x412D6F);
MakeCode(0x412D78);
MakeCode(0x412D7D);
MakeFunction(0x412D18, 0x412D84);
MakeUnkn(0x412D84, 1);
MakeNameEx(0x412D84, "GetClass", 0x20);
MakeComm(0x412D84, "'function GetClass(const AClassName:AnsiString):TPersistentClass;'");
MakeCode(0x412D84);
MakeCode(0x412DB2);
MakeCode(0x412DBF);
MakeCode(0x412DCA);
MakeCode(0x412DCF);
MakeFunction(0x412D84, 0x412DD8);
MakeUnkn(0x412DD8, 1);
MakeNameEx(0x412DD8, "FindClass", 0x20);
MakeComm(0x412DD8, "'function FindClass(const ClassName:AnsiString):TPersistentClass;'");
MakeCode(0x412DD8);
MakeCode(0x412DF0);
MakeFunction(0x412DD8, 0x412DF5);
MakeUnkn(0x412DF8, 1);
MakeNameEx(0x412DF8, "RegisterClass", 0x20);
MakeComm(0x412DF8, "'procedure RegisterClass(AClass:TPersistentClass);'");
MakeCode(0x412DF8);
MakeCode(0x412E18);
MakeCode(0x412E35);
MakeCode(0x412E45);
MakeCode(0x412E52);
MakeCode(0x412E5D);
MakeCode(0x412E62);
MakeFunction(0x412DF8, 0x412E67);
MakeUnkn(0x412E68, 1);
MakeNameEx(0x412E68, "UnRegisterModuleClasses", 0x20);
MakeComm(0x412E68, "'procedure UnRegisterModuleClasses(Module:HMODULE);'");
MakeCode(0x412E68);
MakeCode(0x412E92);
MakeCode(0x412E9F);
MakeCode(0x412EAA);
MakeCode(0x412EAF);
MakeFunction(0x412E68, 0x412EB4);
MakeUnkn(0x412EB4, 1);
MakeNameEx(0x412EB4, "StartClassGroup", 0x20);
MakeComm(0x412EB4, "'procedure StartClassGroup(AClass:TPersistentClass);'");
MakeCode(0x412EB4);
MakeCode(0x412EDE);
MakeCode(0x412EEB);
MakeCode(0x412EF6);
MakeCode(0x412EFB);
MakeFunction(0x412EB4, 0x412F00);
MakeUnkn(0x412F00, 1);
MakeNameEx(0x412F00, "GroupDescendentsWith", 0x20);
MakeComm(0x412F00, "'procedure GroupDescendentsWith(AClass:TPersistentClass; AClassGroup:TPersistentClass);'");
MakeCode(0x412F00);
MakeCode(0x412F2F);
MakeCode(0x412F3C);
MakeCode(0x412F47);
MakeCode(0x412F4C);
MakeFunction(0x412F00, 0x412F52);
MakeUnkn(0x412F54, 1);
MakeNameEx(0x412F54, "ActivateClassGroup", 0x20);
MakeComm(0x412F54, "'function ActivateClassGroup(AClass:TPersistentClass):TPersistentClass;'");
MakeCode(0x412F54);
MakeCode(0x412F8A);
MakeCode(0x412F97);
MakeCode(0x412FA2);
MakeCode(0x412FA7);
MakeFunction(0x412F54, 0x412FB0);
MakeUnkn(0x412FB0, 1);
MakeNameEx(0x412FB0, "VMT_412FB0_TIntConst", 0);
MakeDword(0x412FB0);
MakeDword(0x412FB4);
MakeDword(0x412FB8);
MakeDword(0x412FBC);
MakeDword(0x412FC0);
MakeDword(0x412FC4);
MakeDword(0x412FC8);
MakeDword(0x412FCC);
MakeDword(0x412FD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x412FFC, 0x413006);
MakeDword(0x412FD4);
MakeDword(0x412FD8);
MakeDword(0x412FDC);
MakeDword(0x412FE0);
MakeDword(0x412FE4);
MakeDword(0x412FE8);
MakeDword(0x412FEC);
MakeDword(0x412FF0);
MakeDword(0x412FF4);
MakeDword(0x412FF8);
MakeUnkn(0x413008, 1);
MakeNameEx(0x413008, "TIntConst.Create", 0x20);
MakeComm(0x413008, "'constructor TIntConst.Create(AIntegerType:PTypeInfo; AIdentToInt:TIdentToInt; AIntToIdent:TIntToIdent);'");
MakeCode(0x413008);
MakeCode(0x413017);
MakeCode(0x413039);
MakeFunction(0x413008, 0x41303D);
MakeUnkn(0x413040, 1);
MakeNameEx(0x413040, "RegisterIntegerConsts", 0x20);
MakeComm(0x413040, "'procedure RegisterIntegerConsts(AIntegerType:Pointer; AIdentToInt:TIdentToInt; AIntToIdent:TIntToIdent);'");
MakeCode(0x413040);
MakeFunction(0x413040, 0x413069);
MakeUnkn(0x41306C, 1);
MakeNameEx(0x41306C, "FindIdentToInt", 0x20);
MakeComm(0x41306C, "'function FindIdentToInt(AIntegerType:Pointer):TIdentToInt;'");
MakeCode(0x41306C);
MakeCode(0x41309D);
MakeCode(0x4130B8);
MakeCode(0x4130BE);
MakeCode(0x4130CB);
MakeCode(0x4130D6);
MakeCode(0x4130DB);
MakeCode(0x4130DD);
MakeFunction(0x41306C, 0x4130E6);
MakeUnkn(0x4130E8, 1);
MakeNameEx(0x4130E8, "IdentToInt", 0x20);
MakeComm(0x4130E8, "'function IdentToInt(const Ident:AnsiString; var Int:Longint; const Map:array[$0..-$1] of TIdentMapEntry; const _Dv_:$0..-$1):Boolean;'");
MakeCode(0x4130E8);
MakeCode(0x4130FF);
MakeCode(0x413118);
MakeCode(0x41311E);
MakeCode(0x413120);
MakeFunction(0x4130E8, 0x413128);
MakeUnkn(0x413128, 1);
MakeNameEx(0x413128, "IntToIdent", 0x20);
MakeComm(0x413128, "'function IntToIdent(Int:Longint; var Ident:AnsiString; const Map:array[$0..-$1] of TIdentMapEntry; const _Dv_:$0..-$1):Boolean;'");
MakeCode(0x413128);
MakeCode(0x413141);
MakeCode(0x413155);
MakeCode(0x41315B);
MakeCode(0x41315F);
MakeFunction(0x413128, 0x41316B);
MakeUnkn(0x41316C, 1);
MakeNameEx(0x41316C, "RegisterFindGlobalComponentProc", 0x20);
MakeComm(0x41316C, "'procedure RegisterFindGlobalComponentProc(AFindGlobalComponent:TFindGlobalComponent);'");
MakeCode(0x41316C);
MakeCode(0x41318A);
MakeCode(0x4131A8);
MakeFunction(0x41316C, 0x4131AB);
MakeUnkn(0x4131AC, 1);
MakeNameEx(0x4131AC, "UnregisterFindGlobalComponentProc", 0x20);
MakeComm(0x4131AC, "'procedure UnregisterFindGlobalComponentProc(AFindGlobalComponent:TFindGlobalComponent);'");
MakeCode(0x4131AC);
MakeFunction(0x4131AC, 0x4131C2);
MakeUnkn(0x4131C4, 1);
MakeNameEx(0x4131C4, "FindGlobalComponent", 0x20);
MakeComm(0x4131C4, "'function FindGlobalComponent(const Name:AnsiString):TComponent;'");
MakeCode(0x4131C4);
MakeCode(0x4131E3);
MakeCode(0x4131FF);
MakeFunction(0x4131C4, 0x413203);
MakeUnkn(0x413204, 1);
MakeNameEx(0x413204, "IsUniqueGlobalComponentName", 0x20);
MakeComm(0x413204, "'function IsUniqueGlobalComponentName(const Name:AnsiString):Boolean;'");
MakeCode(0x413204);
MakeCode(0x41321A);
MakeFunction(0x413204, 0x413228);
MakeUnkn(0x413228, 1);
MakeNameEx(0x413228, "InternalReadComponentRes", 0x20);
MakeComm(0x413228, "'function InternalReadComponentRes(const ResName:AnsiString; HInst:THandle; var Instance:TComponent):Boolean;'");
MakeCode(0x413228);
MakeCode(0x41323F);
MakeCode(0x413286);
MakeCode(0x413293);
MakeCode(0x41329C);
MakeCode(0x4132A1);
MakeCode(0x4132A5);
MakeFunction(0x413228, 0x4132AB);
MakeUnkn(0x4132AC, 1);
MakeNameEx(0x4132AC, "BeginGlobalLoading", 0x20);
MakeComm(0x4132AC, "'procedure BeginGlobalLoading;'");
MakeCode(0x4132AC);
MakeCode(0x4132D5);
MakeFunction(0x4132AC, 0x413302);
MakeUnkn(0x413304, 1);
MakeNameEx(0x413304, "NotifyGlobalLoading", 0x20);
MakeComm(0x413304, "'procedure NotifyGlobalLoading;'");
MakeCode(0x413304);
MakeCode(0x41331D);
MakeCode(0x41332F);
MakeFunction(0x413304, 0x413333);
MakeUnkn(0x413334, 1);
MakeNameEx(0x413334, "EndGlobalLoading", 0x20);
MakeComm(0x413334, "'procedure EndGlobalLoading;'");
MakeCode(0x413334);
MakeCode(0x41338A);
MakeFunction(0x413334, 0x41338D);
MakeUnkn(0x413390, 1);
MakeNameEx(0x413390, "InitComponent", 0x20);
MakeComm(0x413390, "'function InitComponent(ClassType:TClass):Boolean;'");
MakeCode(0x413390);
MakeCode(0x413410);
MakeFunction(0x413390, 0x413435);
MakeUnkn(0x413438, 1);
MakeNameEx(0x413438, "InitInheritedComponent", 0x20);
MakeComm(0x413438, "'function InitInheritedComponent(Instance:TComponent; RootAncestor:TClass):Boolean;'");
MakeCode(0x413438);
MakeCode(0x413483);
MakeCode(0x4134AE);
MakeCode(0x4134BB);
MakeCode(0x4134C6);
MakeCode(0x4134C7);
MakeCode(0x4134CC);
MakeCode(0x4134CE);
MakeCode(0x4134DB);
MakeCode(0x4134E6);
MakeCode(0x4134EB);
MakeFunction(0x413438, 0x4134F4);
MakeUnkn(0x4134FC, 1);
MakeNameEx(0x4134FC, "TList.Destroy", 0x20);
MakeComm(0x4134FC, "'destructor TList.Destroy;'");
MakeCode(0x4134FC);
MakeCode(0x413519);
MakeFunction(0x4134FC, 0x41351C);
MakeUnkn(0x41351C, 1);
MakeNameEx(0x41351C, "TList.Add", 0x20);
MakeComm(0x41351C, "'function TList.Add(Item:Pointer):Integer;'");
MakeCode(0x41351C);
MakeCode(0x413531);
MakeCode(0x413549);
MakeFunction(0x41351C, 0x41354F);
MakeUnkn(0x413550, 1);
MakeNameEx(0x413550, "TList.Clear", 0x20);
MakeComm(0x413550, "'procedure TList.Clear;'");
MakeCode(0x413550);
MakeFunction(0x413550, 0x413567);
MakeUnkn(0x413568, 1);
MakeNameEx(0x413568, "TList.Delete", 0x20);
MakeComm(0x413568, "'procedure TList.Delete(Index:Integer);'");
MakeCode(0x413568);
MakeCode(0x413578);
MakeCode(0x413587);
MakeCode(0x4135B5);
MakeCode(0x4135C4);
MakeFunction(0x413568, 0x4135C8);
MakeUnkn(0x4135C8, 1);
MakeNameEx(0x4135C8, "ReturnAddr", 0x20);
MakeComm(0x4135C8, "'function ReturnAddr:Pointer;'");
MakeCode(0x4135C8);
MakeFunction(0x4135C8, 0x4135CC);
MakeUnkn(0x4135CC, 1);
MakeNameEx(0x4135CC, "TList.Error", 0x20);
MakeComm(0x4135CC, "'procedure TList.Error(const Msg:AnsiString; Data:Integer);'");
MakeCode(0x4135CC);
MakeFunction(0x4135CC, 0x413603);
MakeUnkn(0x413604, 1);
MakeNameEx(0x413604, "TList.Error_0", 0x20);
MakeComm(0x413604, "'procedure TList.Error(Msg:PResStringRec; Data:Integer);'");
MakeCode(0x413604);
MakeCode(0x413636);
MakeCode(0x413643);
MakeCode(0x41364C);
MakeCode(0x413651);
MakeFunction(0x413604, 0x413658);
MakeUnkn(0x413658, 1);
MakeNameEx(0x413658, "TList.Expand", 0x20);
MakeComm(0x413658, "'function TList.Expand:TList;'");
MakeCode(0x413658);
MakeCode(0x413669);
MakeFunction(0x413658, 0x41366D);
MakeUnkn(0x413670, 1);
MakeNameEx(0x413670, "TList.First", 0x20);
MakeComm(0x413670, "'function TList.First:Pointer;'");
MakeCode(0x413670);
MakeFunction(0x413670, 0x413678);
MakeUnkn(0x413678, 1);
MakeNameEx(0x413678, "TList.Get", 0x20);
MakeComm(0x413678, "'function TList.Get(Index:Integer):Pointer;'");
MakeCode(0x413678);
MakeCode(0x413687);
MakeCode(0x413696);
MakeFunction(0x413678, 0x41369F);
MakeUnkn(0x4136A0, 1);
MakeNameEx(0x4136A0, "TList.Grow", 0x20);
MakeComm(0x4136A0, "'procedure TList.Grow;'");
MakeCode(0x4136A0);
MakeCode(0x4136B1);
MakeCode(0x4136B6);
MakeCode(0x4136C2);
MakeCode(0x4136C7);
MakeFunction(0x4136A0, 0x4136D1);
MakeUnkn(0x4136D4, 1);
MakeNameEx(0x4136D4, "TList.IndexOf", 0x20);
MakeComm(0x4136D4, "'function TList.IndexOf(Item:Pointer):Integer;'");
MakeCode(0x4136D4);
MakeCode(0x4136D9);
MakeCode(0x4136DA);
MakeCode(0x4136E7);
MakeCode(0x4136EF);
MakeFunction(0x4136D4, 0x4136F3);
MakeUnkn(0x4136F4, 1);
MakeNameEx(0x4136F4, "TList.Insert", 0x20);
MakeComm(0x4136F4, "'procedure TList.Insert(Index:Integer; Item:Pointer);'");
MakeCode(0x4136F4);
MakeCode(0x413706);
MakeCode(0x413715);
MakeCode(0x413723);
MakeCode(0x413743);
MakeCode(0x41375B);
MakeFunction(0x4136F4, 0x41375F);
MakeUnkn(0x413760, 1);
MakeNameEx(0x413760, "TList.Last", 0x20);
MakeComm(0x413760, "'function TList.Last:Pointer;'");
MakeCode(0x413760);
MakeFunction(0x413760, 0x41376A);
MakeUnkn(0x41376C, 1);
MakeNameEx(0x41376C, "TList.Put", 0x20);
MakeComm(0x41376C, "'procedure TList.Put(Index:Integer; Item:Pointer);'");
MakeCode(0x41376C);
MakeCode(0x41377E);
MakeCode(0x41378D);
MakeCode(0x4137A9);
MakeCode(0x4137B8);
MakeFunction(0x41376C, 0x4137BC);
MakeUnkn(0x4137BC, 1);
MakeNameEx(0x4137BC, "TList.Remove", 0x20);
MakeComm(0x4137BC, "'function TList.Remove(Item:Pointer):Integer;'");
MakeCode(0x4137BC);
MakeCode(0x4137D6);
MakeFunction(0x4137BC, 0x4137DB);
MakeUnkn(0x4137DC, 1);
MakeNameEx(0x4137DC, "TList.SetCapacity", 0x20);
MakeComm(0x4137DC, "'procedure TList.SetCapacity(NewCapacity:Integer);'");
MakeCode(0x4137DC);
MakeCode(0x4137EF);
MakeCode(0x4137FE);
MakeCode(0x413813);
MakeFunction(0x4137DC, 0x413816);
MakeUnkn(0x413818, 1);
MakeNameEx(0x413818, "TList.SetCount", 0x20);
MakeComm(0x413818, "'procedure TList.SetCount(NewCount:Integer);'");
MakeCode(0x413818);
MakeCode(0x41382C);
MakeCode(0x41383B);
MakeCode(0x413849);
MakeCode(0x413869);
MakeCode(0x413873);
MakeCode(0x413880);
MakeFunction(0x413818, 0x413888);
MakeUnkn(0x413888, 1);
MakeNameEx(0x413888, "TList.Notify", 0x20);
MakeComm(0x413888, "'procedure TList.Notify(Ptr:Pointer; Action:TListNotification);'");
MakeCode(0x413888);
MakeFunction(0x413888, 0x413889);
MakeUnkn(0x41388C, 1);
MakeNameEx(0x41388C, "TThreadList.Create", 0x20);
MakeComm(0x41388C, "'constructor TThreadList.Create;'");
MakeCode(0x41388C);
MakeCode(0x41389A);
MakeCode(0x4138D8);
MakeFunction(0x41388C, 0x4138DD);
MakeUnkn(0x4138E0, 1);
MakeNameEx(0x4138E0, "TThreadList.Destroy", 0x20);
MakeComm(0x4138E0, "'destructor TThreadList.Destroy;'");
MakeCode(0x4138E0);
MakeCode(0x413920);
MakeCode(0x41392D);
MakeCode(0x413942);
MakeCode(0x413947);
MakeCode(0x413957);
MakeFunction(0x4138E0, 0x41395B);
MakeUnkn(0x41395C, 1);
MakeNameEx(0x41395C, "TThreadList.Add", 0x20);
MakeComm(0x41395C, "'procedure TThreadList.Add(Item:Pointer);'");
MakeCode(0x41395C);
MakeCode(0x413995);
MakeCode(0x4139A4);
MakeCode(0x4139C2);
MakeCode(0x4139CF);
MakeCode(0x4139D8);
MakeCode(0x4139DD);
MakeFunction(0x41395C, 0x4139E3);
MakeUnkn(0x4139E4, 1);
MakeNameEx(0x4139E4, "TThreadList.LockList", 0x20);
MakeComm(0x4139E4, "'function TThreadList.LockList:TList;'");
MakeCode(0x4139E4);
MakeFunction(0x4139E4, 0x4139F5);
MakeUnkn(0x4139F8, 1);
MakeNameEx(0x4139F8, "TThreadList.Remove", 0x20);
MakeComm(0x4139F8, "'procedure TThreadList.Remove(Item:Pointer);'");
MakeCode(0x4139F8);
MakeCode(0x413A25);
MakeCode(0x413A32);
MakeCode(0x413A3B);
MakeCode(0x413A40);
MakeFunction(0x4139F8, 0x413A46);
MakeUnkn(0x413A48, 1);
MakeNameEx(0x413A48, "TThreadList.UnlockList", 0x20);
MakeComm(0x413A48, "'procedure TThreadList.UnlockList;'");
MakeCode(0x413A48);
MakeFunction(0x413A48, 0x413A52);
MakeUnkn(0x413A54, 1);
MakeNameEx(0x413A54, "TBits.Destroy", 0x20);
MakeComm(0x413A54, "'destructor TBits.Destroy;'");
MakeCode(0x413A54);
MakeCode(0x413A7F);
MakeFunction(0x413A54, 0x413A82);
MakeUnkn(0x413A84, 1);
MakeNameEx(0x413A84, "TBits.Error", 0x20);
MakeComm(0x413A84, "'procedure TBits.Error;'");
MakeCode(0x413A84);
MakeFunction(0x413A84, 0x413A9C);
MakeUnkn(0x413A9C, 1);
MakeNameEx(0x413A9C, "Min", 0x20);
MakeComm(0x413A9C, "'function Min(X:Integer; Y:Integer):Integer;'");
MakeCode(0x413A9C);
MakeCode(0x413AA4);
MakeFunction(0x413A9C, 0x413AA7);
MakeUnkn(0x413AA8, 1);
MakeNameEx(0x413AA8, "TBits.SetSize", 0x20);
MakeComm(0x413AA8, "'procedure TBits.SetSize(Value:Integer);'");
MakeCode(0x413AA8);
MakeCode(0x413AC5);
MakeCode(0x413AD0);
MakeCode(0x413AE6);
MakeCode(0x413B11);
MakeCode(0x413B31);
MakeCode(0x413B3B);
MakeCode(0x413B41);
MakeCode(0x413B44);
MakeFunction(0x413AA8, 0x413B4A);
MakeUnkn(0x413B4C, 1);
MakeNameEx(0x413B4C, "TBits.SetBit", 0x20);
MakeComm(0x413B4C, "'procedure TBits.SetBit(Index:Integer; Value:Boolean);'");
MakeCode(0x413B4C);
MakeCode(0x413B51);
MakeCode(0x413B5C);
MakeCode(0x413B60);
MakeFunction(0x413B4C, 0x413B78);
MakeUnkn(0x413B78, 1);
MakeNameEx(0x413B78, "TBits.OpenBit", 0x20);
MakeComm(0x413B78, "'function TBits.OpenBit:Integer;'");
MakeCode(0x413B78);
MakeCode(0x413B8C);
MakeCode(0x413B9A);
MakeCode(0x413BB0);
MakeCode(0x413BBD);
MakeCode(0x413BD6);
MakeCode(0x413BDB);
MakeCode(0x413BE1);
MakeCode(0x413BE4);
MakeFunction(0x413B78, 0x413BE9);
MakeUnkn(0x413BF0, 1);
MakeNameEx(0x413BF0, "TMemoryStream.Destroy", 0x20);
MakeComm(0x413BF0, "'destructor TMemoryStream.Destroy;'");
MakeCode(0x413BF0);
MakeCode(0x413C19);
MakeFunction(0x413BF0, 0x413C1C);
MakeUnkn(0x413C1C, 1);
MakeNameEx(0x413C1C, "TPersistent.Assign", 0x20);
MakeComm(0x413C1C, "'procedure TPersistent.Assign(Source:TPersistent);'");
MakeCode(0x413C1C);
MakeCode(0x413C26);
MakeFunction(0x413C1C, 0x413C2E);
MakeUnkn(0x413C30, 1);
MakeNameEx(0x413C30, "TPersistent.AssignError", 0x20);
MakeComm(0x413C30, "'procedure TPersistent.AssignError(Source:TPersistent);'");
MakeCode(0x413C30);
MakeCode(0x413C73);
MakeCode(0x413C80);
MakeCode(0x413CD0);
MakeCode(0x413CDD);
MakeCode(0x413CE6);
MakeCode(0x413CEB);
MakeFunction(0x413C30, 0x413CF3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x413CFC, -1);
MakeDword(0x413CF8);
MakeDword(0x413CF4);
MakeUnkn(0x413D00, 1);
MakeNameEx(0x413D00, "TPersistent.AssignTo", 0x20);
MakeComm(0x413D00, "'procedure TPersistent.AssignTo(Dest:TPersistent);'");
MakeCode(0x413D00);
MakeFunction(0x413D00, 0x413D07);
MakeCode(0x413D08);
MakeFunction(0x413D08, 0x413D09);
MakeUnkn(0x413D0C, 1);
MakeNameEx(0x413D0C, "TPersistent.GetNamePath", 0x20);
MakeComm(0x413D0C, "'procedure TPersistent.GetNamePath;'");
MakeCode(0x413D0C);
MakeCode(0x413D8B);
MakeCode(0x413D98);
MakeCode(0x413DA1);
MakeCode(0x413DA6);
MakeFunction(0x413D0C, 0x413DAF);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x413DB8, -1);
MakeDword(0x413DB4);
MakeDword(0x413DB0);
MakeUnkn(0x413DBC, 1);
MakeNameEx(0x413DBC, "TPersistent.sub_00413DBC", 0x20);
MakeComm(0x413DBC, "'procedure TPersistent.sub_00413DBC;'");
MakeCode(0x413DBC);
MakeFunction(0x413DBC, 0x413DBF);
MakeUnkn(0x413DC0, 1);
MakeNameEx(0x413DC0, "TInterfacedPersistent.AfterConstruction", 0x20);
MakeComm(0x413DC0, "'procedure TInterfacedPersistent.AfterConstruction;'");
MakeCode(0x413DC0);
MakeCode(0x413DFB);
MakeFunction(0x413DC0, 0x413DFE);
MakeUnkn(0x413E10, 1);
MakeNameEx(0x413E10, "TInterfacedPersistent._AddRef", 0x20);
MakeComm(0x413E10, "'function TInterfacedPersistent._AddRef:Integer; stdcall;'");
MakeCode(0x413E10);
MakeCode(0x413E27);
MakeCode(0x413E2A);
MakeFunction(0x413E10, 0x413E2E);
MakeUnkn(0x413E30, 1);
MakeNameEx(0x413E30, "TInterfacedPersistent._Release", 0x20);
MakeComm(0x413E30, "'function TInterfacedPersistent._Release:Integer; stdcall;'");
MakeCode(0x413E30);
MakeCode(0x413E47);
MakeCode(0x413E4A);
MakeFunction(0x413E30, 0x413E4E);
MakeUnkn(0x413E50, 1);
MakeNameEx(0x413E50, "TInterfacedPersistent.QueryInterface", 0x20);
MakeComm(0x413E50, "'function TInterfacedPersistent.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x413E50);
MakeCode(0x413E6C);
MakeCode(0x413E71);
MakeFunction(0x413E50, 0x413E76);
MakeUnkn(0x413E78, 1);
MakeNameEx(0x413E78, "TCollection.Add", 0x20);
MakeComm(0x413E78, "'function TCollection.Add:TCollectionItem;'");
MakeCode(0x413E78);
MakeFunction(0x413E78, 0x413E98);
MakeUnkn(0x413E98, 1);
MakeNameEx(0x413E98, "TCollection.Clear", 0x20);
MakeComm(0x413E98, "'procedure TCollection.Clear;'");
MakeCode(0x413E98);
MakeCode(0x413EC4);
MakeCode(0x413ED0);
MakeCode(0x413EDC);
MakeCode(0x413EE9);
MakeCode(0x413EF2);
MakeCode(0x413EF7);
MakeCode(0x413EF9);
MakeFunction(0x413E98, 0x413EFD);
MakeUnkn(0x413F00, 1);
MakeNameEx(0x413F00, "TStrings.Destroy", 0x20);
MakeComm(0x413F00, "'destructor TStrings.Destroy;'");
MakeCode(0x413F00);
MakeCode(0x413F2B);
MakeFunction(0x413F00, 0x413F2E);
MakeUnkn(0x413F30, 1);
MakeNameEx(0x413F30, "TStrings.Add", 0x20);
MakeComm(0x413F30, "'function TStrings.Add(const S:AnsiString):Integer;'");
MakeCode(0x413F30);
MakeFunction(0x413F30, 0x413F53);
MakeUnkn(0x413F54, 1);
MakeNameEx(0x413F54, "TStrings.AddObject", 0x20);
MakeComm(0x413F54, "'function TStrings.AddObject(const S:AnsiString; AObject:TObject):Integer;'");
MakeCode(0x413F54);
MakeFunction(0x413F54, 0x413F75);
MakeUnkn(0x413F78, 1);
MakeNameEx(0x413F78, "TStrings.AddStrings", 0x20);
MakeComm(0x413F78, "'procedure TStrings.AddStrings(Strings:TStrings);'");
MakeCode(0x413F78);
MakeCode(0x413FC2);
MakeCode(0x413FEC);
MakeCode(0x413FF9);
MakeCode(0x414002);
MakeCode(0x414007);
MakeCode(0x414009);
MakeCode(0x414016);
MakeCode(0x41401F);
MakeCode(0x414024);
MakeFunction(0x413F78, 0x41402D);
MakeUnkn(0x414030, 1);
MakeNameEx(0x414030, "TStrings.Assign", 0x20);
MakeComm(0x414030, "'procedure TStrings.Assign(Source:TPersistent);'");
MakeCode(0x414030);
MakeCode(0x41409A);
MakeCode(0x4140A7);
MakeCode(0x4140B0);
MakeCode(0x4140B5);
MakeCode(0x4140B7);
MakeFunction(0x414030, 0x4140C6);
MakeUnkn(0x4140C8, 1);
MakeNameEx(0x4140C8, "TStrings.BeginUpdate", 0x20);
MakeComm(0x4140C8, "'procedure TStrings.BeginUpdate;'");
MakeCode(0x4140C8);
MakeCode(0x4140DA);
MakeFunction(0x4140C8, 0x4140DF);
MakeUnkn(0x4140E0, 1);
MakeNameEx(0x4140E0, "DoWrite", 0x20);
MakeComm(0x4140E0, "'function DoWrite:Boolean;'");
MakeCode(0x4140E0);
MakeCode(0x41411F);
MakeCode(0x41412F);
MakeFunction(0x4140E0, 0x414135);
MakeUnkn(0x414138, 1);
MakeNameEx(0x414138, "TStrings.DefineProperties", 0x20);
MakeComm(0x414138, "'procedure TStrings.DefineProperties(Filer:TFiler);'");
MakeCode(0x414138);
MakeFunction(0x414138, 0x414172);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41417C, -1);
MakeDword(0x414178);
MakeDword(0x414174);
MakeUnkn(0x414184, 1);
MakeNameEx(0x414184, "TStrings.EndUpdate", 0x20);
MakeComm(0x414184, "'procedure TStrings.EndUpdate;'");
MakeCode(0x414184);
MakeFunction(0x414184, 0x414195);
MakeUnkn(0x414198, 1);
MakeNameEx(0x414198, "TStrings.Equals", 0x20);
MakeComm(0x414198, "'function TStrings.Equals(Strings:TStrings):Boolean;'");
MakeCode(0x414198);
MakeCode(0x4141E1);
MakeCode(0x41420E);
MakeCode(0x414212);
MakeCode(0x41421F);
MakeCode(0x41422D);
MakeCode(0x414232);
MakeFunction(0x414198, 0x41423E);
MakeCode(0x414240);
MakeFunction(0x414240, 0x414244);
MakeUnkn(0x414244, 1);
MakeNameEx(0x414244, "TStrings.Error", 0x20);
MakeComm(0x414244, "'procedure TStrings.Error(const Msg:AnsiString; Data:Integer);'");
MakeCode(0x414244);
MakeFunction(0x414244, 0x41427B);
MakeUnkn(0x41427C, 1);
MakeNameEx(0x41427C, "TStrings.Error_0", 0x20);
MakeComm(0x41427C, "'procedure TStrings.Error(Msg:PResStringRec; Data:Integer);'");
MakeCode(0x41427C);
MakeCode(0x4142AE);
MakeCode(0x4142BB);
MakeCode(0x4142C4);
MakeCode(0x4142C9);
MakeFunction(0x41427C, 0x4142D1);
MakeUnkn(0x4142D4, 1);
MakeNameEx(0x4142D4, "TStrings.Exchange", 0x20);
MakeComm(0x4142D4, "'procedure TStrings.Exchange(Index1:Integer; Index2:Integer);'");
MakeCode(0x4142D4);
MakeCode(0x414374);
MakeCode(0x414381);
MakeCode(0x41438A);
MakeCode(0x41438F);
MakeCode(0x414391);
MakeCode(0x41439E);
MakeCode(0x4143AC);
MakeCode(0x4143B1);
MakeFunction(0x4142D4, 0x4143BA);
MakeCode(0x4143BC);
MakeComm(0x4143BE, "'@AbstractError'");
MakeFunction(0x4143BC, 0x4143C2);
MakeCode(0x4143C4);
MakeFunction(0x4143C4, 0x4143C7);
MakeUnkn(0x4143C8, 1);
MakeNameEx(0x4143C8, "TStrings.GetText", 0x20);
MakeComm(0x4143C8, "'function TStrings.GetText:PChar;'");
MakeCode(0x4143C8);
MakeCode(0x4143F7);
MakeCode(0x414404);
MakeCode(0x41440D);
MakeCode(0x414412);
MakeFunction(0x4143C8, 0x41441A);
MakeUnkn(0x41441C, 1);
MakeNameEx(0x41441C, "TStrings.GetTextStr", 0x20);
MakeComm(0x41441C, "'function TStrings.GetTextStr:AnsiString;'");
MakeCode(0x41441C);
MakeCode(0x41446E);
MakeCode(0x414498);
MakeCode(0x4144BC);
MakeCode(0x4144E8);
MakeCode(0x414506);
MakeCode(0x41450C);
MakeCode(0x414519);
MakeCode(0x414527);
MakeCode(0x41452C);
MakeFunction(0x41441C, 0x414535);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x414540, -1);
MakeDword(0x41453C);
MakeDword(0x414538);
MakeUnkn(0x414544, 1);
MakeNameEx(0x414544, "TStrings.IndexOf", 0x20);
MakeComm(0x414544, "'function TStrings.IndexOf(const S:AnsiString):Integer;'");
MakeCode(0x414544);
MakeCode(0x41457B);
MakeCode(0x41459F);
MakeCode(0x4145A6);
MakeCode(0x4145B3);
MakeCode(0x4145BC);
MakeCode(0x4145C1);
MakeFunction(0x414544, 0x4145CD);
MakeUnkn(0x4145D0, 1);
MakeNameEx(0x4145D0, "TStrings.IndexOfName", 0x20);
MakeComm(0x4145D0, "'function TStrings.IndexOfName(const Name:AnsiString):Integer;'");
MakeCode(0x4145D0);
MakeCode(0x41460D);
MakeCode(0x414661);
MakeCode(0x414669);
MakeCode(0x414670);
MakeCode(0x41467D);
MakeCode(0x414693);
MakeCode(0x414698);
MakeFunction(0x4145D0, 0x4146A3);
MakeUnkn(0x4146A4, 1);
MakeNameEx(0x4146A4, "TStrings.IndexOfObject", 0x20);
MakeComm(0x4146A4, "'function TStrings.IndexOfObject(AObject:TObject):Integer;'");
MakeCode(0x4146A4);
MakeCode(0x4146BD);
MakeCode(0x4146CE);
MakeCode(0x4146D1);
MakeFunction(0x4146A4, 0x4146D8);
MakeUnkn(0x4146D8, 1);
MakeNameEx(0x4146D8, "TStrings.InsertObject", 0x20);
MakeComm(0x4146D8, "'procedure TStrings.InsertObject(Index:Integer; const S:AnsiString; AObject:TObject);'");
MakeCode(0x4146D8);
MakeFunction(0x4146D8, 0x414706);
MakeUnkn(0x414708, 1);
MakeNameEx(0x414708, "TStrings.LoadFromFile", 0x20);
MakeComm(0x414708, "'procedure TStrings.LoadFromFile(const FileName:AnsiString);'");
MakeCode(0x414708);
MakeCode(0x41473A);
MakeCode(0x414747);
MakeCode(0x414750);
MakeCode(0x414755);
MakeFunction(0x414708, 0x41475B);
MakeUnkn(0x41475C, 1);
MakeNameEx(0x41475C, "TStrings.LoadFromStream", 0x20);
MakeComm(0x41475C, "'procedure TStrings.LoadFromStream(Stream:TStream);'");
MakeCode(0x41475C);
MakeCode(0x4147C6);
MakeCode(0x4147D3);
MakeCode(0x4147DC);
MakeCode(0x4147E1);
MakeCode(0x4147E3);
MakeCode(0x4147F0);
MakeCode(0x4147F9);
MakeCode(0x4147FE);
MakeFunction(0x41475C, 0x414806);
MakeUnkn(0x414808, 1);
MakeNameEx(0x414808, "TStrings.Move", 0x20);
MakeComm(0x414808, "'procedure TStrings.Move(CurIndex:Integer; NewIndex:Integer);'");
MakeCode(0x414808);
MakeCode(0x414876);
MakeCode(0x414883);
MakeCode(0x41488C);
MakeCode(0x414891);
MakeCode(0x414893);
MakeCode(0x4148A0);
MakeCode(0x4148A9);
MakeCode(0x4148AE);
MakeFunction(0x414808, 0x4148B7);
MakeUnkn(0x4148B8, 1);
MakeNameEx(0x4148B8, "TStrings.Put", 0x20);
MakeComm(0x4148B8, "'procedure TStrings.Put(Index:Integer; const S:AnsiString);'");
MakeCode(0x4148B8);
MakeFunction(0x4148B8, 0x4148EC);
MakeCode(0x4148EC);
MakeFunction(0x4148EC, 0x4148ED);
MakeUnkn(0x4148F0, 1);
MakeNameEx(0x4148F0, "TStrings.ReadData", 0x20);
MakeComm(0x4148F0, "'procedure TStrings.ReadData(Reader:TReader);'");
MakeCode(0x4148F0);
MakeCode(0x414937);
MakeCode(0x41494D);
MakeCode(0x414959);
MakeCode(0x414966);
MakeCode(0x41496F);
MakeCode(0x414974);
MakeCode(0x41497E);
MakeCode(0x41498B);
MakeCode(0x414994);
MakeCode(0x414999);
MakeFunction(0x4148F0, 0x41499F);
MakeUnkn(0x4149A0, 1);
MakeNameEx(0x4149A0, "TStrings.SaveToFile", 0x20);
MakeComm(0x4149A0, "'procedure TStrings.SaveToFile(const FileName:AnsiString);'");
MakeCode(0x4149A0);
MakeCode(0x4149D5);
MakeCode(0x4149E2);
MakeCode(0x4149EB);
MakeCode(0x4149F0);
MakeFunction(0x4149A0, 0x4149F6);
MakeUnkn(0x4149F8, 1);
MakeNameEx(0x4149F8, "TStrings.SaveToStream", 0x20);
MakeComm(0x4149F8, "'procedure TStrings.SaveToStream(Stream:TStream);'");
MakeCode(0x4149F8);
MakeCode(0x414A2F);
MakeCode(0x414A3C);
MakeCode(0x414A45);
MakeCode(0x414A4A);
MakeFunction(0x4149F8, 0x414A51);
MakeCode(0x414A54);
MakeFunction(0x414A54, 0x414A55);
MakeUnkn(0x414A58, 1);
MakeNameEx(0x414A58, "TStrings.SetStringsAdapter", 0x20);
MakeComm(0x414A58, "'procedure TStrings.SetStringsAdapter(const Value:IStringsAdapter);'");
MakeCode(0x414A58);
MakeCode(0x414A6C);
MakeCode(0x414A86);
MakeFunction(0x414A58, 0x414A89);
MakeUnkn(0x414A8C, 1);
MakeNameEx(0x414A8C, "TStrings.SetText", 0x20);
MakeComm(0x414A8C, "'procedure TStrings.SetText(Text:PChar);'");
MakeCode(0x414A8C);
MakeCode(0x414AB9);
MakeCode(0x414AC6);
MakeCode(0x414ACF);
MakeCode(0x414AD4);
MakeFunction(0x414A8C, 0x414ADB);
MakeUnkn(0x414ADC, 1);
MakeNameEx(0x414ADC, "TStrings.SetTextStr", 0x20);
MakeComm(0x414ADC, "'procedure TStrings.SetTextStr(const Value:AnsiString);'");
MakeCode(0x414ADC);
MakeCode(0x414B1F);
MakeCode(0x414B23);
MakeCode(0x414B24);
MakeCode(0x414B34);
MakeCode(0x414B52);
MakeCode(0x414B58);
MakeCode(0x414B5D);
MakeCode(0x414B6A);
MakeCode(0x414B73);
MakeCode(0x414B78);
MakeCode(0x414B7A);
MakeCode(0x414B87);
MakeCode(0x414B90);
MakeCode(0x414B95);
MakeFunction(0x414ADC, 0x414B9C);
MakeCode(0x414B9C);
MakeFunction(0x414B9C, 0x414B9D);
MakeUnkn(0x414BA0, 1);
MakeNameEx(0x414BA0, "TStrings.WriteData", 0x20);
MakeComm(0x414BA0, "'procedure TStrings.WriteData(Writer:TWriter);'");
MakeCode(0x414BA0);
MakeCode(0x414BDC);
MakeCode(0x414BF8);
MakeCode(0x414C00);
MakeCode(0x414C0D);
MakeCode(0x414C16);
MakeCode(0x414C1B);
MakeFunction(0x414BA0, 0x414C24);
MakeUnkn(0x414C24, 1);
MakeNameEx(0x414C24, "TStrings.CompareStrings", 0x20);
MakeComm(0x414C24, "'function TStrings.CompareStrings(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x414C24);
MakeFunction(0x414C24, 0x414C2E);
MakeUnkn(0x414C30, 1);
MakeNameEx(0x414C30, "TStrings.GetNameValueSeparator", 0x20);
MakeComm(0x414C30, "'function TStrings.GetNameValueSeparator:Char;'");
MakeCode(0x414C30);
MakeCode(0x414C42);
MakeFunction(0x414C30, 0x414C47);
MakeUnkn(0x414C48, 1);
MakeNameEx(0x414C48, "TStrings.SetNameValueSeparator", 0x20);
MakeComm(0x414C48, "'procedure TStrings.SetNameValueSeparator(const Value:Char);'");
MakeCode(0x414C48);
MakeCode(0x414C59);
MakeCode(0x414C60);
MakeFunction(0x414C48, 0x414C63);
MakeUnkn(0x414C64, 1);
MakeNameEx(0x414C64, "TStringList.Destroy", 0x20);
MakeComm(0x414C64, "'destructor TStringList.Destroy;'");
MakeCode(0x414C64);
MakeCode(0x414CA2);
MakeCode(0x414CBB);
MakeFunction(0x414C64, 0x414CBE);
MakeUnkn(0x414CC0, 1);
MakeNameEx(0x414CC0, "TStringList.Add", 0x20);
MakeComm(0x414CC0, "'function TStringList.Add(const S:AnsiString):Integer;'");
MakeCode(0x414CC0);
MakeFunction(0x414CC0, 0x414CCA);
MakeUnkn(0x414CCC, 1);
MakeNameEx(0x414CCC, "TStringList.AddObject", 0x20);
MakeComm(0x414CCC, "'function TStringList.AddObject(const S:AnsiString; AObject:TObject):Integer;'");
MakeCode(0x414CCC);
MakeCode(0x414CE5);
MakeCode(0x414D04);
MakeCode(0x414D13);
MakeCode(0x414D24);
MakeFunction(0x414CCC, 0x414D2D);
MakeUnkn(0x414D30, 1);
MakeNameEx(0x414D30, "TStringList.Changed", 0x20);
MakeComm(0x414D30, "'procedure TStringList.Changed;'");
MakeCode(0x414D30);
MakeCode(0x414D48);
MakeFunction(0x414D30, 0x414D4A);
MakeUnkn(0x414D4C, 1);
MakeNameEx(0x414D4C, "TStringList.Changing", 0x20);
MakeComm(0x414D4C, "'procedure TStringList.Changing;'");
MakeCode(0x414D4C);
MakeCode(0x414D64);
MakeFunction(0x414D4C, 0x414D66);
MakeUnkn(0x414D68, 1);
MakeNameEx(0x414D68, "TStringList.Clear", 0x20);
MakeComm(0x414D68, "'procedure TStringList.Clear;'");
MakeCode(0x414D68);
MakeCode(0x414DA4);
MakeFunction(0x414D68, 0x414DA6);
MakeUnkn(0x414DA8, 1);
MakeNameEx(0x414DA8, "TStringList.Delete", 0x20);
MakeComm(0x414DA8, "'procedure TStringList.Delete(Index:Integer);'");
MakeCode(0x414DA8);
MakeCode(0x414DB7);
MakeCode(0x414DC6);
MakeCode(0x414E04);
MakeFunction(0x414DA8, 0x414E11);
MakeUnkn(0x414E14, 1);
MakeNameEx(0x414E14, "TStringList.Exchange", 0x20);
MakeComm(0x414E14, "'procedure TStringList.Exchange(Index1:Integer; Index2:Integer);'");
MakeCode(0x414E14);
MakeCode(0x414E26);
MakeCode(0x414E35);
MakeCode(0x414E3E);
MakeCode(0x414E4D);
MakeFunction(0x414E14, 0x414E70);
MakeUnkn(0x414E70, 1);
MakeNameEx(0x414E70, "TStringList.ExchangeItems", 0x20);
MakeComm(0x414E70, "'procedure TStringList.ExchangeItems(Index1:Integer; Index2:Integer);'");
MakeCode(0x414E70);
MakeFunction(0x414E70, 0x414E93);
MakeUnkn(0x414E94, 1);
MakeNameEx(0x414E94, "TStringList.Find", 0x20);
MakeComm(0x414E94, "'function TStringList.Find(const S:AnsiString; var Index:Integer):Boolean;'");
MakeCode(0x414E94);
MakeCode(0x414EB9);
MakeCode(0x414EDA);
MakeCode(0x414EF2);
MakeCode(0x414EF8);
MakeFunction(0x414E94, 0x414F0A);
MakeUnkn(0x414F0C, 1);
MakeNameEx(0x414F0C, "TStringList.Get", 0x20);
MakeComm(0x414F0C, "'function TStringList.Get(Index:Integer):AnsiString;'");
MakeCode(0x414F0C);
MakeCode(0x414F1E);
MakeCode(0x414F2D);
MakeFunction(0x414F0C, 0x414F3E);
MakeCode(0x414F40);
MakeComm(0x414F40, "'TStringList.FCapacity:Integer'");
MakeFunction(0x414F40, 0x414F44);
MakeCode(0x414F44);
MakeComm(0x414F44, "'TStringList.FCount:Integer'");
MakeFunction(0x414F44, 0x414F48);
MakeUnkn(0x414F48, 1);
MakeNameEx(0x414F48, "TStringList.GetObject", 0x20);
MakeComm(0x414F48, "'function TStringList.GetObject(Index:Integer):TObject;'");
MakeCode(0x414F48);
MakeCode(0x414F57);
MakeCode(0x414F66);
MakeFunction(0x414F48, 0x414F70);
MakeUnkn(0x414F70, 1);
MakeNameEx(0x414F70, "TStringList.Grow", 0x20);
MakeComm(0x414F70, "'procedure TStringList.Grow;'");
MakeCode(0x414F70);
MakeCode(0x414F82);
MakeCode(0x414F87);
MakeCode(0x414F93);
MakeCode(0x414F98);
MakeFunction(0x414F70, 0x414FA3);
MakeUnkn(0x414FA4, 1);
MakeNameEx(0x414FA4, "TStringList.IndexOf", 0x20);
MakeComm(0x414FA4, "'function TStringList.IndexOf(const S:AnsiString):Integer;'");
MakeCode(0x414FA4);
MakeCode(0x414FBF);
MakeCode(0x414FD8);
MakeFunction(0x414FA4, 0x414FDF);
MakeUnkn(0x414FE0, 1);
MakeNameEx(0x414FE0, "TStringList.Insert", 0x20);
MakeComm(0x414FE0, "'procedure TStringList.Insert(Index:Integer; const S:AnsiString);'");
MakeCode(0x414FE0);
MakeFunction(0x414FE0, 0x414FF0);
MakeUnkn(0x414FF0, 1);
MakeNameEx(0x414FF0, "TStringList.InsertObject", 0x20);
MakeComm(0x414FF0, "'procedure TStringList.InsertObject(Index:Integer; const S:AnsiString; AObject:TObject);'");
MakeCode(0x414FF0);
MakeCode(0x415011);
MakeCode(0x41501A);
MakeCode(0x415029);
MakeFunction(0x414FF0, 0x415042);
MakeUnkn(0x415044, 1);
MakeNameEx(0x415044, "TStringList.InsertItem", 0x20);
MakeComm(0x415044, "'procedure TStringList.InsertItem(Index:Integer; const S:AnsiString; AObject:TObject);'");
MakeCode(0x415044);
MakeCode(0x415069);
MakeCode(0x41508D);
MakeFunction(0x415044, 0x4150BC);
MakeUnkn(0x4150BC, 1);
MakeNameEx(0x4150BC, "TStringList.Put", 0x20);
MakeComm(0x4150BC, "'procedure TStringList.Put(Index:Integer; const S:AnsiString);'");
MakeCode(0x4150BC);
MakeCode(0x4150DA);
MakeCode(0x4150E3);
MakeCode(0x4150F2);
MakeFunction(0x4150BC, 0x415117);
MakeUnkn(0x415118, 1);
MakeNameEx(0x415118, "TStringList.PutObject", 0x20);
MakeComm(0x415118, "'procedure TStringList.PutObject(Index:Integer; AObject:TObject);'");
MakeCode(0x415118);
MakeCode(0x41512A);
MakeCode(0x415139);
MakeFunction(0x415118, 0x415158);
MakeUnkn(0x415158, 1);
MakeNameEx(0x415158, "TStringList.QuickSort", 0x20);
MakeComm(0x415158, "'procedure TStringList.QuickSort(L:Integer; R:Integer; SCompare:TStringListSortCompare);'");
MakeCode(0x415158);
MakeCode(0x415169);
MakeCode(0x41517C);
MakeCode(0x41517D);
MakeCode(0x41518E);
MakeCode(0x41518F);
MakeCode(0x4151B8);
MakeCode(0x4151C0);
MakeCode(0x4151C2);
MakeCode(0x4151DC);
MakeFunction(0x415158, 0x4151EC);
MakeUnkn(0x4151EC, 1);
MakeNameEx(0x4151EC, "TStringList.SetCapacity", 0x20);
MakeComm(0x4151EC, "'procedure TStringList.SetCapacity(NewCapacity:Integer);'");
MakeCode(0x4151EC);
MakeFunction(0x4151EC, 0x415205);
MakeUnkn(0x415208, 1);
MakeNameEx(0x415208, "TStringList.SetSorted", 0x20);
MakeComm(0x415208, "'procedure TStringList.SetSorted(Value:Boolean);'");
MakeCode(0x415208);
MakeCode(0x415221);
MakeCode(0x415224);
MakeFunction(0x415208, 0x415227);
MakeUnkn(0x415228, 1);
MakeNameEx(0x415228, "TStringList.SetUpdateState", 0x20);
MakeComm(0x415228, "'procedure TStringList.SetUpdateState(Updating:Boolean);'");
MakeCode(0x415228);
MakeCode(0x415235);
MakeFunction(0x415228, 0x41523E);
MakeUnkn(0x415240, 1);
MakeNameEx(0x415240, "StringListCompareStrings", 0x20);
MakeComm(0x415240, "'function StringListCompareStrings(List:TStringList; Index1:Integer; Index2:Integer):Integer;'");
MakeCode(0x415240);
MakeFunction(0x415240, 0x415254);
MakeUnkn(0x415254, 1);
MakeNameEx(0x415254, "TStringList.Sort", 0x20);
MakeComm(0x415254, "'procedure TStringList.Sort;'");
MakeCode(0x415254);
MakeFunction(0x415254, 0x415262);
MakeUnkn(0x415264, 1);
MakeNameEx(0x415264, "TStringList.CustomSort", 0x20);
MakeComm(0x415264, "'procedure TStringList.CustomSort(Compare:TStringListSortCompare);'");
MakeCode(0x415264);
MakeCode(0x415298);
MakeFunction(0x415264, 0x41529B);
MakeUnkn(0x41529C, 1);
MakeNameEx(0x41529C, "TStringList.CompareStrings", 0x20);
MakeComm(0x41529C, "'function TStringList.CompareStrings(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x41529C);
MakeCode(0x4152AC);
MakeFunction(0x41529C, 0x4152B6);
MakeUnkn(0x4152B8, 1);
MakeNameEx(0x4152B8, "TStream.GetPosition", 0x20);
MakeComm(0x4152B8, "'function TStream.GetPosition:Int64;'");
MakeCode(0x4152B8);
MakeFunction(0x4152B8, 0x4152D7);
MakeUnkn(0x4152D8, 1);
MakeNameEx(0x4152D8, "TStream.SetPosition", 0x20);
MakeComm(0x4152D8, "'procedure TStream.SetPosition(const Pos:Int64);'");
MakeCode(0x4152D8);
MakeFunction(0x4152D8, 0x4152EC);
MakeUnkn(0x4152EC, 1);
MakeNameEx(0x4152EC, "TStream.GetSize", 0x20);
MakeComm(0x4152EC, "'function TStream.GetSize:Int64;'");
MakeCode(0x4152EC);
MakeFunction(0x4152EC, 0x415338);
MakeCode(0x415338);
MakeFunction(0x415338, 0x415339);
MakeUnkn(0x41533C, 1);
MakeNameEx(0x41533C, "TStream.SetSize64", 0x20);
MakeComm(0x41533C, "'procedure TStream.SetSize64(const NewSize:Int64);'");
MakeCode(0x41533C);
MakeFunction(0x41533C, 0x41534E);
MakeUnkn(0x415350, 1);
MakeNameEx(0x415350, "TStream.SetSize", 0x20);
MakeComm(0x415350, "'procedure TStream.SetSize(const NewSize:Int64);'");
MakeCode(0x415350);
MakeCode(0x415366);
MakeCode(0x415368);
MakeCode(0x415379);
MakeCode(0x41537B);
MakeCode(0x415392);
MakeFunction(0x415350, 0x4153A2);
MakeUnkn(0x4153A4, 1);
MakeNameEx(0x4153A4, "RaiseException", 0x20);
MakeComm(0x4153A4, "'procedure RaiseException;'");
MakeCode(0x4153A4);
MakeFunction(0x4153A4, 0x4153EE);
MakeUnkn(0x4153F0, 1);
MakeNameEx(0x4153F0, "TStream.Seek", 0x20);
MakeComm(0x4153F0, "'function TStream.Seek(Offset:Longint; Origin:Word):Longint;'");
MakeCode(0x4153F0);
MakeCode(0x41541E);
MakeCode(0x415427);
MakeCode(0x415436);
MakeCode(0x415442);
MakeCode(0x41545C);
MakeFunction(0x4153F0, 0x415472);
MakeUnkn(0x415474, 1);
MakeNameEx(0x415474, "TStream.Seek_0", 0x20);
MakeComm(0x415474, "'function TStream.Seek(Origin:TSeekOrigin; const Offset:Int64):Int64;'");
MakeCode(0x415474);
MakeCode(0x415491);
MakeCode(0x415493);
MakeCode(0x4154A4);
MakeCode(0x4154A6);
MakeCode(0x4154BD);
MakeFunction(0x415474, 0x4154E2);
MakeUnkn(0x4154E4, 1);
MakeNameEx(0x4154E4, "TStream.ReadBuffer", 0x20);
MakeComm(0x4154E4, "'procedure TStream.ReadBuffer(var Buffer:void ; Count:Longint);'");
MakeCode(0x4154E4);
MakeCode(0x415517);
MakeFunction(0x4154E4, 0x41551B);
MakeUnkn(0x41551C, 1);
MakeNameEx(0x41551C, "TStream.WriteBuffer", 0x20);
MakeComm(0x41551C, "'procedure TStream.WriteBuffer(const Buffer:void ; Count:Longint);'");
MakeCode(0x41551C);
MakeCode(0x41554F);
MakeFunction(0x41551C, 0x415553);
MakeUnkn(0x415554, 1);
MakeNameEx(0x415554, "TStream.CopyFrom", 0x20);
MakeComm(0x415554, "'function TStream.CopyFrom(Source:TStream; Count:Int64):Int64;'");
MakeCode(0x415554);
MakeCode(0x415585);
MakeCode(0x4155A2);
MakeCode(0x4155A4);
MakeCode(0x4155AD);
MakeCode(0x4155B3);
MakeCode(0x4155CE);
MakeCode(0x4155DE);
MakeCode(0x4155E0);
MakeCode(0x4155E5);
MakeCode(0x4155E8);
MakeCode(0x41560B);
MakeCode(0x415617);
MakeCode(0x415624);
MakeCode(0x415630);
MakeCode(0x415635);
MakeFunction(0x415554, 0x415646);
MakeUnkn(0x415648, 1);
MakeNameEx(0x415648, "TStream.ReadComponent", 0x20);
MakeComm(0x415648, "'function TStream.ReadComponent(Instance:TComponent):TComponent;'");
MakeCode(0x415648);
MakeCode(0x415682);
MakeCode(0x41568F);
MakeCode(0x415698);
MakeCode(0x41569D);
MakeFunction(0x415648, 0x4156A7);
MakeUnkn(0x4156A8, 1);
MakeNameEx(0x4156A8, "THandleStream.Create", 0x20);
MakeComm(0x4156A8, "'constructor THandleStream.Create(AHandle:Integer);'");
MakeCode(0x4156A8);
MakeCode(0x4156B7);
MakeCode(0x4156DE);
MakeFunction(0x4156A8, 0x4156E4);
MakeUnkn(0x4156E4, 1);
MakeNameEx(0x4156E4, "THandleStream.Read", 0x20);
MakeComm(0x4156E4, "'function THandleStream.Read(var Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x4156E4);
MakeFunction(0x4156E4, 0x4156F4);
MakeUnkn(0x4156F4, 1);
MakeNameEx(0x4156F4, "THandleStream.Write", 0x20);
MakeComm(0x4156F4, "'function THandleStream.Write(const Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x4156F4);
MakeFunction(0x4156F4, 0x415704);
MakeUnkn(0x415704, 1);
MakeNameEx(0x415704, "THandleStream.Seek", 0x20);
MakeComm(0x415704, "'function THandleStream.Seek(Origin:TSeekOrigin; const Offset:Int64):Int64;'");
MakeCode(0x415704);
MakeFunction(0x415704, 0x41572D);
MakeUnkn(0x415730, 1);
MakeNameEx(0x415730, "THandleStream.SetSize", 0x20);
MakeComm(0x415730, "'procedure THandleStream.SetSize(NewSize:Longint);'");
MakeCode(0x415730);
MakeFunction(0x415730, 0x415743);
MakeUnkn(0x415744, 1);
MakeNameEx(0x415744, "THandleStream.SetSize_0", 0x20);
MakeComm(0x415744, "'procedure THandleStream.SetSize(const NewSize:Int64);'");
MakeCode(0x415744);
MakeFunction(0x415744, 0x41576C);
MakeUnkn(0x41576C, 1);
MakeNameEx(0x41576C, "TFileStream.Create", 0x20);
MakeComm(0x41576C, "'constructor TFileStream.Create(const FileName:AnsiString; Mode:Word);'");
MakeCode(0x41576C);
MakeCode(0x41577D);
MakeCode(0x4157A6);
MakeFunction(0x41576C, 0x4157AE);
MakeUnkn(0x4157B0, 1);
MakeNameEx(0x4157B0, "TFileStream.Create_0", 0x20);
MakeComm(0x4157B0, "'constructor TFileStream.Create(const FileName:AnsiString; Mode:Word; Rights:Cardinal);'");
MakeCode(0x4157B0);
MakeCode(0x4157D3);
MakeCode(0x41585B);
MakeCode(0x4158BE);
MakeCode(0x4158CB);
MakeCode(0x4158D9);
MakeCode(0x4158DE);
MakeCode(0x4158F7);
MakeFunction(0x4157B0, 0x415902);
MakeUnkn(0x415904, 1);
MakeNameEx(0x415904, "TFileStream.Destroy", 0x20);
MakeComm(0x415904, "'destructor TFileStream.Destroy;'");
MakeCode(0x415904);
MakeCode(0x41591B);
MakeCode(0x415932);
MakeFunction(0x415904, 0x415935);
MakeUnkn(0x415938, 1);
MakeNameEx(0x415938, "TCustomMemoryStream.SetPointer", 0x20);
MakeComm(0x415938, "'procedure TCustomMemoryStream.SetPointer(Ptr:Pointer; Size:Longint);'");
MakeCode(0x415938);
MakeFunction(0x415938, 0x41593F);
MakeUnkn(0x415940, 1);
MakeNameEx(0x415940, "TCustomMemoryStream.Read", 0x20);
MakeComm(0x415940, "'function TCustomMemoryStream.Read(var Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x415940);
MakeCode(0x41595F);
MakeCode(0x415970);
MakeCode(0x415972);
MakeFunction(0x415940, 0x415978);
MakeUnkn(0x415978, 1);
MakeNameEx(0x415978, "TCustomMemoryStream.Seek", 0x20);
MakeComm(0x415978, "'function TCustomMemoryStream.Seek(Offset:Longint; Origin:Word):Longint;'");
MakeCode(0x415978);
MakeCode(0x415987);
MakeCode(0x41598C);
MakeCode(0x415991);
MakeCode(0x415997);
MakeFunction(0x415978, 0x41599B);
MakeUnkn(0x41599C, 1);
MakeNameEx(0x41599C, "TPersistent.Destroy", 0x20);
MakeComm(0x41599C, "'destructor TPersistent.Destroy;'");
MakeCode(0x41599C);
MakeCode(0x4159C5);
MakeFunction(0x41599C, 0x4159C8);
MakeUnkn(0x4159C8, 1);
MakeNameEx(0x4159C8, "RemoveFixups", 0x20);
MakeComm(0x4159C8, "'procedure RemoveFixups(Instance:TPersistent);'");
MakeCode(0x4159C8);
MakeFunction(0x4159C8, 0x4159E0);
MakeUnkn(0x4159E0, 1);
MakeNameEx(0x4159E0, "TMemoryStream.LoadFromStream", 0x20);
MakeComm(0x4159E0, "'procedure TMemoryStream.LoadFromStream(Stream:TStream);'");
MakeCode(0x4159E0);
MakeCode(0x415A13);
MakeFunction(0x4159E0, 0x415A17);
MakeUnkn(0x415A18, 1);
MakeNameEx(0x415A18, "TMemoryStream.SetCapacity", 0x20);
MakeComm(0x415A18, "'procedure TMemoryStream.SetCapacity(NewCapacity:Longint);'");
MakeCode(0x415A18);
MakeFunction(0x415A18, 0x415A3D);
MakeUnkn(0x415A40, 1);
MakeNameEx(0x415A40, "TMemoryStream.SetSize", 0x20);
MakeComm(0x415A40, "'procedure TMemoryStream.SetSize(NewSize:Longint);'");
MakeCode(0x415A40);
MakeCode(0x415A67);
MakeFunction(0x415A40, 0x415A6B);
MakeUnkn(0x415A6C, 1);
MakeNameEx(0x415A6C, "TMemoryStream.Realloc", 0x20);
MakeComm(0x415A6C, "'function TMemoryStream.Realloc(var NewCapacity:Longint):Pointer;'");
MakeCode(0x415A6C);
MakeCode(0x415A8B);
MakeCode(0x415AA9);
MakeCode(0x415AC0);
MakeCode(0x415AD4);
MakeCode(0x415AEF);
MakeFunction(0x415A6C, 0x415AF5);
MakeUnkn(0x415AF8, 1);
MakeNameEx(0x415AF8, "TMemoryStream.Write", 0x20);
MakeComm(0x415AF8, "'function TMemoryStream.Write(const Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x415AF8);
MakeCode(0x415B28);
MakeCode(0x415B2B);
MakeCode(0x415B41);
MakeCode(0x415B43);
MakeFunction(0x415AF8, 0x415B48);
MakeUnkn(0x415B48, 1);
MakeNameEx(0x415B48, "TResourceStream.Create", 0x20);
MakeComm(0x415B48, "'constructor TResourceStream.Create(Instance:THandle; const ResName:AnsiString; ResType:PChar);'");
MakeCode(0x415B48);
MakeCode(0x415B5A);
MakeCode(0x415B95);
MakeFunction(0x415B48, 0x415B9E);
MakeCode(0x415BA0);
MakeComm(0x415BE3, "'EResNotFound.Create'");
MakeCode(0x415BED);
MakeCode(0x415BFA);
MakeCode(0x415C03);
MakeCode(0x415C08);
MakeFunction(0x415BA0, 0x415C0E);
MakeUnkn(0x415C10, 1);
MakeNameEx(0x415C10, "TResourceStream.Initialize", 0x20);
MakeComm(0x415C10, "'procedure TResourceStream.Initialize(Instance:THandle; Name:PChar; ResType:PChar);'");
MakeCode(0x415C10);
MakeCode(0x415C3C);
MakeCode(0x415C56);
MakeFunction(0x415C10, 0x415C7C);
MakeUnkn(0x415C7C, 1);
MakeNameEx(0x415C7C, "TResourceStream.Destroy", 0x20);
MakeComm(0x415C7C, "'destructor TResourceStream.Destroy;'");
MakeCode(0x415C7C);
MakeCode(0x415CAF);
MakeFunction(0x415C7C, 0x415CB2);
MakeUnkn(0x415CB4, 1);
MakeNameEx(0x415CB4, "TResourceStream.Write", 0x20);
MakeComm(0x415CB4, "'function TResourceStream.Write(const Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x415CB4);
MakeFunction(0x415CB4, 0x415CCC);
MakeUnkn(0x415CCC, 1);
MakeNameEx(0x415CCC, "TFiler.Create", 0x20);
MakeComm(0x415CCC, "'constructor TFiler.Create(Stream:TStream; BufSize:Integer);'");
MakeCode(0x415CCC);
MakeCode(0x415CDE);
MakeCode(0x415D0A);
MakeFunction(0x415CCC, 0x415D13);
MakeUnkn(0x415D14, 1);
MakeNameEx(0x415D14, "TFiler.Destroy", 0x20);
MakeComm(0x415D14, "'destructor TFiler.Destroy;'");
MakeCode(0x415D14);
MakeCode(0x415D2E);
MakeCode(0x415D39);
MakeFunction(0x415D14, 0x415D3C);
MakeCode(0x415D3C);
MakeComm(0x415D3C, "'TFiler.FRoot:TComponent'");
MakeFunction(0x415D3C, 0x415D40);
MakeUnkn(0x415D40, 1);
MakeNameEx(0x415D40, "VMT_415D40_TPropFixup", 0);
MakeDword(0x415D40);
MakeDword(0x415D44);
MakeDword(0x415D48);
MakeDword(0x415D4C);
MakeUnkn(0x415D90, 1);
MakeNameEx(0x415D90, "TPropFixup_InitTable", 0);
MakeByte(0x415D90);
MakeByte(0x415D91);
MakeDword(0x415D92);
MakeDword(0x415D96);
MakeDword(0x415D9A);
MakeDword(0x415D9E);
MakeDword(0x415DA2);
MakeDword(0x415DA6);
MakeDword(0x415D50);
MakeDword(0x415D54);
MakeDword(0x415D58);
MakeDword(0x415D5C);
MakeDword(0x415D60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x415DAA, 0x415DB5);
MakeDword(0x415D64);
MakeDword(0x415D68);
MakeDword(0x415D6C);
MakeDword(0x415D70);
MakeDword(0x415D74);
MakeDword(0x415D78);
MakeDword(0x415D7C);
MakeDword(0x415D80);
MakeDword(0x415D84);
MakeDword(0x415D88);
MakeComm(0x415D8C, "'+0'");
MakeDword(0x415D8C);
MakeUnkn(0x415DB8, 1);
MakeNameEx(0x415DB8, "VMT_415DB8_TPropIntfFixup", 0);
MakeDword(0x415DB8);
MakeDword(0x415DBC);
MakeDword(0x415DC0);
MakeDword(0x415DC4);
MakeDword(0x415DC8);
MakeDword(0x415DCC);
MakeDword(0x415DD0);
MakeDword(0x415DD4);
MakeDword(0x415DD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x415E08, 0x415E17);
MakeDword(0x415DDC);
MakeDword(0x415DE0);
MakeDword(0x415DE4);
MakeDword(0x415DE8);
MakeDword(0x415DEC);
MakeDword(0x415DF0);
MakeDword(0x415DF4);
MakeDword(0x415DF8);
MakeDword(0x415DFC);
MakeDword(0x415E00);
MakeComm(0x415E04, "'+0'");
MakeDword(0x415E04);
MakeUnkn(0x415E18, 1);
MakeNameEx(0x415E18, "TPropFixup.Create", 0x20);
MakeComm(0x415E18, "'constructor TPropFixup.Create(Instance:TPersistent; InstanceRoot:TComponent; PropInfo:PPropInfo; const RootName:AnsiString; const Name:AnsiString);'");
MakeCode(0x415E18);
MakeCode(0x415E29);
MakeCode(0x415E67);
MakeFunction(0x415E18, 0x415E6F);
MakeUnkn(0x415E70, 1);
MakeNameEx(0x415E70, "TPropFixup.MakeGlobalReference", 0x20);
MakeComm(0x415E70, "'function TPropFixup.MakeGlobalReference:Boolean;'");
MakeCode(0x415E70);
MakeCode(0x415E7F);
MakeCode(0x415E80);
MakeCode(0x415E8B);
MakeCode(0x415EB2);
MakeFunction(0x415E70, 0x415EB7);
MakeUnkn(0x415EB8, 1);
MakeNameEx(0x415EB8, "TPropFixup.ResolveReference", 0x20);
MakeComm(0x415EB8, "'procedure TPropFixup.ResolveReference(Reference:Pointer);'");
MakeCode(0x415EB8);
MakeFunction(0x415EB8, 0x415EC7);
MakeUnkn(0x415EC8, 1);
MakeNameEx(0x415EC8, "TPropIntfFixup.ResolveReference", 0x20);
MakeComm(0x415EC8, "'procedure TPropIntfFixup.ResolveReference(Reference:Pointer);'");
MakeCode(0x415EC8);
MakeCode(0x415F1B);
MakeCode(0x415F29);
MakeCode(0x415F36);
MakeCode(0x415F3F);
MakeCode(0x415F44);
MakeFunction(0x415EC8, 0x415F4B);
MakeUnkn(0x415F4C, 1);
MakeNameEx(0x415F4C, "FindNestedComponent", 0x20);
MakeComm(0x415F4C, "'function FindNestedComponent(Root:TComponent; const NamePath:AnsiString):TComponent;'");
MakeCode(0x415F4C);
MakeCode(0x415F79);
MakeCode(0x415F7D);
MakeCode(0x415F7E);
MakeCode(0x415F8C);
MakeCode(0x415FBC);
MakeCode(0x415FC6);
MakeCode(0x415FCC);
MakeCode(0x415FD2);
MakeCode(0x415FD4);
MakeCode(0x415FDC);
MakeCode(0x415FE9);
MakeCode(0x415FF2);
MakeCode(0x415FF7);
MakeFunction(0x415F4C, 0x416003);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41600C, -1);
MakeDword(0x416008);
MakeDword(0x416004);
MakeUnkn(0x416014, 1);
MakeNameEx(0x416014, "AddFinished", 0x20);
MakeComm(0x416014, "'procedure AddFinished(Instance:TPersistent);'");
MakeCode(0x416014);
MakeCode(0x416049);
MakeFunction(0x416014, 0x41604C);
MakeUnkn(0x41604C, 1);
MakeNameEx(0x41604C, "AddNotFinished", 0x20);
MakeComm(0x41604C, "'procedure AddNotFinished(Instance:TPersistent);'");
MakeCode(0x41604C);
MakeCode(0x416070);
MakeCode(0x41608E);
MakeFunction(0x41604C, 0x416091);
MakeUnkn(0x416094, 1);
MakeNameEx(0x416094, "GlobalFixupReferences", 0x20);
MakeComm(0x416094, "'procedure GlobalFixupReferences;'");
MakeCode(0x416094);
MakeCode(0x416117);
MakeCode(0x416142);
MakeCode(0x41615B);
MakeCode(0x416177);
MakeCode(0x416182);
MakeCode(0x416187);
MakeCode(0x416194);
MakeCode(0x41619D);
MakeCode(0x4161A2);
MakeCode(0x4161B2);
MakeCode(0x4161D5);
MakeCode(0x4161D9);
MakeCode(0x4161E6);
MakeCode(0x4161EF);
MakeCode(0x4161F4);
MakeCode(0x4161F6);
MakeCode(0x416203);
MakeCode(0x41620E);
MakeCode(0x416213);
MakeCode(0x416215);
MakeCode(0x416222);
MakeCode(0x41622D);
MakeCode(0x416232);
MakeFunction(0x416094, 0x41623B);
MakeUnkn(0x41623C, 1);
MakeNameEx(0x41623C, "RemoveFixupReferences", 0x20);
MakeComm(0x41623C, "'procedure RemoveFixupReferences(Root:TComponent; const RootName:AnsiString);'");
MakeCode(0x41623C);
MakeCode(0x41627B);
MakeCode(0x416294);
MakeCode(0x4162A9);
MakeCode(0x4162B9);
MakeCode(0x4162BF);
MakeCode(0x4162CC);
MakeCode(0x4162D7);
MakeCode(0x4162DC);
MakeCode(0x4162DE);
MakeFunction(0x41623C, 0x4162E5);
MakeUnkn(0x4162E8, 1);
MakeNameEx(0x4162E8, "TMemoryStream.Clear", 0x20);
MakeComm(0x4162E8, "'procedure TMemoryStream.Clear;'");
MakeCode(0x4162E8);
MakeCode(0x41631E);
MakeCode(0x416341);
MakeCode(0x416347);
MakeCode(0x416354);
MakeCode(0x41635F);
MakeCode(0x416364);
MakeCode(0x416366);
MakeFunction(0x4162E8, 0x41636C);
MakeUnkn(0x41636C, 1);
MakeNameEx(0x41636C, "ReadError", 0x20);
MakeComm(0x41636C, "'procedure ReadError(Ident:PResStringRec);'");
MakeCode(0x41636C);
MakeFunction(0x41636C, 0x416384);
MakeUnkn(0x416384, 1);
MakeNameEx(0x416384, "PropValueError", 0x20);
MakeComm(0x416384, "'procedure PropValueError;'");
MakeCode(0x416384);
MakeFunction(0x416384, 0x41638F);
MakeUnkn(0x416390, 1);
MakeNameEx(0x416390, "PropertyNotFound", 0x20);
MakeComm(0x416390, "'procedure PropertyNotFound(const Name:AnsiString);'");
MakeCode(0x416390);
MakeFunction(0x416390, 0x4163BC);
MakeUnkn(0x4163BC, 1);
MakeNameEx(0x4163BC, "EnumValue", 0x20);
MakeComm(0x4163BC, "'function EnumValue(EnumType:PTypeInfo; const EnumName:AnsiString):Integer;'");
MakeCode(0x4163BC);
MakeCode(0x4163CE);
MakeFunction(0x4163BC, 0x4163D2);
MakeUnkn(0x4163D4, 1);
MakeNameEx(0x4163D4, "TReader.Destroy", 0x20);
MakeComm(0x4163D4, "'destructor TReader.Destroy;'");
MakeCode(0x4163D4);
MakeCode(0x416409);
MakeFunction(0x4163D4, 0x41640D);
MakeUnkn(0x416410, 1);
MakeNameEx(0x416410, "TReader.CheckValue", 0x20);
MakeComm(0x416410, "'procedure TReader.CheckValue(Value:TValueType);'");
MakeCode(0x416410);
MakeCode(0x416430);
MakeFunction(0x416410, 0x416433);
MakeUnkn(0x416434, 1);
MakeNameEx(0x416434, "TReader.DefineProperty", 0x20);
MakeComm(0x416434, "'procedure TReader.DefineProperty(const Name:AnsiString; ReadData:TReaderProc; WriteData:TWriterProc; HasData:Boolean);'");
MakeCode(0x416434);
MakeCode(0x416462);
MakeFunction(0x416434, 0x416468);
MakeUnkn(0x416468, 1);
MakeNameEx(0x416468, "TReader.DefineBinaryProperty", 0x20);
MakeComm(0x416468, "'procedure TReader.DefineBinaryProperty(const Name:AnsiString; ReadData:TStreamProc; WriteData:TStreamProc; HasData:Boolean);'");
MakeCode(0x416468);
MakeCode(0x4164BA);
MakeCode(0x416513);
MakeCode(0x416520);
MakeCode(0x416529);
MakeCode(0x41652E);
MakeCode(0x41653B);
MakeFunction(0x416468, 0x416542);
MakeUnkn(0x416544, 1);
MakeNameEx(0x416544, "TReader.EndOfList", 0x20);
MakeComm(0x416544, "'function TReader.EndOfList:Boolean;'");
MakeCode(0x416544);
MakeFunction(0x416544, 0x416558);
MakeUnkn(0x416558, 1);
MakeNameEx(0x416558, "TReader.Error", 0x20);
MakeComm(0x416558, "'function TReader.Error(const Message:AnsiString):Boolean;'");
MakeCode(0x416558);
MakeCode(0x416572);
MakeFunction(0x416558, 0x416578);
MakeUnkn(0x416578, 1);
MakeNameEx(0x416578, "TReader.FindMethod", 0x20);
MakeComm(0x416578, "'function TReader.FindMethod(Root:TComponent; const MethodName:AnsiString):Pointer;'");
MakeCode(0x416578);
MakeCode(0x4165C5);
MakeCode(0x4165D1);
MakeFunction(0x416578, 0x4165DE);
MakeUnkn(0x4165E0, 1);
MakeNameEx(0x4165E0, "RemoveGlobalFixup", 0x20);
MakeComm(0x4165E0, "'procedure RemoveGlobalFixup(Fixup:TPropFixup);'");
MakeCode(0x4165E0);
MakeCode(0x41660B);
MakeCode(0x416632);
MakeCode(0x416638);
MakeCode(0x416645);
MakeCode(0x416650);
MakeCode(0x416655);
MakeFunction(0x4165E0, 0x41665C);
MakeUnkn(0x41665C, 1);
MakeNameEx(0x41665C, "TReader.DoFixupReferences", 0x20);
MakeComm(0x41665C, "'procedure TReader.DoFixupReferences;'");
MakeCode(0x41665C);
MakeCode(0x4166A9);
MakeCode(0x416726);
MakeCode(0x41672E);
MakeCode(0x416738);
MakeCode(0x416745);
MakeCode(0x41674E);
MakeCode(0x416753);
MakeCode(0x416755);
MakeCode(0x416762);
MakeCode(0x41676B);
MakeCode(0x416770);
MakeFunction(0x41665C, 0x416779);
MakeUnkn(0x41677C, 1);
MakeNameEx(0x41677C, "TReader.FlushBuffer", 0x20);
MakeComm(0x41677C, "'procedure TReader.FlushBuffer;'");
MakeCode(0x41677C);
MakeFunction(0x41677C, 0x41679D);
MakeUnkn(0x4167A0, 1);
MakeNameEx(0x4167A0, "TReader.FreeFixups", 0x20);
MakeComm(0x4167A0, "'procedure TReader.FreeFixups;'");
MakeCode(0x4167A0);
MakeCode(0x4167B7);
MakeCode(0x4167CA);
MakeCode(0x4167D7);
MakeFunction(0x4167A0, 0x4167DB);
MakeUnkn(0x4167DC, 1);
MakeNameEx(0x4167DC, "TReader.GetFieldClass", 0x20);
MakeComm(0x4167DC, "'function TReader.GetFieldClass(Instance:TObject; const ClassName:AnsiString):TPersistentClass;'");
MakeCode(0x4167DC);
MakeCode(0x4167F5);
MakeCode(0x416813);
MakeCode(0x416833);
MakeCode(0x41683C);
MakeCode(0x41685B);
MakeCode(0x416866);
MakeFunction(0x4167DC, 0x416870);
MakeUnkn(0x416870, 1);
MakeNameEx(0x416870, "TReader.GetPosition", 0x20);
MakeComm(0x416870, "'function TReader.GetPosition:Longint;'");
MakeCode(0x416870);
MakeFunction(0x416870, 0x416885);
MakeUnkn(0x416888, 1);
MakeNameEx(0x416888, "TReader.NextValue", 0x20);
MakeComm(0x416888, "'function TReader.NextValue:TValueType;'");
MakeCode(0x416888);
MakeFunction(0x416888, 0x416897);
MakeUnkn(0x416898, 1);
MakeNameEx(0x416898, "TReader.PropertyError", 0x20);
MakeComm(0x416898, "'procedure TReader.PropertyError(const Name:AnsiString);'");
MakeCode(0x416898);
MakeFunction(0x416898, 0x4168A9);
MakeUnkn(0x4168AC, 1);
MakeNameEx(0x4168AC, "TReader.Read", 0x20);
MakeComm(0x4168AC, "'procedure TReader.Read(var Buf:void ; Count:Longint);'");
MakeCode(0x4168AC);
MakeCode(0x4168B7);
MakeCode(0x4168C9);
MakeCode(0x4168CF);
MakeCode(0x4168ED);
MakeFunction(0x4168AC, 0x4168F5);
MakeUnkn(0x4168F8, 1);
MakeNameEx(0x4168F8, "TReader.ReadBuffer", 0x20);
MakeComm(0x4168F8, "'procedure TReader.ReadBuffer;'");
MakeCode(0x4168F8);
MakeCode(0x41692A);
MakeFunction(0x4168F8, 0x416932);
MakeUnkn(0x416934, 1);
MakeNameEx(0x416934, "TReader.ReadBoolean", 0x20);
MakeComm(0x416934, "'function TReader.ReadBoolean:Boolean;'");
MakeCode(0x416934);
MakeFunction(0x416934, 0x416945);
MakeUnkn(0x416948, 1);
MakeNameEx(0x416948, "TReader.ReadChar", 0x20);
MakeComm(0x416948, "'function TReader.ReadChar:Char;'");
MakeCode(0x416948);
MakeCode(0x416978);
MakeCode(0x41697D);
MakeCode(0x41698A);
MakeCode(0x416993);
MakeCode(0x416998);
MakeFunction(0x416948, 0x4169A0);
MakeUnkn(0x4169A0, 1);
MakeNameEx(0x4169A0, "TReader.ReadCollection", 0x20);
MakeComm(0x4169A0, "'procedure TReader.ReadCollection(Collection:TCollection);'");
MakeCode(0x4169A0);
MakeCode(0x4169D6);
MakeCode(0x4169EA);
MakeCode(0x4169FD);
MakeCode(0x416A06);
MakeCode(0x416A18);
MakeCode(0x416A2A);
MakeCode(0x416A37);
MakeCode(0x416A40);
MakeCode(0x416A45);
MakeFunction(0x4169A0, 0x416A4C);
MakeUnkn(0x416A4C, 1);
MakeNameEx(0x416A4C, "RTTI_416A4C_DynArray_.06", 0);
MakeDword(0x416A4C);
MakeUnkn(0x416A50, 1);
MakeNameEx(0x416A50, "", 0);
MakeByte(0x416A50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x416A51, 0x416A55);
MakeDword(0x416A55);
MakeDword(0x416A59);
MakeDword(0x416A5D);
MakeDword(0x416A61);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x416A65, 0x416A6D);
MakeUnkn(0x416A70, 1);
MakeNameEx(0x416A70, "AddSubComponentsToLoaded", 0x20);
MakeComm(0x416A70, "'procedure AddSubComponentsToLoaded(Component:TComponent);'");
MakeCode(0x416A70);
MakeCode(0x416A8A);
MakeCode(0x416AA5);
MakeFunction(0x416A70, 0x416AA9);
MakeUnkn(0x416AAC, 1);
MakeNameEx(0x416AAC, "CheckSubComponents", 0x20);
MakeComm(0x416AAC, "'procedure CheckSubComponents(Component:TComponent);'");
MakeCode(0x416AAC);
MakeCode(0x416AC5);
MakeCode(0x416B1A);
MakeCode(0x416B1E);
MakeFunction(0x416AAC, 0x416B23);
MakeUnkn(0x416B24, 1);
MakeNameEx(0x416B24, "SetSubComponentState", 0x20);
MakeComm(0x416B24, "'procedure SetSubComponentState(State:TComponentState; Add:Boolean);'");
MakeCode(0x416B24);
MakeCode(0x416B47);
MakeCode(0x416B67);
MakeCode(0x416B81);
MakeCode(0x416B85);
MakeFunction(0x416B24, 0x416B8B);
MakeUnkn(0x416B8C, 1);
MakeNameEx(0x416B8C, "ComponentCreated", 0x20);
MakeComm(0x416B8C, "'function ComponentCreated:Boolean;'");
MakeCode(0x416B8C);
MakeCode(0x416BA1);
MakeCode(0x416BA5);
MakeFunction(0x416B8C, 0x416BA9);
MakeUnkn(0x416BAC, 1);
MakeNameEx(0x416BAC, "Recover", 0x20);
MakeComm(0x416BAC, "'function Recover(var Component:TComponent):Boolean;'");
MakeCode(0x416BAC);
MakeCode(0x416BDE);
MakeCode(0x416C04);
MakeFunction(0x416BAC, 0x416C0A);
MakeUnkn(0x416C0C, 1);
MakeNameEx(0x416C0C, "CreateComponent", 0x20);
MakeComm(0x416C0C, "'procedure CreateComponent;'");
MakeCode(0x416C0C);
MakeCode(0x416C63);
MakeCode(0x416C97);
MakeCode(0x416CBC);
MakeCode(0x416CC6);
MakeCode(0x416CDD);
MakeCode(0x416CE8);
MakeCode(0x416CF2);
MakeCode(0x416D10);
MakeCode(0x416D15);
MakeFunction(0x416C0C, 0x416D1A);
MakeUnkn(0x416D1C, 1);
MakeNameEx(0x416D1C, "SetCompName", 0x20);
MakeComm(0x416D1C, "'procedure SetCompName;'");
MakeCode(0x416D1C);
MakeCode(0x416D8A);
MakeCode(0x416D94);
MakeCode(0x416DB2);
MakeCode(0x416DB7);
MakeFunction(0x416D1C, 0x416DBC);
MakeUnkn(0x416DBC, 1);
MakeNameEx(0x416DBC, "FindExistingComponent", 0x20);
MakeComm(0x416DBC, "'procedure FindExistingComponent;'");
MakeCode(0x416DBC);
MakeCode(0x416E2D);
MakeCode(0x416E37);
MakeCode(0x416E55);
MakeCode(0x416E5A);
MakeFunction(0x416DBC, 0x416E5F);
MakeUnkn(0x416E60, 1);
MakeNameEx(0x416E60, "TReader.ReadComponent", 0x20);
MakeComm(0x416E60, "'function TReader.ReadComponent(Component:TComponent):TComponent;'");
MakeCode(0x416E60);
MakeCode(0x416EE7);
MakeCode(0x416EEE);
MakeCode(0x416F34);
MakeCode(0x416F4C);
MakeCode(0x416F5E);
MakeCode(0x416FB2);
MakeCode(0x416FC1);
MakeCode(0x416FED);
MakeCode(0x417005);
MakeCode(0x41700F);
MakeCode(0x417027);
MakeCode(0x417031);
MakeCode(0x41703E);
MakeCode(0x417051);
MakeCode(0x417056);
MakeCode(0x417058);
MakeCode(0x417065);
MakeCode(0x417081);
MakeCode(0x417086);
MakeFunction(0x416E60, 0x417092);
MakeUnkn(0x41709C, 1);
MakeNameEx(0x41709C, "TReader.ReadData", 0x20);
MakeComm(0x41709C, "'procedure TReader.ReadData(Instance:TComponent);'");
MakeCode(0x41709C);
MakeCode(0x4170E1);
MakeCode(0x4170EE);
MakeCode(0x4170F7);
MakeCode(0x4170FC);
MakeCode(0x4170FE);
MakeFunction(0x41709C, 0x41710C);
MakeUnkn(0x41710C, 1);
MakeNameEx(0x41710C, "TReader.ReadDataInner", 0x20);
MakeComm(0x41710C, "'procedure TReader.ReadDataInner(Instance:TComponent);'");
MakeCode(0x41710C);
MakeCode(0x41711C);
MakeCode(0x417126);
MakeCode(0x417190);
MakeCode(0x41719A);
MakeCode(0x4171AE);
MakeCode(0x4171BB);
MakeCode(0x4171CE);
MakeCode(0x4171D3);
MakeFunction(0x41710C, 0x4171DC);
MakeUnkn(0x4171DC, 1);
MakeNameEx(0x4171DC, "TReader.ReadFloat", 0x20);
MakeComm(0x4171DC, "'function TReader.ReadFloat:Extended;'");
MakeCode(0x4171DC);
MakeCode(0x4171FD);
MakeCode(0x417217);
MakeFunction(0x4171DC, 0x41721F);
MakeUnkn(0x417220, 1);
MakeNameEx(0x417220, "TReader.ReadSingle", 0x20);
MakeComm(0x417220, "'function TReader.ReadSingle:Single;'");
MakeCode(0x417220);
MakeCode(0x417241);
MakeCode(0x41725B);
MakeFunction(0x417220, 0x417263);
MakeUnkn(0x417264, 1);
MakeNameEx(0x417264, "TReader.ReadCurrency", 0x20);
MakeComm(0x417264, "'function TReader.ReadCurrency:Currency;'");
MakeCode(0x417264);
MakeCode(0x417285);
MakeCode(0x4172A5);
MakeFunction(0x417264, 0x4172AD);
MakeUnkn(0x4172B4, 1);
MakeNameEx(0x4172B4, "TReader.ReadDate", 0x20);
MakeComm(0x4172B4, "'function TReader.ReadDate:TDateTime;'");
MakeCode(0x4172B4);
MakeCode(0x4172D5);
MakeCode(0x4172EF);
MakeFunction(0x4172B4, 0x4172F7);
MakeUnkn(0x4172F8, 1);
MakeNameEx(0x4172F8, "TReader.ReadIdent", 0x20);
MakeComm(0x4172F8, "'function TReader.ReadIdent:AnsiString;'");
MakeCode(0x4172F8);
MakeCode(0x417345);
MakeCode(0x417378);
MakeCode(0x417386);
MakeCode(0x417394);
MakeCode(0x4173A2);
MakeCode(0x4173B0);
MakeCode(0x4173B5);
MakeFunction(0x4172F8, 0x4173B9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4173C4, -1);
MakeDword(0x4173C0);
MakeDword(0x4173BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4173D4, -1);
MakeDword(0x4173D0);
MakeDword(0x4173CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4173E4, -1);
MakeDword(0x4173E0);
MakeDword(0x4173DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4173F0, -1);
MakeDword(0x4173EC);
MakeDword(0x4173E8);
MakeUnkn(0x4173F8, 1);
MakeNameEx(0x4173F8, "TReader.ReadInteger", 0x20);
MakeComm(0x4173F8, "'function TReader.ReadInteger:Longint;'");
MakeCode(0x4173F8);
MakeCode(0x417413);
MakeCode(0x41742D);
MakeCode(0x417447);
MakeCode(0x417457);
MakeCode(0x41745C);
MakeFunction(0x4173F8, 0x417463);
MakeUnkn(0x417464, 1);
MakeNameEx(0x417464, "TReader.ReadInt64", 0x20);
MakeComm(0x417464, "'function TReader.ReadInt64:Int64;'");
MakeCode(0x417464);
MakeCode(0x41748C);
MakeCode(0x41749B);
MakeFunction(0x417464, 0x4174A6);
MakeUnkn(0x4174A8, 1);
MakeNameEx(0x4174A8, "TReader.ReadListBegin", 0x20);
MakeComm(0x4174A8, "'procedure TReader.ReadListBegin;'");
MakeCode(0x4174A8);
MakeFunction(0x4174A8, 0x4174B0);
MakeUnkn(0x4174B0, 1);
MakeNameEx(0x4174B0, "TReader.ReadListEnd", 0x20);
MakeComm(0x4174B0, "'procedure TReader.ReadListEnd;'");
MakeCode(0x4174B0);
MakeFunction(0x4174B0, 0x4174B8);
MakeUnkn(0x4174B8, 1);
MakeNameEx(0x4174B8, "TReader.ReadPrefix", 0x20);
MakeComm(0x4174B8, "'procedure TReader.ReadPrefix(var Flags:TFilerFlags; var AChildPos:Integer);'");
MakeCode(0x4174B8);
MakeCode(0x4174EE);
MakeFunction(0x4174B8, 0x4174F2);
MakeUnkn(0x4174F8, 1);
MakeNameEx(0x4174F8, "HandleException", 0x20);
MakeComm(0x4174F8, "'procedure HandleException(E:Exception);'");
MakeCode(0x4174F8);
MakeCode(0x417545);
MakeCode(0x41756C);
MakeCode(0x4175D3);
MakeCode(0x4175E0);
MakeCode(0x4175E9);
MakeCode(0x4175EE);
MakeFunction(0x4174F8, 0x4175F5);
MakeUnkn(0x4175F8, 1);
MakeNameEx(0x4175F8, "PropPathError", 0x20);
MakeComm(0x4175F8, "'procedure PropPathError;'");
MakeCode(0x4175F8);
MakeFunction(0x4175F8, 0x417612);
MakeUnkn(0x417614, 1);
MakeNameEx(0x417614, "TReader.ReadProperty", 0x20);
MakeComm(0x417614, "'procedure TReader.ReadProperty(AInstance:TPersistent);'");
MakeCode(0x417614);
MakeCode(0x417679);
MakeCode(0x41767D);
MakeCode(0x41767E);
MakeCode(0x41768C);
MakeCode(0x4176CE);
MakeCode(0x4176E9);
MakeCode(0x417702);
MakeCode(0x41770E);
MakeCode(0x417738);
MakeCode(0x417768);
MakeCode(0x417772);
MakeDword(0x417777);
MakeDword(0x41777B);
MakeDword(0x41777F);
MakeCode(0x417783);
MakeCode(0x41778F);
MakeCode(0x417799);
MakeDword(0x41779E);
MakeDword(0x4177A2);
MakeDword(0x4177A6);
MakeCode(0x4177AA);
MakeCode(0x4177C4);
MakeCode(0x4177C9);
MakeCode(0x4177CE);
MakeCode(0x4177DB);
MakeCode(0x4177E4);
MakeCode(0x4177E9);
MakeFunction(0x417614, 0x4177F2);
MakeUnkn(0x4177F4, 1);
MakeNameEx(0x4177F4, "SetIntIdent", 0x20);
MakeComm(0x4177F4, "'procedure SetIntIdent(Instance:TPersistent; PropInfo:Pointer; const Ident:AnsiString);'");
MakeCode(0x4177F4);
MakeCode(0x41782D);
MakeCode(0x417832);
MakeFunction(0x4177F4, 0x417839);
MakeUnkn(0x41783C, 1);
MakeNameEx(0x41783C, "SetObjectIdent", 0x20);
MakeComm(0x41783C, "'procedure SetObjectIdent(Instance:TPersistent; PropInfo:Pointer; const Ident:AnsiString);'");
MakeCode(0x41783C);
MakeFunction(0x41783C, 0x417879);
MakeUnkn(0x41787C, 1);
MakeNameEx(0x41787C, "SetVariantReference", 0x20);
MakeComm(0x41787C, "'procedure SetVariantReference;'");
MakeCode(0x41787C);
MakeCode(0x4178B5);
MakeCode(0x4178C2);
MakeCode(0x4178CB);
MakeCode(0x4178D0);
MakeFunction(0x41787C, 0x4178D6);
MakeUnkn(0x4178D8, 1);
MakeNameEx(0x4178D8, "SetInterfaceReference", 0x20);
MakeComm(0x4178D8, "'procedure SetInterfaceReference;'");
MakeCode(0x4178D8);
MakeCode(0x417925);
MakeCode(0x41796C);
MakeCode(0x417979);
MakeCode(0x41798A);
MakeCode(0x41798F);
MakeFunction(0x4178D8, 0x417995);
MakeUnkn(0x417998, 1);
MakeNameEx(0x417998, "TReader.ReadPropValue", 0x20);
MakeComm(0x417998, "'procedure TReader.ReadPropValue(Instance:TPersistent; PropInfo:Pointer);'");
MakeCode(0x417998);
MakeCode(0x4179A1);
MakeCode(0x417A03);
MakeCode(0x417A0D);
MakeCode(0x417A6C);
MakeCode(0x417A96);
MakeCode(0x417AB0);
MakeCode(0x417ACC);
MakeCode(0x417AF3);
MakeCode(0x417B12);
MakeCode(0x417B30);
MakeCode(0x417B4E);
MakeCode(0x417B6A);
MakeCode(0x417B7C);
MakeCode(0x417B96);
MakeCode(0x417BB8);
MakeCode(0x417BD8);
MakeCode(0x417BFE);
MakeCode(0x417C3C);
MakeCode(0x417C45);
MakeCode(0x417C5C);
MakeCode(0x417C63);
MakeCode(0x417C70);
MakeCode(0x417C93);
MakeCode(0x417C98);
MakeFunction(0x417998, 0x417C9F);
MakeUnkn(0x417CA0, 1);
MakeNameEx(0x417CA0, "FindUniqueName", 0x20);
MakeComm(0x417CA0, "'function FindUniqueName(const Name:AnsiString):AnsiString;'");
MakeCode(0x417CA0);
MakeCode(0x417CBA);
MakeCode(0x417CDC);
MakeFunction(0x417CA0, 0x417CEE);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x417CF8, -1);
MakeDword(0x417CF4);
MakeDword(0x417CF0);
MakeUnkn(0x417D00, 1);
MakeNameEx(0x417D00, "TReader.ReadRootComponent", 0x20);
MakeComm(0x417D00, "'function TReader.ReadRootComponent(Root:TComponent):TComponent;'");
MakeCode(0x417D00);
MakeCode(0x417DAD);
MakeCode(0x417DD4);
MakeCode(0x417E05);
MakeCode(0x417E62);
MakeCode(0x417E74);
MakeCode(0x417EA8);
MakeCode(0x417EFF);
MakeCode(0x417F18);
MakeCode(0x417F25);
MakeCode(0x417F36);
MakeCode(0x417F3F);
MakeCode(0x417F44);
MakeCode(0x417F46);
MakeCode(0x417F53);
MakeCode(0x417F5F);
MakeCode(0x417F64);
MakeCode(0x417F66);
MakeCode(0x417F79);
MakeCode(0x417F83);
MakeCode(0x417F8B);
MakeCode(0x417FA9);
MakeCode(0x417FB0);
MakeCode(0x417FBA);
MakeCode(0x417FD7);
MakeCode(0x417FE1);
MakeCode(0x417FEE);
MakeCode(0x417FF9);
MakeCode(0x417FFE);
MakeCode(0x418000);
MakeCode(0x41800D);
MakeCode(0x41801B);
MakeCode(0x418020);
MakeFunction(0x417D00, 0x41802C);
MakeUnkn(0x41802C, 1);
MakeNameEx(0x41802C, "TReader.ReadSet", 0x20);
MakeComm(0x41802C, "'function TReader.ReadSet(SetType:Pointer):Integer;'");
MakeCode(0x41802C);
MakeCode(0x41806C);
MakeCode(0x41807A);
MakeCode(0x41809F);
MakeCode(0x4180A9);
MakeCode(0x4180C0);
MakeCode(0x4180CD);
MakeCode(0x4180D6);
MakeCode(0x4180DB);
MakeFunction(0x41802C, 0x4180E6);
MakeUnkn(0x4180E8, 1);
MakeNameEx(0x4180E8, "TReader.ReadSignature", 0x20);
MakeComm(0x4180E8, "'procedure TReader.ReadSignature;'");
MakeCode(0x4180E8);
MakeCode(0x41810A);
MakeFunction(0x4180E8, 0x41810C);
MakeUnkn(0x41810C, 1);
MakeNameEx(0x41810C, "TReader.ReadStr", 0x20);
MakeComm(0x41810C, "'function TReader.ReadStr:AnsiString;'");
MakeCode(0x41810C);
MakeFunction(0x41810C, 0x418148);
MakeUnkn(0x418148, 1);
MakeNameEx(0x418148, "TReader.ReadString", 0x20);
MakeComm(0x418148, "'function TReader.ReadString:AnsiString;'");
MakeCode(0x418148);
MakeCode(0x418176);
MakeCode(0x41818C);
MakeCode(0x4181A2);
MakeCode(0x4181B3);
MakeCode(0x4181C4);
MakeCode(0x4181C9);
MakeCode(0x4181DF);
MakeCode(0x4181EC);
MakeCode(0x4181F5);
MakeCode(0x4181FA);
MakeFunction(0x418148, 0x418202);
MakeUnkn(0x418204, 1);
MakeNameEx(0x418204, "TReader.ReadWideString", 0x20);
MakeComm(0x418204, "'function TReader.ReadWideString:WideString;'");
MakeCode(0x418204);
MakeCode(0x418230);
MakeCode(0x418246);
MakeCode(0x41825C);
MakeCode(0x418285);
MakeCode(0x4182B8);
MakeCode(0x4182BD);
MakeCode(0x4182CA);
MakeCode(0x4182DB);
MakeCode(0x4182E0);
MakeFunction(0x418204, 0x4182E8);
MakeUnkn(0x4182E8, 1);
MakeNameEx(0x4182E8, "TReader.ReadValue", 0x20);
MakeComm(0x4182E8, "'function TReader.ReadValue:TValueType;'");
MakeCode(0x4182E8);
MakeFunction(0x4182E8, 0x4182FA);
MakeUnkn(0x4182FC, 1);
MakeNameEx(0x4182FC, "TReader.SkipSetBody", 0x20);
MakeComm(0x4182FC, "'procedure TReader.SkipSetBody;'");
MakeCode(0x4182FC);
MakeCode(0x418312);
MakeCode(0x418322);
MakeCode(0x41832F);
MakeCode(0x418338);
MakeCode(0x41833D);
MakeFunction(0x4182FC, 0x418343);
MakeUnkn(0x418344, 1);
MakeNameEx(0x418344, "SkipList", 0x20);
MakeComm(0x418344, "'procedure SkipList;'");
MakeCode(0x418344);
MakeCode(0x418350);
MakeCode(0x418357);
MakeFunction(0x418344, 0x41836C);
MakeUnkn(0x41836C, 1);
MakeNameEx(0x41836C, "SkipBinary", 0x20);
MakeComm(0x41836C, "'procedure SkipBinary(BytesPerUnit:Integer);'");
MakeCode(0x41836C);
MakeFunction(0x41836C, 0x41839B);
MakeUnkn(0x41839C, 1);
MakeNameEx(0x41839C, "SkipCollection", 0x20);
MakeComm(0x41839C, "'procedure SkipCollection;'");
MakeCode(0x41839C);
MakeCode(0x4183A8);
MakeCode(0x4183BC);
MakeCode(0x4183CA);
MakeCode(0x4183D1);
MakeCode(0x4183E3);
MakeFunction(0x41839C, 0x4183F8);
MakeUnkn(0x4183F8, 1);
MakeNameEx(0x4183F8, "TReader.SkipValue", 0x20);
MakeComm(0x4183F8, "'procedure TReader.SkipValue;'");
MakeCode(0x4183F8);
MakeCode(0x418488);
MakeCode(0x418494);
MakeCode(0x4184A6);
MakeCode(0x4184B8);
MakeCode(0x4184CA);
MakeCode(0x4184DC);
MakeCode(0x4184EC);
MakeCode(0x4184FA);
MakeCode(0x418504);
MakeCode(0x418512);
MakeCode(0x41851B);
MakeCode(0x41852A);
MakeCode(0x418539);
MakeCode(0x418548);
MakeCode(0x418556);
MakeCode(0x418565);
MakeCode(0x418571);
MakeCode(0x41857E);
MakeCode(0x418587);
MakeCode(0x41858C);
MakeFunction(0x4183F8, 0x418592);
MakeUnkn(0x418594, 1);
MakeNameEx(0x418594, "TReader.SkipProperty", 0x20);
MakeComm(0x418594, "'procedure TReader.SkipProperty;'");
MakeCode(0x418594);
MakeCode(0x4185BB);
MakeCode(0x4185C8);
MakeCode(0x4185D1);
MakeCode(0x4185D6);
MakeFunction(0x418594, 0x4185DC);
MakeUnkn(0x4185DC, 1);
MakeNameEx(0x4185DC, "TReader.SkipComponent", 0x20);
MakeComm(0x4185DC, "'procedure TReader.SkipComponent(SkipHeader:Boolean);'");
MakeCode(0x4185DC);
MakeCode(0x418623);
MakeCode(0x41862A);
MakeCode(0x41863E);
MakeCode(0x418647);
MakeFunction(0x4185DC, 0x418681);
MakeUnkn(0x418684, 1);
MakeNameEx(0x418684, "TReader.FindAncestorComponent", 0x20);
MakeComm(0x418684, "'function TReader.FindAncestorComponent(const Name:AnsiString; ComponentClass:TPersistentClass):TComponent;'");
MakeCode(0x418684);
MakeCode(0x4186C9);
MakeCode(0x4186E6);
MakeCode(0x418713);
MakeCode(0x418720);
MakeCode(0x418729);
MakeCode(0x41872E);
MakeFunction(0x418684, 0x41873A);
MakeUnkn(0x41873C, 1);
MakeNameEx(0x41873C, "TReader.ReferenceName", 0x20);
MakeComm(0x41873C, "'procedure TReader.ReferenceName(var Name:AnsiString);'");
MakeCode(0x41873C);
MakeCode(0x418750);
MakeFunction(0x41873C, 0x418752);
MakeUnkn(0x418754, 1);
MakeNameEx(0x418754, "TReader.SetName", 0x20);
MakeComm(0x418754, "'procedure TReader.SetName(Component:TComponent; var Name:AnsiString);'");
MakeCode(0x418754);
MakeCode(0x41876F);
MakeFunction(0x418754, 0x41877C);
MakeUnkn(0x41877C, 1);
MakeNameEx(0x41877C, "TReader.FindComponentClass", 0x20);
MakeComm(0x41877C, "'function TReader.FindComponentClass(const ClassName:AnsiString):TComponentClass;'");
MakeCode(0x41877C);
MakeCode(0x4187B5);
MakeCode(0x4187C7);
MakeCode(0x4187DF);
MakeCode(0x4187E6);
MakeFunction(0x41877C, 0x4187ED);
MakeUnkn(0x4187F0, 1);
MakeNameEx(0x4187F0, "TReader.SkipBytes", 0x20);
MakeComm(0x4187F0, "'procedure TReader.SkipBytes(Count:Integer);'");
MakeCode(0x4187F0);
MakeCode(0x418800);
MakeCode(0x41881E);
MakeCode(0x41882B);
MakeCode(0x41882F);
MakeFunction(0x4187F0, 0x418838);
MakeUnkn(0x418838, 1);
MakeNameEx(0x418838, "ReadCustomVariant", 0x20);
MakeComm(0x418838, "'function ReadCustomVariant:Variant;'");
MakeCode(0x418838);
MakeCode(0x418953);
MakeCode(0x41896A);
MakeCode(0x418981);
MakeCode(0x41898E);
MakeCode(0x418997);
MakeCode(0x41899C);
MakeCode(0x41899E);
MakeCode(0x4189AB);
MakeCode(0x4189BC);
MakeCode(0x4189C1);
MakeCode(0x4189C3);
MakeCode(0x4189D0);
MakeCode(0x4189E1);
MakeCode(0x4189E6);
MakeFunction(0x418838, 0x4189ED);
MakeUnkn(0x418A00, 1);
MakeNameEx(0x418A00, "TReader.ReadVariant", 0x20);
MakeComm(0x418A00, "'function TReader.ReadVariant:Variant;'");
MakeCode(0x418A00);
MakeCode(0x418A96);
MakeCode(0x418AB2);
MakeCode(0x418ACD);
MakeCode(0x418AE8);
MakeCode(0x418B00);
MakeCode(0x418B14);
MakeCode(0x418B28);
MakeCode(0x418B3C);
MakeCode(0x418B50);
MakeCode(0x418B67);
MakeCode(0x418B7E);
MakeCode(0x418B94);
MakeCode(0x418BAA);
MakeCode(0x418BBD);
MakeCode(0x418BD4);
MakeCode(0x418BE1);
MakeCode(0x418BFA);
MakeCode(0x418BFF);
MakeFunction(0x418A00, 0x418C06);
MakeUnkn(0x418C08, 1);
MakeNameEx(0x418C08, "TWriter.Write", 0x20);
MakeComm(0x418C08, "'procedure TWriter.Write(const Buf:void ; Count:Longint);'");
MakeCode(0x418C08);
MakeCode(0x418C13);
MakeCode(0x418C25);
MakeCode(0x418C2B);
MakeCode(0x418C49);
MakeFunction(0x418C08, 0x418C51);
MakeUnkn(0x418C54, 1);
MakeNameEx(0x418C54, "TWriter.WriteBuffer", 0x20);
MakeComm(0x418C54, "'procedure TWriter.WriteBuffer;'");
MakeCode(0x418C54);
MakeFunction(0x418C54, 0x418C6C);
MakeUnkn(0x418C6C, 1);
MakeNameEx(0x418C6C, "TWriter.WriteBoolean", 0x20);
MakeComm(0x418C6C, "'procedure TWriter.WriteBoolean(Value:Boolean);'");
MakeCode(0x418C6C);
MakeCode(0x418C78);
MakeFunction(0x418C6C, 0x418C80);
MakeUnkn(0x418C80, 1);
MakeNameEx(0x418C80, "TWriter.WriteInteger", 0x20);
MakeComm(0x418C80, "'procedure TWriter.WriteInteger(Value:Longint);'");
MakeCode(0x418C80);
MakeCode(0x418CAD);
MakeCode(0x418CD8);
MakeCode(0x418CEF);
MakeFunction(0x418C80, 0x418CF2);
MakeUnkn(0x418CF4, 1);
MakeNameEx(0x418CF4, "TWriter.WriteListBegin", 0x20);
MakeComm(0x418CF4, "'procedure TWriter.WriteListBegin;'");
MakeCode(0x418CF4);
MakeFunction(0x418CF4, 0x418CFC);
MakeUnkn(0x418CFC, 1);
MakeNameEx(0x418CFC, "TWriter.WriteListEnd", 0x20);
MakeComm(0x418CFC, "'procedure TWriter.WriteListEnd;'");
MakeCode(0x418CFC);
MakeFunction(0x418CFC, 0x418D04);
MakeUnkn(0x418D04, 1);
MakeNameEx(0x418D04, "TWriter.WriteMinStr", 0x20);
MakeComm(0x418D04, "'procedure TWriter.WriteMinStr(const LocaleStr:AnsiString; const UTF8Str:UTF8String);'");
MakeCode(0x418D04);
MakeCode(0x418D48);
MakeCode(0x418D74);
MakeCode(0x418D8B);
MakeCode(0x418D97);
MakeFunction(0x418D04, 0x418D9C);
MakeUnkn(0x418D9C, 1);
MakeNameEx(0x418D9C, "TWriter.WriteString", 0x20);
MakeComm(0x418D9C, "'procedure TWriter.WriteString(const Value:AnsiString);'");
MakeCode(0x418D9C);
MakeCode(0x418DCB);
MakeCode(0x418DD8);
MakeCode(0x418DE1);
MakeCode(0x418DE6);
MakeFunction(0x418D9C, 0x418DED);
MakeUnkn(0x418DF0, 1);
MakeNameEx(0x418DF0, "TWriter.WriteValue", 0x20);
MakeComm(0x418DF0, "'procedure TWriter.WriteValue(Value:TValueType);'");
MakeCode(0x418DF0);
MakeFunction(0x418DF0, 0x418E02);
MakeUnkn(0x418E04, 1);
MakeNameEx(0x418E04, "InitThreadSynchronization", 0x20);
MakeComm(0x418E04, "'procedure InitThreadSynchronization;'");
MakeCode(0x418E04);
MakeFunction(0x418E04, 0x418E32);
MakeUnkn(0x418E38, 1);
MakeNameEx(0x418E38, "DoneThreadSynchronization", 0x20);
MakeComm(0x418E38, "'procedure DoneThreadSynchronization;'");
MakeCode(0x418E38);
MakeFunction(0x418E38, 0x418E4E);
MakeUnkn(0x418E50, 1);
MakeNameEx(0x418E50, "ResetSyncEvent", 0x20);
MakeComm(0x418E50, "'procedure ResetSyncEvent;'");
MakeCode(0x418E50);
MakeFunction(0x418E50, 0x418E5C);
MakeUnkn(0x418E5C, 1);
MakeNameEx(0x418E5C, "WaitForSyncEvent", 0x20);
MakeComm(0x418E5C, "'procedure WaitForSyncEvent(Timeout:Integer);'");
MakeCode(0x418E5C);
MakeCode(0x418E74);
MakeFunction(0x418E5C, 0x418E76);
MakeUnkn(0x418E78, 1);
MakeNameEx(0x418E78, "CheckSynchronize", 0x20);
MakeComm(0x418E78, "'function CheckSynchronize(Timeout:Integer):Boolean;'");
MakeCode(0x418E78);
MakeCode(0x418EBB);
MakeCode(0x418EC8);
MakeCode(0x418ECD);
MakeCode(0x418F18);
MakeCode(0x418F1C);
MakeCode(0x418F1E);
MakeCode(0x418F30);
MakeCode(0x418F78);
MakeCode(0x418F82);
MakeCode(0x418F99);
MakeCode(0x418FA6);
MakeCode(0x418FB1);
MakeCode(0x418FB6);
MakeCode(0x418FC4);
MakeCode(0x418FD1);
MakeCode(0x418FDE);
MakeCode(0x418FE7);
MakeCode(0x418FEC);
MakeCode(0x418FEE);
MakeCode(0x418FFB);
MakeCode(0x419006);
MakeCode(0x41900B);
MakeFunction(0x418E78, 0x419017);
MakeUnkn(0x419018, 1);
MakeNameEx(0x419018, "TComponent.Create", 0x20);
MakeComm(0x419018, "'constructor TComponent.Create(AOwner:TComponent);'");
MakeCode(0x419018);
MakeCode(0x419027);
MakeCode(0x419042);
MakeCode(0x419057);
MakeFunction(0x419018, 0x41905D);
MakeUnkn(0x419064, 1);
MakeNameEx(0x419064, "TComponent.Destroy", 0x20);
MakeComm(0x419064, "'destructor TComponent.Destroy;'");
MakeCode(0x419064);
MakeCode(0x419080);
MakeCode(0x419094);
MakeCode(0x4190A1);
MakeCode(0x4190A9);
MakeCode(0x4190BE);
MakeCode(0x4190D8);
MakeFunction(0x419064, 0x4190DC);
MakeUnkn(0x4190DC, 1);
MakeNameEx(0x4190DC, "TComponent.BeforeDestruction", 0x20);
MakeComm(0x4190DC, "'procedure TComponent.BeforeDestruction;'");
MakeCode(0x4190DC);
MakeFunction(0x4190DC, 0x4190E8);
MakeUnkn(0x4190E8, 1);
MakeNameEx(0x4190E8, "TComponent.FreeNotification", 0x20);
MakeComm(0x4190E8, "'procedure TComponent.FreeNotification(AComponent:TComponent);'");
MakeCode(0x4190E8);
MakeCode(0x4190FA);
MakeCode(0x41910F);
MakeCode(0x419130);
MakeFunction(0x4190E8, 0x419139);
MakeUnkn(0x41913C, 1);
MakeNameEx(0x41913C, "TComponent.ReadLeft", 0x20);
MakeComm(0x41913C, "'procedure TComponent.ReadLeft(Reader:TReader);'");
MakeCode(0x41913C);
MakeFunction(0x41913C, 0x419150);
MakeUnkn(0x419150, 1);
MakeNameEx(0x419150, "TComponent.ReadTop", 0x20);
MakeComm(0x419150, "'procedure TComponent.ReadTop(Reader:TReader);'");
MakeCode(0x419150);
MakeFunction(0x419150, 0x419164);
MakeUnkn(0x419164, 1);
MakeNameEx(0x419164, "TComponent.WriteLeft", 0x20);
MakeComm(0x419164, "'procedure TComponent.WriteLeft(Writer:TWriter);'");
MakeCode(0x419164);
MakeFunction(0x419164, 0x41916F);
MakeUnkn(0x419170, 1);
MakeNameEx(0x419170, "TComponent.WriteTop", 0x20);
MakeComm(0x419170, "'procedure TComponent.WriteTop(Writer:TWriter);'");
MakeCode(0x419170);
MakeFunction(0x419170, 0x41917B);
MakeUnkn(0x41917C, 1);
MakeNameEx(0x41917C, "TComponent.Insert", 0x20);
MakeComm(0x41917C, "'procedure TComponent.Insert(AComponent:TComponent);'");
MakeCode(0x41917C);
MakeCode(0x419197);
MakeFunction(0x41917C, 0x4191A7);
MakeUnkn(0x4191A8, 1);
MakeNameEx(0x4191A8, "TComponent.Remove", 0x20);
MakeComm(0x4191A8, "'procedure TComponent.Remove(AComponent:TComponent);'");
MakeCode(0x4191A8);
MakeCode(0x4191CB);
MakeFunction(0x4191A8, 0x4191CD);
MakeUnkn(0x4191D0, 1);
MakeNameEx(0x4191D0, "TComponent.InsertComponent", 0x20);
MakeComm(0x4191D0, "'procedure TComponent.InsertComponent(AComponent:TComponent);'");
MakeCode(0x4191D0);
MakeCode(0x419216);
MakeFunction(0x4191D0, 0x419225);
MakeUnkn(0x419228, 1);
MakeNameEx(0x419228, "TComponent.RemoveComponent", 0x20);
MakeComm(0x419228, "'procedure TComponent.RemoveComponent(AComponent:TComponent);'");
MakeCode(0x419228);
MakeFunction(0x419228, 0x41925E);
MakeUnkn(0x419260, 1);
MakeNameEx(0x419260, "TComponent.DestroyComponents", 0x20);
MakeComm(0x419260, "'procedure TComponent.DestroyComponents;'");
MakeCode(0x419260);
MakeCode(0x419267);
MakeCode(0x41928C);
MakeCode(0x419297);
MakeCode(0x4192A0);
MakeCode(0x4192A9);
MakeFunction(0x419260, 0x4192B4);
MakeUnkn(0x4192B8, 1);
MakeNameEx(0x4192B8, "TComponent.Destroying", 0x20);
MakeComm(0x4192B8, "'procedure TComponent.Destroying;'");
MakeCode(0x4192B8);
MakeCode(0x4192DA);
MakeCode(0x4192ED);
MakeFunction(0x4192B8, 0x4192F1);
MakeUnkn(0x4192F4, 1);
MakeNameEx(0x4192F4, "TComponent.RemoveNotification", 0x20);
MakeComm(0x4192F4, "'procedure TComponent.RemoveNotification(AComponent:TComponent);'");
MakeCode(0x4192F4);
MakeCode(0x419316);
MakeFunction(0x4192F4, 0x419318);
MakeUnkn(0x419318, 1);
MakeNameEx(0x419318, "TComponent.RemoveFreeNotification", 0x20);
MakeComm(0x419318, "'procedure TComponent.RemoveFreeNotification(AComponent:TComponent);'");
MakeCode(0x419318);
MakeFunction(0x419318, 0x419333);
MakeUnkn(0x419334, 1);
MakeNameEx(0x419334, "TComponent.Notification", 0x20);
MakeComm(0x419334, "'procedure TComponent.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x419334);
MakeCode(0x419353);
MakeCode(0x419362);
MakeCode(0x419384);
MakeCode(0x419388);
MakeFunction(0x419334, 0x41938E);
MakeUnkn(0x419390, 1);
MakeNameEx(0x419390, "TComponent.DefineProperties", 0x20);
MakeComm(0x419390, "'procedure TComponent.DefineProperties(Filer:TFiler);'");
MakeCode(0x419390);
MakeCode(0x4193AD);
MakeFunction(0x419390, 0x4193F9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x419404, -1);
MakeDword(0x419400);
MakeDword(0x4193FC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x419414, -1);
MakeDword(0x419410);
MakeDword(0x41940C);
MakeUnkn(0x419418, 1);
MakeNameEx(0x419418, "TComponent.HasParent", 0x20);
MakeComm(0x419418, "'procedure TComponent.HasParent;'");
MakeCode(0x419418);
MakeFunction(0x419418, 0x41941B);
MakeUnkn(0x41941C, 1);
MakeNameEx(0x41941C, "TComponent.sub_0041941C", 0x20);
MakeComm(0x41941C, "'procedure TComponent.sub_0041941C;'");
MakeCode(0x41941C);
MakeFunction(0x41941C, 0x419423);
MakeUnkn(0x419424, 1);
MakeNameEx(0x419424, "TComponent.sub_00419424", 0x20);
MakeComm(0x419424, "'procedure TComponent.sub_00419424;'");
MakeCode(0x419424);
MakeFunction(0x419424, 0x419427);
MakeUnkn(0x419428, 1);
MakeNameEx(0x419428, "TComponent.sub_00419428", 0x20);
MakeComm(0x419428, "'procedure TComponent.sub_00419428;'");
MakeCode(0x419428);
MakeFunction(0x419428, 0x419429);
MakeUnkn(0x41942C, 1);
MakeNameEx(0x41942C, "TComponent.GetNamePath", 0x20);
MakeComm(0x41942C, "'procedure TComponent.GetNamePath;'");
MakeCode(0x41942C);
MakeFunction(0x41942C, 0x41943F);
MakeUnkn(0x419440, 1);
MakeNameEx(0x419440, "TComponent.sub_00413DBC", 0x20);
MakeComm(0x419440, "'procedure TComponent.sub_00413DBC;'");
MakeCode(0x419440);
MakeComm(0x419440, "'TComponent.FOwner:TComponent'");
MakeFunction(0x419440, 0x419444);
MakeUnkn(0x419444, 1);
MakeNameEx(0x419444, "TComponent.sub_00419444", 0x20);
MakeComm(0x419444, "'procedure TComponent.sub_00419444;'");
MakeCode(0x419444);
MakeFunction(0x419444, 0x419445);
MakeUnkn(0x419448, 1);
MakeNameEx(0x419448, "TComponent.GetParentComponent", 0x20);
MakeComm(0x419448, "'procedure TComponent.GetParentComponent;'");
MakeCode(0x419448);
MakeFunction(0x419448, 0x41944B);
MakeUnkn(0x41944C, 1);
MakeNameEx(0x41944C, "TComponent.sub_0041944C", 0x20);
MakeComm(0x41944C, "'procedure TComponent.sub_0041944C;'");
MakeCode(0x41944C);
MakeFunction(0x41944C, 0x41944D);
MakeUnkn(0x419450, 1);
MakeNameEx(0x419450, "TComponent.Updating", 0x20);
MakeComm(0x419450, "'procedure TComponent.Updating;'");
MakeCode(0x419450);
MakeFunction(0x419450, 0x41945A);
MakeUnkn(0x41945C, 1);
MakeNameEx(0x41945C, "TComponent.Updated", 0x20);
MakeComm(0x41945C, "'procedure TComponent.Updated;'");
MakeCode(0x41945C);
MakeFunction(0x41945C, 0x419466);
MakeUnkn(0x419468, 1);
MakeNameEx(0x419468, "TComponent.Loaded", 0x20);
MakeComm(0x419468, "'procedure TComponent.Loaded;'");
MakeCode(0x419468);
MakeFunction(0x419468, 0x419472);
MakeUnkn(0x419474, 1);
MakeNameEx(0x419474, "TComponent.sub_00419474", 0x20);
MakeComm(0x419474, "'procedure TComponent.sub_00419474;'");
MakeCode(0x419474);
MakeFunction(0x419474, 0x419475);
MakeUnkn(0x419478, 1);
MakeNameEx(0x419478, "TComponent.ReadState", 0x20);
MakeComm(0x419478, "'procedure TComponent.ReadState(Reader:TReader);'");
MakeCode(0x419478);
MakeFunction(0x419478, 0x41947F);
MakeCode(0x419480);
MakeFunction(0x419480, 0x419487);
MakeUnkn(0x419488, 1);
MakeNameEx(0x419488, "TComponent.ValidateRename", 0x20);
MakeComm(0x419488, "'procedure TComponent.ValidateRename(AComponent:TComponent; const CurName:AnsiString; const NewName:AnsiString);'");
MakeCode(0x419488);
MakeCode(0x4194E3);
MakeCode(0x4194FD);
MakeFunction(0x419488, 0x419506);
MakeUnkn(0x419508, 1);
MakeNameEx(0x419508, "TComponent.ValidateContainer", 0x20);
MakeComm(0x419508, "'procedure TComponent.ValidateContainer(AComponent:TComponent);'");
MakeCode(0x419508);
MakeFunction(0x419508, 0x41951A);
MakeUnkn(0x41951C, 1);
MakeNameEx(0x41951C, "TComponent.sub_0041951C", 0x20);
MakeComm(0x41951C, "'procedure TComponent.sub_0041951C;'");
MakeCode(0x41951C);
MakeFunction(0x41951C, 0x41951D);
MakeUnkn(0x419520, 1);
MakeNameEx(0x419520, "TComponent.FindComponent", 0x20);
MakeComm(0x419520, "'function TComponent.FindComponent(const AName:AnsiString):TComponent;'");
MakeCode(0x419520);
MakeCode(0x419544);
MakeCode(0x419563);
MakeCode(0x419565);
MakeFunction(0x419520, 0x41956D);
MakeUnkn(0x419570, 1);
MakeNameEx(0x419570, "TComponent.SetName", 0x20);
MakeComm(0x419570, "'procedure TComponent.SetName(const NewName:TComponentName);'");
MakeCode(0x419570);
MakeCode(0x4195B7);
MakeCode(0x4195CD);
MakeCode(0x4195DA);
MakeCode(0x4195F5);
MakeFunction(0x419570, 0x4195FB);
MakeUnkn(0x4195FC, 1);
MakeNameEx(0x4195FC, "TComponent.ChangeName", 0x20);
MakeComm(0x4195FC, "'procedure TComponent.ChangeName(const NewName:TComponentName);'");
MakeCode(0x4195FC);
MakeFunction(0x4195FC, 0x41960F);
MakeUnkn(0x419610, 1);
MakeNameEx(0x419610, "TComponent.GetComponent", 0x20);
MakeComm(0x419610, "'function TComponent.GetComponent(AIndex:Integer):TComponent;'");
MakeCode(0x419610);
MakeCode(0x41962E);
MakeFunction(0x419610, 0x41963B);
MakeUnkn(0x41963C, 1);
MakeNameEx(0x41963C, "TComponent.GetComponentCount", 0x20);
MakeComm(0x41963C, "'function TComponent.GetComponentCount:Integer;'");
MakeCode(0x41963C);
MakeCode(0x419647);
MakeFunction(0x41963C, 0x41964A);
MakeUnkn(0x41964C, 1);
MakeNameEx(0x41964C, "TComponent.SetComponentIndex", 0x20);
MakeComm(0x41964C, "'procedure TComponent.SetComponentIndex(Value:Integer);'");
MakeCode(0x41964C);
MakeCode(0x419677);
MakeCode(0x41967E);
MakeCode(0x419699);
MakeFunction(0x41964C, 0x41969D);
MakeUnkn(0x4196A0, 1);
MakeNameEx(0x4196A0, "TComponent.SetDesigning", 0x20);
MakeComm(0x4196A0, "'procedure TComponent.SetDesigning(Value:Boolean; SetChildren:Boolean);'");
MakeCode(0x4196A0);
MakeCode(0x4196B7);
MakeCode(0x4196BC);
MakeCode(0x4196D3);
MakeCode(0x4196E9);
MakeFunction(0x4196A0, 0x4196EF);
MakeUnkn(0x4196F0, 1);
MakeNameEx(0x4196F0, "TComponent.SetReference", 0x20);
MakeComm(0x4196F0, "'procedure TComponent.SetReference(Enable:Boolean);'");
MakeCode(0x4196F0);
MakeCode(0x419728);
MakeCode(0x41972C);
MakeFunction(0x4196F0, 0x419736);
MakeUnkn(0x419738, 1);
MakeNameEx(0x419738, "TComponent.ExecuteAction", 0x20);
MakeComm(0x419738, "'procedure TComponent.ExecuteAction(Action:TBasicAction);'");
MakeCode(0x419738);
MakeCode(0x419757);
MakeFunction(0x419738, 0x41975D);
MakeUnkn(0x419760, 1);
MakeNameEx(0x419760, "TComponent.UpdateAction", 0x20);
MakeComm(0x419760, "'procedure TComponent.UpdateAction(Action:TBasicAction);'");
MakeCode(0x419760);
MakeCode(0x41977F);
MakeFunction(0x419760, 0x419785);
MakeUnkn(0x419788, 1);
MakeNameEx(0x419788, "TComponent.SafeCallException", 0x20);
MakeComm(0x419788, "'function TComponent.SafeCallException(ExceptObject:TObject; ExceptAddr:Pointer):HRESULT;'");
MakeCode(0x419788);
MakeCode(0x419799);
MakeFunction(0x419788, 0x4197A0);
MakeCode(0x4197A0);
MakeFunction(0x4197A0, 0x4197A7);
MakeUnkn(0x4197A8, 1);
MakeNameEx(0x4197A8, "TComponent.QueryInterface", 0x20);
MakeComm(0x4197A8, "'function TComponent.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x4197A8);
MakeCode(0x4197D0);
MakeCode(0x4197D7);
MakeCode(0x4197E1);
MakeFunction(0x4197A8, 0x4197E8);
MakeUnkn(0x4197E8, 1);
MakeNameEx(0x4197E8, "TComponent._AddRef", 0x20);
MakeComm(0x4197E8, "'function TComponent._AddRef:Integer; stdcall;'");
MakeCode(0x4197E8);
MakeCode(0x4197F9);
MakeCode(0x419802);
MakeFunction(0x4197E8, 0x419806);
MakeUnkn(0x419808, 1);
MakeNameEx(0x419808, "TComponent._Release", 0x20);
MakeComm(0x419808, "'function TComponent._Release:Integer; stdcall;'");
MakeCode(0x419808);
MakeCode(0x419819);
MakeCode(0x419822);
MakeFunction(0x419808, 0x419826);
MakeCode(0x419828);
MakeFunction(0x419828, 0x419829);
MakeUnkn(0x41982C, 1);
MakeNameEx(0x41982C, "TBasicActionLink.Create", 0x20);
MakeComm(0x41982C, "'constructor TBasicActionLink.Create(AClient:TObject);'");
MakeCode(0x41982C);
MakeCode(0x41983B);
MakeCode(0x419867);
MakeFunction(0x41982C, 0x41986D);
MakeCode(0x419870);
MakeFunction(0x419870, 0x419871);
MakeUnkn(0x419874, 1);
MakeNameEx(0x419874, "TBasicActionLink.Destroy", 0x20);
MakeComm(0x419874, "'destructor TBasicActionLink.Destroy;'");
MakeCode(0x419874);
MakeCode(0x41988D);
MakeCode(0x4198A4);
MakeFunction(0x419874, 0x4198A7);
MakeUnkn(0x4198A8, 1);
MakeNameEx(0x4198A8, "TBasicActionLink.Change", 0x20);
MakeComm(0x4198A8, "'procedure TBasicActionLink.Change;'");
MakeCode(0x4198A8);
MakeCode(0x4198BB);
MakeFunction(0x4198A8, 0x4198BD);
MakeUnkn(0x4198C0, 1);
MakeNameEx(0x4198C0, "TBasicActionLink.Execute", 0x20);
MakeComm(0x4198C0, "'function TBasicActionLink.Execute(AComponent:TComponent):Boolean;'");
MakeCode(0x4198C0);
MakeFunction(0x4198C0, 0x4198DB);
MakeUnkn(0x4198DC, 1);
MakeNameEx(0x4198DC, "TBasicActionLink.SetAction", 0x20);
MakeComm(0x4198DC, "'procedure TBasicActionLink.SetAction(Value:TBasicAction);'");
MakeCode(0x4198DC);
MakeCode(0x4198F4);
MakeCode(0x419904);
MakeFunction(0x4198DC, 0x419907);
MakeUnkn(0x419908, 1);
MakeNameEx(0x419908, "TBasicActionLink.IsOnExecuteLinked", 0x20);
MakeComm(0x419908, "'function TBasicActionLink.IsOnExecuteLinked:Boolean;'");
MakeCode(0x419908);
MakeFunction(0x419908, 0x41990B);
MakeCode(0x41990C);
MakeFunction(0x41990C, 0x419913);
MakeUnkn(0x419914, 1);
MakeNameEx(0x419914, "TBasicActionLink.Update", 0x20);
MakeComm(0x419914, "'function TBasicActionLink.Update:Boolean;'");
MakeCode(0x419914);
MakeFunction(0x419914, 0x41991D);
MakeUnkn(0x419920, 1);
MakeNameEx(0x419920, "TBasicAction.Create", 0x20);
MakeComm(0x419920, "'constructor TBasicAction.Create(AOwner:TComponent);'");
MakeCode(0x419920);
MakeCode(0x41992E);
MakeCode(0x41995F);
MakeFunction(0x419920, 0x419964);
MakeUnkn(0x419964, 1);
MakeNameEx(0x419964, "TBasicAction.Destroy", 0x20);
MakeComm(0x419964, "'destructor TBasicAction.Destroy;'");
MakeCode(0x419964);
MakeCode(0x41998C);
MakeCode(0x41999C);
MakeCode(0x4199B8);
MakeFunction(0x419964, 0x4199BC);
MakeCode(0x4199BC);
MakeFunction(0x4199BC, 0x4199BF);
MakeCode(0x4199C0);
MakeFunction(0x4199C0, 0x4199C1);
MakeUnkn(0x4199C4, 1);
MakeNameEx(0x4199C4, "TBasicAction.Notification", 0x20);
MakeComm(0x4199C4, "'procedure TBasicAction.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x4199C4);
MakeCode(0x4199E7);
MakeFunction(0x4199C4, 0x4199EB);
MakeCode(0x4199EC);
MakeFunction(0x4199EC, 0x4199ED);
MakeUnkn(0x4199F0, 1);
MakeNameEx(0x4199F0, "TBasicAction.Execute", 0x20);
MakeComm(0x4199F0, "'procedure TBasicAction.Execute;'");
MakeCode(0x4199F0);
MakeCode(0x419A06);
MakeFunction(0x4199F0, 0x419A0A);
MakeUnkn(0x419A0C, 1);
MakeNameEx(0x419A0C, "TBasicAction.Update", 0x20);
MakeComm(0x419A0C, "'function TBasicAction.Update:Boolean;'");
MakeCode(0x419A0C);
MakeCode(0x419A22);
MakeFunction(0x419A0C, 0x419A26);
MakeUnkn(0x419A28, 1);
MakeNameEx(0x419A28, "TBasicAction.SetOnExecute", 0x20);
MakeComm(0x419A28, "'procedure TBasicAction.SetOnExecute(Value:TNotifyEvent);'");
MakeCode(0x419A28);
MakeCode(0x419A40);
MakeCode(0x419A4E);
MakeCode(0x419A67);
MakeCode(0x419A7A);
MakeFunction(0x419A28, 0x419A81);
MakeUnkn(0x419A84, 1);
MakeNameEx(0x419A84, "TBasicAction.Change", 0x20);
MakeComm(0x419A84, "'procedure TBasicAction.Change;'");
MakeCode(0x419A84);
MakeCode(0x419A96);
MakeFunction(0x419A84, 0x419A98);
MakeUnkn(0x419A98, 1);
MakeNameEx(0x419A98, "TBasicAction.RegisterChanges", 0x20);
MakeComm(0x419A98, "'procedure TBasicAction.RegisterChanges(Value:TBasicActionLink);'");
MakeCode(0x419A98);
MakeFunction(0x419A98, 0x419AA4);
MakeUnkn(0x419AA4, 1);
MakeNameEx(0x419AA4, "TBasicAction.UnRegisterChanges", 0x20);
MakeComm(0x419AA4, "'procedure TBasicAction.UnRegisterChanges(Value:TBasicActionLink);'");
MakeCode(0x419AA4);
MakeCode(0x419ABA);
MakeCode(0x419AD9);
MakeCode(0x419ADD);
MakeFunction(0x419AA4, 0x419AE2);
MakeUnkn(0x419AE4, 1);
MakeNameEx(0x419AE4, "TBasicAction.SetActionComponent", 0x20);
MakeComm(0x419AE4, "'procedure TBasicAction.SetActionComponent(const Value:TComponent);'");
MakeCode(0x419AE4);
MakeCode(0x419AFC);
MakeCode(0x419B0C);
MakeFunction(0x419AE4, 0x419B0F);
MakeUnkn(0x419B10, 1);
MakeNameEx(0x419B10, "TStreamAdapter.Create", 0x20);
MakeComm(0x419B10, "'constructor TStreamAdapter.Create(Stream:TStream; Ownership:TStreamOwnership);'");
MakeCode(0x419B10);
MakeCode(0x419B22);
MakeCode(0x419B4F);
MakeFunction(0x419B10, 0x419B58);
MakeUnkn(0x419B58, 1);
MakeNameEx(0x419B58, "TStreamAdapter.Destroy", 0x20);
MakeComm(0x419B58, "'destructor TStreamAdapter.Destroy;'");
MakeCode(0x419B58);
MakeCode(0x419B76);
MakeCode(0x419B8D);
MakeFunction(0x419B58, 0x419B90);
MakeUnkn(0x419B90, 1);
MakeNameEx(0x419B90, "TStreamAdapter.Read", 0x20);
MakeComm(0x419B90, "'function TStreamAdapter.Read(pv:Pointer; cb:Longint; pcbRead:PLongint):HRESULT; stdcall;'");
MakeCode(0x419B90);
MakeCode(0x419BB3);
MakeCode(0x419BBD);
MakeCode(0x419BD3);
MakeCode(0x419BD5);
MakeCode(0x419BDF);
MakeCode(0x419BEE);
MakeFunction(0x419B90, 0x419BF7);
MakeUnkn(0x419BF8, 1);
MakeNameEx(0x419BF8, "TStreamAdapter.Write", 0x20);
MakeComm(0x419BF8, "'function TStreamAdapter.Write(pv:Pointer; cb:Longint; pcbWritten:PLongint):HRESULT; stdcall;'");
MakeCode(0x419BF8);
MakeCode(0x419C1B);
MakeCode(0x419C25);
MakeCode(0x419C3B);
MakeCode(0x419C3D);
MakeCode(0x419C47);
MakeCode(0x419C56);
MakeFunction(0x419BF8, 0x419C5F);
MakeUnkn(0x419C60, 1);
MakeNameEx(0x419C60, "TStreamAdapter.Seek", 0x20);
MakeComm(0x419C60, "'function TStreamAdapter.Seek(dlibMove:Largeint; dwOrigin:Longint; var libNewPosition:Largeint):HRESULT; stdcall;'");
MakeCode(0x419C60);
MakeCode(0x419C86);
MakeCode(0x419C8B);
MakeCode(0x419C95);
MakeCode(0x419CBE);
MakeCode(0x419CC0);
MakeCode(0x419CCA);
MakeCode(0x419CD9);
MakeFunction(0x419C60, 0x419CE4);
MakeUnkn(0x419CE4, 1);
MakeNameEx(0x419CE4, "TStreamAdapter.SetSize", 0x20);
MakeComm(0x419CE4, "'function TStreamAdapter.SetSize(libNewSize:Largeint):HRESULT; stdcall;'");
MakeCode(0x419CE4);
MakeCode(0x419D18);
MakeCode(0x419D21);
MakeCode(0x419D23);
MakeCode(0x419D2D);
MakeCode(0x419D3C);
MakeFunction(0x419CE4, 0x419D45);
MakeUnkn(0x419D48, 1);
MakeNameEx(0x419D48, "TStreamAdapter.CopyTo", 0x20);
MakeComm(0x419D48, "'function TStreamAdapter.CopyTo(stm:IStream; cb:Largeint; var cbRead:Largeint; var cbWritten:Largeint):HRESULT; stdcall;'");
MakeCode(0x419D48);
MakeCode(0x419DA7);
MakeCode(0x419DA9);
MakeCode(0x419DB2);
MakeCode(0x419DB8);
MakeCode(0x419DD6);
MakeCode(0x419DE7);
MakeCode(0x419DE9);
MakeCode(0x419DF0);
MakeCode(0x419DF3);
MakeCode(0x419DFB);
MakeCode(0x419E05);
MakeCode(0x419E07);
MakeCode(0x419E21);
MakeCode(0x419E2E);
MakeCode(0x419E7A);
MakeCode(0x419E85);
MakeCode(0x419E92);
MakeCode(0x419EA5);
MakeCode(0x419EB7);
MakeCode(0x419EBD);
MakeCode(0x419ECA);
MakeCode(0x419EE7);
MakeCode(0x419EFC);
MakeCode(0x419EFD);
MakeCode(0x419F02);
MakeCode(0x419F04);
MakeCode(0x419F0E);
MakeCode(0x419F1F);
MakeCode(0x419F2C);
MakeCode(0x419F35);
MakeCode(0x419F3A);
MakeFunction(0x419D48, 0x419F48);
MakeUnkn(0x419F48, 1);
MakeNameEx(0x419F48, "TStreamAdapter.Commit", 0x20);
MakeComm(0x419F48, "'function TStreamAdapter.Commit(grfCommitFlags:Longint):HRESULT; stdcall;'");
MakeCode(0x419F48);
MakeFunction(0x419F48, 0x419F51);
MakeUnkn(0x419F54, 1);
MakeNameEx(0x419F54, "TStreamAdapter.Revert", 0x20);
MakeComm(0x419F54, "'function TStreamAdapter.Revert:HRESULT; stdcall;'");
MakeCode(0x419F54);
MakeFunction(0x419F54, 0x419F60);
MakeUnkn(0x419F60, 1);
MakeNameEx(0x419F60, "TStreamAdapter.LockRegion", 0x20);
MakeComm(0x419F60, "'function TStreamAdapter.LockRegion(libOffset:Largeint; cb:Largeint; dwLockType:Longint):HRESULT; stdcall;'");
MakeCode(0x419F60);
MakeFunction(0x419F60, 0x419F6C);
MakeUnkn(0x419F6C, 1);
MakeNameEx(0x419F6C, "TStreamAdapter.UnlockRegion", 0x20);
MakeComm(0x419F6C, "'function TStreamAdapter.UnlockRegion(libOffset:Largeint; cb:Largeint; dwLockType:Longint):HRESULT; stdcall;'");
MakeCode(0x419F6C);
MakeFunction(0x419F6C, 0x419F78);
MakeUnkn(0x419F78, 1);
MakeNameEx(0x419F78, "TStreamAdapter.Stat", 0x20);
MakeComm(0x419F78, "'function TStreamAdapter.Stat(var statstg:TStatStg; grfStatFlag:Longint):HRESULT; stdcall;'");
MakeCode(0x419F78);
MakeCode(0x419FD1);
MakeCode(0x419FDB);
MakeCode(0x419FEA);
MakeFunction(0x419F78, 0x419FF3);
MakeUnkn(0x419FF4, 1);
MakeNameEx(0x419FF4, "TStreamAdapter.Clone", 0x20);
MakeComm(0x419FF4, "'function TStreamAdapter.Clone(var stm:IStream):HRESULT; stdcall;'");
MakeCode(0x419FF4);
MakeCode(0x41A002);
MakeFunction(0x419FF4, 0x41A00B);
MakeUnkn(0x41A00C, 1);
MakeNameEx(0x41A00C, "FreeIntConstList", 0x20);
MakeComm(0x41A00C, "'procedure FreeIntConstList;'");
MakeCode(0x41A00C);
MakeCode(0x41A037);
MakeCode(0x41A049);
MakeCode(0x41A056);
MakeCode(0x41A061);
MakeCode(0x41A066);
MakeFunction(0x41A00C, 0x41A077);
MakeUnkn(0x41A078, 1);
MakeNameEx(0x41A078, "ModuleUnload", 0x20);
MakeComm(0x41A078, "'procedure ModuleUnload(Instance:Longint);'");
MakeCode(0x41A078);
MakeFunction(0x41A078, 0x41A07E);
MakeUnkn(0x41A080, 1);
MakeNameEx(0x41A080, "StdWndProc", 0x20);
MakeComm(0x41A080, "'function StdWndProc(Window:HWND; Message:Longint; WParam:Longint; LParam:Longint):Longint; stdcall;'");
MakeCode(0x41A080);
MakeFunction(0x41A080, 0x41A09E);
MakeUnkn(0x41A0A0, 1);
MakeNameEx(0x41A0A0, "CalcJmpOffset", 0x20);
MakeComm(0x41A0A0, "'function CalcJmpOffset(Src:Pointer; Dest:Pointer):Longint;'");
MakeCode(0x41A0A0);
MakeFunction(0x41A0A0, 0x41A0A8);
MakeUnkn(0x41A0A8, 1);
MakeNameEx(0x41A0A8, "MakeObjectInstance", 0x20);
MakeComm(0x41A0A8, "'function MakeObjectInstance(Method:TWndMethod):Pointer;'");
MakeCode(0x41A0A8);
MakeCode(0x41A0F9);
MakeCode(0x41A124);
MakeFunction(0x41A0A8, 0x41A140);
MakeUnkn(0x41A140, 1);
MakeNameEx(0x41A140, "FreeObjectInstance", 0x20);
MakeComm(0x41A140, "'procedure FreeObjectInstance(ObjectInstance:Pointer);'");
MakeCode(0x41A140);
MakeFunction(0x41A140, 0x41A153);
MakeUnkn(0x41A154, 1);
MakeNameEx(0x41A154, "_NF__E7C", 0x20);
MakeComm(0x41A154, "'procedure _NF__E7C;'");
MakeCode(0x41A154);
MakeCode(0x41A164);
MakeCode(0x41A19E);
MakeCode(0x41A1B3);
MakeCode(0x41A1BD);
MakeCode(0x41A1C2);
MakeCode(0x41A208);
MakeFunction(0x41A154, 0x41A211);
MakeUnkn(0x41A218, 1);
MakeNameEx(0x41A218, "DeallocateHWnd", 0x20);
MakeComm(0x41A218, "'procedure DeallocateHWnd(Wnd:HWND);'");
MakeCode(0x41A218);
MakeCode(0x41A23B);
MakeFunction(0x41A218, 0x41A23E);
MakeUnkn(0x41A240, 1);
MakeNameEx(0x41A240, "Finalization_1", 0x20);
MakeComm(0x41A240, "'procedure Finalization;'");
MakeCode(0x41A240);
MakeCode(0x41A2D6);
MakeCode(0x41A2E3);
MakeCode(0x41A2E4);
MakeCode(0x41A2E9);
MakeFunction(0x41A240, 0x41A2ED);
MakeUnkn(0x41A2F0, 1);
MakeNameEx(0x41A2F0, "Classes", 0x20);
MakeComm(0x41A2F0, "'procedure Classes;'");
MakeCode(0x41A2F0);
MakeCode(0x41A32E);
MakeCode(0x41A36B);
MakeCode(0x41A378);
MakeCode(0x41A379);
MakeCode(0x41A37E);
MakeFunction(0x41A2F0, 0x41A382);
MakeComm(0x41A384, "'SInvalidBitmap'");
MakeDword(0x41A384);
MakeDword(0x41A388);
MakeComm(0x41A38C, "'SInvalidIcon'");
MakeDword(0x41A38C);
MakeDword(0x41A390);
MakeComm(0x41A394, "'SChangeIconSize'");
MakeDword(0x41A394);
MakeDword(0x41A398);
MakeComm(0x41A39C, "'SUnknownClipboardFormat'");
MakeDword(0x41A39C);
MakeDword(0x41A3A0);
MakeComm(0x41A3A4, "'SOutOfResources'");
MakeDword(0x41A3A4);
MakeDword(0x41A3A8);
MakeComm(0x41A3AC, "'SNoCanvasHandle'");
MakeDword(0x41A3AC);
MakeDword(0x41A3B0);
MakeComm(0x41A3B4, "'SInvalidImageSize'");
MakeDword(0x41A3B4);
MakeDword(0x41A3B8);
MakeComm(0x41A3BC, "'SInvalidImageList'");
MakeDword(0x41A3BC);
MakeDword(0x41A3C0);
MakeComm(0x41A3C4, "'SImageIndexError'");
MakeDword(0x41A3C4);
MakeDword(0x41A3C8);
MakeComm(0x41A3CC, "'SImageReadFail'");
MakeDword(0x41A3CC);
MakeDword(0x41A3D0);
MakeComm(0x41A3D4, "'SImageWriteFail'");
MakeDword(0x41A3D4);
MakeDword(0x41A3D8);
MakeComm(0x41A3DC, "'SWindowDCError'");
MakeDword(0x41A3DC);
MakeDword(0x41A3E0);
MakeComm(0x41A3E4, "'SWindowClass'");
MakeDword(0x41A3E4);
MakeDword(0x41A3E8);
MakeComm(0x41A3EC, "'SCannotFocus'");
MakeDword(0x41A3EC);
MakeDword(0x41A3F0);
MakeComm(0x41A3F4, "'SParentRequired'");
MakeDword(0x41A3F4);
MakeDword(0x41A3F8);
MakeComm(0x41A3FC, "'SMDIChildNotVisible'");
MakeDword(0x41A3FC);
MakeDword(0x41A400);
MakeComm(0x41A404, "'SVisibleChanged'");
MakeDword(0x41A404);
MakeDword(0x41A408);
MakeComm(0x41A40C, "'SCannotShowModal'");
MakeDword(0x41A40C);
MakeDword(0x41A410);
MakeComm(0x41A414, "'SMenuIndexError'");
MakeDword(0x41A414);
MakeDword(0x41A418);
MakeComm(0x41A41C, "'SMenuReinserted'");
MakeDword(0x41A41C);
MakeDword(0x41A420);
MakeComm(0x41A424, "'SMenuNotFound'");
MakeDword(0x41A424);
MakeDword(0x41A428);
MakeComm(0x41A42C, "'SNoTimers'");
MakeDword(0x41A42C);
MakeDword(0x41A430);
MakeComm(0x41A434, "'SGroupIndexTooLow'");
MakeDword(0x41A434);
MakeDword(0x41A438);
MakeComm(0x41A43C, "'SNoMDIForm'");
MakeDword(0x41A43C);
MakeDword(0x41A440);
MakeComm(0x41A444, "'SControlParentSetToSelf'");
MakeDword(0x41A444);
MakeDword(0x41A448);
MakeComm(0x41A44C, "'SMsgDlgOK'");
MakeDword(0x41A44C);
MakeDword(0x41A450);
MakeComm(0x41A454, "'SCancelButton'");
MakeDword(0x41A454);
MakeDword(0x41A458);
MakeComm(0x41A45C, "'SMsgDlgYes'");
MakeDword(0x41A45C);
MakeDword(0x41A460);
MakeComm(0x41A464, "'SMsgDlgNo'");
MakeDword(0x41A464);
MakeDword(0x41A468);
MakeComm(0x41A46C, "'SHelpButton'");
MakeDword(0x41A46C);
MakeDword(0x41A470);
MakeComm(0x41A474, "'SCloseButton'");
MakeDword(0x41A474);
MakeDword(0x41A478);
MakeComm(0x41A47C, "'SIgnoreButton'");
MakeDword(0x41A47C);
MakeDword(0x41A480);
MakeComm(0x41A484, "'SMsgDlgRetry'");
MakeDword(0x41A484);
MakeDword(0x41A488);
MakeComm(0x41A48C, "'SAbortButton'");
MakeDword(0x41A48C);
MakeDword(0x41A490);
MakeComm(0x41A494, "'SAllButton'");
MakeDword(0x41A494);
MakeDword(0x41A498);
MakeComm(0x41A49C, "'SCannotDragForm'");
MakeDword(0x41A49C);
MakeDword(0x41A4A0);
MakeComm(0x41A4A4, "'SMsgDlgWarning'");
MakeDword(0x41A4A4);
MakeDword(0x41A4A8);
MakeComm(0x41A4AC, "'SMsgDlgError'");
MakeDword(0x41A4AC);
MakeDword(0x41A4B0);
MakeComm(0x41A4B4, "'SMsgDlgInformation'");
MakeDword(0x41A4B4);
MakeDword(0x41A4B8);
MakeComm(0x41A4BC, "'SMsgDlgConfirm'");
MakeDword(0x41A4BC);
MakeDword(0x41A4C0);
MakeComm(0x41A4C4, "'SMsgDlgYes'");
MakeDword(0x41A4C4);
MakeDword(0x41A4C8);
MakeComm(0x41A4CC, "'SMsgDlgNo'");
MakeDword(0x41A4CC);
MakeDword(0x41A4D0);
MakeComm(0x41A4D4, "'SMsgDlgOK'");
MakeDword(0x41A4D4);
MakeDword(0x41A4D8);
MakeComm(0x41A4DC, "'SCancelButton'");
MakeDword(0x41A4DC);
MakeDword(0x41A4E0);
MakeComm(0x41A4E4, "'SHelpButton'");
MakeDword(0x41A4E4);
MakeDword(0x41A4E8);
MakeComm(0x41A4EC, "'SMsgDlgAbort'");
MakeDword(0x41A4EC);
MakeDword(0x41A4F0);
MakeComm(0x41A4F4, "'SMsgDlgRetry'");
MakeDword(0x41A4F4);
MakeDword(0x41A4F8);
MakeComm(0x41A4FC, "'SIgnoreButton'");
MakeDword(0x41A4FC);
MakeDword(0x41A500);
MakeComm(0x41A504, "'SAllButton'");
MakeDword(0x41A504);
MakeDword(0x41A508);
MakeComm(0x41A50C, "'SMsgDlgNoToAll'");
MakeDword(0x41A50C);
MakeDword(0x41A510);
MakeComm(0x41A514, "'SMsgDlgYesToAll'");
MakeDword(0x41A514);
MakeDword(0x41A518);
MakeComm(0x41A51C, "'SmkcBkSp'");
MakeDword(0x41A51C);
MakeDword(0x41A520);
MakeComm(0x41A524, "'SmkcTab'");
MakeDword(0x41A524);
MakeDword(0x41A528);
MakeComm(0x41A52C, "'SmkcEsc'");
MakeDword(0x41A52C);
MakeDword(0x41A530);
MakeComm(0x41A534, "'SmkcEnter'");
MakeDword(0x41A534);
MakeDword(0x41A538);
MakeComm(0x41A53C, "'SmkcSpace'");
MakeDword(0x41A53C);
MakeDword(0x41A540);
MakeComm(0x41A544, "'SmkcPgUp'");
MakeDword(0x41A544);
MakeDword(0x41A548);
MakeComm(0x41A54C, "'SmkcPgDn'");
MakeDword(0x41A54C);
MakeDword(0x41A550);
MakeComm(0x41A554, "'SmkcEnd'");
MakeDword(0x41A554);
MakeDword(0x41A558);
MakeComm(0x41A55C, "'SmkcHome'");
MakeDword(0x41A55C);
MakeDword(0x41A560);
MakeComm(0x41A564, "'SmkcLeft'");
MakeDword(0x41A564);
MakeDword(0x41A568);
MakeComm(0x41A56C, "'SmkcUp'");
MakeDword(0x41A56C);
MakeDword(0x41A570);
MakeComm(0x41A574, "'SmkcRight'");
MakeDword(0x41A574);
MakeDword(0x41A578);
MakeComm(0x41A57C, "'SmkcDown'");
MakeDword(0x41A57C);
MakeDword(0x41A580);
MakeComm(0x41A584, "'SmkcIns'");
MakeDword(0x41A584);
MakeDword(0x41A588);
MakeComm(0x41A58C, "'SmkcDel'");
MakeDword(0x41A58C);
MakeDword(0x41A590);
MakeComm(0x41A594, "'SmkcShift'");
MakeDword(0x41A594);
MakeDword(0x41A598);
MakeComm(0x41A59C, "'SmkcCtrl'");
MakeDword(0x41A59C);
MakeDword(0x41A5A0);
MakeComm(0x41A5A4, "'SmkcAlt'");
MakeDword(0x41A5A4);
MakeDword(0x41A5A8);
MakeComm(0x41A5AC, "'SIconToClipboard'");
MakeDword(0x41A5AC);
MakeDword(0x41A5B0);
MakeComm(0x41A5B4, "'SDuplicateMenus'");
MakeDword(0x41A5B4);
MakeDword(0x41A5B8);
MakeComm(0x41A5BC, "'SDockedCtlNeedsName'");
MakeDword(0x41A5BC);
MakeDword(0x41A5C0);
MakeComm(0x41A5C4, "'SDockTreeRemoveError'");
MakeDword(0x41A5C4);
MakeDword(0x41A5C8);
MakeComm(0x41A5CC, "'SDockZoneNotFound'");
MakeDword(0x41A5CC);
MakeDword(0x41A5D0);
MakeComm(0x41A5D4, "'SDockZoneHasNoCtl'");
MakeDword(0x41A5D4);
MakeDword(0x41A5D8);
MakeCode(0x41A5DC);
MakeCode(0x41A5F3);
MakeCode(0x41A600);
MakeCode(0x41A601);
MakeCode(0x41A606);
MakeFunction(0x41A5DC, 0x41A60A);
MakeCode(0x41A60C);
MakeFunction(0x41A60C, 0x41A614);
MakeUnkn(0x41A614, 1);
MakeNameEx(0x41A614, "RTTI_41A614_Integer_TColor", 0);
MakeDword(0x41A614);
MakeUnkn(0x41A618, 1);
MakeNameEx(0x41A618, "", 0);
MakeByte(0x41A618);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A619, 0x41A620);
MakeByte(0x41A620);
MakeDword(0x41A621);
MakeDword(0x41A625);
MakeUnkn(0x41A62C, 1);
MakeNameEx(0x41A62C, "VMT_41A62C_EInvalidGraphic", 0);
MakeDword(0x41A62C);
MakeDword(0x41A630);
MakeDword(0x41A634);
MakeDword(0x41A638);
MakeDword(0x41A63C);
MakeDword(0x41A640);
MakeDword(0x41A644);
MakeDword(0x41A648);
MakeDword(0x41A64C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A678, 0x41A688);
MakeDword(0x41A650);
MakeDword(0x41A654);
MakeDword(0x41A658);
MakeDword(0x41A65C);
MakeDword(0x41A660);
MakeDword(0x41A664);
MakeDword(0x41A668);
MakeDword(0x41A66C);
MakeDword(0x41A670);
MakeDword(0x41A674);
MakeUnkn(0x41A688, 1);
MakeNameEx(0x41A688, "VMT_41A688_EInvalidGraphicOperation", 0);
MakeDword(0x41A688);
MakeDword(0x41A68C);
MakeDword(0x41A690);
MakeDword(0x41A694);
MakeDword(0x41A698);
MakeDword(0x41A69C);
MakeDword(0x41A6A0);
MakeDword(0x41A6A4);
MakeDword(0x41A6A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A6D4, 0x41A6ED);
MakeDword(0x41A6AC);
MakeDword(0x41A6B0);
MakeDword(0x41A6B4);
MakeDword(0x41A6B8);
MakeDword(0x41A6BC);
MakeDword(0x41A6C0);
MakeDword(0x41A6C4);
MakeDword(0x41A6C8);
MakeDword(0x41A6CC);
MakeDword(0x41A6D0);
MakeUnkn(0x41A6F0, 1);
MakeNameEx(0x41A6F0, "RTTI_41A6F0_Enumeration_TFontPitch", 0);
MakeDword(0x41A6F0);
MakeUnkn(0x41A6F4, 1);
MakeNameEx(0x41A6F4, "", 0);
MakeByte(0x41A6F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A6F5, 0x41A700);
MakeByte(0x41A700);
MakeDword(0x41A701);
MakeDword(0x41A705);
MakeDword(0x41A709);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A70D, 0x41A717);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A717, 0x41A722);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A722, 0x41A72A);
MakeUnkn(0x41A734, 1);
MakeNameEx(0x41A734, "RTTI_41A734_AnsiString_TFontName", 0);
MakeDword(0x41A734);
MakeUnkn(0x41A738, 1);
MakeNameEx(0x41A738, "", 0);
MakeByte(0x41A738);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A739, 0x41A743);
MakeUnkn(0x41A744, 1);
MakeNameEx(0x41A744, "RTTI_41A744_Integer_TFontCharset", 0);
MakeDword(0x41A744);
MakeUnkn(0x41A748, 1);
MakeNameEx(0x41A748, "", 0);
MakeByte(0x41A748);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A749, 0x41A756);
MakeByte(0x41A756);
MakeDword(0x41A757);
MakeDword(0x41A75B);
MakeUnkn(0x41A760, 1);
MakeNameEx(0x41A760, "RTTI_41A760_Enumeration_TFontStyle", 0);
MakeDword(0x41A760);
MakeUnkn(0x41A764, 1);
MakeNameEx(0x41A764, "", 0);
MakeByte(0x41A764);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A765, 0x41A770);
MakeByte(0x41A770);
MakeDword(0x41A771);
MakeDword(0x41A775);
MakeDword(0x41A779);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A77D, 0x41A784);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A784, 0x41A78D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A78D, 0x41A799);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A799, 0x41A7A5);
MakeUnkn(0x41A7B0, 1);
MakeNameEx(0x41A7B0, "RTTI_41A7B0_Set_TFontStyles", 0);
MakeDword(0x41A7B0);
MakeUnkn(0x41A7B4, 1);
MakeNameEx(0x41A7B4, "", 0);
MakeByte(0x41A7B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A7B5, 0x41A7C1);
MakeByte(0x41A7C1);
MakeDword(0x41A7C2);
MakeUnkn(0x41A7C8, 1);
MakeNameEx(0x41A7C8, "RTTI_41A7C8_Enumeration_TPenStyle", 0);
MakeDword(0x41A7C8);
MakeUnkn(0x41A7CC, 1);
MakeNameEx(0x41A7CC, "", 0);
MakeByte(0x41A7CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A7CD, 0x41A7D7);
MakeByte(0x41A7D7);
MakeDword(0x41A7D8);
MakeDword(0x41A7DC);
MakeDword(0x41A7E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A7E4, 0x41A7EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A7EC, 0x41A7F3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A7F3, 0x41A7F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A7F9, 0x41A803);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A803, 0x41A810);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A810, 0x41A818);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A818, 0x41A826);
MakeUnkn(0x41A830, 1);
MakeNameEx(0x41A830, "RTTI_41A830_Enumeration_TPenMode", 0);
MakeDword(0x41A830);
MakeUnkn(0x41A834, 1);
MakeNameEx(0x41A834, "", 0);
MakeByte(0x41A834);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A835, 0x41A83E);
MakeByte(0x41A83E);
MakeDword(0x41A83F);
MakeDword(0x41A843);
MakeDword(0x41A847);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A84B, 0x41A853);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A853, 0x41A85B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A85B, 0x41A861);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A861, 0x41A867);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A867, 0x41A86E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A86E, 0x41A878);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A878, 0x41A886);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A886, 0x41A893);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A893, 0x41A8A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A8A1, 0x41A8AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A8AE, 0x41A8B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A8B6, 0x41A8C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A8C1, 0x41A8C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A8C8, 0x41A8D2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A8D2, 0x41A8D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A8D8, 0x41A8E1);
MakeUnkn(0x41A8EC, 1);
MakeNameEx(0x41A8EC, "RTTI_41A8EC_Enumeration_TBrushStyle", 0);
MakeDword(0x41A8EC);
MakeUnkn(0x41A8F0, 1);
MakeNameEx(0x41A8F0, "", 0);
MakeByte(0x41A8F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A8F1, 0x41A8FD);
MakeByte(0x41A8FD);
MakeDword(0x41A8FE);
MakeDword(0x41A902);
MakeDword(0x41A906);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A90A, 0x41A912);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A912, 0x41A91A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A91A, 0x41A927);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A927, 0x41A932);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A932, 0x41A93E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A93E, 0x41A94A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A94A, 0x41A952);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A952, 0x41A95E);
MakeUnkn(0x41A968, 1);
MakeNameEx(0x41A968, "VMT_41A968_TGraphicsObject", 0);
MakeDword(0x41A968);
MakeDword(0x41A96C);
MakeDword(0x41A970);
MakeDword(0x41A974);
MakeDword(0x41A978);
MakeDword(0x41A97C);
MakeDword(0x41A980);
MakeDword(0x41A984);
MakeUnkn(0x41A9C0, 1);
MakeNameEx(0x41A9C0, "TGraphicsObject_DynamicTable", 0);
MakeWord(0x41A9C0);
MakeWord(0x41A9C2);
MakeDword(0x41A9C4);
MakeDword(0x41A988);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A9C8, 0x41A9D8);
MakeDword(0x41A98C);
MakeDword(0x41A990);
MakeDword(0x41A994);
MakeDword(0x41A998);
MakeDword(0x41A99C);
MakeDword(0x41A9A0);
MakeDword(0x41A9A4);
MakeDword(0x41A9A8);
MakeDword(0x41A9AC);
MakeDword(0x41A9B0);
MakeComm(0x41A9B4, "'+0'");
MakeDword(0x41A9B4);
MakeComm(0x41A9B8, "'+4'");
MakeDword(0x41A9B8);
MakeComm(0x41A9BC, "'+8'");
MakeDword(0x41A9BC);
MakeUnkn(0x41A9D8, 1);
MakeNameEx(0x41A9D8, "RTTI_41A9D8_Class_TGraphicsObject", 0);
MakeDword(0x41A9D8);
MakeUnkn(0x41A9DC, 1);
MakeNameEx(0x41A9DC, "", 0);
MakeByte(0x41A9DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A9DD, 0x41A9ED);
MakeDword(0x41A9ED);
MakeDword(0x41A9F1);
MakeWord(0x41A9F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A9F7, 0x41AA00);
MakeWord(0x41AA00);
MakeUnkn(0x41AA04, 1);
MakeNameEx(0x41AA04, "RTTI_41AA04_Interface_IChangeNotifier", 0);
MakeDword(0x41AA04);
MakeUnkn(0x41AA08, 1);
MakeNameEx(0x41AA08, "", 0);
MakeByte(0x41AA08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AA09, 0x41AA19);
MakeDword(0x41AA19);
MakeByte(0x41AA1D);
MakeByte(0x41AA1E);
MakeArray(0x41AA1E, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AA2E, 0x41AA37);
MakeWord(0x41AA37);
MakeWord(0x41AA39);
MakeUnkn(0x41AA3C, 1);
MakeNameEx(0x41AA3C, "VMT_41AA3C_TFont", 0);
MakeDword(0x41AA3C);
MakeDword(0x41AA40);
MakeDword(0x41AA44);
MakeDword(0x41AA48);
MakeUnkn(0x41AA94, 1);
MakeNameEx(0x41AA94, "TFont_InitTable", 0);
MakeByte(0x41AA94);
MakeByte(0x41AA95);
MakeDword(0x41AA96);
MakeDword(0x41AA9A);
MakeDword(0x41AA9E);
MakeDword(0x41AAA2);
MakeDword(0x41AA4C);
MakeDword(0x41AA50);
MakeDword(0x41AA54);
MakeDword(0x41AA58);
MakeUnkn(0x41AAA6, 1);
MakeNameEx(0x41AAA6, "TFont_DynamicTable", 0);
MakeWord(0x41AAA6);
MakeWord(0x41AAA8);
MakeDword(0x41AAAA);
MakeDword(0x41AA5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AAAE, 0x41AAB4);
MakeDword(0x41AA60);
MakeDword(0x41AA64);
MakeDword(0x41AA68);
MakeDword(0x41AA6C);
MakeDword(0x41AA70);
MakeDword(0x41AA74);
MakeDword(0x41AA78);
MakeDword(0x41AA7C);
MakeDword(0x41AA80);
MakeDword(0x41AA84);
MakeComm(0x41AA88, "'+0'");
MakeDword(0x41AA88);
MakeComm(0x41AA8C, "'+4'");
MakeDword(0x41AA8C);
MakeComm(0x41AA90, "'+8'");
MakeDword(0x41AA90);
MakeUnkn(0x41AAB4, 1);
MakeNameEx(0x41AAB4, "RTTI_41AAB4_Class_TFont", 0);
MakeDword(0x41AAB4);
MakeUnkn(0x41AAB8, 1);
MakeNameEx(0x41AAB8, "", 0);
MakeByte(0x41AAB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AAB9, 0x41AABF);
MakeDword(0x41AABF);
MakeDword(0x41AAC3);
MakeWord(0x41AAC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AAC9, 0x41AAD2);
MakeWord(0x41AAD2);
MakeDword(0x41AAD4);
MakeDword(0x41AAD8);
MakeDword(0x41AADC);
MakeDword(0x41AAE0);
MakeDword(0x41AAE4);
MakeDword(0x41AAE8);
MakeWord(0x41AAEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AAEE, 0x41AAF6);
MakeDword(0x41AAF6);
MakeDword(0x41AAFA);
MakeDword(0x41AAFE);
MakeDword(0x41AB02);
MakeDword(0x41AB06);
MakeDword(0x41AB0A);
MakeWord(0x41AB0E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AB10, 0x41AB16);
MakeDword(0x41AB16);
MakeDword(0x41AB1A);
MakeDword(0x41AB1E);
MakeDword(0x41AB22);
MakeDword(0x41AB26);
MakeDword(0x41AB2A);
MakeWord(0x41AB2E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AB30, 0x41AB37);
MakeDword(0x41AB37);
MakeDword(0x41AB3B);
MakeDword(0x41AB3F);
MakeDword(0x41AB43);
MakeDword(0x41AB47);
MakeDword(0x41AB4B);
MakeWord(0x41AB4F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AB51, 0x41AB56);
MakeDword(0x41AB56);
MakeDword(0x41AB5A);
MakeDword(0x41AB5E);
MakeDword(0x41AB62);
MakeDword(0x41AB66);
MakeDword(0x41AB6A);
MakeWord(0x41AB6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AB70, 0x41AB76);
MakeDword(0x41AB76);
MakeDword(0x41AB7A);
MakeDword(0x41AB7E);
MakeDword(0x41AB82);
MakeDword(0x41AB86);
MakeDword(0x41AB8A);
MakeWord(0x41AB8E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AB90, 0x41AB95);
MakeDword(0x41AB95);
MakeDword(0x41AB99);
MakeDword(0x41AB9D);
MakeDword(0x41ABA1);
MakeDword(0x41ABA5);
MakeDword(0x41ABA9);
MakeWord(0x41ABAD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41ABAF, 0x41ABB5);
MakeUnkn(0x41ABB8, 1);
MakeNameEx(0x41ABB8, "VMT_41ABB8_TPen", 0);
MakeDword(0x41ABB8);
MakeDword(0x41ABBC);
MakeDword(0x41ABC0);
MakeDword(0x41ABC4);
MakeDword(0x41ABC8);
MakeDword(0x41ABCC);
MakeDword(0x41ABD0);
MakeDword(0x41ABD4);
MakeDword(0x41ABD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AC10, 0x41AC15);
MakeDword(0x41ABDC);
MakeDword(0x41ABE0);
MakeDword(0x41ABE4);
MakeDword(0x41ABE8);
MakeDword(0x41ABEC);
MakeDword(0x41ABF0);
MakeDword(0x41ABF4);
MakeDword(0x41ABF8);
MakeDword(0x41ABFC);
MakeDword(0x41AC00);
MakeComm(0x41AC04, "'+0'");
MakeDword(0x41AC04);
MakeComm(0x41AC08, "'+4'");
MakeDword(0x41AC08);
MakeComm(0x41AC0C, "'+8'");
MakeDword(0x41AC0C);
MakeUnkn(0x41AC18, 1);
MakeNameEx(0x41AC18, "RTTI_41AC18_Class_TPen", 0);
MakeDword(0x41AC18);
MakeUnkn(0x41AC1C, 1);
MakeNameEx(0x41AC1C, "", 0);
MakeByte(0x41AC1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AC1D, 0x41AC22);
MakeDword(0x41AC22);
MakeDword(0x41AC26);
MakeWord(0x41AC2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AC2C, 0x41AC35);
MakeWord(0x41AC35);
MakeDword(0x41AC37);
MakeDword(0x41AC3B);
MakeDword(0x41AC3F);
MakeDword(0x41AC43);
MakeDword(0x41AC47);
MakeDword(0x41AC4B);
MakeWord(0x41AC4F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AC51, 0x41AC57);
MakeDword(0x41AC57);
MakeDword(0x41AC5B);
MakeDword(0x41AC5F);
MakeDword(0x41AC63);
MakeDword(0x41AC67);
MakeDword(0x41AC6B);
MakeWord(0x41AC6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AC71, 0x41AC76);
MakeDword(0x41AC76);
MakeDword(0x41AC7A);
MakeDword(0x41AC7E);
MakeDword(0x41AC82);
MakeDword(0x41AC86);
MakeDword(0x41AC8A);
MakeWord(0x41AC8E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AC90, 0x41AC96);
MakeDword(0x41AC96);
MakeDword(0x41AC9A);
MakeDword(0x41AC9E);
MakeDword(0x41ACA2);
MakeDword(0x41ACA6);
MakeDword(0x41ACAA);
MakeWord(0x41ACAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41ACB0, 0x41ACB6);
MakeUnkn(0x41ACB8, 1);
MakeNameEx(0x41ACB8, "VMT_41ACB8_TBrush", 0);
MakeDword(0x41ACB8);
MakeDword(0x41ACBC);
MakeDword(0x41ACC0);
MakeDword(0x41ACC4);
MakeDword(0x41ACC8);
MakeDword(0x41ACCC);
MakeDword(0x41ACD0);
MakeDword(0x41ACD4);
MakeDword(0x41ACD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AD10, 0x41AD17);
MakeDword(0x41ACDC);
MakeDword(0x41ACE0);
MakeDword(0x41ACE4);
MakeDword(0x41ACE8);
MakeDword(0x41ACEC);
MakeDword(0x41ACF0);
MakeDword(0x41ACF4);
MakeDword(0x41ACF8);
MakeDword(0x41ACFC);
MakeDword(0x41AD00);
MakeComm(0x41AD04, "'+0'");
MakeDword(0x41AD04);
MakeComm(0x41AD08, "'+4'");
MakeDword(0x41AD08);
MakeComm(0x41AD0C, "'+8'");
MakeDword(0x41AD0C);
MakeUnkn(0x41AD18, 1);
MakeNameEx(0x41AD18, "RTTI_41AD18_Class_TBrush", 0);
MakeDword(0x41AD18);
MakeUnkn(0x41AD1C, 1);
MakeNameEx(0x41AD1C, "", 0);
MakeByte(0x41AD1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AD1D, 0x41AD24);
MakeDword(0x41AD24);
MakeDword(0x41AD28);
MakeWord(0x41AD2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AD2E, 0x41AD37);
MakeWord(0x41AD37);
MakeDword(0x41AD39);
MakeDword(0x41AD3D);
MakeDword(0x41AD41);
MakeDword(0x41AD45);
MakeDword(0x41AD49);
MakeDword(0x41AD4D);
MakeWord(0x41AD51);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AD53, 0x41AD59);
MakeDword(0x41AD59);
MakeDword(0x41AD5D);
MakeDword(0x41AD61);
MakeDword(0x41AD65);
MakeDword(0x41AD69);
MakeDword(0x41AD6D);
MakeWord(0x41AD71);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AD73, 0x41AD79);
MakeUnkn(0x41AD7C, 1);
MakeNameEx(0x41AD7C, "VMT_41AD7C_TCanvas", 0);
MakeDword(0x41AD7C);
MakeDword(0x41AD80);
MakeDword(0x41AD84);
MakeDword(0x41AD88);
MakeDword(0x41AD8C);
MakeDword(0x41AD90);
MakeDword(0x41AD94);
MakeDword(0x41AD98);
MakeDword(0x41AD9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41ADE0, 0x41ADE8);
MakeDword(0x41ADA0);
MakeDword(0x41ADA4);
MakeDword(0x41ADA8);
MakeDword(0x41ADAC);
MakeDword(0x41ADB0);
MakeDword(0x41ADB4);
MakeDword(0x41ADB8);
MakeDword(0x41ADBC);
MakeDword(0x41ADC0);
MakeDword(0x41ADC4);
MakeComm(0x41ADC8, "'+0'");
MakeDword(0x41ADC8);
MakeComm(0x41ADCC, "'+4'");
MakeDword(0x41ADCC);
MakeComm(0x41ADD0, "'+8'");
MakeDword(0x41ADD0);
MakeComm(0x41ADD4, "'+C'");
MakeDword(0x41ADD4);
MakeComm(0x41ADD8, "'+10'");
MakeDword(0x41ADD8);
MakeComm(0x41ADDC, "'+14'");
MakeDword(0x41ADDC);
MakeUnkn(0x41ADE8, 1);
MakeNameEx(0x41ADE8, "RTTI_41ADE8_Class_TCanvas", 0);
MakeDword(0x41ADE8);
MakeUnkn(0x41ADEC, 1);
MakeNameEx(0x41ADEC, "", 0);
MakeByte(0x41ADEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41ADED, 0x41ADF5);
MakeDword(0x41ADF5);
MakeDword(0x41ADF9);
MakeWord(0x41ADFD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41ADFF, 0x41AE08);
MakeWord(0x41AE08);
MakeDword(0x41AE0A);
MakeDword(0x41AE0E);
MakeDword(0x41AE12);
MakeDword(0x41AE16);
MakeDword(0x41AE1A);
MakeDword(0x41AE1E);
MakeWord(0x41AE22);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AE24, 0x41AE2A);
MakeDword(0x41AE2A);
MakeDword(0x41AE2E);
MakeDword(0x41AE32);
MakeDword(0x41AE36);
MakeDword(0x41AE3A);
MakeDword(0x41AE3E);
MakeWord(0x41AE42);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AE44, 0x41AE4D);
MakeDword(0x41AE4D);
MakeDword(0x41AE51);
MakeDword(0x41AE55);
MakeDword(0x41AE59);
MakeDword(0x41AE5D);
MakeDword(0x41AE61);
MakeWord(0x41AE65);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AE67, 0x41AE6C);
MakeDword(0x41AE6C);
MakeDword(0x41AE70);
MakeDword(0x41AE74);
MakeDword(0x41AE78);
MakeDword(0x41AE7C);
MakeDword(0x41AE80);
MakeWord(0x41AE84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AE86, 0x41AE8A);
MakeUnkn(0x41AF00, 1);
MakeNameEx(0x41AF00, "VMT_41AF00_TGraphic", 0);
MakeDword(0x41AF00);
MakeDword(0x41AF04);
MakeUnkn(0x41AEDE, 1);
MakeNameEx(0x41AEDE, "TGraphic_IntfTable", 0);
MakeDword(0x41AEDE);
MakeByte(0x41AEE2);
MakeArray(0x41AEE2, 16);
MakeDword(0x41AEF2);
MakeDword(0x41AECA);
MakeFunction(0x41AEA7, -1);
MakeCode(0x41AEA7);
MakeDword(0x41AECE);
MakeFunction(0x41AEB5, -1);
MakeCode(0x41AEB5);
MakeDword(0x41AED2);
MakeFunction(0x41AEBF, -1);
MakeCode(0x41AEBF);
MakeDword(0x41AED6);
MakeFunction(0x41AE8D, -1);
MakeCode(0x41AE8D);
MakeDword(0x41AEDA);
MakeFunction(0x41AE9A, -1);
MakeCode(0x41AE9A);
MakeByte(0x41AE8C);
MakeDword(0x41AEF6);
MakeDword(0x41AEFA);
MakeDword(0x41AF08);
MakeDword(0x41AF0C);
MakeDword(0x41AF10);
MakeDword(0x41AF14);
MakeDword(0x41AF18);
MakeDword(0x41AF1C);
MakeUnkn(0x41AFB0, 1);
MakeNameEx(0x41AFB0, "TGraphic_DynamicTable", 0);
MakeWord(0x41AFB0);
MakeWord(0x41AFB2);
MakeDword(0x41AFB4);
MakeDword(0x41AF20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AFB8, 0x41AFC1);
MakeDword(0x41AF24);
MakeDword(0x41AF28);
MakeDword(0x41AF2C);
MakeDword(0x41AF30);
MakeDword(0x41AF34);
MakeDword(0x41AF38);
MakeDword(0x41AF3C);
MakeDword(0x41AF40);
MakeDword(0x41AF44);
MakeDword(0x41AF48);
MakeComm(0x41AF4C, "'+0'");
MakeDword(0x41AF4C);
MakeComm(0x41AF50, "'+4'");
MakeDword(0x41AF50);
MakeComm(0x41AF54, "'+8'");
MakeDword(0x41AF54);
MakeComm(0x41AF58, "'+C'");
MakeDword(0x41AF58);
MakeComm(0x41AF5C, "'+10'");
MakeDword(0x41AF5C);
MakeComm(0x41AF60, "'+14'");
MakeDword(0x41AF60);
MakeComm(0x41AF64, "'+18'");
MakeDword(0x41AF64);
MakeComm(0x41AF68, "'+1C'");
MakeDword(0x41AF68);
MakeComm(0x41AF6C, "'+20'");
MakeDword(0x41AF6C);
MakeComm(0x41AF70, "'+24'");
MakeDword(0x41AF70);
MakeComm(0x41AF74, "'+28'");
MakeDword(0x41AF74);
MakeComm(0x41AF78, "'+2C'");
MakeDword(0x41AF78);
MakeComm(0x41AF7C, "'+30'");
MakeDword(0x41AF7C);
MakeComm(0x41AF80, "'+34'");
MakeDword(0x41AF80);
MakeComm(0x41AF84, "'+38'");
MakeDword(0x41AF84);
MakeComm(0x41AF88, "'+3C'");
MakeDword(0x41AF88);
MakeComm(0x41AF8C, "'+40'");
MakeDword(0x41AF8C);
MakeComm(0x41AF90, "'+44'");
MakeDword(0x41AF90);
MakeComm(0x41AF94, "'+48'");
MakeDword(0x41AF94);
MakeComm(0x41AF98, "'+4C'");
MakeDword(0x41AF98);
MakeComm(0x41AF9C, "'+50'");
MakeDword(0x41AF9C);
MakeComm(0x41AFA0, "'+54'");
MakeDword(0x41AFA0);
MakeComm(0x41AFA4, "'+58'");
MakeDword(0x41AFA4);
MakeComm(0x41AFA8, "'+5C'");
MakeDword(0x41AFA8);
MakeComm(0x41AFAC, "'+60'");
MakeDword(0x41AFAC);
MakeUnkn(0x41AFC4, 1);
MakeNameEx(0x41AFC4, "RTTI_41AFC4_Class_TGraphic", 0);
MakeDword(0x41AFC4);
MakeUnkn(0x41AFC8, 1);
MakeNameEx(0x41AFC8, "", 0);
MakeByte(0x41AFC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AFC9, 0x41AFD2);
MakeDword(0x41AFD2);
MakeDword(0x41AFD6);
MakeWord(0x41AFDA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41AFDC, 0x41AFE5);
MakeWord(0x41AFE5);
MakeUnkn(0x41AFE8, 1);
MakeNameEx(0x41AFE8, "VMT_41AFE8_TSharedImage", 0);
MakeDword(0x41AFE8);
MakeDword(0x41AFEC);
MakeDword(0x41AFF0);
MakeDword(0x41AFF4);
MakeDword(0x41AFF8);
MakeDword(0x41AFFC);
MakeDword(0x41B000);
MakeDword(0x41B004);
MakeDword(0x41B008);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B038, 0x41B045);
MakeDword(0x41B00C);
MakeDword(0x41B010);
MakeDword(0x41B014);
MakeDword(0x41B018);
MakeDword(0x41B01C);
MakeDword(0x41B020);
MakeDword(0x41B024);
MakeDword(0x41B028);
MakeDword(0x41B02C);
MakeDword(0x41B030);
MakeComm(0x41B034, "'+0'");
MakeDword(0x41B034);
MakeUnkn(0x41B048, 1);
MakeNameEx(0x41B048, "VMT_41B048_TBitmapImage", 0);
MakeDword(0x41B048);
MakeDword(0x41B04C);
MakeDword(0x41B050);
MakeDword(0x41B054);
MakeDword(0x41B058);
MakeDword(0x41B05C);
MakeDword(0x41B060);
MakeDword(0x41B064);
MakeDword(0x41B068);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B098, 0x41B0A5);
MakeDword(0x41B06C);
MakeDword(0x41B070);
MakeDword(0x41B074);
MakeDword(0x41B078);
MakeDword(0x41B07C);
MakeDword(0x41B080);
MakeDword(0x41B084);
MakeDword(0x41B088);
MakeDword(0x41B08C);
MakeDword(0x41B090);
MakeComm(0x41B094, "'+0'");
MakeDword(0x41B094);
MakeUnkn(0x41B0A8, 1);
MakeNameEx(0x41B0A8, "VMT_41B0A8_TBitmap", 0);
MakeDword(0x41B0A8);
MakeDword(0x41B0AC);
MakeDword(0x41B0B0);
MakeDword(0x41B0B4);
MakeDword(0x41B0B8);
MakeDword(0x41B0BC);
MakeDword(0x41B0C0);
MakeDword(0x41B0C4);
MakeDword(0x41B0C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B164, 0x41B16C);
MakeDword(0x41B0CC);
MakeDword(0x41B0D0);
MakeDword(0x41B0D4);
MakeDword(0x41B0D8);
MakeDword(0x41B0DC);
MakeDword(0x41B0E0);
MakeDword(0x41B0E4);
MakeDword(0x41B0E8);
MakeDword(0x41B0EC);
MakeDword(0x41B0F0);
MakeComm(0x41B0F4, "'+0'");
MakeDword(0x41B0F4);
MakeComm(0x41B0F8, "'+4'");
MakeDword(0x41B0F8);
MakeComm(0x41B0FC, "'+8'");
MakeDword(0x41B0FC);
MakeComm(0x41B100, "'+C'");
MakeDword(0x41B100);
MakeComm(0x41B104, "'+10'");
MakeDword(0x41B104);
MakeComm(0x41B108, "'+14'");
MakeDword(0x41B108);
MakeComm(0x41B10C, "'+18'");
MakeDword(0x41B10C);
MakeComm(0x41B110, "'+1C'");
MakeDword(0x41B110);
MakeComm(0x41B114, "'+20'");
MakeDword(0x41B114);
MakeComm(0x41B118, "'+24'");
MakeDword(0x41B118);
MakeComm(0x41B11C, "'+28'");
MakeDword(0x41B11C);
MakeComm(0x41B120, "'+2C'");
MakeDword(0x41B120);
MakeComm(0x41B124, "'+30'");
MakeDword(0x41B124);
MakeComm(0x41B128, "'+34'");
MakeDword(0x41B128);
MakeComm(0x41B12C, "'+38'");
MakeDword(0x41B12C);
MakeComm(0x41B130, "'+3C'");
MakeDword(0x41B130);
MakeComm(0x41B134, "'+40'");
MakeDword(0x41B134);
MakeComm(0x41B138, "'+44'");
MakeDword(0x41B138);
MakeComm(0x41B13C, "'+48'");
MakeDword(0x41B13C);
MakeComm(0x41B140, "'+4C'");
MakeDword(0x41B140);
MakeComm(0x41B144, "'+50'");
MakeDword(0x41B144);
MakeComm(0x41B148, "'+54'");
MakeDword(0x41B148);
MakeComm(0x41B14C, "'+58'");
MakeDword(0x41B14C);
MakeComm(0x41B150, "'+5C'");
MakeDword(0x41B150);
MakeComm(0x41B154, "'+60'");
MakeDword(0x41B154);
MakeComm(0x41B158, "'+64'");
MakeDword(0x41B158);
MakeComm(0x41B15C, "'+68'");
MakeDword(0x41B15C);
MakeComm(0x41B160, "'+6C'");
MakeDword(0x41B160);
MakeUnkn(0x41B16C, 1);
MakeNameEx(0x41B16C, "RTTI_41B16C_Class_TBitmap", 0);
MakeDword(0x41B16C);
MakeUnkn(0x41B170, 1);
MakeNameEx(0x41B170, "", 0);
MakeByte(0x41B170);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B171, 0x41B179);
MakeDword(0x41B179);
MakeDword(0x41B17D);
MakeWord(0x41B181);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B183, 0x41B18C);
MakeWord(0x41B18C);
MakeUnkn(0x41B190, 1);
MakeNameEx(0x41B190, "VMT_41B190_TIconImage", 0);
MakeDword(0x41B190);
MakeDword(0x41B194);
MakeDword(0x41B198);
MakeDword(0x41B19C);
MakeDword(0x41B1A0);
MakeDword(0x41B1A4);
MakeDword(0x41B1A8);
MakeDword(0x41B1AC);
MakeDword(0x41B1B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B1E0, 0x41B1EB);
MakeDword(0x41B1B4);
MakeDword(0x41B1B8);
MakeDword(0x41B1BC);
MakeDword(0x41B1C0);
MakeDword(0x41B1C4);
MakeDword(0x41B1C8);
MakeDword(0x41B1CC);
MakeDword(0x41B1D0);
MakeDword(0x41B1D4);
MakeDword(0x41B1D8);
MakeComm(0x41B1DC, "'+0'");
MakeDword(0x41B1DC);
MakeUnkn(0x41B1EC, 1);
MakeNameEx(0x41B1EC, "VMT_41B1EC_TIcon", 0);
MakeDword(0x41B1EC);
MakeDword(0x41B1F0);
MakeDword(0x41B1F4);
MakeDword(0x41B1F8);
MakeDword(0x41B1FC);
MakeDword(0x41B200);
MakeDword(0x41B204);
MakeDword(0x41B208);
MakeDword(0x41B20C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B29C, 0x41B2A2);
MakeDword(0x41B210);
MakeDword(0x41B214);
MakeDword(0x41B218);
MakeDword(0x41B21C);
MakeDword(0x41B220);
MakeDword(0x41B224);
MakeDword(0x41B228);
MakeDword(0x41B22C);
MakeDword(0x41B230);
MakeDword(0x41B234);
MakeComm(0x41B238, "'+0'");
MakeDword(0x41B238);
MakeComm(0x41B23C, "'+4'");
MakeDword(0x41B23C);
MakeComm(0x41B240, "'+8'");
MakeDword(0x41B240);
MakeComm(0x41B244, "'+C'");
MakeDword(0x41B244);
MakeComm(0x41B248, "'+10'");
MakeDword(0x41B248);
MakeComm(0x41B24C, "'+14'");
MakeDword(0x41B24C);
MakeComm(0x41B250, "'+18'");
MakeDword(0x41B250);
MakeComm(0x41B254, "'+1C'");
MakeDword(0x41B254);
MakeComm(0x41B258, "'+20'");
MakeDword(0x41B258);
MakeComm(0x41B25C, "'+24'");
MakeDword(0x41B25C);
MakeComm(0x41B260, "'+28'");
MakeDword(0x41B260);
MakeComm(0x41B264, "'+2C'");
MakeDword(0x41B264);
MakeComm(0x41B268, "'+30'");
MakeDword(0x41B268);
MakeComm(0x41B26C, "'+34'");
MakeDword(0x41B26C);
MakeComm(0x41B270, "'+38'");
MakeDword(0x41B270);
MakeComm(0x41B274, "'+3C'");
MakeDword(0x41B274);
MakeComm(0x41B278, "'+40'");
MakeDword(0x41B278);
MakeComm(0x41B27C, "'+44'");
MakeDword(0x41B27C);
MakeComm(0x41B280, "'+48'");
MakeDword(0x41B280);
MakeComm(0x41B284, "'+4C'");
MakeDword(0x41B284);
MakeComm(0x41B288, "'+50'");
MakeDword(0x41B288);
MakeComm(0x41B28C, "'+54'");
MakeDword(0x41B28C);
MakeComm(0x41B290, "'+58'");
MakeDword(0x41B290);
MakeComm(0x41B294, "'+5C'");
MakeDword(0x41B294);
MakeComm(0x41B298, "'+60'");
MakeDword(0x41B298);
MakeUnkn(0x41B2A4, 1);
MakeNameEx(0x41B2A4, "RTTI_41B2A4_Class_TIcon", 0);
MakeDword(0x41B2A4);
MakeUnkn(0x41B2A8, 1);
MakeNameEx(0x41B2A8, "", 0);
MakeByte(0x41B2A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B2A9, 0x41B2AF);
MakeDword(0x41B2AF);
MakeDword(0x41B2B3);
MakeWord(0x41B2B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B2B9, 0x41B2C2);
MakeWord(0x41B2C2);
MakeUnkn(0x41B2C4, 1);
MakeNameEx(0x41B2C4, "InternalDeletePalette", 0x20);
MakeComm(0x41B2C4, "'procedure InternalDeletePalette(Pal:HPALETTE);'");
MakeCode(0x41B2C4);
MakeFunction(0x41B2C4, 0x41B2D7);
MakeUnkn(0x41B2D8, 1);
MakeNameEx(0x41B2D8, "VMT_41B2D8_TResourceManager", 0);
MakeDword(0x41B2D8);
MakeDword(0x41B2DC);
MakeDword(0x41B2E0);
MakeDword(0x41B2E4);
MakeDword(0x41B2E8);
MakeDword(0x41B2EC);
MakeDword(0x41B2F0);
MakeDword(0x41B2F4);
MakeDword(0x41B2F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41B324, 0x41B335);
MakeDword(0x41B2FC);
MakeDword(0x41B300);
MakeDword(0x41B304);
MakeDword(0x41B308);
MakeDword(0x41B30C);
MakeDword(0x41B310);
MakeDword(0x41B314);
MakeDword(0x41B318);
MakeDword(0x41B31C);
MakeDword(0x41B320);
MakeUnkn(0x41B338, 1);
MakeNameEx(0x41B338, "GetHashCode", 0x20);
MakeComm(0x41B338, "'function GetHashCode(const Buffer:void ; Count:Integer):Word;'");
MakeCode(0x41B338);
MakeCode(0x41B33E);
MakeFunction(0x41B338, 0x41B349);
MakeUnkn(0x41B34C, 1);
MakeNameEx(0x41B34C, "TResourceManager.Create", 0x20);
MakeComm(0x41B34C, "'constructor TResourceManager.Create(AResDataSize:Word);'");
MakeCode(0x41B34C);
MakeCode(0x41B35A);
MakeCode(0x41B380);
MakeFunction(0x41B34C, 0x41B385);
MakeUnkn(0x41B388, 1);
MakeNameEx(0x41B388, "TResourceManager.Destroy", 0x20);
MakeComm(0x41B388, "'destructor TResourceManager.Destroy;'");
MakeCode(0x41B388);
MakeCode(0x41B3A7);
MakeFunction(0x41B388, 0x41B3AA);
MakeUnkn(0x41B3AC, 1);
MakeNameEx(0x41B3AC, "TResourceManager.Lock", 0x20);
MakeComm(0x41B3AC, "'procedure TResourceManager.Lock;'");
MakeCode(0x41B3AC);
MakeFunction(0x41B3AC, 0x41B3B6);
MakeUnkn(0x41B3B8, 1);
MakeNameEx(0x41B3B8, "TResourceManager.Unlock", 0x20);
MakeComm(0x41B3B8, "'procedure TResourceManager.Unlock;'");
MakeCode(0x41B3B8);
MakeFunction(0x41B3B8, 0x41B3C2);
MakeUnkn(0x41B3C4, 1);
MakeNameEx(0x41B3C4, "TResourceManager.AllocResource", 0x20);
MakeComm(0x41B3C4, "'function TResourceManager.AllocResource(const ResData:void ):PResource;'");
MakeCode(0x41B3C4);
MakeCode(0x41B402);
MakeCode(0x41B40A);
MakeCode(0x41B431);
MakeCode(0x41B47C);
MakeCode(0x41B482);
MakeCode(0x41B48F);
MakeCode(0x41B498);
MakeCode(0x41B49D);
MakeFunction(0x41B3C4, 0x41B4A8);
MakeUnkn(0x41B4A8, 1);
MakeNameEx(0x41B4A8, "TResourceManager.FreeResource", 0x20);
MakeComm(0x41B4A8, "'procedure TResourceManager.FreeResource(Resource:PResource);'");
MakeCode(0x41B4A8);
MakeCode(0x41B509);
MakeCode(0x41B50B);
MakeCode(0x41B519);
MakeCode(0x41B526);
MakeCode(0x41B52F);
MakeCode(0x41B534);
MakeCode(0x41B54C);
MakeCode(0x41B554);
MakeFunction(0x41B4A8, 0x41B558);
MakeUnkn(0x41B558, 1);
MakeNameEx(0x41B558, "TResourceManager.ChangeResource", 0x20);
MakeComm(0x41B558, "'procedure TResourceManager.ChangeResource(GraphicsObject:TGraphicsObject; const ResData:void );'");
MakeCode(0x41B558);
MakeCode(0x41B5A1);
MakeCode(0x41B5AB);
MakeCode(0x41B5B8);
MakeCode(0x41B5C1);
MakeCode(0x41B5C6);
MakeFunction(0x41B558, 0x41B5CF);
MakeUnkn(0x41B5D0, 1);
MakeNameEx(0x41B5D0, "TResourceManager.AssignResource", 0x20);
MakeComm(0x41B5D0, "'procedure TResourceManager.AssignResource(GraphicsObject:TGraphicsObject; AResource:PResource);'");
MakeCode(0x41B5D0);
MakeCode(0x41B616);
MakeCode(0x41B623);
MakeCode(0x41B62C);
MakeCode(0x41B631);
MakeFunction(0x41B5D0, 0x41B639);
MakeUnkn(0x41B63C, 1);
MakeNameEx(0x41B63C, "ClearColor", 0x20);
MakeComm(0x41B63C, "'procedure ClearColor(ResMan:TResourceManager);'");
MakeCode(0x41B63C);
MakeCode(0x41B665);
MakeCode(0x41B67F);
MakeCode(0x41B685);
MakeCode(0x41B692);
MakeCode(0x41B69B);
MakeCode(0x41B6A0);
MakeFunction(0x41B63C, 0x41B6A7);
MakeUnkn(0x41B6A8, 1);
MakeNameEx(0x41B6A8, "PaletteChanged", 0x20);
MakeComm(0x41B6A8, "'procedure PaletteChanged;'");
MakeCode(0x41B6A8);
MakeCode(0x41B6D2);
MakeCode(0x41B6F0);
MakeCode(0x41B70F);
MakeCode(0x41B71C);
MakeCode(0x41B727);
MakeCode(0x41B73A);
MakeCode(0x41B745);
MakeCode(0x41B74A);
MakeFunction(0x41B6A8, 0x41B752);
MakeUnkn(0x41BB94, 1);
MakeNameEx(0x41BB94, "ColorToRGB", 0x20);
MakeComm(0x41BB94, "'function ColorToRGB(Color:TColor):Longint;'");
MakeCode(0x41BB94);
MakeFunction(0x41BB94, 0x41BBA4);
MakeUnkn(0x41BBA4, 1);
MakeNameEx(0x41BBA4, "ColorToIdent", 0x20);
MakeComm(0x41BBA4, "'function ColorToIdent(Color:Longint; var Ident:AnsiString):Boolean;'");
MakeCode(0x41BBA4);
MakeFunction(0x41BBA4, 0x41BBB1);
MakeUnkn(0x41BBB4, 1);
MakeNameEx(0x41BBB4, "IdentToColor", 0x20);
MakeComm(0x41BBB4, "'function IdentToColor(const Ident:AnsiString; var Color:Longint):Boolean;'");
MakeCode(0x41BBB4);
MakeFunction(0x41BBB4, 0x41BBC1);
MakeUnkn(0x41BBC4, 1);
MakeNameEx(0x41BBC4, "TGraphicsObject.Changed", 0x20);
MakeComm(0x41BBC4, "'procedure TGraphicsObject.Changed;'");
MakeCode(0x41BBC4);
MakeCode(0x41BBD6);
MakeFunction(0x41BBC4, 0x41BBD8);
MakeUnkn(0x41BBD8, 1);
MakeNameEx(0x41BBD8, "TGraphicsObject.Lock", 0x20);
MakeComm(0x41BBD8, "'procedure TGraphicsObject.Lock;'");
MakeCode(0x41BBD8);
MakeFunction(0x41BBD8, 0x41BBE6);
MakeUnkn(0x41BBE8, 1);
MakeNameEx(0x41BBE8, "TGraphicsObject.Unlock", 0x20);
MakeComm(0x41BBE8, "'procedure TGraphicsObject.Unlock;'");
MakeCode(0x41BBE8);
MakeFunction(0x41BBE8, 0x41BBF6);
MakeUnkn(0x41BDAC, 1);
MakeNameEx(0x41BDAC, "CharsetToIdent", 0x20);
MakeComm(0x41BDAC, "'function CharsetToIdent(Charset:Longint; var Ident:AnsiString):Boolean;'");
MakeCode(0x41BDAC);
MakeFunction(0x41BDAC, 0x41BDB9);
MakeUnkn(0x41BDBC, 1);
MakeNameEx(0x41BDBC, "IdentToCharset", 0x20);
MakeComm(0x41BDBC, "'function IdentToCharset(const Ident:AnsiString; var Charset:Longint):Boolean;'");
MakeCode(0x41BDBC);
MakeFunction(0x41BDBC, 0x41BDC9);
MakeUnkn(0x41BDCC, 1);
MakeNameEx(0x41BDCC, "GetFontData", 0x20);
MakeComm(0x41BDCC, "'function GetFontData(Font:HFONT):TFontData;'");
MakeCode(0x41BDCC);
MakeCode(0x41BE0F);
MakeCode(0x41BE1A);
MakeCode(0x41BE25);
MakeCode(0x41BE30);
MakeCode(0x41BE6B);
MakeCode(0x41BE71);
MakeCode(0x41BE75);
MakeCode(0x41BE77);
MakeFunction(0x41BDCC, 0x41BE7E);
MakeUnkn(0x41BE80, 1);
MakeNameEx(0x41BE80, "TFont.Create", 0x20);
MakeComm(0x41BE80, "'constructor TFont.Create;'");
MakeCode(0x41BE80);
MakeCode(0x41BE8E);
MakeCode(0x41BECF);
MakeFunction(0x41BE80, 0x41BED4);
MakeUnkn(0x41BED4, 1);
MakeNameEx(0x41BED4, "TBrush.Destroy", 0x20);
MakeComm(0x41BED4, "'destructor TBrush.Destroy;'");
MakeCode(0x41BED4);
MakeCode(0x41BEF7);
MakeFunction(0x41BED4, 0x41BEFA);
MakeUnkn(0x41BEFC, 1);
MakeNameEx(0x41BEFC, "TFont.Changed", 0x20);
MakeComm(0x41BEFC, "'procedure TFont.Changed;'");
MakeCode(0x41BEFC);
MakeCode(0x41BF14);
MakeFunction(0x41BEFC, 0x41BF16);
MakeUnkn(0x41BF18, 1);
MakeNameEx(0x41BF18, "TFont.Assign", 0x20);
MakeComm(0x41BF18, "'procedure TFont.Assign(Source:TPersistent);'");
MakeCode(0x41BF18);
MakeCode(0x41BFA0);
MakeCode(0x41BFAD);
MakeCode(0x41BFB6);
MakeCode(0x41BFBB);
MakeCode(0x41BFBD);
MakeCode(0x41BFCA);
MakeCode(0x41BFD3);
MakeCode(0x41BFD8);
MakeCode(0x41BFDA);
MakeFunction(0x41BF18, 0x41BFEA);
MakeUnkn(0x41BFEC, 1);
MakeNameEx(0x41BFEC, "TFont.GetData", 0x20);
MakeComm(0x41BFEC, "'procedure TFont.GetData(var FontData:TFontData);'");
MakeCode(0x41BFEC);
MakeFunction(0x41BFEC, 0x41C004);
MakeUnkn(0x41C004, 1);
MakeNameEx(0x41C004, "TFont.SetData", 0x20);
MakeComm(0x41C004, "'procedure TFont.SetData(const FontData:TFontData);'");
MakeCode(0x41C004);
MakeCode(0x41C033);
MakeCode(0x41C040);
MakeCode(0x41C049);
MakeCode(0x41C04E);
MakeFunction(0x41C004, 0x41C054);
MakeUnkn(0x41C054, 1);
MakeNameEx(0x41C054, "TFont.SetColor", 0x20);
MakeComm(0x41C054, "'procedure TFont.SetColor(Value:TColor);'");
MakeCode(0x41C054);
MakeCode(0x41C066);
MakeFunction(0x41C054, 0x41C068);
MakeUnkn(0x41C068, 1);
MakeNameEx(0x41C068, "TFont.GetHandle", 0x20);
MakeComm(0x41C068, "'function TFont.GetHandle:HFONT;'");
MakeCode(0x41C068);
MakeCode(0x41C0EC);
MakeCode(0x41C0F3);
MakeCode(0x41C15C);
MakeCode(0x41C175);
MakeCode(0x41C192);
MakeCode(0x41C198);
MakeCode(0x41C19E);
MakeCode(0x41C1A2);
MakeCode(0x41C1B1);
MakeCode(0x41C1BE);
MakeCode(0x41C1C9);
MakeCode(0x41C1CE);
MakeCode(0x41C1D0);
MakeCode(0x41C1D6);
MakeCode(0x41C1E3);
MakeCode(0x41C1F1);
MakeCode(0x41C1F6);
MakeFunction(0x41C068, 0x41C1FF);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41C208, -1);
MakeDword(0x41C204);
MakeDword(0x41C200);
MakeUnkn(0x41C210, 1);
MakeNameEx(0x41C210, "TFont.SetHandle", 0x20);
MakeComm(0x41C210, "'procedure TFont.SetHandle(Value:HFONT);'");
MakeCode(0x41C210);
MakeFunction(0x41C210, 0x41C231);
MakeUnkn(0x41C234, 1);
MakeNameEx(0x41C234, "TFont.GetHeight", 0x20);
MakeComm(0x41C234, "'function TFont.GetHeight:Integer;'");
MakeCode(0x41C234);
MakeFunction(0x41C234, 0x41C23B);
MakeUnkn(0x41C23C, 1);
MakeNameEx(0x41C23C, "TFont.SetHeight", 0x20);
MakeComm(0x41C23C, "'procedure TFont.SetHeight(Value:Integer);'");
MakeCode(0x41C23C);
MakeFunction(0x41C23C, 0x41C261);
MakeUnkn(0x41C264, 1);
MakeNameEx(0x41C264, "TFont.GetName", 0x20);
MakeComm(0x41C264, "'function TFont.GetName:TFontName;'");
MakeCode(0x41C264);
MakeFunction(0x41C264, 0x41C27A);
MakeUnkn(0x41C27C, 1);
MakeNameEx(0x41C27C, "TFont.SetName", 0x20);
MakeComm(0x41C27C, "'procedure TFont.SetName(const Value:TFontName);'");
MakeCode(0x41C27C);
MakeCode(0x41C2CD);
MakeFunction(0x41C27C, 0x41C2D6);
MakeUnkn(0x41C2D8, 1);
MakeNameEx(0x41C2D8, "TFont.GetSize", 0x20);
MakeComm(0x41C2D8, "'function TFont.GetSize:Integer;'");
MakeCode(0x41C2D8);
MakeFunction(0x41C2D8, 0x41C2F2);
MakeUnkn(0x41C2F4, 1);
MakeNameEx(0x41C2F4, "TFont.SetSize", 0x20);
MakeComm(0x41C2F4, "'procedure TFont.SetSize(Value:Integer);'");
MakeCode(0x41C2F4);
MakeFunction(0x41C2F4, 0x41C314);
MakeUnkn(0x41C314, 1);
MakeNameEx(0x41C314, "TFont.GetStyle", 0x20);
MakeComm(0x41C314, "'function TFont.GetStyle:TFontStyles;'");
MakeCode(0x41C314);
MakeFunction(0x41C314, 0x41C31D);
MakeUnkn(0x41C320, 1);
MakeNameEx(0x41C320, "TFont.SetStyle", 0x20);
MakeComm(0x41C320, "'procedure TFont.SetStyle(Value:TFontStyles);'");
MakeCode(0x41C320);
MakeFunction(0x41C320, 0x41C34B);
MakeUnkn(0x41C34C, 1);
MakeNameEx(0x41C34C, "TFont.GetPitch", 0x20);
MakeComm(0x41C34C, "'function TFont.GetPitch:TFontPitch;'");
MakeCode(0x41C34C);
MakeFunction(0x41C34C, 0x41C353);
MakeUnkn(0x41C354, 1);
MakeNameEx(0x41C354, "TFont.SetPitch", 0x20);
MakeComm(0x41C354, "'procedure TFont.SetPitch(Value:TFontPitch);'");
MakeCode(0x41C354);
MakeFunction(0x41C354, 0x41C379);
MakeUnkn(0x41C37C, 1);
MakeNameEx(0x41C37C, "TFont.GetCharset", 0x20);
MakeComm(0x41C37C, "'function TFont.GetCharset:?;'");
MakeCode(0x41C37C);
MakeComm(0x41C37C, "'TFont.FResource:PResource'");
MakeFunction(0x41C37C, 0x41C383);
MakeUnkn(0x41C384, 1);
MakeNameEx(0x41C384, "TFont.SetCharset", 0x20);
MakeComm(0x41C384, "'procedure TFont.SetCharset(Value:TFontCharset);'");
MakeCode(0x41C384);
MakeFunction(0x41C384, 0x41C3A9);
MakeUnkn(0x41C3AC, 1);
MakeNameEx(0x41C3AC, "TPen.Create", 0x20);
MakeComm(0x41C3AC, "'constructor TPen.Create;'");
MakeCode(0x41C3AC);
MakeCode(0x41C3BA);
MakeCode(0x41C3E9);
MakeFunction(0x41C3AC, 0x41C3EE);
MakeUnkn(0x41C3F0, 1);
MakeNameEx(0x41C3F0, "TFont.Destroy", 0x20);
MakeComm(0x41C3F0, "'destructor TFont.Destroy;'");
MakeCode(0x41C3F0);
MakeCode(0x41C413);
MakeFunction(0x41C3F0, 0x41C416);
MakeUnkn(0x41C418, 1);
MakeNameEx(0x41C418, "TPen.Assign", 0x20);
MakeComm(0x41C418, "'procedure TPen.Assign(Source:TPersistent);'");
MakeCode(0x41C418);
MakeCode(0x41C484);
MakeCode(0x41C491);
MakeCode(0x41C49A);
MakeCode(0x41C49F);
MakeCode(0x41C4A1);
MakeCode(0x41C4AE);
MakeCode(0x41C4B7);
MakeCode(0x41C4BC);
MakeCode(0x41C4BE);
MakeFunction(0x41C418, 0x41C4CE);
MakeUnkn(0x41C4D0, 1);
MakeNameEx(0x41C4D0, "TPen.GetData", 0x20);
MakeComm(0x41C4D0, "'procedure TPen.GetData(var PenData:TPenData);'");
MakeCode(0x41C4D0);
MakeFunction(0x41C4D0, 0x41C4E5);
MakeUnkn(0x41C4E8, 1);
MakeNameEx(0x41C4E8, "TBrush.SetData", 0x20);
MakeComm(0x41C4E8, "'procedure TBrush.SetData(const BrushData:TBrushData);'");
MakeCode(0x41C4E8);
MakeCode(0x41C517);
MakeCode(0x41C524);
MakeCode(0x41C52D);
MakeCode(0x41C532);
MakeFunction(0x41C4E8, 0x41C538);
MakeUnkn(0x41C538, 1);
MakeNameEx(0x41C538, "TPen.GetColor", 0x20);
MakeComm(0x41C538, "'function TPen.GetColor:?;'");
MakeCode(0x41C538);
MakeComm(0x41C538, "'TPen.FResource:PResource'");
MakeFunction(0x41C538, 0x41C53F);
MakeUnkn(0x41C540, 1);
MakeNameEx(0x41C540, "TPen.SetColor", 0x20);
MakeComm(0x41C540, "'procedure TPen.SetColor(Value:TColor);'");
MakeCode(0x41C540);
MakeFunction(0x41C540, 0x41C565);
MakeUnkn(0x41C568, 1);
MakeNameEx(0x41C568, "TPen.GetHandle", 0x20);
MakeComm(0x41C568, "'function TPen.GetHandle:HPEN;'");
MakeCode(0x41C568);
MakeCode(0x41C5D6);
MakeCode(0x41C5E3);
MakeCode(0x41C5EE);
MakeCode(0x41C5F3);
MakeCode(0x41C5F5);
MakeFunction(0x41C568, 0x41C5FF);
MakeUnkn(0x41C600, 1);
MakeNameEx(0x41C600, "TPen.SetMode", 0x20);
MakeComm(0x41C600, "'procedure TPen.SetMode(Value:TPenMode);'");
MakeCode(0x41C600);
MakeCode(0x41C612);
MakeFunction(0x41C600, 0x41C614);
MakeUnkn(0x41C614, 1);
MakeNameEx(0x41C614, "TPen.GetStyle", 0x20);
MakeComm(0x41C614, "'function TPen.GetStyle:?;'");
MakeCode(0x41C614);
MakeComm(0x41C614, "'TPen.FResource:PResource'");
MakeFunction(0x41C614, 0x41C61B);
MakeUnkn(0x41C61C, 1);
MakeNameEx(0x41C61C, "TPen.SetStyle", 0x20);
MakeComm(0x41C61C, "'procedure TPen.SetStyle(Value:TPenStyle);'");
MakeCode(0x41C61C);
MakeFunction(0x41C61C, 0x41C641);
MakeUnkn(0x41C644, 1);
MakeNameEx(0x41C644, "TPen.GetWidth", 0x20);
MakeComm(0x41C644, "'function TPen.GetWidth:?;'");
MakeCode(0x41C644);
MakeComm(0x41C644, "'TPen.FResource:PResource'");
MakeFunction(0x41C644, 0x41C64B);
MakeUnkn(0x41C64C, 1);
MakeNameEx(0x41C64C, "TPen.SetWidth", 0x20);
MakeComm(0x41C64C, "'procedure TPen.SetWidth(Value:Integer);'");
MakeCode(0x41C64C);
MakeCode(0x41C66F);
MakeFunction(0x41C64C, 0x41C675);
MakeUnkn(0x41C678, 1);
MakeNameEx(0x41C678, "TBrush.Create", 0x20);
MakeComm(0x41C678, "'constructor TBrush.Create;'");
MakeCode(0x41C678);
MakeCode(0x41C686);
MakeCode(0x41C6B1);
MakeFunction(0x41C678, 0x41C6B6);
MakeUnkn(0x41C6B8, 1);
MakeNameEx(0x41C6B8, "TPen.Destroy", 0x20);
MakeComm(0x41C6B8, "'destructor TPen.Destroy;'");
MakeCode(0x41C6B8);
MakeCode(0x41C6DB);
MakeFunction(0x41C6B8, 0x41C6DE);
MakeUnkn(0x41C6E0, 1);
MakeNameEx(0x41C6E0, "TBrush.Assign", 0x20);
MakeComm(0x41C6E0, "'procedure TBrush.Assign(Source:TPersistent);'");
MakeCode(0x41C6E0);
MakeCode(0x41C73D);
MakeCode(0x41C74A);
MakeCode(0x41C753);
MakeCode(0x41C758);
MakeCode(0x41C75A);
MakeCode(0x41C767);
MakeCode(0x41C770);
MakeCode(0x41C775);
MakeCode(0x41C777);
MakeFunction(0x41C6E0, 0x41C787);
MakeUnkn(0x41C788, 1);
MakeNameEx(0x41C788, "TBrush.GetData", 0x20);
MakeComm(0x41C788, "'procedure TBrush.GetData(var BrushData:TBrushData);'");
MakeCode(0x41C788);
MakeFunction(0x41C788, 0x41C7A2);
MakeUnkn(0x41C7A4, 1);
MakeNameEx(0x41C7A4, "TPen.SetData", 0x20);
MakeComm(0x41C7A4, "'procedure TPen.SetData(const PenData:TPenData);'");
MakeCode(0x41C7A4);
MakeCode(0x41C7D3);
MakeCode(0x41C7E0);
MakeCode(0x41C7E9);
MakeCode(0x41C7EE);
MakeFunction(0x41C7A4, 0x41C7F4);
MakeUnkn(0x41C7F4, 1);
MakeNameEx(0x41C7F4, "TBrush.SetBitmap", 0x20);
MakeComm(0x41C7F4, "'procedure TBrush.SetBitmap(Value:TBitmap);'");
MakeCode(0x41C7F4);
MakeFunction(0x41C7F4, 0x41C815);
MakeUnkn(0x41C818, 1);
MakeNameEx(0x41C818, "TBrush.GetColor", 0x20);
MakeComm(0x41C818, "'function TBrush.GetColor:TColor;'");
MakeCode(0x41C818);
MakeFunction(0x41C818, 0x41C81F);
MakeUnkn(0x41C820, 1);
MakeNameEx(0x41C820, "TBrush.SetColor", 0x20);
MakeComm(0x41C820, "'procedure TBrush.SetColor(Value:TColor);'");
MakeCode(0x41C820);
MakeCode(0x41C842);
MakeFunction(0x41C820, 0x41C851);
MakeUnkn(0x41C854, 1);
MakeNameEx(0x41C854, "TBrush.GetHandle", 0x20);
MakeComm(0x41C854, "'function TBrush.GetHandle:HBRUSH;'");
MakeCode(0x41C854);
MakeCode(0x41C8B6);
MakeCode(0x41C8CC);
MakeCode(0x41C8D3);
MakeCode(0x41C8DC);
MakeCode(0x41C8EC);
MakeCode(0x41C909);
MakeCode(0x41C916);
MakeCode(0x41C921);
MakeCode(0x41C926);
MakeCode(0x41C928);
MakeFunction(0x41C854, 0x41C932);
MakeUnkn(0x41C934, 1);
MakeNameEx(0x41C934, "TBrush.GetStyle", 0x20);
MakeComm(0x41C934, "'function TBrush.GetStyle:TBrushStyle;'");
MakeCode(0x41C934);
MakeFunction(0x41C934, 0x41C93B);
MakeUnkn(0x41C93C, 1);
MakeNameEx(0x41C93C, "TBrush.SetStyle", 0x20);
MakeComm(0x41C93C, "'procedure TBrush.SetStyle(Value:TBrushStyle);'");
MakeCode(0x41C93C);
MakeCode(0x41C960);
MakeFunction(0x41C93C, 0x41C96F);
MakeUnkn(0x41C970, 1);
MakeNameEx(0x41C970, "TCanvas.Create", 0x20);
MakeComm(0x41C970, "'constructor TCanvas.Create;'");
MakeCode(0x41C970);
MakeCode(0x41C97F);
MakeCode(0x41CA28);
MakeFunction(0x41C970, 0x41CA2E);
MakeUnkn(0x41CA34, 1);
MakeNameEx(0x41CA34, "TCanvas.Destroy", 0x20);
MakeComm(0x41CA34, "'destructor TCanvas.Destroy;'");
MakeCode(0x41CA34);
MakeCode(0x41CA8C);
MakeFunction(0x41CA34, 0x41CA8F);
MakeUnkn(0x41CA90, 1);
MakeNameEx(0x41CA90, "TCanvas.CopyRect", 0x20);
MakeComm(0x41CA90, "'procedure TCanvas.CopyRect(const Dest:TRect; Canvas:TCanvas; const Source:TRect);'");
MakeCode(0x41CA90);
MakeFunction(0x41CA90, 0x41CB0E);
MakeUnkn(0x41CBC4, 1);
MakeNameEx(0x41CBC4, "TCanvas.FillRect", 0x20);
MakeComm(0x41CBC4, "'procedure TCanvas.FillRect(const Rect:TRect);'");
MakeCode(0x41CBC4);
MakeFunction(0x41CBC4, 0x41CBFB);
MakeUnkn(0x41CC00, 1);
MakeNameEx(0x41CC00, "TCanvas.LineTo", 0x20);
MakeComm(0x41CC00, "'procedure TCanvas.LineTo(X:Integer; Y:Integer);'");
MakeCode(0x41CC00);
MakeFunction(0x41CC00, 0x41CC33);
MakeUnkn(0x41CC38, 1);
MakeNameEx(0x41CC38, "TCanvas.Lock", 0x20);
MakeComm(0x41CC38, "'procedure TCanvas.Lock;'");
MakeCode(0x41CC38);
MakeFunction(0x41CC38, 0x41CC5D);
MakeUnkn(0x41CC60, 1);
MakeNameEx(0x41CC60, "TCanvas.MoveTo", 0x20);
MakeComm(0x41CC60, "'procedure TCanvas.MoveTo(X:Integer; Y:Integer);'");
MakeCode(0x41CC60);
MakeFunction(0x41CC60, 0x41CC87);
MakeUnkn(0x41CC8C, 1);
MakeNameEx(0x41CC8C, "TCanvas.StretchDraw", 0x20);
MakeComm(0x41CC8C, "'procedure TCanvas.StretchDraw(const Rect:TRect; Graphic:TGraphic);'");
MakeCode(0x41CC8C);
MakeCode(0x41CCBF);
MakeFunction(0x41CC8C, 0x41CCC3);
MakeUnkn(0x41CCC8, 1);
MakeNameEx(0x41CCC8, "TCanvas.TextExtent", 0x20);
MakeComm(0x41CCC8, "'function TCanvas.TextExtent(const Text:AnsiString):TSize;'");
MakeCode(0x41CCC8);
MakeFunction(0x41CCC8, 0x41CD05);
MakeUnkn(0x41CD0C, 1);
MakeNameEx(0x41CD0C, "TCanvas.TextWidth", 0x20);
MakeComm(0x41CD0C, "'function TCanvas.TextWidth(const Text:AnsiString):Integer;'");
MakeCode(0x41CD0C);
MakeFunction(0x41CD0C, 0x41CD28);
MakeUnkn(0x41CD28, 1);
MakeNameEx(0x41CD28, "TCanvas.TextHeight", 0x20);
MakeComm(0x41CD28, "'function TCanvas.TextHeight(const Text:AnsiString):Integer;'");
MakeCode(0x41CD28);
MakeFunction(0x41CD28, 0x41CD45);
MakeUnkn(0x41CD48, 1);
MakeNameEx(0x41CD48, "TCanvas.TryLock", 0x20);
MakeComm(0x41CD48, "'function TCanvas.TryLock:Boolean;'");
MakeCode(0x41CD48);
MakeCode(0x41CD7C);
MakeCode(0x41CD89);
MakeCode(0x41CD94);
MakeCode(0x41CD99);
MakeFunction(0x41CD48, 0x41CDA2);
MakeUnkn(0x41CDA4, 1);
MakeNameEx(0x41CDA4, "TCanvas.Unlock", 0x20);
MakeComm(0x41CDA4, "'procedure TCanvas.Unlock;'");
MakeCode(0x41CDA4);
MakeFunction(0x41CDA4, 0x41CDC9);
MakeUnkn(0x41CDCC, 1);
MakeNameEx(0x41CDCC, "TCanvas.SetFont", 0x20);
MakeComm(0x41CDCC, "'procedure TCanvas.SetFont(Value:TFont);'");
MakeCode(0x41CDCC);
MakeFunction(0x41CDCC, 0x41CDD9);
MakeUnkn(0x41CDDC, 1);
MakeNameEx(0x41CDDC, "TCanvas.SetPen", 0x20);
MakeComm(0x41CDDC, "'procedure TCanvas.SetPen(Value:TPen);'");
MakeCode(0x41CDDC);
MakeFunction(0x41CDDC, 0x41CDE5);
MakeUnkn(0x41CDE8, 1);
MakeNameEx(0x41CDE8, "TCanvas.SetBrush", 0x20);
MakeComm(0x41CDE8, "'procedure TCanvas.SetBrush(Value:TBrush);'");
MakeCode(0x41CDE8);
MakeFunction(0x41CDE8, 0x41CDF1);
MakeUnkn(0x41CDF4, 1);
MakeNameEx(0x41CDF4, "TCanvas.GetPenPos", 0x20);
MakeComm(0x41CDF4, "'function TCanvas.GetPenPos:TPoint;'");
MakeCode(0x41CDF4);
MakeFunction(0x41CDF4, 0x41CE14);
MakeUnkn(0x41CE18, 1);
MakeNameEx(0x41CE18, "TCanvas.SetPenPos", 0x20);
MakeComm(0x41CE18, "'procedure TCanvas.SetPenPos(Value:TPoint);'");
MakeCode(0x41CE18);
MakeFunction(0x41CE18, 0x41CE35);
MakeUnkn(0x41CE38, 1);
MakeNameEx(0x41CE38, "TCanvas.GetPixel", 0x20);
MakeComm(0x41CE38, "'function TCanvas.GetPixel(X:Integer; Y:Integer):TColor;'");
MakeCode(0x41CE38);
MakeFunction(0x41CE38, 0x41CE5D);
MakeUnkn(0x41CE64, 1);
MakeNameEx(0x41CE64, "TCanvas.SetPixel", 0x20);
MakeComm(0x41CE64, "'procedure TCanvas.SetPixel(X:Integer; Y:Integer; Value:TColor);'");
MakeCode(0x41CE64);
MakeFunction(0x41CE64, 0x41CEA6);
MakeUnkn(0x41CEAC, 1);
MakeNameEx(0x41CEAC, "TCanvas.GetHandle", 0x20);
MakeComm(0x41CEAC, "'function TCanvas.GetHandle:HDC;'");
MakeCode(0x41CEAC);
MakeFunction(0x41CEAC, 0x41CEC8);
MakeUnkn(0x41CECC, 1);
MakeNameEx(0x41CECC, "TCanvas.DeselectHandles", 0x20);
MakeComm(0x41CECC, "'procedure TCanvas.DeselectHandles;'");
MakeCode(0x41CECC);
MakeCode(0x41CF1F);
MakeFunction(0x41CECC, 0x41CF22);
MakeUnkn(0x41CF28, 1);
MakeNameEx(0x41CF28, "TCanvas.CreateHandle", 0x20);
MakeComm(0x41CF28, "'procedure TCanvas.CreateHandle;'");
MakeCode(0x41CF28);
MakeFunction(0x41CF28, 0x41CF29);
MakeUnkn(0x41CF2C, 1);
MakeNameEx(0x41CF2C, "TCanvas.SetHandle", 0x20);
MakeComm(0x41CF2C, "'procedure TCanvas.SetHandle(Value:HDC);'");
MakeCode(0x41CF2C);
MakeCode(0x41CF66);
MakeCode(0x41CF7B);
MakeFunction(0x41CF2C, 0x41CF80);
MakeUnkn(0x41CF80, 1);
MakeNameEx(0x41CF80, "TCanvas.RequiredState", 0x20);
MakeComm(0x41CF80, "'procedure TCanvas.RequiredState(ReqState:TCanvasState);'");
MakeCode(0x41CF80);
MakeCode(0x41CFC2);
MakeCode(0x41CFCE);
MakeCode(0x41CFDA);
MakeCode(0x41CFE6);
MakeCode(0x41CFEC);
MakeFunction(0x41CF80, 0x41CFF0);
MakeUnkn(0x41CFF4, 1);
MakeNameEx(0x41CFF4, "TCanvas.Changing", 0x20);
MakeComm(0x41CFF4, "'procedure TCanvas.Changing;'");
MakeCode(0x41CFF4);
MakeCode(0x41D006);
MakeFunction(0x41CFF4, 0x41D008);
MakeUnkn(0x41D008, 1);
MakeNameEx(0x41D008, "TCanvas.Changed", 0x20);
MakeComm(0x41D008, "'procedure TCanvas.Changed;'");
MakeCode(0x41D008);
MakeCode(0x41D01A);
MakeFunction(0x41D008, 0x41D01C);
MakeUnkn(0x41D01C, 1);
MakeNameEx(0x41D01C, "TCanvas.CreateFont", 0x20);
MakeComm(0x41D01C, "'procedure TCanvas.CreateFont;'");
MakeCode(0x41D01C);
MakeFunction(0x41D01C, 0x41D048);
MakeUnkn(0x41D048, 1);
MakeNameEx(0x41D048, "TCanvas.CreatePen", 0x20);
MakeComm(0x41D048, "'procedure TCanvas.CreatePen;'");
MakeCode(0x41D048);
MakeFunction(0x41D048, 0x41D078);
MakeUnkn(0x41D078, 1);
MakeNameEx(0x41D078, "TCanvas.CreateBrush", 0x20);
MakeComm(0x41D078, "'procedure TCanvas.CreateBrush;'");
MakeCode(0x41D078);
MakeCode(0x41D0CB);
MakeFunction(0x41D078, 0x41D0F1);
MakeUnkn(0x41D0F4, 1);
MakeNameEx(0x41D0F4, "TCanvas.FontChanged", 0x20);
MakeComm(0x41D0F4, "'procedure TCanvas.FontChanged(AFont:TObject);'");
MakeCode(0x41D0F4);
MakeCode(0x41D110);
MakeFunction(0x41D0F4, 0x41D112);
MakeUnkn(0x41D114, 1);
MakeNameEx(0x41D114, "TCanvas.PenChanged", 0x20);
MakeComm(0x41D114, "'procedure TCanvas.PenChanged(APen:TObject);'");
MakeCode(0x41D114);
MakeCode(0x41D130);
MakeFunction(0x41D114, 0x41D132);
MakeUnkn(0x41D134, 1);
MakeNameEx(0x41D134, "TCanvas.BrushChanged", 0x20);
MakeComm(0x41D134, "'procedure TCanvas.BrushChanged(ABrush:TObject);'");
MakeCode(0x41D134);
MakeCode(0x41D150);
MakeFunction(0x41D134, 0x41D152);
MakeUnkn(0x41D154, 1);
MakeNameEx(0x41D154, "InvalidOperation", 0x20);
MakeComm(0x41D154, "'procedure InvalidOperation(Str:PResStringRec);'");
MakeCode(0x41D154);
MakeFunction(0x41D154, 0x41D16C);
MakeUnkn(0x41D16C, 1);
MakeNameEx(0x41D16C, "InvalidGraphic", 0x20);
MakeComm(0x41D16C, "'procedure InvalidGraphic(Str:PResStringRec);'");
MakeCode(0x41D16C);
MakeFunction(0x41D16C, 0x41D184);
MakeUnkn(0x41D184, 1);
MakeNameEx(0x41D184, "InvalidBitmap", 0x20);
MakeComm(0x41D184, "'procedure InvalidBitmap;'");
MakeCode(0x41D184);
MakeFunction(0x41D184, 0x41D18F);
MakeUnkn(0x41D190, 1);
MakeNameEx(0x41D190, "InvalidIcon", 0x20);
MakeComm(0x41D190, "'procedure InvalidIcon;'");
MakeCode(0x41D190);
MakeFunction(0x41D190, 0x41D19B);
MakeUnkn(0x41D19C, 1);
MakeNameEx(0x41D19C, "OutOfResources", 0x20);
MakeComm(0x41D19C, "'procedure OutOfResources;'");
MakeCode(0x41D19C);
MakeCode(0x41D1D0);
MakeCode(0x41D1DD);
MakeCode(0x41D1E6);
MakeCode(0x41D1EB);
MakeFunction(0x41D19C, 0x41D1F0);
MakeUnkn(0x41D1F0, 1);
MakeNameEx(0x41D1F0, "GDIError", 0x20);
MakeComm(0x41D1F0, "'procedure GDIError;'");
MakeCode(0x41D1F0);
MakeCode(0x41D26E);
MakeCode(0x41D273);
MakeCode(0x41D280);
MakeCode(0x41D28C);
MakeCode(0x41D291);
MakeFunction(0x41D1F0, 0x41D298);
MakeUnkn(0x41D298, 1);
MakeNameEx(0x41D298, "GDICheck", 0x20);
MakeComm(0x41D298, "'function GDICheck(Value:Integer):Integer;'");
MakeCode(0x41D298);
MakeCode(0x41D2A4);
MakeFunction(0x41D298, 0x41D2A8);
MakeUnkn(0x41D2A8, 1);
MakeNameEx(0x41D2A8, "DupBits", 0x20);
MakeComm(0x41D2A8, "'function DupBits(Src:HBITMAP; Size:TPoint; Mono:Boolean):HBITMAP;'");
MakeCode(0x41D2A8);
MakeCode(0x41D30A);
MakeCode(0x41D31F);
MakeCode(0x41D34C);
MakeCode(0x41D359);
MakeCode(0x41D365);
MakeCode(0x41D36A);
MakeCode(0x41D36C);
MakeCode(0x41D3C8);
MakeCode(0x41D3D6);
MakeCode(0x41D3E3);
MakeCode(0x41D3F6);
MakeCode(0x41D3FB);
MakeFunction(0x41D2A8, 0x41D407);
MakeUnkn(0x41D408, 1);
MakeNameEx(0x41D408, "GetDInColors", 0x20);
MakeComm(0x41D408, "'function GetDInColors(BitCount:Word):Integer;'");
MakeCode(0x41D408);
MakeCode(0x41D41B);
MakeCode(0x41D425);
MakeFunction(0x41D408, 0x41D428);
MakeUnkn(0x41D428, 1);
MakeNameEx(0x41D428, "BytesPerScanline", 0x20);
MakeComm(0x41D428, "'function BytesPerScanline(PixelsPerScanline:Longint; BitsPerPixel:Longint; Alignment:Longint):Longint;'");
MakeCode(0x41D428);
MakeCode(0x41D438);
MakeFunction(0x41D428, 0x41D43C);
MakeUnkn(0x41D43C, 1);
MakeNameEx(0x41D43C, "TransparentStretchBlt", 0x20);
MakeComm(0x41D43C, "'function TransparentStretchBlt(DstDC:HDC; DstX:Integer; DstY:Integer; DstW:Integer; DstH:Integer; SrcDC:HDC; SrcX:Integer; SrcY:Integer; SrcW:Integer; SrcH:Integer; MaskDC:HDC; MaskX:Integer; MaskY:Integer):Boolean;'");
MakeCode(0x41D43C);
MakeCode(0x41D4E8);
MakeCode(0x41D4F5);
MakeCode(0x41D50F);
MakeCode(0x41D514);
MakeCode(0x41D516);
MakeCode(0x41D598);
MakeCode(0x41D5AC);
MakeCode(0x41D687);
MakeCode(0x41D690);
MakeCode(0x41D69D);
MakeCode(0x41D6B2);
MakeCode(0x41D6BC);
MakeCode(0x41D6C1);
MakeFunction(0x41D43C, 0x41D6CF);
MakeUnkn(0x41D6D0, 1);
MakeNameEx(0x41D6D0, "RGBTripleToQuad", 0x20);
MakeComm(0x41D6D0, "'procedure RGBTripleToQuad(var ColorTable:void );'");
MakeCode(0x41D6D0);
MakeCode(0x41D6DC);
MakeFunction(0x41D6D0, 0x41D706);
MakeUnkn(0x41D708, 1);
MakeNameEx(0x41D708, "RGBQuadToTriple", 0x20);
MakeComm(0x41D708, "'procedure RGBQuadToTriple(var ColorTable:void ; var ColorCount:Integer);'");
MakeCode(0x41D708);
MakeCode(0x41D726);
MakeCode(0x41D747);
MakeCode(0x41D77A);
MakeFunction(0x41D708, 0x41D780);
MakeUnkn(0x41D780, 1);
MakeNameEx(0x41D780, "ByteSwapColors", 0x20);
MakeComm(0x41D780, "'procedure ByteSwapColors(var Colors:void ; Count:Integer);'");
MakeCode(0x41D780);
MakeCode(0x41D7A8);
MakeCode(0x41D7B8);
MakeCode(0x41D7B9);
MakeCode(0x41D7D1);
MakeFunction(0x41D780, 0x41D7D5);
MakeUnkn(0x41D7D8, 1);
MakeNameEx(0x41D7D8, "CreateSystemPalette", 0x20);
MakeComm(0x41D7D8, "'function CreateSystemPalette(const Entries:array[$0..-$1] of TColor; const _Dv_:$0..-$1):HPALETTE;'");
MakeCode(0x41D7D8);
MakeCode(0x41D89E);
MakeCode(0x41D8BC);
MakeCode(0x41D8C9);
MakeCode(0x41D8D5);
MakeCode(0x41D8DA);
MakeFunction(0x41D7D8, 0x41D8ED);
MakeUnkn(0x41D8F0, 1);
MakeNameEx(0x41D8F0, "SystemPaletteOverride", 0x20);
MakeComm(0x41D8F0, "'function SystemPaletteOverride(var Pal:TMaxLogPalette):Boolean;'");
MakeCode(0x41D8F0);
MakeCode(0x41D95D);
MakeCode(0x41D96A);
MakeCode(0x41D976);
MakeCode(0x41D97B);
MakeCode(0x41D97D);
MakeFunction(0x41D8F0, 0x41D985);
MakeUnkn(0x41D988, 1);
MakeNameEx(0x41D988, "PaletteFromDIBColorTable", 0x20);
MakeComm(0x41D988, "'function PaletteFromDIBColorTable(DIBHandle:THandle; ColorTable:Pointer; ColorCount:Integer):HPALETTE;'");
MakeCode(0x41D988);
MakeCode(0x41D9D7);
MakeCode(0x41D9EA);
MakeCode(0x41DA05);
MakeCode(0x41DA13);
MakeCode(0x41DA1D);
MakeFunction(0x41D988, 0x41DA29);
MakeUnkn(0x41DA2C, 1);
MakeNameEx(0x41DA2C, "PaletteToDIBColorTable", 0x20);
MakeComm(0x41DA2C, "'function PaletteToDIBColorTable(Pal:HPALETTE; var ColorTable:array[$0..-$1] of Windows.TRGBQuad; const _Dv_:$0..-$1):Integer;'");
MakeCode(0x41DA2C);
MakeCode(0x41DA5D);
MakeCode(0x41DA75);
MakeFunction(0x41DA2C, 0x41DA7D);
MakeUnkn(0x41DA80, 1);
MakeNameEx(0x41DA80, "TwoBitsFromDIB", 0x20);
MakeComm(0x41DA80, "'procedure TwoBitsFromDIB(var BI:TBitmapInfoHeader; var XorBits:HBITMAP; var AndBits:HBITMAP; const IconSize:TPoint);'");
MakeCode(0x41DA80);
MakeCode(0x41DADD);
MakeCode(0x41DB3B);
MakeCode(0x41DB48);
MakeCode(0x41DB52);
MakeCode(0x41DB57);
MakeCode(0x41DBF5);
MakeCode(0x41DC02);
MakeCode(0x41DC0C);
MakeCode(0x41DC11);
MakeCode(0x41DC13);
MakeCode(0x41DC20);
MakeCode(0x41DC2C);
MakeCode(0x41DC31);
MakeFunction(0x41DA80, 0x41DC3C);
MakeUnkn(0x41DC3C, 1);
MakeNameEx(0x41DC3C, "AdjustColor", 0x20);
MakeComm(0x41DC3C, "'function AdjustColor(I:Integer):Integer;'");
MakeCode(0x41DC3C);
MakeFunction(0x41DC3C, 0x41DC46);
MakeUnkn(0x41DC48, 1);
MakeNameEx(0x41DC48, "BetterSize", 0x20);
MakeComm(0x41DC48, "'function BetterSize(const Old:TIconRec; const New:TIconRec):Boolean;'");
MakeCode(0x41DC48);
MakeCode(0x41DCAD);
MakeCode(0x41DCCB);
MakeCode(0x41DCCF);
MakeCode(0x41DCD1);
MakeFunction(0x41DC48, 0x41DCD8);
MakeUnkn(0x41DCD8, 1);
MakeNameEx(0x41DCD8, "ReadIcon", 0x20);
MakeComm(0x41DCD8, "'procedure ReadIcon(Stream:TStream; var Icon:HICON; ImageCount:Integer; StartOffset:Integer; const RequestedSize:TPoint; var IconSize:TPoint);'");
MakeCode(0x41DCD8);
MakeCode(0x41DD3F);
MakeCode(0x41DD4C);
MakeCode(0x41DD61);
MakeCode(0x41DD9C);
MakeCode(0x41DDA8);
MakeCode(0x41DDB5);
MakeCode(0x41DDC1);
MakeCode(0x41DDC6);
MakeCode(0x41DDE9);
MakeCode(0x41DE2C);
MakeCode(0x41DE30);
MakeCode(0x41DF73);
MakeCode(0x41DF80);
MakeCode(0x41DF8C);
MakeCode(0x41DF91);
MakeCode(0x41DF93);
MakeCode(0x41DFA0);
MakeCode(0x41DFAF);
MakeCode(0x41DFB4);
MakeCode(0x41DFB6);
MakeCode(0x41DFC3);
MakeCode(0x41DFCF);
MakeCode(0x41DFD4);
MakeFunction(0x41DCD8, 0x41DFDF);
MakeUnkn(0x41DFE0, 1);
MakeNameEx(0x41DFE0, "InitializeBitmapInfoHeader", 0x20);
MakeComm(0x41DFE0, "'procedure InitializeBitmapInfoHeader(Bitmap:HBITMAP; var BI:TBitmapInfoHeader; Colors:Integer);'");
MakeCode(0x41DFE0);
MakeCode(0x41E004);
MakeCode(0x41E021);
MakeCode(0x41E043);
MakeCode(0x41E059);
MakeCode(0x41E061);
MakeCode(0x41E06C);
MakeCode(0x41E077);
MakeCode(0x41E085);
MakeCode(0x41E096);
MakeCode(0x41E0BD);
MakeFunction(0x41DFE0, 0x41E0C4);
MakeUnkn(0x41E0C4, 1);
MakeNameEx(0x41E0C4, "InternalGetDIBSizes", 0x20);
MakeComm(0x41E0C4, "'procedure InternalGetDIBSizes(Bitmap:HBITMAP; var InfoHeaderSize:DWORD; var ImageSize:DWORD; Colors:Integer);'");
MakeCode(0x41E0C4);
MakeCode(0x41E0F6);
MakeCode(0x41E110);
MakeCode(0x41E11A);
MakeFunction(0x41E0C4, 0x41E127);
MakeUnkn(0x41E128, 1);
MakeNameEx(0x41E128, "GetDIBSizes", 0x20);
MakeComm(0x41E128, "'procedure GetDIBSizes(Bitmap:HBITMAP; var InfoHeaderSize:DWORD; var ImageSize:DWORD);'");
MakeCode(0x41E128);
MakeFunction(0x41E128, 0x41E130);
MakeUnkn(0x41E130, 1);
MakeNameEx(0x41E130, "InternalGetDIB", 0x20);
MakeComm(0x41E130, "'function InternalGetDIB(Bitmap:HBITMAP; Palette:HPALETTE; var BitmapInfo:void ; var Bits:void ; Colors:Integer):Boolean;'");
MakeCode(0x41E130);
MakeCode(0x41E184);
MakeCode(0x41E1A1);
MakeCode(0x41E1AE);
MakeCode(0x41E1C3);
MakeCode(0x41E1CD);
MakeCode(0x41E1D2);
MakeFunction(0x41E130, 0x41E1E0);
MakeUnkn(0x41E1E0, 1);
MakeNameEx(0x41E1E0, "GetDIB", 0x20);
MakeComm(0x41E1E0, "'function GetDIB(Bitmap:HBITMAP; Palette:HPALETTE; var BitmapInfo:void ; var Bits:void ):Boolean;'");
MakeCode(0x41E1E0);
MakeFunction(0x41E1E0, 0x41E1F4);
MakeUnkn(0x41E1F4, 1);
MakeNameEx(0x41E1F4, "WinError", 0x20);
MakeComm(0x41E1F4, "'procedure WinError;'");
MakeCode(0x41E1F4);
MakeFunction(0x41E1F4, 0x41E1F5);
MakeUnkn(0x41E1F8, 1);
MakeNameEx(0x41E1F8, "CheckBool", 0x20);
MakeComm(0x41E1F8, "'procedure CheckBool(Result:BOOL);'");
MakeCode(0x41E1F8);
MakeFunction(0x41E1F8, 0x41E202);
MakeUnkn(0x41E204, 1);
MakeNameEx(0x41E204, "WriteIcon", 0x20);
MakeComm(0x41E204, "'procedure WriteIcon(Stream:TStream; Icon:HICON; WriteLength:Boolean);'");
MakeCode(0x41E204);
MakeCode(0x41E307);
MakeCode(0x41E391);
MakeCode(0x41E39E);
MakeCode(0x41E3CB);
MakeCode(0x41E3D0);
MakeCode(0x41E3D2);
MakeCode(0x41E3DF);
MakeCode(0x41E3F2);
MakeCode(0x41E3F7);
MakeFunction(0x41E204, 0x41E400);
MakeUnkn(0x41E400, 1);
MakeNameEx(0x41E400, "TGraphic.Create", 0x20);
MakeComm(0x41E400, "'constructor TGraphic.Create;'");
MakeCode(0x41E400);
MakeCode(0x41E40E);
MakeCode(0x41E430);
MakeFunction(0x41E400, 0x41E435);
MakeUnkn(0x41E438, 1);
MakeNameEx(0x41E438, "TGraphic.Changed", 0x20);
MakeComm(0x41E438, "'procedure TGraphic.Changed(Sender:TObject);'");
MakeCode(0x41E438);
MakeCode(0x41E44E);
MakeFunction(0x41E438, 0x41E450);
MakeUnkn(0x41E450, 1);
MakeNameEx(0x41E450, "DoWrite_0", 0x20);
MakeComm(0x41E450, "'function DoWrite:Boolean;'");
MakeCode(0x41E450);
MakeCode(0x41E492);
MakeCode(0x41E497);
MakeCode(0x41E4A4);
MakeFunction(0x41E450, 0x41E4A7);
MakeUnkn(0x41E4A8, 1);
MakeNameEx(0x41E4A8, "TGraphic.DefineProperties", 0x20);
MakeComm(0x41E4A8, "'procedure TGraphic.DefineProperties(Filer:TFiler);'");
MakeCode(0x41E4A8);
MakeFunction(0x41E4A8, 0x41E4E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41E4EC, -1);
MakeDword(0x41E4E8);
MakeDword(0x41E4E4);
MakeUnkn(0x41E4F4, 1);
MakeNameEx(0x41E4F4, "TGraphic.Equals", 0x20);
MakeComm(0x41E4F4, "'function TGraphic.Equals(Graphic:TGraphic):Boolean;'");
MakeCode(0x41E4F4);
MakeCode(0x41E519);
MakeCode(0x41E51D);
MakeCode(0x41E51F);
MakeCode(0x41E538);
MakeCode(0x41E54E);
MakeCode(0x41E552);
MakeCode(0x41E554);
MakeCode(0x41E55C);
MakeCode(0x41E5CD);
MakeCode(0x41E5EF);
MakeCode(0x41E5F3);
MakeCode(0x41E5F5);
MakeCode(0x41E5F8);
MakeCode(0x41E605);
MakeCode(0x41E60E);
MakeCode(0x41E613);
MakeCode(0x41E615);
MakeCode(0x41E622);
MakeCode(0x41E62B);
MakeCode(0x41E630);
MakeCode(0x41E632);
MakeFunction(0x41E4F4, 0x41E63C);
MakeCode(0x41E63C);
MakeFunction(0x41E63C, 0x41E63F);
MakeCode(0x41E640);
MakeComm(0x41E640, "'TGraphic.FTransparent:Boolean'");
MakeFunction(0x41E640, 0x41E644);
MakeUnkn(0x41E644, 1);
MakeNameEx(0x41E644, "TGraphic.LoadFromFile", 0x20);
MakeComm(0x41E644, "'procedure TGraphic.LoadFromFile(const Filename:AnsiString);'");
MakeCode(0x41E644);
MakeCode(0x41E676);
MakeCode(0x41E683);
MakeCode(0x41E68C);
MakeCode(0x41E691);
MakeFunction(0x41E644, 0x41E697);
MakeUnkn(0x41E698, 1);
MakeNameEx(0x41E698, "TGraphic.Progress", 0x20);
MakeComm(0x41E698, "'procedure TGraphic.Progress(Sender:TObject; Stage:TProgressStage; PercentDone:Byte; RedrawNow:Boolean; const R:TRect; const Msg:AnsiString);'");
MakeCode(0x41E698);
MakeCode(0x41E6BB);
MakeFunction(0x41E698, 0x41E6C0);
MakeUnkn(0x41E6C0, 1);
MakeNameEx(0x41E6C0, "TGraphic.ReadData", 0x20);
MakeComm(0x41E6C0, "'procedure TGraphic.ReadData(Stream:TStream);'");
MakeCode(0x41E6C0);
MakeFunction(0x41E6C0, 0x41E6CC);
MakeUnkn(0x41E6CC, 1);
MakeNameEx(0x41E6CC, "TGraphic.SaveToFile", 0x20);
MakeComm(0x41E6CC, "'procedure TGraphic.SaveToFile(const Filename:AnsiString);'");
MakeCode(0x41E6CC);
MakeCode(0x41E701);
MakeCode(0x41E70E);
MakeCode(0x41E717);
MakeCode(0x41E71C);
MakeFunction(0x41E6CC, 0x41E722);
MakeCode(0x41E724);
MakeFunction(0x41E724, 0x41E725);
MakeUnkn(0x41E728, 1);
MakeNameEx(0x41E728, "TGraphic.SetTransparent", 0x20);
MakeComm(0x41E728, "'procedure TGraphic.SetTransparent(Value:Boolean);'");
MakeCode(0x41E728);
MakeFunction(0x41E728, 0x41E738);
MakeUnkn(0x41E738, 1);
MakeNameEx(0x41E738, "TGraphic.WriteData", 0x20);
MakeComm(0x41E738, "'procedure TGraphic.WriteData(Stream:TStream);'");
MakeCode(0x41E738);
MakeFunction(0x41E738, 0x41E744);
MakeUnkn(0x41E744, 1);
MakeNameEx(0x41E744, "VMT_41E744_TBitmapCanvas", 0);
MakeDword(0x41E744);
MakeDword(0x41E748);
MakeDword(0x41E74C);
MakeDword(0x41E750);
MakeDword(0x41E754);
MakeDword(0x41E758);
MakeDword(0x41E75C);
MakeDword(0x41E760);
MakeDword(0x41E764);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41E7A8, 0x41E7B6);
MakeDword(0x41E768);
MakeDword(0x41E76C);
MakeDword(0x41E770);
MakeDword(0x41E774);
MakeDword(0x41E778);
MakeDword(0x41E77C);
MakeDword(0x41E780);
MakeDword(0x41E784);
MakeDword(0x41E788);
MakeDword(0x41E78C);
MakeComm(0x41E790, "'+0'");
MakeDword(0x41E790);
MakeComm(0x41E794, "'+4'");
MakeDword(0x41E794);
MakeComm(0x41E798, "'+8'");
MakeDword(0x41E798);
MakeComm(0x41E79C, "'+C'");
MakeDword(0x41E79C);
MakeComm(0x41E7A0, "'+10'");
MakeDword(0x41E7A0);
MakeComm(0x41E7A4, "'+14'");
MakeDword(0x41E7A4);
MakeUnkn(0x41E7B8, 1);
MakeNameEx(0x41E7B8, "RTTI_41E7B8_Class_TBitmapCanvas", 0);
MakeDword(0x41E7B8);
MakeUnkn(0x41E7BC, 1);
MakeNameEx(0x41E7BC, "", 0);
MakeByte(0x41E7BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41E7BD, 0x41E7CB);
MakeDword(0x41E7CB);
MakeDword(0x41E7CF);
MakeWord(0x41E7D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41E7D5, 0x41E7DE);
MakeWord(0x41E7DE);
MakeUnkn(0x41E7E0, 1);
MakeNameEx(0x41E7E0, "FreeMemoryContexts", 0x20);
MakeComm(0x41E7E0, "'procedure FreeMemoryContexts;'");
MakeCode(0x41E7E0);
MakeCode(0x41E810);
MakeCode(0x41E840);
MakeCode(0x41E84D);
MakeCode(0x41E856);
MakeCode(0x41E85B);
MakeCode(0x41E85D);
MakeCode(0x41E866);
MakeCode(0x41E873);
MakeCode(0x41E87E);
MakeCode(0x41E883);
MakeFunction(0x41E7E0, 0x41E889);
MakeUnkn(0x41E88C, 1);
MakeNameEx(0x41E88C, "DeselectBitmap", 0x20);
MakeComm(0x41E88C, "'procedure DeselectBitmap(AHandle:HBITMAP);'");
MakeCode(0x41E88C);
MakeCode(0x41E8BE);
MakeCode(0x41E8DE);
MakeCode(0x41E8E4);
MakeCode(0x41E8F1);
MakeCode(0x41E8FC);
MakeCode(0x41E901);
MakeCode(0x41E903);
MakeFunction(0x41E88C, 0x41E908);
MakeUnkn(0x41E908, 1);
MakeNameEx(0x41E908, "TBitmapCanvas.Create", 0x20);
MakeComm(0x41E908, "'constructor TBitmapCanvas.Create(ABitmap:TBitmap);'");
MakeCode(0x41E908);
MakeCode(0x41E917);
MakeCode(0x41E93E);
MakeFunction(0x41E908, 0x41E944);
MakeUnkn(0x41E944, 1);
MakeNameEx(0x41E944, "TBitmapCanvas.Destroy", 0x20);
MakeComm(0x41E944, "'destructor TBitmapCanvas.Destroy;'");
MakeCode(0x41E944);
MakeCode(0x41E96D);
MakeFunction(0x41E944, 0x41E970);
MakeUnkn(0x41E970, 1);
MakeNameEx(0x41E970, "TBitmapCanvas.FreeContext", 0x20);
MakeComm(0x41E970, "'procedure TBitmapCanvas.FreeContext;'");
MakeCode(0x41E970);
MakeCode(0x41E9B2);
MakeCode(0x41E9CB);
MakeCode(0x41E9EE);
MakeCode(0x41E9FB);
MakeCode(0x41EA04);
MakeCode(0x41EA09);
MakeCode(0x41EA0B);
MakeFunction(0x41E970, 0x41EA0F);
MakeUnkn(0x41EA10, 1);
MakeNameEx(0x41EA10, "TBitmapCanvas.CreateHandle", 0x20);
MakeComm(0x41EA10, "'procedure TBitmapCanvas.CreateHandle;'");
MakeCode(0x41EA10);
MakeCode(0x41EA8B);
MakeCode(0x41EA93);
MakeCode(0x41EABA);
MakeCode(0x41EAC2);
MakeCode(0x41EAD9);
MakeCode(0x41EAE6);
MakeCode(0x41EAEF);
MakeCode(0x41EAF4);
MakeCode(0x41EAF6);
MakeFunction(0x41EA10, 0x41EAFB);
MakeUnkn(0x41EAFC, 1);
MakeNameEx(0x41EAFC, "TSharedImage.Reference", 0x20);
MakeComm(0x41EAFC, "'procedure TSharedImage.Reference;'");
MakeCode(0x41EAFC);
MakeFunction(0x41EAFC, 0x41EB00);
MakeUnkn(0x41EB00, 1);
MakeNameEx(0x41EB00, "TSharedImage.Release", 0x20);
MakeComm(0x41EB00, "'procedure TSharedImage.Release;'");
MakeCode(0x41EB00);
MakeCode(0x41EB1D);
MakeFunction(0x41EB00, 0x41EB1F);
MakeUnkn(0x41EB20, 1);
MakeNameEx(0x41EB20, "TBitmapImage.Destroy", 0x20);
MakeComm(0x41EB20, "'destructor TBitmapImage.Destroy;'");
MakeCode(0x41EB20);
MakeCode(0x41EB45);
MakeCode(0x41EB58);
MakeCode(0x41EB77);
MakeFunction(0x41EB20, 0x41EB7A);
MakeUnkn(0x41EB7C, 1);
MakeNameEx(0x41EB7C, "TBitmapImage.FreeHandle", 0x20);
MakeComm(0x41EB7C, "'procedure TBitmapImage.FreeHandle;'");
MakeCode(0x41EB7C);
MakeCode(0x41EB99);
MakeCode(0x41EBB3);
MakeFunction(0x41EB7C, 0x41EBC7);
MakeUnkn(0x41EBC8, 1);
MakeNameEx(0x41EBC8, "UpdateDIBColorTable", 0x20);
MakeComm(0x41EBC8, "'procedure UpdateDIBColorTable(DIBHandle:HBITMAP; Pal:HPALETTE; const DIB:TDIBSection);'");
MakeCode(0x41EBC8);
MakeCode(0x41EC48);
MakeCode(0x41EC55);
MakeCode(0x41EC77);
MakeCode(0x41EC7C);
MakeCode(0x41EC7E);
MakeFunction(0x41EBC8, 0x41EC84);
MakeUnkn(0x41EC84, 1);
MakeNameEx(0x41EC84, "FixupBitFields", 0x20);
MakeComm(0x41EC84, "'procedure FixupBitFields(var DIB:TDIBSection);'");
MakeCode(0x41EC84);
MakeCode(0x41ECB1);
MakeFunction(0x41EC84, 0x41ECCD);
MakeUnkn(0x41ECD0, 1);
MakeNameEx(0x41ECD0, "CopyBitmap", 0x20);
MakeComm(0x41ECD0, "'function CopyBitmap(Handle:HBITMAP; OldPalette:HPALETTE; NewPalette:HPALETTE; var DIB:TDIBSection; Canvas:TCanvas):HBITMAP;'");
MakeCode(0x41ECD0);
MakeCode(0x41ED0D);
MakeCode(0x41ED30);
MakeCode(0x41ED5F);
MakeCode(0x41EDD0);
MakeCode(0x41EDF4);
MakeCode(0x41EE4F);
MakeCode(0x41EE9D);
MakeCode(0x41EEB9);
MakeCode(0x41EED7);
MakeCode(0x41EF1C);
MakeCode(0x41EF3F);
MakeCode(0x41EF4E);
MakeCode(0x41EF64);
MakeCode(0x41EF8B);
MakeCode(0x41EFB5);
MakeCode(0x41F012);
MakeCode(0x41F02F);
MakeCode(0x41F0DC);
MakeCode(0x41F325);
MakeFunction(0x41ECD0, 0x41F327);
MakeUnkn(0x41F334, 1);
MakeNameEx(0x41F334, "CopyPalette", 0x20);
MakeComm(0x41F334, "'function CopyPalette(Palette:HPALETTE):HPALETTE;'");
MakeUnkn(0x41F5A4, 1);
MakeNameEx(0x41F5A4, "TBitmap.Create", 0x20);
MakeComm(0x41F5A4, "'constructor TBitmap.Create;'");
MakeUnkn(0x41F738, 1);
MakeNameEx(0x41F738, "TBitmap.CopyImage", 0x20);
MakeComm(0x41F738, "'procedure TBitmap.CopyImage(AHandle:HBITMAP; APalette:HPALETTE; DIB:TDIBSection);'");
MakeUnkn(0x41F828, 1);
MakeNameEx(0x41F828, "TBitmap.Dormant", 0x20);
MakeComm(0x41F828, "'procedure TBitmap.Dormant;'");
MakeUnkn(0x41FB6C, 1);
MakeNameEx(0x41FB6C, "TBitmap.GetCanvas", 0x20);
MakeComm(0x41FB6C, "'function TBitmap.GetCanvas:TCanvas;'");
MakeUnkn(0x41FBD8, 1);
MakeNameEx(0x41FBD8, "TBitmap.GetHandleType", 0x20);
MakeComm(0x41FBD8, "'function TBitmap.GetHandleType:TBitmapHandleType;'");
MakeUnkn(0x41FCA8, 1);
MakeNameEx(0x41FCA8, "TBitmap.DIBNeeded", 0x20);
MakeComm(0x41FCA8, "'procedure TBitmap.DIBNeeded;'");
MakeUnkn(0x41FD1C, 1);
MakeNameEx(0x41FD1C, "TBitmap.FreeContext", 0x20);
MakeComm(0x41FD1C, "'procedure TBitmap.FreeContext;'");
MakeUnkn(0x41FD2C, 1);
MakeNameEx(0x41FD2C, "TBitmap.HandleNeeded", 0x20);
MakeComm(0x41FD2C, "'procedure TBitmap.HandleNeeded;'");
MakeUnkn(0x41FE2C, 1);
MakeNameEx(0x41FE2C, "TBitmap.PaletteNeeded", 0x20);
MakeComm(0x41FE2C, "'procedure TBitmap.PaletteNeeded;'");
MakeUnkn(0x41FF8C, 1);
MakeNameEx(0x41FF8C, "TBitmap.NewImage", 0x20);
MakeComm(0x41FF8C, "'procedure TBitmap.NewImage(NewHandle:HBITMAP; NewPalette:HPALETTE; const NewDIB:TDIBSection; OS2Format:Boolean; RLEStream:TStream);'");
MakeUnkn(0x42008C, 1);
MakeNameEx(0x42008C, "TBitmap.ReadData", 0x20);
MakeComm(0x42008C, "'procedure TBitmap.ReadData(Stream:TStream);'");
MakeCode(0x42008C);
MakeFunction(0x42008C, 0x4200B3);
MakeUnkn(0x4200B4, 1);
MakeNameEx(0x4200B4, "TBitmap.ReadDIB", 0x20);
MakeComm(0x4200B4, "'procedure TBitmap.ReadDIB(Stream:TStream; ImageSize:LongWord; bmf:PBitmapFileHeader);'");
MakeCode(0x4200B4);
MakeCode(0x4200FC);
MakeCode(0x420183);
MakeCode(0x4201F5);
MakeCode(0x420250);
MakeCode(0x42026D);
MakeCode(0x420283);
MakeCode(0x4202A0);
MakeCode(0x4202B2);
MakeCode(0x420305);
MakeCode(0x42030E);
MakeCode(0x42031C);
MakeCode(0x420348);
MakeCode(0x420355);
MakeCode(0x4203E3);
MakeCode(0x420420);
MakeCode(0x420425);
MakeCode(0x420432);
MakeCode(0x420447);
MakeCode(0x42045B);
MakeCode(0x420460);
MakeCode(0x420462);
MakeCode(0x42046F);
MakeCode(0x42047E);
MakeCode(0x420487);
MakeCode(0x42048C);
MakeCode(0x42048E);
MakeCode(0x4204B4);
MakeCode(0x4204C4);
MakeCode(0x4204C9);
MakeCode(0x4204E4);
MakeCode(0x4204EE);
MakeCode(0x420506);
MakeCode(0x420513);
MakeCode(0x42051F);
MakeCode(0x420524);
MakeCode(0x420552);
MakeCode(0x42059A);
MakeCode(0x4205A4);
MakeCode(0x4205BB);
MakeCode(0x4205C8);
MakeCode(0x4205D1);
MakeCode(0x4205D6);
MakeFunction(0x4200B4, 0x42061C);
MakeUnkn(0x42061C, 1);
MakeNameEx(0x42061C, "TBitmap.ReadStream", 0x20);
MakeComm(0x42061C, "'procedure TBitmap.ReadStream(Stream:TStream; Size:Longint);'");
MakeCode(0x42061C);
MakeCode(0x420659);
MakeCode(0x420674);
MakeCode(0x420683);
MakeFunction(0x42061C, 0x42068A);
MakeUnkn(0x42068C, 1);
MakeNameEx(0x42068C, "TBitmap.SetHandle", 0x20);
MakeComm(0x42068C, "'procedure TBitmap.SetHandle(Value:HBITMAP);'");
MakeCode(0x42068C);
MakeCode(0x4206CB);
MakeCode(0x4206DE);
MakeCode(0x4206F3);
MakeCode(0x4206FB);
MakeCode(0x42071D);
MakeCode(0x420727);
MakeCode(0x42073E);
MakeCode(0x420747);
MakeFunction(0x42068C, 0x42074E);
MakeUnkn(0x420750, 1);
MakeNameEx(0x420750, "TBitmap.SetHandleType", 0x20);
MakeComm(0x420750, "'procedure TBitmap.SetHandleType(Value:TBitmapHandleType);'");
MakeCode(0x420750);
MakeCode(0x420788);
MakeCode(0x420794);
MakeCode(0x4207A8);
MakeCode(0x4207ED);
MakeCode(0x420800);
MakeCode(0x42080C);
MakeCode(0x420842);
MakeCode(0x42084C);
MakeCode(0x420865);
MakeCode(0x420877);
MakeCode(0x420880);
MakeFunction(0x420750, 0x420888);
MakeUnkn(0x420888, 1);
MakeNameEx(0x420888, "TBitmap.SetHeight", 0x20);
MakeComm(0x420888, "'procedure TBitmap.SetHeight(Value:Integer);'");
MakeCode(0x420888);
MakeCode(0x4208D2);
MakeFunction(0x420888, 0x4208D9);
MakeUnkn(0x4208DC, 1);
MakeNameEx(0x4208DC, "TBitmap.SetMonochrome", 0x20);
MakeComm(0x4208DC, "'procedure TBitmap.SetMonochrome(Value:Boolean);'");
MakeCode(0x4208DC);
MakeCode(0x4208FA);
MakeCode(0x4208FE);
MakeCode(0x420900);
MakeCode(0x420952);
MakeFunction(0x4208DC, 0x420959);
MakeUnkn(0x42095C, 1);
MakeNameEx(0x42095C, "TBitmap.SetPalette", 0x20);
MakeComm(0x42095C, "'procedure TBitmap.SetPalette(Value:HPALETTE);'");
MakeCode(0x42095C);
MakeCode(0x420990);
MakeCode(0x4209E9);
MakeCode(0x4209F3);
MakeCode(0x420A0B);
MakeCode(0x420A28);
MakeFunction(0x42095C, 0x420A2F);
MakeUnkn(0x420A30, 1);
MakeNameEx(0x420A30, "TBitmap.SetWidth", 0x20);
MakeComm(0x420A30, "'procedure TBitmap.SetWidth(Value:Integer);'");
MakeCode(0x420A30);
MakeCode(0x420A7A);
MakeFunction(0x420A30, 0x420A81);
MakeUnkn(0x420A84, 1);
MakeNameEx(0x420A84, "TBitmap.WriteData", 0x20);
MakeComm(0x420A84, "'procedure TBitmap.WriteData(Stream:TStream);'");
MakeCode(0x420A84);
MakeFunction(0x420A84, 0x420A8C);
MakeUnkn(0x420A8C, 1);
MakeNameEx(0x420A8C, "TBitmap.WriteStream", 0x20);
MakeComm(0x420A8C, "'procedure TBitmap.WriteStream(Stream:TStream; WriteSize:Boolean);'");
MakeCode(0x420A8C);
MakeCode(0x420AD8);
MakeCode(0x420AF5);
MakeCode(0x420B48);
MakeCode(0x420BD2);
MakeCode(0x420C15);
MakeCode(0x420C27);
MakeCode(0x420C39);
MakeCode(0x420C5F);
MakeCode(0x420C66);
MakeCode(0x420C79);
MakeCode(0x420CCE);
MakeCode(0x420D09);
MakeCode(0x420D33);
MakeFunction(0x420A8C, 0x420D3E);
MakeUnkn(0x420D44, 1);
MakeNameEx(0x420D44, "TBitmap.SaveToStream", 0x20);
MakeComm(0x420D44, "'procedure TBitmap.SaveToStream(Stream:TStream);'");
MakeCode(0x420D44);
MakeFunction(0x420D44, 0x420D4C);
MakeUnkn(0x420D4C, 1);
MakeNameEx(0x420D4C, "TBitmap.SaveToClipboardFormat", 0x20);
MakeComm(0x420D4C, "'procedure TBitmap.SaveToClipboardFormat(var Format:Word; var Data:THandle; var APalette:HPALETTE);'");
MakeCode(0x420D4C);
MakeCode(0x420DBC);
MakeCode(0x420DC6);
MakeCode(0x420DE0);
MakeFunction(0x420D4C, 0x420DE9);
MakeUnkn(0x420DEC, 1);
MakeNameEx(0x420DEC, "TIconImage.Destroy", 0x20);
MakeComm(0x420DEC, "'destructor TIconImage.Destroy;'");
MakeCode(0x420DEC);
MakeCode(0x420E16);
MakeFunction(0x420DEC, 0x420E19);
MakeUnkn(0x420E1C, 1);
MakeNameEx(0x420E1C, "TIconImage.FreeHandle", 0x20);
MakeComm(0x420E1C, "'procedure TIconImage.FreeHandle;'");
MakeCode(0x420E1C);
MakeCode(0x420E2C);
MakeFunction(0x420E1C, 0x420E33);
MakeUnkn(0x420E34, 1);
MakeNameEx(0x420E34, "TIcon.Create", 0x20);
MakeComm(0x420E34, "'constructor TIcon.Create;'");
MakeCode(0x420E34);
MakeCode(0x420E43);
MakeCode(0x420E81);
MakeFunction(0x420E34, 0x420E87);
MakeUnkn(0x420E88, 1);
MakeNameEx(0x420E88, "TIcon.Destroy", 0x20);
MakeComm(0x420E88, "'destructor TIcon.Destroy;'");
MakeCode(0x420E88);
MakeComm(0x420E93, "'TIcon.FImage:TIconImage'");
MakeCode(0x420EB2);
MakeFunction(0x420E88, 0x420EB5);
MakeUnkn(0x420EB8, 1);
MakeNameEx(0x420EB8, "TIcon.Assign", 0x20);
MakeComm(0x420EB8, "'procedure TIcon.Assign(Source:TPersistent);'");
MakeCode(0x420EB8);
MakeCode(0x420ED4);
MakeCode(0x420EF2);
MakeCode(0x420EFD);
MakeCode(0x420F08);
MakeCode(0x420F11);
MakeFunction(0x420EB8, 0x420F15);
MakeUnkn(0x420F18, 1);
MakeNameEx(0x420F18, "TIcon.Draw", 0x20);
MakeComm(0x420F18, "'procedure TIcon.Draw(ACanvas:TCanvas; const Rect:TRect);'");
MakeCode(0x420F18);
MakeFunction(0x420F18, 0x420F54);
MakeUnkn(0x420F58, 1);
MakeNameEx(0x420F58, "TIcon.GetEmpty", 0x20);
MakeComm(0x420F58, "'function TIcon.GetEmpty:Boolean;'");
MakeCode(0x420F58);
MakeCode(0x420F67);
MakeCode(0x420F6A);
MakeFunction(0x420F58, 0x420F6D);
MakeUnkn(0x420F70, 1);
MakeNameEx(0x420F70, "TIcon.GetHandle", 0x20);
MakeComm(0x420F70, "'function TIcon.GetHandle:HICON;'");
MakeCode(0x420F70);
MakeFunction(0x420F70, 0x420F82);
MakeUnkn(0x420F84, 1);
MakeNameEx(0x420F84, "TIcon.GetHeight", 0x20);
MakeComm(0x420F84, "'function TIcon.GetHeight:Integer;'");
MakeCode(0x420F84);
MakeFunction(0x420F84, 0x420F96);
MakeUnkn(0x420F98, 1);
MakeNameEx(0x420F98, "TIcon.GetWidth", 0x20);
MakeComm(0x420F98, "'function TIcon.GetWidth:Integer;'");
MakeCode(0x420F98);
MakeFunction(0x420F98, 0x420FAA);
MakeUnkn(0x420FAC, 1);
MakeNameEx(0x420FAC, "TIcon.HandleNeeded", 0x20);
MakeComm(0x420FAC, "'procedure TIcon.HandleNeeded;'");
MakeCode(0x420FAC);
MakeCode(0x420FEA);
MakeCode(0x420FF5);
MakeCode(0x421012);
MakeCode(0x421017);
MakeCode(0x42101E);
MakeFunction(0x420FAC, 0x421024);
MakeUnkn(0x421024, 1);
MakeNameEx(0x421024, "TIcon.ImageNeeded", 0x20);
MakeComm(0x421024, "'procedure TIcon.ImageNeeded;'");
MakeCode(0x421024);
MakeCode(0x421047);
MakeCode(0x421094);
MakeCode(0x4210A7);
MakeCode(0x4210B1);
MakeCode(0x4210C8);
MakeCode(0x4210CE);
MakeFunction(0x421024, 0x4210D5);
MakeUnkn(0x4210D8, 1);
MakeNameEx(0x4210D8, "TIcon.LoadFromStream", 0x20);
MakeComm(0x4210D8, "'procedure TIcon.LoadFromStream(Stream:TStream);'");
MakeCode(0x4210D8);
MakeCode(0x421150);
MakeCode(0x42115C);
MakeCode(0x421166);
MakeCode(0x42117D);
MakeFunction(0x4210D8, 0x42118D);
MakeUnkn(0x421190, 1);
MakeNameEx(0x421190, "TIcon.NewImage", 0x20);
MakeComm(0x421190, "'procedure TIcon.NewImage(NewHandle:HICON; NewImage:TMemoryStream);'");
MakeCode(0x421190);
MakeCode(0x4211C6);
MakeCode(0x4211D0);
MakeCode(0x4211E7);
MakeFunction(0x421190, 0x421203);
MakeUnkn(0x421204, 1);
MakeNameEx(0x421204, "TIcon.SetHandle", 0x20);
MakeComm(0x421204, "'procedure TIcon.SetHandle(Value:HICON);'");
MakeCode(0x421204);
MakeFunction(0x421204, 0x42121B);
MakeUnkn(0x42121C, 1);
MakeNameEx(0x42121C, "TIcon.SetHeight", 0x20);
MakeComm(0x42121C, "'procedure TIcon.SetHeight(Value:Integer);'");
MakeCode(0x42121C);
MakeCode(0x421229);
MakeFunction(0x42121C, 0x421234);
MakeUnkn(0x421234, 1);
MakeNameEx(0x421234, "TIcon.SetTransparent", 0x20);
MakeComm(0x421234, "'procedure TIcon.SetTransparent(Value:Boolean);'");
MakeCode(0x421234);
MakeFunction(0x421234, 0x421235);
MakeUnkn(0x421238, 1);
MakeNameEx(0x421238, "TIcon.SetWidth", 0x20);
MakeComm(0x421238, "'procedure TIcon.SetWidth(Value:Integer);'");
MakeCode(0x421238);
MakeCode(0x421245);
MakeFunction(0x421238, 0x421250);
MakeUnkn(0x421250, 1);
MakeNameEx(0x421250, "TIcon.SaveToStream", 0x20);
MakeComm(0x421250, "'procedure TIcon.SaveToStream(Stream:TStream);'");
MakeCode(0x421250);
MakeFunction(0x421250, 0x421278);
MakeUnkn(0x421278, 1);
MakeNameEx(0x421278, "TIcon.LoadFromClipboardFormat", 0x20);
MakeComm(0x421278, "'procedure TIcon.LoadFromClipboardFormat(AFormat:Word; AData:THandle; APalette:HPALETTE);'");
MakeCode(0x421278);
MakeFunction(0x421278, 0x421289);
MakeUnkn(0x42128C, 1);
MakeNameEx(0x42128C, "TIcon.SaveToClipboardFormat", 0x20);
MakeComm(0x42128C, "'procedure TIcon.SaveToClipboardFormat(var Format:Word; var Data:THandle; var APalette:HPALETTE);'");
MakeCode(0x42128C);
MakeFunction(0x42128C, 0x42129D);
MakeUnkn(0x4212A0, 1);
MakeNameEx(0x4212A0, "InitScreenLogPixels", 0x20);
MakeComm(0x4212A0, "'procedure InitScreenLogPixels;'");
MakeCode(0x4212A0);
MakeFunction(0x4212A0, 0x4212D5);
MakeUnkn(0x4212D8, 1);
MakeNameEx(0x4212D8, "GetDefFontCharSet", 0x20);
MakeComm(0x4212D8, "'function GetDefFontCharSet:TFontCharset;'");
MakeCode(0x4212D8);
MakeCode(0x42130B);
MakeCode(0x421313);
MakeFunction(0x4212D8, 0x42131B);
MakeUnkn(0x42131C, 1);
MakeNameEx(0x42131C, "InitDefFontData", 0x20);
MakeComm(0x42131C, "'procedure InitDefFontData;'");
MakeCode(0x42131C);
MakeCode(0x421377);
MakeFunction(0x42131C, 0x42137B);
MakeUnkn(0x42138C, 1);
MakeNameEx(0x42138C, "VMT_42138C_TPatternManager", 0);
MakeDword(0x42138C);
MakeDword(0x421390);
MakeDword(0x421394);
MakeDword(0x421398);
MakeDword(0x42139C);
MakeDword(0x4213A0);
MakeDword(0x4213A4);
MakeDword(0x4213A8);
MakeDword(0x4213AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4213D8, 0x4213E8);
MakeDword(0x4213B0);
MakeDword(0x4213B4);
MakeDword(0x4213B8);
MakeDword(0x4213BC);
MakeDword(0x4213C0);
MakeDword(0x4213C4);
MakeDword(0x4213C8);
MakeDword(0x4213CC);
MakeDword(0x4213D0);
MakeDword(0x4213D4);
MakeUnkn(0x4213E8, 1);
MakeNameEx(0x4213E8, "TPatternManager.Create", 0x20);
MakeComm(0x4213E8, "'constructor TPatternManager.Create;'");
MakeCode(0x4213E8);
MakeCode(0x4213F6);
MakeCode(0x421418);
MakeFunction(0x4213E8, 0x42141D);
MakeUnkn(0x421420, 1);
MakeNameEx(0x421420, "TPatternManager.Destroy", 0x20);
MakeComm(0x421420, "'destructor TPatternManager.Destroy;'");
MakeCode(0x421420);
MakeCode(0x421446);
MakeFunction(0x421420, 0x421449);
MakeUnkn(0x42144C, 1);
MakeNameEx(0x42144C, "TPatternManager.Lock", 0x20);
MakeComm(0x42144C, "'procedure TPatternManager.Lock;'");
MakeCode(0x42144C);
MakeFunction(0x42144C, 0x421456);
MakeUnkn(0x421458, 1);
MakeNameEx(0x421458, "TPatternManager.Unlock", 0x20);
MakeComm(0x421458, "'procedure TPatternManager.Unlock;'");
MakeCode(0x421458);
MakeFunction(0x421458, 0x421462);
MakeUnkn(0x421464, 1);
MakeNameEx(0x421464, "TPatternManager.AllocPattern", 0x20);
MakeComm(0x421464, "'function TPatternManager.AllocPattern(BkColor:TColorRef; FgColor:TColorRef):PPattern;'");
MakeCode(0x421464);
MakeCode(0x421495);
MakeCode(0x42149D);
MakeCode(0x4214B3);
MakeCode(0x4214EF);
MakeCode(0x4214FC);
MakeCode(0x421505);
MakeCode(0x42150A);
MakeFunction(0x421464, 0x421516);
MakeUnkn(0x421518, 1);
MakeNameEx(0x421518, "TPatternManager.CreateBitmap", 0x20);
MakeComm(0x421518, "'function TPatternManager.CreateBitmap(BkColor:TColor; FgColor:TColor):TBitmap;'");
MakeCode(0x421518);
MakeCode(0x4215A7);
MakeCode(0x4215A9);
MakeCode(0x4215B7);
MakeCode(0x4215C6);
MakeCode(0x4215D9);
MakeCode(0x4215ED);
MakeCode(0x4215F7);
MakeCode(0x42160E);
MakeFunction(0x421518, 0x421618);
MakeUnkn(0x421618, 1);
MakeNameEx(0x421618, "TPatternManager.FreePatterns", 0x20);
MakeComm(0x421618, "'procedure TPatternManager.FreePatterns;'");
MakeCode(0x421618);
MakeCode(0x421623);
MakeCode(0x42164D);
MakeCode(0x42165A);
MakeCode(0x421663);
MakeCode(0x421668);
MakeCode(0x421679);
MakeCode(0x421681);
MakeFunction(0x421618, 0x42168F);
MakeUnkn(0x421690, 1);
MakeNameEx(0x421690, "AllocPatternBitmap", 0x20);
MakeComm(0x421690, "'function AllocPatternBitmap(BkColor:TColor; FgColor:TColor):TBitmap;'");
MakeCode(0x421690);
MakeCode(0x4216C1);
MakeFunction(0x421690, 0x4216C6);
MakeUnkn(0x4216C8, 1);
MakeNameEx(0x4216C8, "Finalization_2", 0x20);
MakeComm(0x4216C8, "'procedure Finalization;'");
MakeCode(0x4216C8);
MakeCode(0x421783);
MakeCode(0x421790);
MakeCode(0x421791);
MakeCode(0x421796);
MakeFunction(0x4216C8, 0x42179A);
MakeUnkn(0x42179C, 1);
MakeNameEx(0x42179C, "Graphics", 0x20);
MakeComm(0x42179C, "'procedure Graphics;'");
MakeCode(0x42179C);
MakeFunction(0x42179C, 0x421897);
MakeUnkn(0x4218A0, 1);
MakeNameEx(0x4218A0, "Max", 0x20);
MakeComm(0x4218A0, "'function Max(const A:Integer; const B:Integer):Integer;'");
MakeCode(0x4218A0);
MakeFunction(0x4218A0, 0x4218A7);
MakeCode(0x4218A8);
MakeCode(0x4218BF);
MakeCode(0x4218CC);
MakeCode(0x4218CD);
MakeCode(0x4218D2);
MakeFunction(0x4218A8, 0x4218D6);
MakeCode(0x4218D8);
MakeFunction(0x4218D8, 0x4218E0);
MakeUnkn(0x4218E0, 1);
MakeNameEx(0x4218E0, "VMT_4218E0_TObjectList", 0);
MakeDword(0x4218E0);
MakeDword(0x4218E4);
MakeDword(0x4218E8);
MakeDword(0x4218EC);
MakeDword(0x4218F0);
MakeDword(0x4218F4);
MakeDword(0x4218F8);
MakeDword(0x4218FC);
MakeDword(0x421900);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42193C, 0x421948);
MakeDword(0x421904);
MakeDword(0x421908);
MakeDword(0x42190C);
MakeDword(0x421910);
MakeDword(0x421914);
MakeDword(0x421918);
MakeDword(0x42191C);
MakeDword(0x421920);
MakeDword(0x421924);
MakeDword(0x421928);
MakeComm(0x42192C, "'+0'");
MakeDword(0x42192C);
MakeComm(0x421930, "'+4'");
MakeDword(0x421930);
MakeComm(0x421934, "'+8'");
MakeDword(0x421934);
MakeComm(0x421938, "'+C'");
MakeDword(0x421938);
MakeUnkn(0x421948, 1);
MakeNameEx(0x421948, "VMT_421948_TOrderedList", 0);
MakeDword(0x421948);
MakeDword(0x42194C);
MakeDword(0x421950);
MakeDword(0x421954);
MakeDword(0x421958);
MakeDword(0x42195C);
MakeDword(0x421960);
MakeDword(0x421964);
MakeDword(0x421968);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4219A0, 0x4219AD);
MakeDword(0x42196C);
MakeDword(0x421970);
MakeDword(0x421974);
MakeDword(0x421978);
MakeDword(0x42197C);
MakeDword(0x421980);
MakeDword(0x421984);
MakeDword(0x421988);
MakeDword(0x42198C);
MakeDword(0x421990);
MakeComm(0x421994, "'+0'");
MakeDword(0x421994);
MakeComm(0x421998, "'+4'");
MakeDword(0x421998);
MakeComm(0x42199C, "'+8'");
MakeDword(0x42199C);
MakeUnkn(0x4219B0, 1);
MakeNameEx(0x4219B0, "VMT_4219B0_TStack", 0);
MakeDword(0x4219B0);
MakeDword(0x4219B4);
MakeDword(0x4219B8);
MakeDword(0x4219BC);
MakeDword(0x4219C0);
MakeDword(0x4219C4);
MakeDword(0x4219C8);
MakeDword(0x4219CC);
MakeDword(0x4219D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x421A08, 0x421A0F);
MakeDword(0x4219D4);
MakeDword(0x4219D8);
MakeDword(0x4219DC);
MakeDword(0x4219E0);
MakeDword(0x4219E4);
MakeDword(0x4219E8);
MakeDword(0x4219EC);
MakeDword(0x4219F0);
MakeDword(0x4219F4);
MakeDword(0x4219F8);
MakeComm(0x4219FC, "'+0'");
MakeDword(0x4219FC);
MakeComm(0x421A00, "'+4'");
MakeDword(0x421A00);
MakeComm(0x421A04, "'+8'");
MakeDword(0x421A04);
MakeUnkn(0x421A10, 1);
MakeNameEx(0x421A10, "TObjectList.Create", 0x20);
MakeComm(0x421A10, "'constructor TObjectList.Create;'");
MakeCode(0x421A10);
MakeCode(0x421A1E);
MakeCode(0x421A44);
MakeFunction(0x421A10, 0x421A49);
MakeUnkn(0x421A4C, 1);
MakeNameEx(0x421A4C, "TClassList.GetItems", 0x20);
MakeComm(0x421A4C, "'function TClassList.GetItems(Index:Integer):TClass;'");
MakeCode(0x421A4C);
MakeFunction(0x421A4C, 0x421A5E);
MakeUnkn(0x421A60, 1);
MakeNameEx(0x421A60, "TObjectList.Insert", 0x20);
MakeComm(0x421A60, "'procedure TObjectList.Insert(Index:Integer; AObject:TObject);'");
MakeCode(0x421A60);
MakeFunction(0x421A60, 0x421A66);
MakeUnkn(0x421A68, 1);
MakeNameEx(0x421A68, "TObjectList.Notify", 0x20);
MakeComm(0x421A68, "'procedure TObjectList.Notify(Ptr:Pointer; Action:TListNotification);'");
MakeCode(0x421A68);
MakeCode(0x421A83);
MakeFunction(0x421A68, 0x421A92);
MakeUnkn(0x421A9C, 1);
MakeNameEx(0x421A9C, "TOrderedList.Push", 0x20);
MakeComm(0x421A9C, "'function TOrderedList.Push(AItem:Pointer):Pointer;'");
MakeCode(0x421A9C);
MakeFunction(0x421A9C, 0x421AA9);
MakeUnkn(0x421AAC, 1);
MakeNameEx(0x421AAC, "TOrderedList.Create", 0x20);
MakeComm(0x421AAC, "'constructor TOrderedList.Create;'");
MakeCode(0x421AAC);
MakeCode(0x421ABA);
MakeCode(0x421AEB);
MakeFunction(0x421AAC, 0x421AF0);
MakeUnkn(0x421AF0, 1);
MakeNameEx(0x421AF0, "TOrderedList.Destroy", 0x20);
MakeComm(0x421AF0, "'destructor TOrderedList.Destroy;'");
MakeCode(0x421AF0);
MakeCode(0x421B1A);
MakeFunction(0x421AF0, 0x421B1D);
MakeUnkn(0x421B20, 1);
MakeNameEx(0x421B20, "TOrderedList.PeekItem", 0x20);
MakeComm(0x421B20, "'function TOrderedList.PeekItem:Pointer;'");
MakeCode(0x421B20);
MakeFunction(0x421B20, 0x421B31);
MakeUnkn(0x421B34, 1);
MakeNameEx(0x421B34, "TOrderedList.PopItem", 0x20);
MakeComm(0x421B34, "'function TOrderedList.PopItem:Pointer;'");
MakeCode(0x421B34);
MakeFunction(0x421B34, 0x421B52);
MakeUnkn(0x421B54, 1);
MakeNameEx(0x421B54, "TStack.PushItem", 0x20);
MakeComm(0x421B54, "'procedure TStack.PushItem(AItem:Pointer);'");
MakeCode(0x421B54);
MakeFunction(0x421B54, 0x421B5D);
MakeCode(0x421B60);
MakeCode(0x421B77);
MakeCode(0x421B84);
MakeCode(0x421B85);
MakeCode(0x421B8A);
MakeFunction(0x421B60, 0x421B8E);
MakeCode(0x421B90);
MakeFunction(0x421B90, 0x421B98);
MakeUnkn(0x421B98, 1);
MakeNameEx(0x421B98, "comctl32.", 0x20);
MakeComm(0x421B98, "'function comctl32.'+#5+:?;'");
MakeCode(0x421B98);
MakeFunction(0x421B98, 0x421B9E);
MakeUnkn(0x421BA0, 1);
MakeNameEx(0x421BA0, "comctl32._0", 0x20);
MakeComm(0x421BA0, "'comctl32.'+#5+;'");
MakeCode(0x421BA0);
MakeFunction(0x421BA0, 0x421BA6);
MakeUnkn(0x421BA8, 1);
MakeNameEx(0x421BA8, "comctl32._1", 0x20);
MakeComm(0x421BA8, "'function comctl32.'+#5+:?;'");
MakeCode(0x421BA8);
MakeFunction(0x421BA8, 0x421BAE);
MakeUnkn(0x421BB0, 1);
MakeNameEx(0x421BB0, "comctl32._2", 0x20);
MakeComm(0x421BB0, "'function comctl32.'+#5+:?;'");
MakeCode(0x421BB0);
MakeFunction(0x421BB0, 0x421BB6);
MakeUnkn(0x421BB8, 1);
MakeNameEx(0x421BB8, "comctl32._3", 0x20);
MakeComm(0x421BB8, "'comctl32.'+#5+;'");
MakeCode(0x421BB8);
MakeFunction(0x421BB8, 0x421BBE);
MakeUnkn(0x421BC0, 1);
MakeNameEx(0x421BC0, "comctl32._4", 0x20);
MakeComm(0x421BC0, "'comctl32.'+#5+;'");
MakeCode(0x421BC0);
MakeFunction(0x421BC0, 0x421BC6);
MakeUnkn(0x421BC8, 1);
MakeNameEx(0x421BC8, "comctl32._5", 0x20);
MakeComm(0x421BC8, "'comctl32.'+#5+;'");
MakeCode(0x421BC8);
MakeFunction(0x421BC8, 0x421BCE);
MakeUnkn(0x421BD0, 1);
MakeNameEx(0x421BD0, "ImageList_AddIcon", 0x20);
MakeComm(0x421BD0, "'function ImageList_AddIcon(ImageList:THandle; Icon:HICON):Integer;'");
MakeCode(0x421BD0);
MakeFunction(0x421BD0, 0x421BDA);
MakeUnkn(0x421BDC, 1);
MakeNameEx(0x421BDC, "comctl32._6", 0x20);
MakeComm(0x421BDC, "'comctl32.'+#5+;'");
MakeCode(0x421BDC);
MakeFunction(0x421BDC, 0x421BE2);
MakeUnkn(0x421BE4, 1);
MakeNameEx(0x421BE4, "comctl32._7", 0x20);
MakeComm(0x421BE4, "'comctl32.'+#5+;'");
MakeCode(0x421BE4);
MakeFunction(0x421BE4, 0x421BEA);
MakeUnkn(0x421BEC, 1);
MakeNameEx(0x421BEC, "comctl32._8", 0x20);
MakeComm(0x421BEC, "'comctl32.'+#5+;'");
MakeCode(0x421BEC);
MakeFunction(0x421BEC, 0x421BF2);
MakeUnkn(0x421BF4, 1);
MakeNameEx(0x421BF4, "comctl32._9", 0x20);
MakeComm(0x421BF4, "'comctl32.'+#5+;'");
MakeCode(0x421BF4);
MakeFunction(0x421BF4, 0x421BFA);
MakeUnkn(0x421BFC, 1);
MakeNameEx(0x421BFC, "comctl32._10", 0x20);
MakeComm(0x421BFC, "'comctl32.'+#5+;'");
MakeCode(0x421BFC);
MakeFunction(0x421BFC, 0x421C02);
MakeUnkn(0x421C04, 1);
MakeNameEx(0x421C04, "comctl32._11", 0x20);
MakeComm(0x421C04, "'comctl32.'+#5+;'");
MakeCode(0x421C04);
MakeFunction(0x421C04, 0x421C0A);
MakeUnkn(0x421C0C, 1);
MakeNameEx(0x421C0C, "comctl32._12", 0x20);
MakeComm(0x421C0C, "'comctl32.'+#5+;'");
MakeCode(0x421C0C);
MakeFunction(0x421C0C, 0x421C12);
MakeUnkn(0x421C14, 1);
MakeNameEx(0x421C14, "comctl32._13", 0x20);
MakeComm(0x421C14, "'function comctl32.'+#5+:?;'");
MakeCode(0x421C14);
MakeFunction(0x421C14, 0x421C1A);
MakeUnkn(0x421C1C, 1);
MakeNameEx(0x421C1C, "comctl32._14", 0x20);
MakeComm(0x421C1C, "'comctl32.'+#5+;'");
MakeCode(0x421C1C);
MakeFunction(0x421C1C, 0x421C22);
MakeUnkn(0x421C24, 1);
MakeNameEx(0x421C24, "comctl32._15", 0x20);
MakeComm(0x421C24, "'comctl32.'+#5+;'");
MakeCode(0x421C24);
MakeFunction(0x421C24, 0x421C2A);
MakeUnkn(0x421C2C, 1);
MakeNameEx(0x421C2C, "comctl32._16", 0x20);
MakeComm(0x421C2C, "'comctl32.'+#5+;'");
MakeCode(0x421C2C);
MakeFunction(0x421C2C, 0x421C32);
MakeUnkn(0x421C34, 1);
MakeNameEx(0x421C34, "comctl32._17", 0x20);
MakeComm(0x421C34, "'function comctl32.'+#5+:?;'");
MakeCode(0x421C34);
MakeFunction(0x421C34, 0x421C3A);
MakeUnkn(0x421C3C, 1);
MakeNameEx(0x421C3C, "comctl32._18", 0x20);
MakeComm(0x421C3C, "'function comctl32.'+#5+:?;'");
MakeCode(0x421C3C);
MakeFunction(0x421C3C, 0x421C42);
MakeUnkn(0x421C44, 1);
MakeNameEx(0x421C44, "comctl32._19", 0x20);
MakeComm(0x421C44, "'comctl32.'+#5+;'");
MakeCode(0x421C44);
MakeFunction(0x421C44, 0x421C4A);
MakeUnkn(0x421C4C, 1);
MakeNameEx(0x421C4C, "comctl32._20", 0x20);
MakeComm(0x421C4C, "'comctl32.'+#5+;'");
MakeCode(0x421C4C);
MakeFunction(0x421C4C, 0x421C52);
MakeCode(0x421C54);
MakeCode(0x421C6B);
MakeCode(0x421C78);
MakeCode(0x421C79);
MakeCode(0x421C7E);
MakeFunction(0x421C54, 0x421C82);
MakeCode(0x421C84);
MakeFunction(0x421C84, 0x421C8C);
MakeUnkn(0x421C8C, 1);
MakeNameEx(0x421C8C, "InitAnApi", 0x20);
MakeComm(0x421C8C, "'function InitAnApi(mmAPI:TMultiMonApi; ApiStub:Pointer; ApiName:AnsiString):Pointer;'");
MakeCode(0x421C8C);
MakeCode(0x421CFD);
MakeCode(0x421D15);
MakeCode(0x421D17);
MakeCode(0x421D1F);
MakeCode(0x421D2A);
MakeCode(0x421D35);
MakeCode(0x421D42);
MakeCode(0x421D4B);
MakeCode(0x421D50);
MakeFunction(0x421C8C, 0x421D74);
MakeUnkn(0x421D74, 1);
MakeNameEx(0x421D74, "_GetSystemMetrics", 0x20);
MakeComm(0x421D74, "'function _GetSystemMetrics(nIndex:Integer):Integer; stdcall;'");
MakeCode(0x421D74);
MakeCode(0x421DA4);
MakeCode(0x421DC3);
MakeCode(0x421DC7);
MakeCode(0x421DCB);
MakeCode(0x421DD0);
MakeCode(0x421DDB);
MakeFunction(0x421D74, 0x421DFC);
MakeUnkn(0x421DFC, 1);
MakeNameEx(0x421DFC, "xMonitorFromRect", 0x20);
MakeComm(0x421DFC, "'function xMonitorFromRect(lprcScreenCoords:PRect; dwFlags:DWORD):HMONITOR; stdcall;'");
MakeCode(0x421DFC);
MakeCode(0x421E34);
MakeCode(0x421E64);
MakeCode(0x421E69);
MakeFunction(0x421DFC, 0x421E8C);
MakeUnkn(0x421E8C, 1);
MakeNameEx(0x421E8C, "xMonitorFromWindow", 0x20);
MakeComm(0x421E8C, "'function xMonitorFromWindow(hWnd:HWND; dwFlags:DWORD):HMONITOR; stdcall;'");
MakeCode(0x421E8C);
MakeCode(0x421EC4);
MakeCode(0x421ED4);
MakeCode(0x421EEA);
MakeCode(0x421EF4);
MakeCode(0x421EFE);
MakeFunction(0x421E8C, 0x421F24);
MakeUnkn(0x421F24, 1);
MakeNameEx(0x421F24, "xMonitorFromPoint", 0x20);
MakeComm(0x421F24, "'function xMonitorFromPoint(ptScreenCoords:TPoint; dwFlags:DWORD):HMONITOR; stdcall;'");
MakeCode(0x421F24);
MakeCode(0x421F5E);
MakeCode(0x421F8F);
MakeCode(0x421F94);
MakeFunction(0x421F24, 0x421FBC);
MakeUnkn(0x421FBC, 1);
MakeNameEx(0x421FBC, "xGetMonitorInfo", 0x20);
MakeComm(0x421FBC, "'function xGetMonitorInfo(hMonitor:HMONITOR; lpMonitorInfo:PMonitorInfoA):Boolean; stdcall;'");
MakeCode(0x421FBC);
MakeCode(0x421FF7);
MakeCode(0x422063);
MakeCode(0x422065);
MakeFunction(0x421FBC, 0x422090);
MakeUnkn(0x422090, 1);
MakeNameEx(0x422090, "xGetMonitorInfoA", 0x20);
MakeComm(0x422090, "'function xGetMonitorInfoA(hMonitor:HMONITOR; lpMonitorInfo:PMonitorInfoA):Boolean; stdcall;'");
MakeCode(0x422090);
MakeCode(0x4220CB);
MakeCode(0x422137);
MakeCode(0x422139);
MakeFunction(0x422090, 0x422164);
MakeUnkn(0x422164, 1);
MakeNameEx(0x422164, "xGetMonitorInfoW", 0x20);
MakeComm(0x422164, "'function xGetMonitorInfoW(hMonitor:HMONITOR; lpMonitorInfo:PMonitorInfoW):Boolean; stdcall;'");
MakeCode(0x422164);
MakeCode(0x42219F);
MakeCode(0x42220B);
MakeCode(0x42220D);
MakeFunction(0x422164, 0x422238);
MakeUnkn(0x422238, 1);
MakeNameEx(0x422238, "xEnumDisplayMonitors", 0x20);
MakeComm(0x422238, "'function xEnumDisplayMonitors(hdcOptionalForPainting:HDC; lprcEnumMonitorsThatIntersect:PRect; lpfnEnumProc:TMonitorEnumProc; dwData:LPARAM):Boolean; stdcall;'");
MakeCode(0x422238);
MakeCode(0x42227E);
MakeCode(0x4222F7);
MakeCode(0x422313);
MakeCode(0x42232D);
MakeCode(0x422340);
MakeFunction(0x422238, 0x422368);
MakeUnkn(0x422368, 1);
MakeNameEx(0x422368, "InitMultiMonStubs", 0x20);
MakeComm(0x422368, "'procedure InitMultiMonStubs;'");
MakeCode(0x422368);
MakeFunction(0x422368, 0x4223D4);
MakeCode(0x4223D4);
MakeCode(0x4223EB);
MakeCode(0x4223F8);
MakeCode(0x4223F9);
MakeCode(0x4223FE);
MakeFunction(0x4223D4, 0x422402);
MakeCode(0x422404);
MakeFunction(0x422404, 0x422413);
MakeCode(0x422414);
MakeCode(0x42242B);
MakeCode(0x422438);
MakeCode(0x422439);
MakeCode(0x42243E);
MakeFunction(0x422414, 0x422442);
MakeCode(0x422444);
MakeFunction(0x422444, 0x42244C);
MakeUnkn(0x42244C, 1);
MakeNameEx(0x42244C, "RTTI_42244C_Interface_IHelpSelector", 0);
MakeDword(0x42244C);
MakeUnkn(0x422450, 1);
MakeNameEx(0x422450, "", 0);
MakeByte(0x422450);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x422451, 0x42245F);
MakeDword(0x42245F);
MakeByte(0x422463);
MakeByte(0x422464);
MakeArray(0x422464, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x422474, 0x42247E);
MakeWord(0x42247E);
MakeWord(0x422480);
MakeUnkn(0x422484, 1);
MakeNameEx(0x422484, "RTTI_422484_Interface_IHelpSystem", 0);
MakeDword(0x422484);
MakeUnkn(0x422488, 1);
MakeNameEx(0x422488, "", 0);
MakeByte(0x422488);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x422489, 0x422495);
MakeDword(0x422495);
MakeByte(0x422499);
MakeByte(0x42249A);
MakeArray(0x42249A, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4224AA, 0x4224B4);
MakeWord(0x4224B4);
MakeWord(0x4224B6);
MakeUnkn(0x4224B8, 1);
MakeNameEx(0x4224B8, "RTTI_4224B8_Interface_ICustomHelpViewer", 0);
MakeDword(0x4224B8);
MakeUnkn(0x4224BC, 1);
MakeNameEx(0x4224BC, "", 0);
MakeByte(0x4224BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4224BD, 0x4224CF);
MakeDword(0x4224CF);
MakeByte(0x4224D3);
MakeByte(0x4224D4);
MakeArray(0x4224D4, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4224E4, 0x4224EE);
MakeWord(0x4224EE);
MakeWord(0x4224F0);
MakeUnkn(0x4224F4, 1);
MakeNameEx(0x4224F4, "RTTI_4224F4_Interface_IExtendedHelpViewer", 0);
MakeDword(0x4224F4);
MakeUnkn(0x4224F8, 1);
MakeNameEx(0x4224F8, "", 0);
MakeByte(0x4224F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4224F9, 0x42250D);
MakeDword(0x42250D);
MakeByte(0x422511);
MakeByte(0x422512);
MakeArray(0x422512, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x422522, 0x42252C);
MakeWord(0x42252C);
MakeWord(0x42252E);
MakeUnkn(0x422530, 1);
MakeNameEx(0x422530, "RTTI_422530_Interface_ISpecialWinHelpViewer", 0);
MakeDword(0x422530);
MakeUnkn(0x422534, 1);
MakeNameEx(0x422534, "", 0);
MakeByte(0x422534);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x422535, 0x42254B);
MakeDword(0x42254B);
MakeByte(0x42254F);
MakeByte(0x422550);
MakeArray(0x422550, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x422560, 0x42256A);
MakeWord(0x42256A);
MakeWord(0x42256C);
MakeUnkn(0x422570, 1);
MakeNameEx(0x422570, "RTTI_422570_Interface_IHelpManager", 0);
MakeDword(0x422570);
MakeUnkn(0x422574, 1);
MakeNameEx(0x422574, "", 0);
MakeByte(0x422574);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x422575, 0x422582);
MakeDword(0x422582);
MakeByte(0x422586);
MakeByte(0x422587);
MakeArray(0x422587, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x422597, 0x4225A1);
MakeWord(0x4225A1);
MakeWord(0x4225A3);
MakeUnkn(0x4225A8, 1);
MakeNameEx(0x4225A8, "VMT_4225A8_EHelpSystemException", 0);
MakeDword(0x4225A8);
MakeDword(0x4225AC);
MakeDword(0x4225B0);
MakeDword(0x4225B4);
MakeDword(0x4225B8);
MakeDword(0x4225BC);
MakeDword(0x4225C0);
MakeDword(0x4225C4);
MakeDword(0x4225C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4225F4, 0x422609);
MakeDword(0x4225CC);
MakeDword(0x4225D0);
MakeDword(0x4225D4);
MakeDword(0x4225D8);
MakeDword(0x4225DC);
MakeDword(0x4225E0);
MakeDword(0x4225E4);
MakeDword(0x4225E8);
MakeDword(0x4225EC);
MakeDword(0x4225F0);
MakeUnkn(0x42260C, 1);
MakeNameEx(0x42260C, "VMT_42260C_THelpViewerNode", 0);
MakeDword(0x42260C);
MakeDword(0x422610);
MakeDword(0x422614);
MakeDword(0x422618);
MakeUnkn(0x422658, 1);
MakeNameEx(0x422658, "THelpViewerNode_InitTable", 0);
MakeByte(0x422658);
MakeByte(0x422659);
MakeDword(0x42265A);
MakeDword(0x42265E);
MakeDword(0x422662);
MakeDword(0x422666);
MakeDword(0x42261C);
MakeDword(0x422620);
MakeDword(0x422624);
MakeDword(0x422628);
MakeDword(0x42262C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42266A, 0x42267A);
MakeDword(0x422630);
MakeDword(0x422634);
MakeDword(0x422638);
MakeDword(0x42263C);
MakeDword(0x422640);
MakeDword(0x422644);
MakeDword(0x422648);
MakeDword(0x42264C);
MakeDword(0x422650);
MakeDword(0x422654);
MakeUnkn(0x42277C, 1);
MakeNameEx(0x42277C, "VMT_42277C_THelpManager", 0);
MakeDword(0x42277C);
MakeDword(0x422780);
MakeUnkn(0x42273F, 1);
MakeNameEx(0x42273F, "THelpManager_IntfTable", 0);
MakeDword(0x42273F);
MakeByte(0x422743);
MakeArray(0x422743, 16);
MakeDword(0x422753);
MakeDword(0x422703);
MakeFunction(0x422695, -1);
MakeCode(0x422695);
MakeDword(0x422707);
MakeFunction(0x42269F, -1);
MakeCode(0x42269F);
MakeDword(0x42270B);
MakeFunction(0x4226A9, -1);
MakeCode(0x4226A9);
MakeDword(0x42270F);
MakeFunction(0x42267D, -1);
MakeCode(0x42267D);
MakeDword(0x422713);
MakeFunction(0x422685, -1);
MakeCode(0x422685);
MakeDword(0x422717);
MakeFunction(0x42268D, -1);
MakeCode(0x42268D);
MakeDword(0x42271B);
MakeFunction(0x4226E3, -1);
MakeCode(0x4226E3);
MakeDword(0x42271F);
MakeFunction(0x4226ED, -1);
MakeCode(0x4226ED);
MakeDword(0x422723);
MakeFunction(0x4226F7, -1);
MakeCode(0x4226F7);
MakeDword(0x422727);
MakeFunction(0x4226B3, -1);
MakeCode(0x4226B3);
MakeDword(0x42272B);
MakeFunction(0x4226BB, -1);
MakeCode(0x4226BB);
MakeDword(0x42272F);
MakeFunction(0x4226C3, -1);
MakeCode(0x4226C3);
MakeDword(0x422733);
MakeFunction(0x4226CB, -1);
MakeCode(0x4226CB);
MakeDword(0x422737);
MakeFunction(0x4226D3, -1);
MakeCode(0x4226D3);
MakeDword(0x42273B);
MakeFunction(0x4226DB, -1);
MakeCode(0x4226DB);
MakeByte(0x42267C);
MakeDword(0x422757);
MakeDword(0x42275B);
MakeByte(0x42275F);
MakeArray(0x42275F, 16);
MakeDword(0x42276F);
MakeDword(0x42271B);
MakeFunction(0x4226E3, -1);
MakeCode(0x4226E3);
MakeDword(0x42271F);
MakeFunction(0x4226ED, -1);
MakeCode(0x4226ED);
MakeDword(0x422723);
MakeFunction(0x4226F7, -1);
MakeCode(0x4226F7);
MakeDword(0x422727);
MakeFunction(0x4226B3, -1);
MakeCode(0x4226B3);
MakeDword(0x42272B);
MakeFunction(0x4226BB, -1);
MakeCode(0x4226BB);
MakeDword(0x42272F);
MakeFunction(0x4226C3, -1);
MakeCode(0x4226C3);
MakeDword(0x422733);
MakeFunction(0x4226CB, -1);
MakeCode(0x4226CB);
MakeDword(0x422737);
MakeFunction(0x4226D3, -1);
MakeCode(0x4226D3);
MakeDword(0x42273B);
MakeFunction(0x4226DB, -1);
MakeCode(0x4226DB);
MakeByte(0x4226B2);
MakeDword(0x422773);
MakeDword(0x422777);
MakeDword(0x422784);
MakeDword(0x422788);
MakeUnkn(0x4227C8, 1);
MakeNameEx(0x4227C8, "THelpManager_InitTable", 0);
MakeByte(0x4227C8);
MakeByte(0x4227C9);
MakeDword(0x4227CA);
MakeDword(0x4227CE);
MakeDword(0x4227D2);
MakeDword(0x4227D6);
MakeDword(0x4227DA);
MakeDword(0x4227DE);
MakeDword(0x42278C);
MakeDword(0x422790);
MakeDword(0x422794);
MakeDword(0x422798);
MakeDword(0x42279C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4227E2, 0x4227EF);
MakeDword(0x4227A0);
MakeDword(0x4227A4);
MakeDword(0x4227A8);
MakeDword(0x4227AC);
MakeDword(0x4227B0);
MakeDword(0x4227B4);
MakeDword(0x4227B8);
MakeDword(0x4227BC);
MakeDword(0x4227C0);
MakeDword(0x4227C4);
MakeComm(0x4227F0, "'hNoTableOfContents'");
MakeDword(0x4227F0);
MakeDword(0x4227F4);
MakeComm(0x4227F8, "'hNothingFound'");
MakeDword(0x4227F8);
MakeDword(0x4227FC);
MakeComm(0x422800, "'hNoContext'");
MakeDword(0x422800);
MakeDword(0x422804);
MakeComm(0x422808, "'hNoTopics'");
MakeDword(0x422808);
MakeDword(0x42280C);
MakeUnkn(0x422810, 1);
MakeNameEx(0x422810, "RegisterViewer", 0x20);
MakeComm(0x422810, "'function RegisterViewer(const newViewer:ICustomHelpViewer; var Manager:IHelpManager):Integer;'");
MakeCode(0x422810);
MakeCode(0x42282C);
MakeCode(0x422854);
MakeCode(0x422870);
MakeCode(0x42287D);
MakeCode(0x422886);
MakeCode(0x42288B);
MakeFunction(0x422810, 0x422894);
MakeUnkn(0x422894, 1);
MakeNameEx(0x422894, "GetHelpSystem", 0x20);
MakeComm(0x422894, "'function GetHelpSystem(var System:IHelpSystem):Integer;'");
MakeCode(0x422894);
MakeCode(0x4228A2);
MakeCode(0x4228BC);
MakeCode(0x4228CB);
MakeFunction(0x422894, 0x4228DA);
MakeUnkn(0x4228EC, 1);
MakeNameEx(0x4228EC, "THelpViewerNode.Create", 0x20);
MakeComm(0x4228EC, "'constructor THelpViewerNode.Create(const Viewer:ICustomHelpViewer);'");
MakeCode(0x4228EC);
MakeCode(0x4228FB);
MakeCode(0x422920);
MakeFunction(0x4228EC, 0x422926);
MakeUnkn(0x422928, 1);
MakeNameEx(0x422928, "THelpManager.Create", 0x20);
MakeComm(0x422928, "'constructor THelpManager.Create;'");
MakeCode(0x422928);
MakeCode(0x422936);
MakeCode(0x422994);
MakeFunction(0x422928, 0x422999);
MakeUnkn(0x42299C, 1);
MakeNameEx(0x42299C, "THelpManager.RegisterViewer", 0x20);
MakeComm(0x42299C, "'function THelpManager.RegisterViewer(const newViewer:ICustomHelpViewer):IHelpManager;'");
MakeCode(0x42299C);
MakeCode(0x422A28);
MakeCode(0x422A66);
MakeCode(0x422A75);
MakeCode(0x422A7F);
MakeCode(0x422A8C);
MakeCode(0x422A9D);
MakeCode(0x422AA2);
MakeFunction(0x42299C, 0x422AAB);
MakeUnkn(0x422ABC, 1);
MakeNameEx(0x422ABC, "THelpManager.UnloadAllViewers", 0x20);
MakeComm(0x422ABC, "'procedure THelpManager.UnloadAllViewers;'");
MakeCode(0x422ABC);
MakeCode(0x422AC3);
MakeCode(0x422AD5);
MakeFunction(0x422ABC, 0x422AFB);
MakeUnkn(0x422AFC, 1);
MakeNameEx(0x422AFC, "THelpManager.DoSoftShutDown", 0x20);
MakeComm(0x422AFC, "'procedure THelpManager.DoSoftShutDown;'");
MakeCode(0x422AFC);
MakeCode(0x422B0F);
MakeCode(0x422B25);
MakeFunction(0x422AFC, 0x422B29);
MakeUnkn(0x422B2C, 1);
MakeNameEx(0x422B2C, "THelpManager.DoTableOfContents", 0x20);
MakeComm(0x422B2C, "'procedure THelpManager.DoTableOfContents;'");
MakeCode(0x422B2C);
MakeCode(0x422B82);
MakeCode(0x422BBF);
MakeCode(0x422BF0);
MakeCode(0x422BF8);
MakeCode(0x422C31);
MakeCode(0x422C43);
MakeCode(0x422C50);
MakeCode(0x422C59);
MakeCode(0x422C5E);
MakeCode(0x422C60);
MakeCode(0x422C92);
MakeCode(0x422CA8);
MakeCode(0x422CB5);
MakeCode(0x422CBE);
MakeCode(0x422CC3);
MakeFunction(0x422B2C, 0x422CCB);
MakeUnkn(0x422CCC, 1);
MakeNameEx(0x422CCC, "THelpManager.CallSpecialWinHelp", 0x20);
MakeComm(0x422CCC, "'function THelpManager.CallSpecialWinHelp(Handle:Longint; const HelpFile:AnsiString; Command:Word; Data:Longint):Boolean;'");
MakeCode(0x422CCC);
MakeCode(0x422CFF);
MakeCode(0x422D4B);
MakeCode(0x422D88);
MakeCode(0x422D95);
MakeCode(0x422DB1);
MakeCode(0x422DB6);
MakeFunction(0x422CCC, 0x422DC3);
MakeCode(0x422DD4);
MakeCode(0x422E13);
MakeCode(0x422E2E);
MakeCode(0x422E4E);
MakeCode(0x422E52);
MakeComm(0x422E77, "'EHelpSystemException.Create'");
MakeCode(0x422E81);
MakeCode(0x422E9F);
MakeComm(0x422EAD, "'TStringList.Create'");
MakeCode(0x422EC6);
MakeCode(0x422F11);
MakeComm(0x422F2A, "'TStringList.AddObject'");
MakeCode(0x422F35);
MakeCode(0x422F3D);
MakeCode(0x422F41);
MakeComm(0x422F4F, "'TStringList.Sort'");
MakeComm(0x422F70, "'TStringList.GetObject'");
MakeComm(0x422F7F, "'TStringList.Get'");
MakeCode(0x422F8F);
MakeComm(0x422F96, "'TStringList.GetObject'");
MakeComm(0x422FA5, "'TStringList.Get'");
MakeCode(0x422FB3);
MakeCode(0x422FBB);
MakeCode(0x422FC8);
MakeCode(0x422FD9);
MakeCode(0x422FDE);
MakeFunction(0x422DD4, 0x422FE7);
MakeUnkn(0x422FE8, 1);
MakeNameEx(0x422FE8, "THelpManager.ShowContextHelp", 0x20);
MakeComm(0x422FE8, "'procedure THelpManager.ShowContextHelp(const ContextID:Longint; const HelpFileName:AnsiString);'");
MakeCode(0x422FE8);
MakeCode(0x423023);
MakeCode(0x423045);
MakeCode(0x423054);
MakeCode(0x4230AC);
MakeCode(0x4230B2);
MakeCode(0x4230BF);
MakeCode(0x4230DB);
MakeCode(0x4230E0);
MakeFunction(0x422FE8, 0x4230E9);
MakeCode(0x4230FC);
MakeFunction(0x4230FC, 0x423102);
MakeCode(0x423104);
MakeCode(0x423135);
MakeComm(0x42314B, "'EHelpSystemException.Create'");
MakeCode(0x423157);
MakeCode(0x423161);
MakeCode(0x4231B2);
MakeCode(0x4231B6);
MakeCode(0x4231C3);
MakeCode(0x4231DF);
MakeCode(0x4231E4);
MakeFunction(0x423104, 0x4231ED);
MakeByte(0x4231F0);
MakeArray(0x4231F0, 16);
MakeUnkn(0x423200, 1);
MakeNameEx(0x423200, "THelpManager.AssignHelpSelector", 0x20);
MakeComm(0x423200, "'procedure THelpManager.AssignHelpSelector(Selector:IHelpSelector);'");
MakeCode(0x423200);
MakeCode(0x42322E);
MakeCode(0x423239);
MakeCode(0x423246);
MakeCode(0x42324F);
MakeCode(0x423254);
MakeFunction(0x423200, 0x42325A);
MakeUnkn(0x42325C, 1);
MakeNameEx(0x42325C, "THelpManager.Hook", 0x20);
MakeComm(0x42325C, "'function THelpManager.Hook(Handle:Longint; HelpFile:AnsiString; Command:Word; Data:Longint):Boolean;'");
MakeCode(0x42325C);
MakeCode(0x423294);
MakeCode(0x4232A7);
MakeCode(0x4232B6);
MakeCode(0x4232BF);
MakeCode(0x4232C8);
MakeCode(0x4232D9);
MakeCode(0x4232DB);
MakeCode(0x4232E8);
MakeCode(0x4232F1);
MakeCode(0x4232F6);
MakeFunction(0x42325C, 0x423302);
MakeCode(0x423304);
MakeFunction(0x423304, 0x423308);
MakeUnkn(0x423308, 1);
MakeNameEx(0x423308, "THelpManager.GetHelpFile", 0x20);
MakeComm(0x423308, "'function THelpManager.GetHelpFile:AnsiString;'");
MakeCode(0x423308);
MakeFunction(0x423308, 0x42331B);
MakeCode(0x42331C);
MakeCode(0x42332F);
MakeCode(0x423348);
MakeCode(0x42334E);
MakeCode(0x42335A);
MakeCode(0x423373);
MakeCode(0x423379);
MakeCode(0x423385);
MakeCode(0x42339E);
MakeCode(0x4233A4);
MakeFunction(0x42331C, 0x4233A8);
MakeUnkn(0x4233A8, 1);
MakeNameEx(0x4233A8, "THelpManager.Destroy", 0x20);
MakeComm(0x4233A8, "'destructor THelpManager.Destroy;'");
MakeCode(0x4233A8);
MakeCode(0x4233C8);
MakeCode(0x4233F7);
MakeFunction(0x4233A8, 0x4233FA);
MakeUnkn(0x4233FC, 1);
MakeNameEx(0x4233FC, "Finalization_3", 0x20);
MakeComm(0x4233FC, "'procedure Finalization;'");
MakeCode(0x4233FC);
MakeCode(0x423425);
MakeCode(0x423432);
MakeCode(0x423433);
MakeCode(0x423438);
MakeFunction(0x4233FC, 0x42343C);
MakeCode(0x42343C);
MakeFunction(0x42343C, 0x423444);
MakeCode(0x423444);
MakeCode(0x42345B);
MakeCode(0x423468);
MakeCode(0x423469);
MakeCode(0x42346E);
MakeFunction(0x423444, 0x423472);
MakeCode(0x423474);
MakeFunction(0x423474, 0x42347C);
MakeCode(0x42347C);
MakeComm(0x423495, "'0x0'");
MakeCode(0x42349F);
MakeCode(0x4234AC);
MakeCode(0x4234AD);
MakeCode(0x4234B2);
MakeFunction(0x42347C, 0x4234B6);
MakeCode(0x4234B8);
MakeFunction(0x4234B8, 0x4234C0);
MakeUnkn(0x4234C0, 1);
MakeNameEx(0x4234C0, "FlatSB_SetScrollProp", 0x20);
MakeComm(0x4234C0, "'function FlatSB_SetScrollProp(p1:HWND; index:Integer; newValue:Integer; p4:BOOL):BOOL; stdcall;'");
MakeCode(0x4234C0);
MakeCode(0x4234E6);
MakeCode(0x4234EA);
MakeCode(0x4234EC);
MakeFunction(0x4234C0, 0x4234F4);
MakeUnkn(0x4234F4, 1);
MakeNameEx(0x4234F4, "InitializeFlatSB", 0x20);
MakeComm(0x4234F4, "'function InitializeFlatSB(hWnd:HWND):BOOL; stdcall;'");
MakeCode(0x4234F4);
MakeCode(0x42350E);
MakeCode(0x423512);
MakeCode(0x423514);
MakeFunction(0x4234F4, 0x42351C);
MakeCode(0x42351C);
MakeCode(0x423593);
MakeCode(0x4235B4);
MakeCode(0x4235D5);
MakeCode(0x4235F6);
MakeCode(0x423617);
MakeCode(0x423638);
MakeCode(0x423659);
MakeCode(0x42367A);
MakeFunction(0x42351C, 0x42367D);
MakeCode(0x4237A0);
MakeCode(0x4237B7);
MakeCode(0x4237C4);
MakeCode(0x4237C5);
MakeCode(0x4237CA);
MakeFunction(0x4237A0, 0x4237CE);
MakeUnkn(0x4237D0, 1);
MakeNameEx(0x4237D0, "FlatSB", 0x20);
MakeComm(0x4237D0, "'procedure FlatSB;'");
MakeCode(0x4237D0);
MakeFunction(0x4237D0, 0x4237DF);
MakeUnkn(0x4237E0, 1);
MakeNameEx(0x4237E0, "VMT_4237E0_TSynchroObject", 0);
MakeDword(0x4237E0);
MakeDword(0x4237E4);
MakeDword(0x4237E8);
MakeDword(0x4237EC);
MakeDword(0x4237F0);
MakeDword(0x4237F4);
MakeDword(0x4237F8);
MakeDword(0x4237FC);
MakeDword(0x423800);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x423834, 0x423843);
MakeDword(0x423804);
MakeDword(0x423808);
MakeDword(0x42380C);
MakeDword(0x423810);
MakeDword(0x423814);
MakeDword(0x423818);
MakeDword(0x42381C);
MakeDword(0x423820);
MakeDword(0x423824);
MakeDword(0x423828);
MakeComm(0x42382C, "'+0'");
MakeDword(0x42382C);
MakeComm(0x423830, "'+4'");
MakeDword(0x423830);
MakeUnkn(0x423844, 1);
MakeNameEx(0x423844, "VMT_423844_TCriticalSection", 0);
MakeDword(0x423844);
MakeDword(0x423848);
MakeDword(0x42384C);
MakeDword(0x423850);
MakeDword(0x423854);
MakeDword(0x423858);
MakeDword(0x42385C);
MakeDword(0x423860);
MakeDword(0x423864);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x423898, 0x4238A9);
MakeDword(0x423868);
MakeDword(0x42386C);
MakeDword(0x423870);
MakeDword(0x423874);
MakeDword(0x423878);
MakeDword(0x42387C);
MakeDword(0x423880);
MakeDword(0x423884);
MakeDword(0x423888);
MakeDword(0x42388C);
MakeComm(0x423890, "'+0'");
MakeDword(0x423890);
MakeComm(0x423894, "'+4'");
MakeDword(0x423894);
MakeCode(0x4238AC);
MakeFunction(0x4238AC, 0x4238AD);
MakeCode(0x4238B0);
MakeFunction(0x4238B0, 0x4238B1);
MakeUnkn(0x4238B4, 1);
MakeNameEx(0x4238B4, "TCriticalSection.Create", 0x20);
MakeComm(0x4238B4, "'constructor TCriticalSection.Create;'");
MakeCode(0x4238B4);
MakeCode(0x4238C2);
MakeCode(0x4238ED);
MakeFunction(0x4238B4, 0x4238F2);
MakeUnkn(0x4238F4, 1);
MakeNameEx(0x4238F4, "TCriticalSection.Destroy", 0x20);
MakeComm(0x4238F4, "'destructor TCriticalSection.Destroy;'");
MakeCode(0x4238F4);
MakeCode(0x42391F);
MakeFunction(0x4238F4, 0x423922);
MakeUnkn(0x423924, 1);
MakeNameEx(0x423924, "TCriticalSection.Acquire", 0x20);
MakeComm(0x423924, "'procedure TCriticalSection.Acquire;'");
MakeCode(0x423924);
MakeFunction(0x423924, 0x42392E);
MakeUnkn(0x423930, 1);
MakeNameEx(0x423930, "TCriticalSection.Release", 0x20);
MakeComm(0x423930, "'procedure TCriticalSection.Release;'");
MakeCode(0x423930);
MakeFunction(0x423930, 0x42393A);
MakeUnkn(0x42393C, 1);
MakeNameEx(0x42393C, "TCriticalSection.Enter", 0x20);
MakeComm(0x42393C, "'procedure TCriticalSection.Enter;'");
MakeCode(0x42393C);
MakeFunction(0x42393C, 0x423941);
MakeUnkn(0x423944, 1);
MakeNameEx(0x423944, "TCriticalSection.Leave", 0x20);
MakeComm(0x423944, "'procedure TCriticalSection.Leave;'");
MakeCode(0x423944);
MakeFunction(0x423944, 0x42394A);
MakeCode(0x42394C);
MakeCode(0x423963);
MakeCode(0x423970);
MakeCode(0x423971);
MakeCode(0x423976);
MakeFunction(0x42394C, 0x42397A);
MakeCode(0x42397C);
MakeFunction(0x42397C, 0x423984);
MakeUnkn(0x423984, 1);
MakeNameEx(0x423984, "FreeThemeLibrary", 0x20);
MakeComm(0x423984, "'procedure FreeThemeLibrary;'");
MakeCode(0x423984);
MakeCode(0x4239AE);
MakeCode(0x423B23);
MakeCode(0x423B30);
MakeCode(0x423B3B);
MakeCode(0x423B40);
MakeFunction(0x423984, 0x423B44);
MakeUnkn(0x423B44, 1);
MakeNameEx(0x423B44, "InitThemeLibrary", 0x20);
MakeComm(0x423B44, "'function InitThemeLibrary:Boolean;'");
MakeCode(0x423B44);
MakeCode(0x423ED8);
MakeCode(0x423EDF);
MakeCode(0x423EEC);
MakeCode(0x423EF7);
MakeCode(0x423EFC);
MakeFunction(0x423B44, 0x423F05);
MakeUnkn(0x4242A8, 1);
MakeNameEx(0x4242A8, "UseThemes", 0x20);
MakeComm(0x4242A8, "'function UseThemes:Boolean;'");
MakeCode(0x4242A8);
MakeCode(0x4242C5);
MakeCode(0x4242C9);
MakeCode(0x4242CC);
MakeFunction(0x4242A8, 0x4242CF);
MakeUnkn(0x4242D0, 1);
MakeNameEx(0x4242D0, "Finalization_4", 0x20);
MakeComm(0x4242D0, "'procedure Finalization;'");
MakeCode(0x4242D0);
MakeCode(0x4242F2);
MakeCode(0x424300);
MakeCode(0x42430A);
MakeCode(0x424317);
MakeCode(0x424318);
MakeCode(0x42431D);
MakeFunction(0x4242D0, 0x424321);
MakeUnkn(0x424324, 1);
MakeNameEx(0x424324, "UxTheme", 0x20);
MakeComm(0x424324, "'procedure UxTheme;'");
MakeCode(0x424324);
MakeFunction(0x424324, 0x42433F);
MakeCode(0x424340);
MakeCode(0x424357);
MakeCode(0x424364);
MakeCode(0x424365);
MakeCode(0x42436A);
MakeFunction(0x424340, 0x42436E);
MakeCode(0x424370);
MakeFunction(0x424370, 0x424378);
MakeCode(0x424378);
MakeCode(0x42438F);
MakeCode(0x42439C);
MakeCode(0x42439D);
MakeCode(0x4243A2);
MakeFunction(0x424378, 0x4243A6);
MakeCode(0x4243A8);
MakeFunction(0x4243A8, 0x4243B0);
MakeCode(0x4243B0);
MakeCode(0x4243C7);
MakeCode(0x4243D4);
MakeCode(0x4243D5);
MakeCode(0x4243DA);
MakeFunction(0x4243B0, 0x4243DE);
MakeCode(0x4243E0);
MakeFunction(0x4243E0, 0x4243E8);
MakeCode(0x4243E8);
MakeCode(0x4243FF);
MakeCode(0x42440C);
MakeCode(0x42440D);
MakeCode(0x424412);
MakeFunction(0x4243E8, 0x424416);
MakeCode(0x424418);
MakeFunction(0x424418, 0x424420);
MakeCode(0x424420);
MakeCode(0x424437);
MakeCode(0x424444);
MakeCode(0x424445);
MakeCode(0x42444A);
MakeFunction(0x424420, 0x42444E);
MakeCode(0x424450);
MakeFunction(0x424450, 0x424458);
MakeCode(0x424458);
MakeCode(0x42446F);
MakeCode(0x42447C);
MakeCode(0x42447D);
MakeCode(0x424482);
MakeFunction(0x424458, 0x424486);
MakeCode(0x424488);
MakeFunction(0x424488, 0x424490);
MakeCode(0x424490);
MakeCode(0x4244A7);
MakeCode(0x4244B4);
MakeCode(0x4244B5);
MakeCode(0x4244BA);
MakeFunction(0x424490, 0x4244BE);
MakeCode(0x4244C0);
MakeFunction(0x4244C0, 0x4244C8);
MakeCode(0x4244C8);
MakeCode(0x4244DF);
MakeCode(0x4244EC);
MakeCode(0x4244ED);
MakeCode(0x4244F2);
MakeFunction(0x4244C8, 0x4244F6);
MakeCode(0x4244F8);
MakeFunction(0x4244F8, 0x424500);
MakeCode(0x424500);
MakeCode(0x424517);
MakeCode(0x424524);
MakeCode(0x424525);
MakeCode(0x42452A);
MakeFunction(0x424500, 0x42452E);
MakeCode(0x424530);
MakeFunction(0x424530, 0x424538);
MakeUnkn(0x424538, 1);
MakeNameEx(0x424538, "VMT_424538_TCommonDialog", 0);
MakeDword(0x424538);
MakeDword(0x42453C);
MakeDword(0x424540);
MakeDword(0x424544);
MakeDword(0x424548);
MakeDword(0x42454C);
MakeDword(0x424550);
MakeDword(0x424554);
MakeUnkn(0x4245C4, 1);
MakeNameEx(0x4245C4, "TCommonDialog_DynamicTable", 0);
MakeWord(0x4245C4);
MakeWord(0x4245C6);
MakeWord(0x4245C8);
MakeWord(0x4245CA);
MakeWord(0x4245CC);
MakeWord(0x4245CE);
MakeDword(0x4245D0);
MakeDword(0x4245D4);
MakeDword(0x4245D8);
MakeDword(0x4245DC);
MakeDword(0x4245E0);
MakeDword(0x424558);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4245E4, 0x4245F2);
MakeDword(0x42455C);
MakeDword(0x424560);
MakeDword(0x424564);
MakeDword(0x424568);
MakeDword(0x42456C);
MakeDword(0x424570);
MakeDword(0x424574);
MakeDword(0x424578);
MakeDword(0x42457C);
MakeDword(0x424580);
MakeComm(0x424584, "'+0'");
MakeDword(0x424584);
MakeComm(0x424588, "'+4'");
MakeDword(0x424588);
MakeComm(0x42458C, "'+8'");
MakeDword(0x42458C);
MakeComm(0x424590, "'+C'");
MakeDword(0x424590);
MakeComm(0x424594, "'+10'");
MakeDword(0x424594);
MakeComm(0x424598, "'+14'");
MakeDword(0x424598);
MakeComm(0x42459C, "'+18'");
MakeDword(0x42459C);
MakeComm(0x4245A0, "'+1C'");
MakeDword(0x4245A0);
MakeComm(0x4245A4, "'+20'");
MakeDword(0x4245A4);
MakeComm(0x4245A8, "'+24'");
MakeDword(0x4245A8);
MakeComm(0x4245AC, "'+28'");
MakeDword(0x4245AC);
MakeComm(0x4245B0, "'+2C'");
MakeDword(0x4245B0);
MakeComm(0x4245B4, "'+30'");
MakeDword(0x4245B4);
MakeComm(0x4245B8, "'+34'");
MakeDword(0x4245B8);
MakeComm(0x4245BC, "'+38'");
MakeDword(0x4245BC);
MakeComm(0x4245C0, "'+3C'");
MakeDword(0x4245C0);
MakeUnkn(0x4245F4, 1);
MakeNameEx(0x4245F4, "RTTI_4245F4_Class_TCommonDialog", 0);
MakeDword(0x4245F4);
MakeUnkn(0x4245F8, 1);
MakeNameEx(0x4245F8, "", 0);
MakeByte(0x4245F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4245F9, 0x424607);
MakeDword(0x424607);
MakeDword(0x42460B);
MakeWord(0x42460F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424611, 0x424619);
MakeWord(0x424619);
MakeDword(0x42461B);
MakeDword(0x42461F);
MakeDword(0x424623);
MakeDword(0x424627);
MakeDword(0x42462B);
MakeDword(0x42462F);
MakeWord(0x424633);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424635, 0x42463B);
MakeDword(0x42463B);
MakeDword(0x42463F);
MakeDword(0x424643);
MakeDword(0x424647);
MakeDword(0x42464B);
MakeDword(0x42464F);
MakeWord(0x424653);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424655, 0x424661);
MakeDword(0x424661);
MakeDword(0x424665);
MakeDword(0x424669);
MakeDword(0x42466D);
MakeDword(0x424671);
MakeDword(0x424675);
MakeWord(0x424679);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42467B, 0x424683);
MakeDword(0x424683);
MakeDword(0x424687);
MakeDword(0x42468B);
MakeDword(0x42468F);
MakeDword(0x424693);
MakeDword(0x424697);
MakeWord(0x42469B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42469D, 0x4246A4);
MakeUnkn(0x4246A4, 1);
MakeNameEx(0x4246A4, "TCommonDialog.Create", 0x20);
MakeComm(0x4246A4, "'constructor TCommonDialog.Create(AOwner:TComponent);'");
MakeCode(0x4246A4);
MakeCode(0x4246B2);
MakeCode(0x4246E6);
MakeFunction(0x4246A4, 0x4246EB);
MakeUnkn(0x4246EC, 1);
MakeNameEx(0x4246EC, "TCommonDialog.Destroy", 0x20);
MakeComm(0x4246EC, "'destructor TCommonDialog.Destroy;'");
MakeCode(0x4246EC);
MakeCode(0x424703);
MakeCode(0x42471A);
MakeFunction(0x4246EC, 0x42471D);
MakeUnkn(0x424720, 1);
MakeNameEx(0x424720, "TCommonDialog.MessageHook", 0x20);
MakeComm(0x424720, "'function TCommonDialog.MessageHook(var Msg:TMessage):Boolean;'");
MakeCode(0x424720);
MakeCode(0x424745);
MakeFunction(0x424720, 0x424748);
MakeUnkn(0x424748, 1);
MakeNameEx(0x424748, "TCommonDialog.DefaultHandler", 0x20);
MakeComm(0x424748, "'procedure TCommonDialog.DefaultHandler(var Message:void );'");
MakeCode(0x424748);
MakeCode(0x424770);
MakeCode(0x424779);
MakeFunction(0x424748, 0x42477D);
MakeUnkn(0x424780, 1);
MakeNameEx(0x424780, "TCommonDialog.MainWndProc", 0x20);
MakeComm(0x424780, "'procedure TCommonDialog.MainWndProc(var Message:TMessage);'");
MakeCode(0x424780);
MakeCode(0x4247A0);
MakeCode(0x4247AA);
MakeCode(0x4247C3);
MakeFunction(0x424780, 0x4247C9);
MakeCode(0x4247CC);
MakeComm(0x4247CE, "'TObject.Dispatch'");
MakeFunction(0x4247CC, 0x4247D2);
MakeUnkn(0x4247D4, 1);
MakeNameEx(0x4247D4, "TCommonDialog.WMDestroy", 0x20);
MakeComm(0x4247D4, "'procedure TCommonDialog.WMDestroy(var Message:TWMDestroy);'");
MakeCode(0x4247D4);
MakeFunction(0x4247D4, 0x4247EB);
MakeUnkn(0x4247EC, 1);
MakeNameEx(0x4247EC, "TCommonDialog.WMInitDialog", 0x20);
MakeComm(0x4247EC, "'procedure TCommonDialog.WMInitDialog(var Message:TWMInitDialog);'");
MakeCode(0x4247EC);
MakeFunction(0x4247EC, 0x424801);
MakeUnkn(0x424804, 1);
MakeNameEx(0x424804, "TCommonDialog.WMNCDestroy", 0x20);
MakeComm(0x424804, "'procedure TCommonDialog.WMNCDestroy(var Message:TWMNCDestroy);'");
MakeCode(0x424804);
MakeFunction(0x424804, 0x424815);
MakeUnkn(0x424818, 1);
MakeNameEx(0x424818, "TCommonDialog.TaskModalDialog", 0x20);
MakeComm(0x424818, "'function TCommonDialog.TaskModalDialog(DialogFunc:Pointer; var DialogData:void ):BOOL;'");
MakeCode(0x424818);
MakeCode(0x424884);
MakeCode(0x424891);
MakeCode(0x4248AD);
MakeCode(0x4248B2);
MakeCode(0x4248B4);
MakeCode(0x4248C1);
MakeCode(0x4248DB);
MakeCode(0x4248E0);
MakeFunction(0x424818, 0x4248EB);
MakeUnkn(0x4248EC, 1);
MakeNameEx(0x4248EC, "TCommonDialog.DoClose", 0x20);
MakeComm(0x4248EC, "'procedure TCommonDialog.DoClose;'");
MakeCode(0x4248EC);
MakeCode(0x4248FE);
MakeFunction(0x4248EC, 0x424900);
MakeUnkn(0x424900, 1);
MakeNameEx(0x424900, "TCommonDialog.DoShow", 0x20);
MakeComm(0x424900, "'procedure TCommonDialog.DoShow;'");
MakeCode(0x424900);
MakeCode(0x424912);
MakeFunction(0x424900, 0x424914);
MakeUnkn(0x4249B8, 1);
MakeNameEx(0x4249B8, "InitGlobals", 0x20);
MakeComm(0x4249B8, "'procedure InitGlobals;'");
MakeCode(0x4249B8);
MakeFunction(0x4249B8, 0x424A19);
MakeUnkn(0x424A54, 1);
MakeNameEx(0x424A54, "_NF__533", 0x20);
MakeComm(0x424A54, "'procedure _NF__533;'");
MakeCode(0x424A54);
MakeCode(0x424AA4);
MakeCode(0x424ABC);
MakeCode(0x424AD4);
MakeFunction(0x424A54, 0x424B0C);
MakeUnkn(0x424B0C, 1);
MakeNameEx(0x424B0C, "Finalization_5", 0x20);
MakeComm(0x424B0C, "'procedure Finalization;'");
MakeCode(0x424B0C);
MakeCode(0x424B3B);
MakeCode(0x424B50);
MakeCode(0x424B5D);
MakeCode(0x424B5E);
MakeCode(0x424B63);
MakeFunction(0x424B0C, 0x424B67);
MakeUnkn(0x424B68, 1);
MakeNameEx(0x424B68, "Dialogs", 0x20);
MakeComm(0x424B68, "'procedure Dialogs;'");
MakeCode(0x424B68);
MakeFunction(0x424B68, 0x424BA5);
MakeUnkn(0x424BA8, 1);
MakeNameEx(0x424BA8, "VMT_424BA8_TTimer", 0);
MakeDword(0x424BA8);
MakeDword(0x424BAC);
MakeDword(0x424BB0);
MakeDword(0x424BB4);
MakeDword(0x424BB8);
MakeDword(0x424BBC);
MakeDword(0x424BC0);
MakeDword(0x424BC4);
MakeUnkn(0x424C24, 1);
MakeNameEx(0x424C24, "TTimer_DynamicTable", 0);
MakeWord(0x424C24);
MakeWord(0x424C26);
MakeDword(0x424C28);
MakeDword(0x424BC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424C2C, 0x424C33);
MakeDword(0x424BCC);
MakeDword(0x424BD0);
MakeDword(0x424BD4);
MakeDword(0x424BD8);
MakeDword(0x424BDC);
MakeDword(0x424BE0);
MakeDword(0x424BE4);
MakeDword(0x424BE8);
MakeDword(0x424BEC);
MakeDword(0x424BF0);
MakeComm(0x424BF4, "'+0'");
MakeDword(0x424BF4);
MakeComm(0x424BF8, "'+4'");
MakeDword(0x424BF8);
MakeComm(0x424BFC, "'+8'");
MakeDword(0x424BFC);
MakeComm(0x424C00, "'+C'");
MakeDword(0x424C00);
MakeComm(0x424C04, "'+10'");
MakeDword(0x424C04);
MakeComm(0x424C08, "'+14'");
MakeDword(0x424C08);
MakeComm(0x424C0C, "'+18'");
MakeDword(0x424C0C);
MakeComm(0x424C10, "'+1C'");
MakeDword(0x424C10);
MakeComm(0x424C14, "'+20'");
MakeDword(0x424C14);
MakeComm(0x424C18, "'+24'");
MakeDword(0x424C18);
MakeComm(0x424C1C, "'+28'");
MakeDword(0x424C1C);
MakeComm(0x424C20, "'+2C'");
MakeDword(0x424C20);
MakeUnkn(0x424C34, 1);
MakeNameEx(0x424C34, "RTTI_424C34_Class_TTimer", 0);
MakeDword(0x424C34);
MakeUnkn(0x424C38, 1);
MakeNameEx(0x424C38, "", 0);
MakeByte(0x424C38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424C39, 0x424C40);
MakeDword(0x424C40);
MakeDword(0x424C44);
MakeWord(0x424C48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424C4A, 0x424C53);
MakeWord(0x424C53);
MakeDword(0x424C55);
MakeDword(0x424C59);
MakeDword(0x424C5D);
MakeDword(0x424C61);
MakeDword(0x424C65);
MakeDword(0x424C69);
MakeWord(0x424C6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424C6F, 0x424C77);
MakeDword(0x424C77);
MakeDword(0x424C7B);
MakeDword(0x424C7F);
MakeDword(0x424C83);
MakeDword(0x424C87);
MakeDword(0x424C8B);
MakeWord(0x424C8F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424C91, 0x424C9A);
MakeDword(0x424C9A);
MakeDword(0x424C9E);
MakeDword(0x424CA2);
MakeDword(0x424CA6);
MakeDword(0x424CAA);
MakeDword(0x424CAE);
MakeWord(0x424CB2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424CB4, 0x424CBC);
MakeUnkn(0x424CBC, 1);
MakeNameEx(0x424CBC, "TTimer.Create", 0x20);
MakeComm(0x424CBC, "'constructor TTimer.Create(AOwner:TComponent);'");
MakeCode(0x424CBC);
MakeCode(0x424CCA);
MakeCode(0x424D05);
MakeFunction(0x424CBC, 0x424D0A);
MakeUnkn(0x424D0C, 1);
MakeNameEx(0x424D0C, "TTimer.Destroy", 0x20);
MakeComm(0x424D0C, "'destructor TTimer.Destroy;'");
MakeCode(0x424D0C);
MakeCode(0x424D41);
MakeFunction(0x424D0C, 0x424D44);
MakeUnkn(0x424D44, 1);
MakeNameEx(0x424D44, "TTimer.WndProc", 0x20);
MakeComm(0x424D44, "'procedure TTimer.WndProc(var Msg:TMessage);'");
MakeCode(0x424D44);
MakeCode(0x424D74);
MakeCode(0x424D7E);
MakeCode(0x424D99);
MakeCode(0x424DB1);
MakeFunction(0x424D44, 0x424DB7);
MakeUnkn(0x424DB8, 1);
MakeNameEx(0x424DB8, "TTimer.UpdateTimer", 0x20);
MakeComm(0x424DB8, "'procedure TTimer.UpdateTimer;'");
MakeCode(0x424DB8);
MakeCode(0x424E21);
MakeCode(0x424E2E);
MakeCode(0x424E37);
MakeCode(0x424E3C);
MakeFunction(0x424DB8, 0x424E43);
MakeUnkn(0x424E44, 1);
MakeNameEx(0x424E44, "TTimer.SetEnabled", 0x20);
MakeComm(0x424E44, "'procedure TTimer.SetEnabled(Value:Boolean);'");
MakeCode(0x424E44);
MakeFunction(0x424E44, 0x424E52);
MakeUnkn(0x424E54, 1);
MakeNameEx(0x424E54, "TTimer.SetInterval", 0x20);
MakeComm(0x424E54, "'procedure TTimer.SetInterval(Value:Cardinal);'");
MakeCode(0x424E54);
MakeFunction(0x424E54, 0x424E62);
MakeUnkn(0x424E64, 1);
MakeNameEx(0x424E64, "TTimer.SetOnTimer", 0x20);
MakeComm(0x424E64, "'procedure TTimer.SetOnTimer(Value:TNotifyEvent);'");
MakeCode(0x424E64);
MakeFunction(0x424E64, 0x424E7C);
MakeUnkn(0x424E7C, 1);
MakeNameEx(0x424E7C, "TTimer.Timer", 0x20);
MakeComm(0x424E7C, "'procedure TTimer.Timer;'");
MakeCode(0x424E7C);
MakeCode(0x424E8E);
MakeFunction(0x424E7C, 0x424E90);
MakeComm(0x424E90, "'clNameBlack'");
MakeDword(0x424E90);
MakeDword(0x424E94);
MakeComm(0x424E98, "'clNameMaroon'");
MakeDword(0x424E98);
MakeDword(0x424E9C);
MakeComm(0x424EA0, "'clNameGreen'");
MakeDword(0x424EA0);
MakeDword(0x424EA4);
MakeComm(0x424EA8, "'clNameOlive'");
MakeDword(0x424EA8);
MakeDword(0x424EAC);
MakeComm(0x424EB0, "'clNameNavy'");
MakeDword(0x424EB0);
MakeDword(0x424EB4);
MakeComm(0x424EB8, "'clNamePurple'");
MakeDword(0x424EB8);
MakeDword(0x424EBC);
MakeComm(0x424EC0, "'clNameTeal'");
MakeDword(0x424EC0);
MakeDword(0x424EC4);
MakeComm(0x424EC8, "'clNameGray'");
MakeDword(0x424EC8);
MakeDword(0x424ECC);
MakeComm(0x424ED0, "'clNameSilver'");
MakeDword(0x424ED0);
MakeDword(0x424ED4);
MakeComm(0x424ED8, "'clNameRed'");
MakeDword(0x424ED8);
MakeDword(0x424EDC);
MakeComm(0x424EE0, "'clNameLime'");
MakeDword(0x424EE0);
MakeDword(0x424EE4);
MakeComm(0x424EE8, "'clNameYellow'");
MakeDword(0x424EE8);
MakeDword(0x424EEC);
MakeComm(0x424EF0, "'clNameBlue'");
MakeDword(0x424EF0);
MakeDword(0x424EF4);
MakeComm(0x424EF8, "'clNameFuchsia'");
MakeDword(0x424EF8);
MakeDword(0x424EFC);
MakeComm(0x424F00, "'clNameAqua'");
MakeDword(0x424F00);
MakeDword(0x424F04);
MakeComm(0x424F08, "'clNameWhite'");
MakeDword(0x424F08);
MakeDword(0x424F0C);
MakeComm(0x424F10, "'clNameMoneyGreen'");
MakeDword(0x424F10);
MakeDword(0x424F14);
MakeComm(0x424F18, "'clNameSkyBlue'");
MakeDword(0x424F18);
MakeDword(0x424F1C);
MakeComm(0x424F20, "'clNameCream'");
MakeDword(0x424F20);
MakeDword(0x424F24);
MakeComm(0x424F28, "'clNameMedGray'");
MakeDword(0x424F28);
MakeDword(0x424F2C);
MakeComm(0x424F30, "'clNameActiveBorder'");
MakeDword(0x424F30);
MakeDword(0x424F34);
MakeComm(0x424F38, "'clNameActiveCaption'");
MakeDword(0x424F38);
MakeDword(0x424F3C);
MakeComm(0x424F40, "'clNameAppWorkSpace'");
MakeDword(0x424F40);
MakeDword(0x424F44);
MakeComm(0x424F48, "'clNameBackground'");
MakeDword(0x424F48);
MakeDword(0x424F4C);
MakeComm(0x424F50, "'clNameBtnFace'");
MakeDword(0x424F50);
MakeDword(0x424F54);
MakeComm(0x424F58, "'clNameBtnHighlight'");
MakeDword(0x424F58);
MakeDword(0x424F5C);
MakeComm(0x424F60, "'clNameBtnShadow'");
MakeDword(0x424F60);
MakeDword(0x424F64);
MakeComm(0x424F68, "'clNameBtnText'");
MakeDword(0x424F68);
MakeDword(0x424F6C);
MakeComm(0x424F70, "'clNameCaptionText'");
MakeDword(0x424F70);
MakeDword(0x424F74);
MakeComm(0x424F78, "'clNameDefault'");
MakeDword(0x424F78);
MakeDword(0x424F7C);
MakeComm(0x424F80, "'clNameGrayText'");
MakeDword(0x424F80);
MakeDword(0x424F84);
MakeComm(0x424F88, "'clNameHighlight'");
MakeDword(0x424F88);
MakeDword(0x424F8C);
MakeComm(0x424F90, "'clNameHighlightText'");
MakeDword(0x424F90);
MakeDword(0x424F94);
MakeComm(0x424F98, "'clNameInactiveBorder'");
MakeDword(0x424F98);
MakeDword(0x424F9C);
MakeComm(0x424FA0, "'clNameInactiveCaption'");
MakeDword(0x424FA0);
MakeDword(0x424FA4);
MakeComm(0x424FA8, "'clNameInactiveCaptionText'");
MakeDword(0x424FA8);
MakeDword(0x424FAC);
MakeComm(0x424FB0, "'clNameInfoBk'");
MakeDword(0x424FB0);
MakeDword(0x424FB4);
MakeComm(0x424FB8, "'clNameInfoText'");
MakeDword(0x424FB8);
MakeDword(0x424FBC);
MakeComm(0x424FC0, "'clNameMenu'");
MakeDword(0x424FC0);
MakeDword(0x424FC4);
MakeComm(0x424FC8, "'clNameMenuText'");
MakeDword(0x424FC8);
MakeDword(0x424FCC);
MakeComm(0x424FD0, "'clNameNone'");
MakeDword(0x424FD0);
MakeDword(0x424FD4);
MakeComm(0x424FD8, "'clNameScrollBar'");
MakeDword(0x424FD8);
MakeDword(0x424FDC);
MakeComm(0x424FE0, "'clName3DDkShadow'");
MakeDword(0x424FE0);
MakeDword(0x424FE4);
MakeComm(0x424FE8, "'clName3DLight'");
MakeDword(0x424FE8);
MakeDword(0x424FEC);
MakeComm(0x424FF0, "'clNameWindow'");
MakeDword(0x424FF0);
MakeDword(0x424FF4);
MakeComm(0x424FF8, "'clNameWindowFrame'");
MakeDword(0x424FF8);
MakeDword(0x424FFC);
MakeComm(0x425000, "'clNameWindowText'");
MakeDword(0x425000);
MakeDword(0x425004);
MakeUnkn(0x425008, 1);
MakeNameEx(0x425008, "_NF__82C", 0x20);
MakeComm(0x425008, "'procedure _NF__82C;'");
MakeCode(0x425008);
MakeFunction(0x425008, 0x425184);
MakeUnkn(0x425184, 1);
MakeNameEx(0x425184, "Finalization_6", 0x20);
MakeComm(0x425184, "'procedure Finalization;'");
MakeCode(0x425184);
MakeCode(0x4251B2);
MakeCode(0x4251BF);
MakeCode(0x4251C0);
MakeCode(0x4251C5);
MakeFunction(0x425184, 0x4251C9);
MakeUnkn(0x4251CC, 1);
MakeNameEx(0x4251CC, "ExtCtrls", 0x20);
MakeComm(0x4251CC, "'procedure ExtCtrls;'");
MakeCode(0x4251CC);
MakeFunction(0x4251CC, 0x4251FA);
MakeCode(0x4251FC);
MakeCode(0x425213);
MakeCode(0x425220);
MakeCode(0x425221);
MakeCode(0x425226);
MakeFunction(0x4251FC, 0x42522A);
MakeCode(0x42522C);
MakeFunction(0x42522C, 0x425234);
MakeCode(0x425234);
MakeCode(0x425257);
MakeCode(0x425264);
MakeCode(0x425265);
MakeCode(0x42526A);
MakeFunction(0x425234, 0x42526E);
MakeCode(0x425270);
MakeFunction(0x425270, 0x4252A1);
MakeUnkn(0x4252C8, 1);
MakeNameEx(0x4252C8, "AnsiReverseString", 0x20);
MakeComm(0x4252C8, "'function AnsiReverseString(const AText:AnsiString):AnsiString;'");
MakeCode(0x4252C8);
MakeCode(0x425305);
MakeCode(0x425325);
MakeCode(0x425333);
MakeCode(0x42533C);
MakeCode(0x425341);
MakeFunction(0x4252C8, 0x425346);
MakeUnkn(0x425348, 1);
MakeNameEx(0x425348, "LeftStr", 0x20);
MakeComm(0x425348, "'function LeftStr(const AText:AnsiString; const ACount:Integer):AnsiString;'");
MakeCode(0x425348);
MakeCode(0x42538D);
MakeCode(0x42539A);
MakeCode(0x4253A8);
MakeCode(0x4253AD);
MakeFunction(0x425348, 0x4253B6);
MakeUnkn(0x4253B8, 1);
MakeNameEx(0x4253B8, "RightStr", 0x20);
MakeComm(0x4253B8, "'function RightStr(const AText:AnsiString; const ACount:Integer):AnsiString;'");
MakeCode(0x4253B8);
MakeCode(0x425411);
MakeCode(0x42541E);
MakeCode(0x42542C);
MakeCode(0x425431);
MakeFunction(0x4253B8, 0x42543A);
MakeUnkn(0x42543C, 1);
MakeNameEx(0x42543C, "MidStr", 0x20);
MakeComm(0x42543C, "'function MidStr(const AText:AnsiString; const AStart:Integer; const ACount:Integer):AnsiString;'");
MakeCode(0x42543C);
MakeCode(0x42547F);
MakeCode(0x42548C);
MakeCode(0x42549A);
MakeCode(0x42549F);
MakeFunction(0x42543C, 0x4254AA);
MakeUnkn(0x4254AC, 1);
MakeNameEx(0x4254AC, "AnsiLeftStr", 0x20);
MakeComm(0x4254AC, "'function AnsiLeftStr(const AText:AnsiString; const ACount:Integer):AnsiString;'");
MakeCode(0x4254AC);
MakeFunction(0x4254AC, 0x4254C4);
MakeUnkn(0x4254C4, 1);
MakeNameEx(0x4254C4, "AnsiRightStr", 0x20);
MakeComm(0x4254C4, "'function AnsiRightStr(const AText:AnsiString; const ACount:Integer):AnsiString;'");
MakeCode(0x4254C4);
MakeFunction(0x4254C4, 0x4254DC);
MakeUnkn(0x4254DC, 1);
MakeNameEx(0x4254DC, "AnsiMidStr", 0x20);
MakeComm(0x4254DC, "'function AnsiMidStr(const AText:AnsiString; const AStart:Integer; const ACount:Integer):AnsiString;'");
MakeCode(0x4254DC);
MakeFunction(0x4254DC, 0x4254FE);
MakeUnkn(0x425500, 1);
MakeNameEx(0x425500, "PosEx", 0x20);
MakeComm(0x425500, "'function PosEx(const SubStr:AnsiString; const S:AnsiString; Offset:Cardinal):Integer;'");
MakeCode(0x425500);
MakeCode(0x425519);
MakeCode(0x425536);
MakeCode(0x425545);
MakeCode(0x425546);
MakeCode(0x425556);
MakeCode(0x42555E);
MakeCode(0x425564);
MakeCode(0x425566);
MakeFunction(0x425500, 0x42556C);
MakeCode(0x42556C);
MakeCode(0x425583);
MakeCode(0x425590);
MakeCode(0x425591);
MakeCode(0x425596);
MakeFunction(0x42556C, 0x42559A);
MakeCode(0x42559C);
MakeFunction(0x42559C, 0x4255A4);
MakeCode(0x4255A4);
MakeCode(0x4255AD);
MakeFunction(0x4255A4, 0x4255BE);
MakeCode(0x42563C);
MakeCode(0x42565A);
MakeCode(0x425667);
MakeCode(0x425668);
MakeCode(0x42566D);
MakeFunction(0x42563C, 0x425671);
MakeCode(0x425674);
MakeFunction(0x425674, 0x425699);
MakeCode(0x42569C);
MakeCode(0x4256B3);
MakeCode(0x4256C0);
MakeCode(0x4256C1);
MakeCode(0x4256C6);
MakeFunction(0x42569C, 0x4256CA);
MakeCode(0x4256CC);
MakeFunction(0x4256CC, 0x4256D4);
MakeUnkn(0x4256EC, 1);
MakeNameEx(0x4256EC, "Finalization_7", 0x20);
MakeComm(0x4256EC, "'procedure Finalization;'");
MakeCode(0x4256EC);
MakeCode(0x42571A);
MakeCode(0x425727);
MakeCode(0x425728);
MakeCode(0x42572D);
MakeFunction(0x4256EC, 0x425731);
MakeCode(0x425734);
MakeFunction(0x425734, 0x42573C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x425744, -1);
MakeDword(0x425740);
MakeDword(0x42573C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x425750, -1);
MakeDword(0x42574C);
MakeDword(0x425748);
MakeCode(0x425754);
MakeCode(0x425782);
MakeCode(0x42578F);
MakeCode(0x425790);
MakeCode(0x425795);
MakeFunction(0x425754, 0x425799);
MakeCode(0x42579C);
MakeFunction(0x42579C, 0x4257A4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4257AC, -1);
MakeDword(0x4257A8);
MakeDword(0x4257A4);
MakeCode(0x4257B8);
MakeComm(0x4257DA, "'0x0'");
MakeCode(0x4257E5);
MakeCode(0x4257EF);
MakeCode(0x4257FC);
MakeCode(0x4257FD);
MakeCode(0x425802);
MakeFunction(0x4257B8, 0x425806);
MakeCode(0x425808);
MakeFunction(0x425808, 0x425810);
MakeCode(0x425810);
MakeCode(0x425846);
MakeCode(0x425853);
MakeCode(0x425854);
MakeCode(0x425859);
MakeFunction(0x425810, 0x42585D);
MakeCode(0x425860);
MakeFunction(0x425860, 0x425868);
MakeCode(0x425868);
MakeCode(0x42587F);
MakeCode(0x42588C);
MakeCode(0x42588D);
MakeCode(0x425892);
MakeFunction(0x425868, 0x425896);
MakeCode(0x425898);
MakeFunction(0x425898, 0x4258A0);
MakeUnkn(0x4258A0, 1);
MakeNameEx(0x4258A0, "VMT_4258A0_TConversion", 0);
MakeDword(0x4258A0);
MakeDword(0x4258A4);
MakeDword(0x4258A8);
MakeDword(0x4258AC);
MakeDword(0x4258B0);
MakeDword(0x4258B4);
MakeDword(0x4258B8);
MakeDword(0x4258BC);
MakeDword(0x4258C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4258F4, 0x425900);
MakeDword(0x4258C4);
MakeDword(0x4258C8);
MakeDword(0x4258CC);
MakeDword(0x4258D0);
MakeDword(0x4258D4);
MakeDword(0x4258D8);
MakeDword(0x4258DC);
MakeDword(0x4258E0);
MakeDword(0x4258E4);
MakeDword(0x4258E8);
MakeComm(0x4258EC, "'+0'");
MakeDword(0x4258EC);
MakeComm(0x4258F0, "'+4'");
MakeDword(0x4258F0);
MakeUnkn(0x425900, 1);
MakeNameEx(0x425900, "RTTI_425900_Record_TConversionFormat", 0);
MakeDword(0x425900);
MakeUnkn(0x425904, 1);
MakeNameEx(0x425904, "", 0);
MakeByte(0x425904);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x425905, 0x425917);
MakeDword(0x425917);
MakeDword(0x42591B);
MakeDword(0x42591F);
MakeDword(0x425923);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x425930, -1);
MakeDword(0x42592C);
MakeDword(0x425928);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42593C, -1);
MakeDword(0x425938);
MakeDword(0x425934);
MakeUnkn(0x425940, 1);
MakeNameEx(0x425940, "GetComCtlVersion", 0x20);
MakeComm(0x425940, "'function GetComCtlVersion:Integer;'");
MakeCode(0x425940);
MakeCode(0x425958);
MakeFunction(0x425940, 0x42595E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x425968, -1);
MakeDword(0x425964);
MakeDword(0x425960);
MakeUnkn(0x425978, 1);
MakeNameEx(0x425978, "TConversion.ConvertReadStream", 0x20);
MakeComm(0x425978, "'function TConversion.ConvertReadStream(Stream:TStream; Buffer:PChar; BufSize:Integer):Integer;'");
MakeCode(0x425978);
MakeFunction(0x425978, 0x42598C);
MakeUnkn(0x42598C, 1);
MakeNameEx(0x42598C, "TConversion.ConvertWriteStream", 0x20);
MakeComm(0x42598C, "'function TConversion.ConvertWriteStream(Stream:TStream; Buffer:PChar; BufSize:Integer):Integer;'");
MakeCode(0x42598C);
MakeFunction(0x42598C, 0x4259A0);
MakeUnkn(0x4259A0, 1);
MakeNameEx(0x4259A0, "Finalization_8", 0x20);
MakeComm(0x4259A0, "'procedure Finalization;'");
MakeCode(0x4259A0);
MakeCode(0x4259CD);
MakeCode(0x4259E1);
MakeCode(0x425A01);
MakeCode(0x425A0E);
MakeCode(0x425A0F);
MakeCode(0x425A14);
MakeFunction(0x4259A0, 0x425A18);
MakeCode(0x425A18);
MakeFunction(0x425A18, 0x425A20);
MakeUnkn(0x425A20, 1);
MakeNameEx(0x425A20, "VMT_425A20_TThemeServices", 0);
MakeDword(0x425A20);
MakeDword(0x425A24);
MakeDword(0x425A28);
MakeDword(0x425A2C);
MakeDword(0x425A30);
MakeDword(0x425A34);
MakeDword(0x425A38);
MakeDword(0x425A3C);
MakeDword(0x425A40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x425A74, 0x425A83);
MakeDword(0x425A44);
MakeDword(0x425A48);
MakeDword(0x425A4C);
MakeDword(0x425A50);
MakeDword(0x425A54);
MakeDword(0x425A58);
MakeDword(0x425A5C);
MakeDword(0x425A60);
MakeDword(0x425A64);
MakeDword(0x425A68);
MakeComm(0x425A6C, "'+0'");
MakeDword(0x425A6C);
MakeComm(0x425A70, "'+4'");
MakeDword(0x425A70);
MakeUnkn(0x425AB4, 1);
MakeNameEx(0x425AB4, "_NF__337", 0x20);
MakeComm(0x425AB4, "'procedure _NF__337;'");
MakeCode(0x425AB4);
MakeCode(0x425AB8);
MakeCode(0x425ABA);
MakeCode(0x425ABC);
MakeFunction(0x425AB4, 0x425C48);
MakeUnkn(0x425C48, 1);
MakeNameEx(0x425C48, "ThemeServices", 0x20);
MakeComm(0x425C48, "'function ThemeServices:TThemeServices;'");
MakeCode(0x425C48);
MakeCode(0x425C60);
MakeFunction(0x425C48, 0x425C66);
MakeUnkn(0x425C68, 1);
MakeNameEx(0x425C68, "TThemeServices.Create", 0x20);
MakeComm(0x425C68, "'constructor TThemeServices.Create;'");
MakeCode(0x425C68);
MakeCode(0x425C76);
MakeCode(0x425CAE);
MakeFunction(0x425C68, 0x425CB3);
MakeUnkn(0x425CB4, 1);
MakeNameEx(0x425CB4, "TThemeServices.Destroy", 0x20);
MakeComm(0x425CB4, "'destructor TThemeServices.Destroy;'");
MakeCode(0x425CB4);
MakeCode(0x425CE2);
MakeFunction(0x425CB4, 0x425CE5);
MakeUnkn(0x425CE8, 1);
MakeNameEx(0x425CE8, "TThemeServices.GetTheme", 0x20);
MakeComm(0x425CE8, "'function TThemeServices.GetTheme(Element:TThemedElement):HTHEME;'");
MakeCode(0x425CE8);
MakeCode(0x425D1C);
MakeFunction(0x425CE8, 0x425D28);
MakeUnkn(0x425D28, 1);
MakeNameEx(0x425D28, "TThemeServices.GetThemesEnabled", 0x20);
MakeComm(0x425D28, "'function TThemeServices.GetThemesEnabled:Boolean;'");
MakeCode(0x425D28);
MakeCode(0x425D3A);
MakeCode(0x425D3D);
MakeFunction(0x425D28, 0x425D40);
MakeUnkn(0x425D40, 1);
MakeNameEx(0x425D40, "TThemeServices.DoOnThemeChange", 0x20);
MakeComm(0x425D40, "'procedure TThemeServices.DoOnThemeChange;'");
MakeCode(0x425D40);
MakeCode(0x425D52);
MakeFunction(0x425D40, 0x425D54);
MakeUnkn(0x425D54, 1);
MakeNameEx(0x425D54, "TThemeServices.UnloadThemeData", 0x20);
MakeComm(0x425D54, "'procedure TThemeServices.UnloadThemeData;'");
MakeCode(0x425D54);
MakeCode(0x425D5B);
MakeCode(0x425D78);
MakeFunction(0x425D54, 0x425D82);
MakeUnkn(0x425D84, 1);
MakeNameEx(0x425D84, "TThemeServices.ApplyThemeChange", 0x20);
MakeComm(0x425D84, "'procedure TThemeServices.ApplyThemeChange;'");
MakeCode(0x425D84);
MakeFunction(0x425D84, 0x425D96);
MakeUnkn(0x425D98, 1);
MakeNameEx(0x425D98, "TThemeServices.DrawEdge", 0x20);
MakeComm(0x425D98, "'procedure TThemeServices.DrawEdge(DC:HDC; Details:TThemedElementDetails; const R:TRect; Edge:Cardinal; Flags:Cardinal; ContentRect:PRect);'");
MakeCode(0x425D98);
MakeFunction(0x425D98, 0x425DE3);
MakeUnkn(0x425DE4, 1);
MakeNameEx(0x425DE4, "TThemeServices.DrawElement", 0x20);
MakeComm(0x425DE4, "'procedure TThemeServices.DrawElement(DC:HDC; Details:TThemedElementDetails; const R:TRect; ClipRect:PRect);'");
MakeCode(0x425DE4);
MakeFunction(0x425DE4, 0x425E27);
MakeUnkn(0x425E28, 1);
MakeNameEx(0x425E28, "TThemeServices.DrawParentBackground", 0x20);
MakeComm(0x425E28, "'procedure TThemeServices.DrawParentBackground(Window:HWND; Target:HDC; Details:PThemedElementDetails; OnlyIfTransparent:Boolean; Bounds:PRect);'");
MakeCode(0x425E28);
MakeCode(0x425E6A);
MakeCode(0x425E6C);
MakeCode(0x425E85);
MakeFunction(0x425E28, 0x425E8D);
MakeUnkn(0x425E90, 1);
MakeNameEx(0x425E90, "TThemeServices.GetElementDetails", 0x20);
MakeComm(0x425E90, "'function TThemeServices.GetElementDetails(Detail:TThemedEdit):TThemedElementDetails;'");
MakeCode(0x425E90);
MakeCode(0x425E9F);
MakeCode(0x425EAD);
MakeCode(0x425EBB);
MakeCode(0x425EC2);
MakeFunction(0x425E90, 0x425ECC);
MakeUnkn(0x425ECC, 1);
MakeNameEx(0x425ECC, "TThemeServices.GetElementDetails_0", 0x20);
MakeComm(0x425ECC, "'function TThemeServices.GetElementDetails(Detail:TThemedWindow):TThemedElementDetails;'");
MakeCode(0x425ECC);
MakeCode(0x425FEA);
MakeCode(0x425FFB);
MakeCode(0x42600C);
MakeCode(0x42601D);
MakeCode(0x42602E);
MakeCode(0x42603F);
MakeCode(0x426050);
MakeCode(0x426061);
MakeCode(0x426072);
MakeCode(0x426083);
MakeCode(0x426094);
MakeCode(0x4260A5);
MakeCode(0x4260B6);
MakeCode(0x4260C7);
MakeCode(0x4260D8);
MakeCode(0x4260E9);
MakeCode(0x4260FA);
MakeCode(0x42610B);
MakeCode(0x42611C);
MakeCode(0x42612D);
MakeCode(0x42613E);
MakeCode(0x42614F);
MakeCode(0x426160);
MakeCode(0x426171);
MakeCode(0x426182);
MakeCode(0x426193);
MakeCode(0x4261A4);
MakeCode(0x4261B5);
MakeCode(0x4261C6);
MakeCode(0x4261D4);
MakeCode(0x4261E2);
MakeCode(0x4261F0);
MakeCode(0x4261FE);
MakeCode(0x42620C);
MakeCode(0x42621A);
MakeCode(0x426228);
MakeCode(0x426236);
MakeCode(0x426244);
MakeCode(0x42624B);
MakeFunction(0x425ECC, 0x426255);
MakeUnkn(0x426258, 1);
MakeNameEx(0x426258, "TThemeServices.PaintBorder", 0x20);
MakeComm(0x426258, "'procedure TThemeServices.PaintBorder(Control:TWinControl; EraseLRCorner:Boolean);'");
MakeCode(0x426258);
MakeCode(0x42634F);
MakeCode(0x426393);
MakeCode(0x4263A0);
MakeCode(0x4263B3);
MakeCode(0x4263B8);
MakeCode(0x4263BA);
MakeFunction(0x426258, 0x4263C1);
MakeUnkn(0x4263C4, 1);
MakeNameEx(0x4263C4, "TThemeServices.UpdateThemes", 0x20);
MakeComm(0x4263C4, "'procedure TThemeServices.UpdateThemes;'");
MakeCode(0x4263C4);
MakeCode(0x4263D4);
MakeFunction(0x4263C4, 0x4263DE);
MakeUnkn(0x4263E0, 1);
MakeNameEx(0x4263E0, "Finalization_9", 0x20);
MakeComm(0x4263E0, "'procedure Finalization;'");
MakeCode(0x4263E0);
MakeCode(0x42640D);
MakeCode(0x42641A);
MakeCode(0x42641B);
MakeCode(0x426420);
MakeFunction(0x4263E0, 0x426424);
MakeCode(0x426424);
MakeFunction(0x426424, 0x42642C);
MakeUnkn(0x42642C, 1);
MakeNameEx(0x42642C, "RTTI_42642C_Enumeration_TTextLayout", 0);
MakeDword(0x42642C);
MakeUnkn(0x426430, 1);
MakeNameEx(0x426430, "", 0);
MakeByte(0x426430);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426431, 0x42643D);
MakeByte(0x42643D);
MakeDword(0x42643E);
MakeDword(0x426442);
MakeDword(0x426446);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42644A, 0x426450);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426450, 0x426459);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426459, 0x426462);
MakeUnkn(0x42646C, 1);
MakeNameEx(0x42646C, "VMT_42646C_TCustomLabel", 0);
MakeDword(0x42646C);
MakeDword(0x426470);
MakeDword(0x426474);
MakeDword(0x426478);
MakeDword(0x42647C);
MakeDword(0x426480);
MakeDword(0x426484);
MakeDword(0x426488);
MakeUnkn(0x42654C, 1);
MakeNameEx(0x42654C, "TCustomLabel_DynamicTable", 0);
MakeWord(0x42654C);
MakeWord(0x42654E);
MakeWord(0x426550);
MakeWord(0x426552);
MakeWord(0x426554);
MakeWord(0x426556);
MakeWord(0x426558);
MakeWord(0x42655A);
MakeDword(0x42655C);
MakeDword(0x426560);
MakeDword(0x426564);
MakeDword(0x426568);
MakeDword(0x42656C);
MakeDword(0x426570);
MakeDword(0x426574);
MakeDword(0x42648C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426578, 0x426585);
MakeDword(0x426490);
MakeDword(0x426494);
MakeDword(0x426498);
MakeDword(0x42649C);
MakeDword(0x4264A0);
MakeDword(0x4264A4);
MakeDword(0x4264A8);
MakeDword(0x4264AC);
MakeDword(0x4264B0);
MakeDword(0x4264B4);
MakeComm(0x4264B8, "'+0'");
MakeDword(0x4264B8);
MakeComm(0x4264BC, "'+4'");
MakeDword(0x4264BC);
MakeComm(0x4264C0, "'+8'");
MakeDword(0x4264C0);
MakeComm(0x4264C4, "'+C'");
MakeDword(0x4264C4);
MakeComm(0x4264C8, "'+10'");
MakeDword(0x4264C8);
MakeComm(0x4264CC, "'+14'");
MakeDword(0x4264CC);
MakeComm(0x4264D0, "'+18'");
MakeDword(0x4264D0);
MakeComm(0x4264D4, "'+1C'");
MakeDword(0x4264D4);
MakeComm(0x4264D8, "'+20'");
MakeDword(0x4264D8);
MakeComm(0x4264DC, "'+24'");
MakeDword(0x4264DC);
MakeComm(0x4264E0, "'+28'");
MakeDword(0x4264E0);
MakeComm(0x4264E4, "'+2C'");
MakeDword(0x4264E4);
MakeComm(0x4264E8, "'+30'");
MakeDword(0x4264E8);
MakeComm(0x4264EC, "'+34'");
MakeDword(0x4264EC);
MakeComm(0x4264F0, "'+38'");
MakeDword(0x4264F0);
MakeComm(0x4264F4, "'+3C'");
MakeDword(0x4264F4);
MakeComm(0x4264F8, "'+40'");
MakeDword(0x4264F8);
MakeComm(0x4264FC, "'+44'");
MakeDword(0x4264FC);
MakeComm(0x426500, "'+48'");
MakeDword(0x426500);
MakeComm(0x426504, "'+4C'");
MakeDword(0x426504);
MakeComm(0x426508, "'+50'");
MakeDword(0x426508);
MakeComm(0x42650C, "'+54'");
MakeDword(0x42650C);
MakeComm(0x426510, "'+58'");
MakeDword(0x426510);
MakeComm(0x426514, "'+5C'");
MakeDword(0x426514);
MakeComm(0x426518, "'+60'");
MakeDword(0x426518);
MakeComm(0x42651C, "'+64'");
MakeDword(0x42651C);
MakeComm(0x426520, "'+68'");
MakeDword(0x426520);
MakeComm(0x426524, "'+6C'");
MakeDword(0x426524);
MakeComm(0x426528, "'+70'");
MakeDword(0x426528);
MakeComm(0x42652C, "'+74'");
MakeDword(0x42652C);
MakeComm(0x426530, "'+78'");
MakeDword(0x426530);
MakeComm(0x426534, "'+7C'");
MakeDword(0x426534);
MakeComm(0x426538, "'+80'");
MakeDword(0x426538);
MakeComm(0x42653C, "'+84'");
MakeDword(0x42653C);
MakeComm(0x426540, "'+88'");
MakeDword(0x426540);
MakeComm(0x426544, "'+8C'");
MakeDword(0x426544);
MakeComm(0x426548, "'+90'");
MakeDword(0x426548);
MakeUnkn(0x426588, 1);
MakeNameEx(0x426588, "RTTI_426588_Class_TCustomLabel", 0);
MakeDword(0x426588);
MakeUnkn(0x42658C, 1);
MakeNameEx(0x42658C, "", 0);
MakeByte(0x42658C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42658D, 0x42659A);
MakeDword(0x42659A);
MakeDword(0x42659E);
MakeWord(0x4265A2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4265A4, 0x4265AD);
MakeWord(0x4265AD);
MakeUnkn(0x4265B0, 1);
MakeNameEx(0x4265B0, "VMT_4265B0_TLabel", 0);
MakeDword(0x4265B0);
MakeDword(0x4265B4);
MakeDword(0x4265B8);
MakeDword(0x4265BC);
MakeDword(0x4265C0);
MakeDword(0x4265C4);
MakeDword(0x4265C8);
MakeDword(0x4265CC);
MakeDword(0x4265D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426690, 0x426697);
MakeDword(0x4265D4);
MakeDword(0x4265D8);
MakeDword(0x4265DC);
MakeDword(0x4265E0);
MakeDword(0x4265E4);
MakeDword(0x4265E8);
MakeDword(0x4265EC);
MakeDword(0x4265F0);
MakeDword(0x4265F4);
MakeDword(0x4265F8);
MakeComm(0x4265FC, "'+0'");
MakeDword(0x4265FC);
MakeComm(0x426600, "'+4'");
MakeDword(0x426600);
MakeComm(0x426604, "'+8'");
MakeDword(0x426604);
MakeComm(0x426608, "'+C'");
MakeDword(0x426608);
MakeComm(0x42660C, "'+10'");
MakeDword(0x42660C);
MakeComm(0x426610, "'+14'");
MakeDword(0x426610);
MakeComm(0x426614, "'+18'");
MakeDword(0x426614);
MakeComm(0x426618, "'+1C'");
MakeDword(0x426618);
MakeComm(0x42661C, "'+20'");
MakeDword(0x42661C);
MakeComm(0x426620, "'+24'");
MakeDword(0x426620);
MakeComm(0x426624, "'+28'");
MakeDword(0x426624);
MakeComm(0x426628, "'+2C'");
MakeDword(0x426628);
MakeComm(0x42662C, "'+30'");
MakeDword(0x42662C);
MakeComm(0x426630, "'+34'");
MakeDword(0x426630);
MakeComm(0x426634, "'+38'");
MakeDword(0x426634);
MakeComm(0x426638, "'+3C'");
MakeDword(0x426638);
MakeComm(0x42663C, "'+40'");
MakeDword(0x42663C);
MakeComm(0x426640, "'+44'");
MakeDword(0x426640);
MakeComm(0x426644, "'+48'");
MakeDword(0x426644);
MakeComm(0x426648, "'+4C'");
MakeDword(0x426648);
MakeComm(0x42664C, "'+50'");
MakeDword(0x42664C);
MakeComm(0x426650, "'+54'");
MakeDword(0x426650);
MakeComm(0x426654, "'+58'");
MakeDword(0x426654);
MakeComm(0x426658, "'+5C'");
MakeDword(0x426658);
MakeComm(0x42665C, "'+60'");
MakeDword(0x42665C);
MakeComm(0x426660, "'+64'");
MakeDword(0x426660);
MakeComm(0x426664, "'+68'");
MakeDword(0x426664);
MakeComm(0x426668, "'+6C'");
MakeDword(0x426668);
MakeComm(0x42666C, "'+70'");
MakeDword(0x42666C);
MakeComm(0x426670, "'+74'");
MakeDword(0x426670);
MakeComm(0x426674, "'+78'");
MakeDword(0x426674);
MakeComm(0x426678, "'+7C'");
MakeDword(0x426678);
MakeComm(0x42667C, "'+80'");
MakeDword(0x42667C);
MakeComm(0x426680, "'+84'");
MakeDword(0x426680);
MakeComm(0x426684, "'+88'");
MakeDword(0x426684);
MakeComm(0x426688, "'+8C'");
MakeDword(0x426688);
MakeComm(0x42668C, "'+90'");
MakeDword(0x42668C);
MakeUnkn(0x426698, 1);
MakeNameEx(0x426698, "RTTI_426698_Class_TLabel", 0);
MakeDword(0x426698);
MakeUnkn(0x42669C, 1);
MakeNameEx(0x42669C, "", 0);
MakeByte(0x42669C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42669D, 0x4266A4);
MakeDword(0x4266A4);
MakeDword(0x4266A8);
MakeWord(0x4266AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4266AE, 0x4266B7);
MakeWord(0x4266B7);
MakeDword(0x4266B9);
MakeDword(0x4266BD);
MakeDword(0x4266C1);
MakeDword(0x4266C5);
MakeDword(0x4266C9);
MakeDword(0x4266CD);
MakeWord(0x4266D1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4266D3, 0x4266D9);
MakeDword(0x4266D9);
MakeDword(0x4266DD);
MakeDword(0x4266E1);
MakeDword(0x4266E5);
MakeDword(0x4266E9);
MakeDword(0x4266ED);
MakeWord(0x4266F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4266F3, 0x4266FD);
MakeDword(0x4266FD);
MakeDword(0x426701);
MakeDword(0x426705);
MakeDword(0x426709);
MakeDword(0x42670D);
MakeDword(0x426711);
MakeWord(0x426715);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426717, 0x42671F);
MakeDword(0x42671F);
MakeDword(0x426723);
MakeDword(0x426727);
MakeDword(0x42672B);
MakeDword(0x42672F);
MakeDword(0x426733);
MakeWord(0x426737);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426739, 0x426742);
MakeDword(0x426742);
MakeDword(0x426746);
MakeDword(0x42674A);
MakeDword(0x42674E);
MakeDword(0x426752);
MakeDword(0x426756);
MakeWord(0x42675A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42675C, 0x426765);
MakeDword(0x426765);
MakeDword(0x426769);
MakeDword(0x42676D);
MakeDword(0x426771);
MakeDword(0x426775);
MakeDword(0x426779);
MakeWord(0x42677D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42677F, 0x426787);
MakeDword(0x426787);
MakeDword(0x42678B);
MakeDword(0x42678F);
MakeDword(0x426793);
MakeDword(0x426797);
MakeDword(0x42679B);
MakeWord(0x42679F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4267A1, 0x4267A7);
MakeDword(0x4267A7);
MakeDword(0x4267AB);
MakeDword(0x4267AF);
MakeDword(0x4267B3);
MakeDword(0x4267B7);
MakeDword(0x4267BB);
MakeWord(0x4267BF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4267C1, 0x4267CD);
MakeDword(0x4267CD);
MakeDword(0x4267D1);
MakeDword(0x4267D5);
MakeDword(0x4267D9);
MakeDword(0x4267DD);
MakeDword(0x4267E1);
MakeWord(0x4267E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4267E7, 0x4267F2);
MakeDword(0x4267F2);
MakeDword(0x4267F6);
MakeDword(0x4267FA);
MakeDword(0x4267FE);
MakeDword(0x426802);
MakeDword(0x426806);
MakeWord(0x42680A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42680C, 0x426815);
MakeDword(0x426815);
MakeDword(0x426819);
MakeDword(0x42681D);
MakeDword(0x426821);
MakeDword(0x426825);
MakeDword(0x426829);
MakeWord(0x42682D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42682F, 0x426838);
MakeDword(0x426838);
MakeDword(0x42683C);
MakeDword(0x426840);
MakeDword(0x426844);
MakeDword(0x426848);
MakeDword(0x42684C);
MakeWord(0x426850);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426852, 0x42685A);
MakeDword(0x42685A);
MakeDword(0x42685E);
MakeDword(0x426862);
MakeDword(0x426866);
MakeDword(0x42686A);
MakeDword(0x42686E);
MakeWord(0x426872);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426874, 0x426881);
MakeDword(0x426881);
MakeDword(0x426885);
MakeDword(0x426889);
MakeDword(0x42688D);
MakeDword(0x426891);
MakeDword(0x426895);
MakeWord(0x426899);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42689B, 0x4268A0);
MakeDword(0x4268A0);
MakeDword(0x4268A4);
MakeDword(0x4268A8);
MakeDword(0x4268AC);
MakeDword(0x4268B0);
MakeDword(0x4268B4);
MakeWord(0x4268B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4268BA, 0x4268C9);
MakeDword(0x4268C9);
MakeDword(0x4268CD);
MakeDword(0x4268D1);
MakeDword(0x4268D5);
MakeDword(0x4268D9);
MakeDword(0x4268DD);
MakeWord(0x4268E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4268E3, 0x4268EF);
MakeDword(0x4268EF);
MakeDword(0x4268F3);
MakeDword(0x4268F7);
MakeDword(0x4268FB);
MakeDword(0x4268FF);
MakeDword(0x426903);
MakeWord(0x426907);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426909, 0x426914);
MakeDword(0x426914);
MakeDword(0x426918);
MakeDword(0x42691C);
MakeDword(0x426920);
MakeDword(0x426924);
MakeDword(0x426928);
MakeWord(0x42692C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42692E, 0x42693D);
MakeDword(0x42693D);
MakeDword(0x426941);
MakeDword(0x426945);
MakeDword(0x426949);
MakeDword(0x42694D);
MakeDword(0x426951);
MakeWord(0x426955);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426957, 0x426961);
MakeDword(0x426961);
MakeDword(0x426965);
MakeDword(0x426969);
MakeDword(0x42696D);
MakeDword(0x426971);
MakeDword(0x426975);
MakeWord(0x426979);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42697B, 0x426989);
MakeDword(0x426989);
MakeDword(0x42698D);
MakeDword(0x426991);
MakeDword(0x426995);
MakeDword(0x426999);
MakeDword(0x42699D);
MakeWord(0x4269A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4269A3, 0x4269AC);
MakeDword(0x4269AC);
MakeDword(0x4269B0);
MakeDword(0x4269B4);
MakeDword(0x4269B8);
MakeDword(0x4269BC);
MakeDword(0x4269C0);
MakeWord(0x4269C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4269C6, 0x4269D2);
MakeDword(0x4269D2);
MakeDword(0x4269D6);
MakeDword(0x4269DA);
MakeDword(0x4269DE);
MakeDword(0x4269E2);
MakeDword(0x4269E6);
MakeWord(0x4269EA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4269EC, 0x4269F3);
MakeDword(0x4269F3);
MakeDword(0x4269F7);
MakeDword(0x4269FB);
MakeDword(0x4269FF);
MakeDword(0x426A03);
MakeDword(0x426A07);
MakeWord(0x426A0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426A0D, 0x426A15);
MakeDword(0x426A15);
MakeDword(0x426A19);
MakeDword(0x426A1D);
MakeDword(0x426A21);
MakeDword(0x426A25);
MakeDword(0x426A29);
MakeWord(0x426A2D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426A2F, 0x426A38);
MakeDword(0x426A38);
MakeDword(0x426A3C);
MakeDword(0x426A40);
MakeDword(0x426A44);
MakeDword(0x426A48);
MakeDword(0x426A4C);
MakeWord(0x426A50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426A52, 0x426A5A);
MakeDword(0x426A5A);
MakeDword(0x426A5E);
MakeDword(0x426A62);
MakeDword(0x426A66);
MakeDword(0x426A6A);
MakeDword(0x426A6E);
MakeWord(0x426A72);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426A74, 0x426A83);
MakeDword(0x426A83);
MakeDword(0x426A87);
MakeDword(0x426A8B);
MakeDword(0x426A8F);
MakeDword(0x426A93);
MakeDword(0x426A97);
MakeWord(0x426A9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426A9D, 0x426AA8);
MakeDword(0x426AA8);
MakeDword(0x426AAC);
MakeDword(0x426AB0);
MakeDword(0x426AB4);
MakeDword(0x426AB8);
MakeDword(0x426ABC);
MakeWord(0x426AC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426AC2, 0x426ACD);
MakeDword(0x426ACD);
MakeDword(0x426AD1);
MakeDword(0x426AD5);
MakeDword(0x426AD9);
MakeDword(0x426ADD);
MakeDword(0x426AE1);
MakeWord(0x426AE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426AE7, 0x426AF2);
MakeDword(0x426AF2);
MakeDword(0x426AF6);
MakeDword(0x426AFA);
MakeDword(0x426AFE);
MakeDword(0x426B02);
MakeDword(0x426B06);
MakeWord(0x426B0A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426B0C, 0x426B16);
MakeDword(0x426B16);
MakeDword(0x426B1A);
MakeDword(0x426B1E);
MakeDword(0x426B22);
MakeDword(0x426B26);
MakeDword(0x426B2A);
MakeWord(0x426B2E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426B30, 0x426B3A);
MakeDword(0x426B3A);
MakeDword(0x426B3E);
MakeDword(0x426B42);
MakeDword(0x426B46);
MakeDword(0x426B4A);
MakeDword(0x426B4E);
MakeWord(0x426B52);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426B54, 0x426B60);
MakeDword(0x426B60);
MakeDword(0x426B64);
MakeDword(0x426B68);
MakeDword(0x426B6C);
MakeDword(0x426B70);
MakeDword(0x426B74);
MakeWord(0x426B78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426B7A, 0x426B86);
MakeDword(0x426B86);
MakeDword(0x426B8A);
MakeDword(0x426B8E);
MakeDword(0x426B92);
MakeDword(0x426B96);
MakeDword(0x426B9A);
MakeWord(0x426B9E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426BA0, 0x426BAA);
MakeDword(0x426BAA);
MakeDword(0x426BAE);
MakeDword(0x426BB2);
MakeDword(0x426BB6);
MakeDword(0x426BBA);
MakeDword(0x426BBE);
MakeWord(0x426BC2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426BC4, 0x426BD1);
MakeDword(0x426BD1);
MakeDword(0x426BD5);
MakeDword(0x426BD9);
MakeDword(0x426BDD);
MakeDword(0x426BE1);
MakeDword(0x426BE5);
MakeWord(0x426BE9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426BEB, 0x426BF8);
MakeDword(0x426BF8);
MakeDword(0x426BFC);
MakeDword(0x426C00);
MakeDword(0x426C04);
MakeDword(0x426C08);
MakeDword(0x426C0C);
MakeWord(0x426C10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426C12, 0x426C1E);
MakeDword(0x426C1E);
MakeDword(0x426C22);
MakeDword(0x426C26);
MakeDword(0x426C2A);
MakeDword(0x426C2E);
MakeDword(0x426C32);
MakeWord(0x426C36);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426C38, 0x426C44);
MakeUnkn(0x426C44, 1);
MakeNameEx(0x426C44, "RTTI_426C44_Enumeration_TEditCharCase", 0);
MakeDword(0x426C44);
MakeUnkn(0x426C48, 1);
MakeNameEx(0x426C48, "", 0);
MakeByte(0x426C48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426C49, 0x426C57);
MakeByte(0x426C57);
MakeDword(0x426C58);
MakeDword(0x426C5C);
MakeDword(0x426C60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426C64, 0x426C6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426C6D, 0x426C79);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426C79, 0x426C85);
MakeUnkn(0x426C90, 1);
MakeNameEx(0x426C90, "VMT_426C90_TCustomEdit", 0);
MakeDword(0x426C90);
MakeDword(0x426C94);
MakeDword(0x426C98);
MakeDword(0x426C9C);
MakeDword(0x426CA0);
MakeDword(0x426CA4);
MakeDword(0x426CA8);
MakeDword(0x426CAC);
MakeUnkn(0x426DC4, 1);
MakeNameEx(0x426DC4, "TCustomEdit_DynamicTable", 0);
MakeWord(0x426DC4);
MakeWord(0x426DC6);
MakeWord(0x426DC8);
MakeWord(0x426DCA);
MakeWord(0x426DCC);
MakeWord(0x426DCE);
MakeWord(0x426DD0);
MakeWord(0x426DD2);
MakeWord(0x426DD4);
MakeDword(0x426DD6);
MakeDword(0x426DDA);
MakeDword(0x426DDE);
MakeDword(0x426DE2);
MakeDword(0x426DE6);
MakeDword(0x426DEA);
MakeDword(0x426DEE);
MakeDword(0x426DF2);
MakeDword(0x426CB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426DF6, 0x426E02);
MakeDword(0x426CB4);
MakeDword(0x426CB8);
MakeDword(0x426CBC);
MakeDword(0x426CC0);
MakeDword(0x426CC4);
MakeDword(0x426CC8);
MakeDword(0x426CCC);
MakeDword(0x426CD0);
MakeDword(0x426CD4);
MakeDword(0x426CD8);
MakeComm(0x426CDC, "'+0'");
MakeDword(0x426CDC);
MakeComm(0x426CE0, "'+4'");
MakeDword(0x426CE0);
MakeComm(0x426CE4, "'+8'");
MakeDword(0x426CE4);
MakeComm(0x426CE8, "'+C'");
MakeDword(0x426CE8);
MakeComm(0x426CEC, "'+10'");
MakeDword(0x426CEC);
MakeComm(0x426CF0, "'+14'");
MakeDword(0x426CF0);
MakeComm(0x426CF4, "'+18'");
MakeDword(0x426CF4);
MakeComm(0x426CF8, "'+1C'");
MakeDword(0x426CF8);
MakeComm(0x426CFC, "'+20'");
MakeDword(0x426CFC);
MakeComm(0x426D00, "'+24'");
MakeDword(0x426D00);
MakeComm(0x426D04, "'+28'");
MakeDword(0x426D04);
MakeComm(0x426D08, "'+2C'");
MakeDword(0x426D08);
MakeComm(0x426D0C, "'+30'");
MakeDword(0x426D0C);
MakeComm(0x426D10, "'+34'");
MakeDword(0x426D10);
MakeComm(0x426D14, "'+38'");
MakeDword(0x426D14);
MakeComm(0x426D18, "'+3C'");
MakeDword(0x426D18);
MakeComm(0x426D1C, "'+40'");
MakeDword(0x426D1C);
MakeComm(0x426D20, "'+44'");
MakeDword(0x426D20);
MakeComm(0x426D24, "'+48'");
MakeDword(0x426D24);
MakeComm(0x426D28, "'+4C'");
MakeDword(0x426D28);
MakeComm(0x426D2C, "'+50'");
MakeDword(0x426D2C);
MakeComm(0x426D30, "'+54'");
MakeDword(0x426D30);
MakeComm(0x426D34, "'+58'");
MakeDword(0x426D34);
MakeComm(0x426D38, "'+5C'");
MakeDword(0x426D38);
MakeComm(0x426D3C, "'+60'");
MakeDword(0x426D3C);
MakeComm(0x426D40, "'+64'");
MakeDword(0x426D40);
MakeComm(0x426D44, "'+68'");
MakeDword(0x426D44);
MakeComm(0x426D48, "'+6C'");
MakeDword(0x426D48);
MakeComm(0x426D4C, "'+70'");
MakeDword(0x426D4C);
MakeComm(0x426D50, "'+74'");
MakeDword(0x426D50);
MakeComm(0x426D54, "'+78'");
MakeDword(0x426D54);
MakeComm(0x426D58, "'+7C'");
MakeDword(0x426D58);
MakeComm(0x426D5C, "'+80'");
MakeDword(0x426D5C);
MakeComm(0x426D60, "'+84'");
MakeDword(0x426D60);
MakeComm(0x426D64, "'+88'");
MakeDword(0x426D64);
MakeComm(0x426D68, "'+8C'");
MakeDword(0x426D68);
MakeComm(0x426D6C, "'+90'");
MakeDword(0x426D6C);
MakeComm(0x426D70, "'+94'");
MakeDword(0x426D70);
MakeComm(0x426D74, "'+98'");
MakeDword(0x426D74);
MakeComm(0x426D78, "'+9C'");
MakeDword(0x426D78);
MakeComm(0x426D7C, "'+A0'");
MakeDword(0x426D7C);
MakeComm(0x426D80, "'+A4'");
MakeDword(0x426D80);
MakeComm(0x426D84, "'+A8'");
MakeDword(0x426D84);
MakeComm(0x426D88, "'+AC'");
MakeDword(0x426D88);
MakeComm(0x426D8C, "'+B0'");
MakeDword(0x426D8C);
MakeComm(0x426D90, "'+B4'");
MakeDword(0x426D90);
MakeComm(0x426D94, "'+B8'");
MakeDword(0x426D94);
MakeComm(0x426D98, "'+BC'");
MakeDword(0x426D98);
MakeComm(0x426D9C, "'+C0'");
MakeDword(0x426D9C);
MakeComm(0x426DA0, "'+C4'");
MakeDword(0x426DA0);
MakeComm(0x426DA4, "'+C8'");
MakeDword(0x426DA4);
MakeComm(0x426DA8, "'+CC'");
MakeDword(0x426DA8);
MakeComm(0x426DAC, "'+D0'");
MakeDword(0x426DAC);
MakeComm(0x426DB0, "'+D4'");
MakeDword(0x426DB0);
MakeComm(0x426DB4, "'+D8'");
MakeDword(0x426DB4);
MakeComm(0x426DB8, "'+DC'");
MakeDword(0x426DB8);
MakeComm(0x426DBC, "'+E0'");
MakeDword(0x426DBC);
MakeComm(0x426DC0, "'+E4'");
MakeDword(0x426DC0);
MakeUnkn(0x426E04, 1);
MakeNameEx(0x426E04, "RTTI_426E04_Class_TCustomEdit", 0);
MakeDword(0x426E04);
MakeUnkn(0x426E08, 1);
MakeNameEx(0x426E08, "", 0);
MakeByte(0x426E08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426E09, 0x426E15);
MakeDword(0x426E15);
MakeDword(0x426E19);
MakeWord(0x426E1D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426E1F, 0x426E28);
MakeWord(0x426E28);
MakeDword(0x426E2A);
MakeDword(0x426E2E);
MakeDword(0x426E32);
MakeDword(0x426E36);
MakeDword(0x426E3A);
MakeDword(0x426E3E);
MakeWord(0x426E42);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426E44, 0x426E4C);
MakeUnkn(0x426E4C, 1);
MakeNameEx(0x426E4C, "VMT_426E4C_TEdit", 0);
MakeDword(0x426E4C);
MakeDword(0x426E50);
MakeDword(0x426E54);
MakeDword(0x426E58);
MakeDword(0x426E5C);
MakeDword(0x426E60);
MakeDword(0x426E64);
MakeDword(0x426E68);
MakeDword(0x426E6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426F80, 0x426F86);
MakeDword(0x426E70);
MakeDword(0x426E74);
MakeDword(0x426E78);
MakeDword(0x426E7C);
MakeDword(0x426E80);
MakeDword(0x426E84);
MakeDword(0x426E88);
MakeDword(0x426E8C);
MakeDword(0x426E90);
MakeDword(0x426E94);
MakeComm(0x426E98, "'+0'");
MakeDword(0x426E98);
MakeComm(0x426E9C, "'+4'");
MakeDword(0x426E9C);
MakeComm(0x426EA0, "'+8'");
MakeDword(0x426EA0);
MakeComm(0x426EA4, "'+C'");
MakeDword(0x426EA4);
MakeComm(0x426EA8, "'+10'");
MakeDword(0x426EA8);
MakeComm(0x426EAC, "'+14'");
MakeDword(0x426EAC);
MakeComm(0x426EB0, "'+18'");
MakeDword(0x426EB0);
MakeComm(0x426EB4, "'+1C'");
MakeDword(0x426EB4);
MakeComm(0x426EB8, "'+20'");
MakeDword(0x426EB8);
MakeComm(0x426EBC, "'+24'");
MakeDword(0x426EBC);
MakeComm(0x426EC0, "'+28'");
MakeDword(0x426EC0);
MakeComm(0x426EC4, "'+2C'");
MakeDword(0x426EC4);
MakeComm(0x426EC8, "'+30'");
MakeDword(0x426EC8);
MakeComm(0x426ECC, "'+34'");
MakeDword(0x426ECC);
MakeComm(0x426ED0, "'+38'");
MakeDword(0x426ED0);
MakeComm(0x426ED4, "'+3C'");
MakeDword(0x426ED4);
MakeComm(0x426ED8, "'+40'");
MakeDword(0x426ED8);
MakeComm(0x426EDC, "'+44'");
MakeDword(0x426EDC);
MakeComm(0x426EE0, "'+48'");
MakeDword(0x426EE0);
MakeComm(0x426EE4, "'+4C'");
MakeDword(0x426EE4);
MakeComm(0x426EE8, "'+50'");
MakeDword(0x426EE8);
MakeComm(0x426EEC, "'+54'");
MakeDword(0x426EEC);
MakeComm(0x426EF0, "'+58'");
MakeDword(0x426EF0);
MakeComm(0x426EF4, "'+5C'");
MakeDword(0x426EF4);
MakeComm(0x426EF8, "'+60'");
MakeDword(0x426EF8);
MakeComm(0x426EFC, "'+64'");
MakeDword(0x426EFC);
MakeComm(0x426F00, "'+68'");
MakeDword(0x426F00);
MakeComm(0x426F04, "'+6C'");
MakeDword(0x426F04);
MakeComm(0x426F08, "'+70'");
MakeDword(0x426F08);
MakeComm(0x426F0C, "'+74'");
MakeDword(0x426F0C);
MakeComm(0x426F10, "'+78'");
MakeDword(0x426F10);
MakeComm(0x426F14, "'+7C'");
MakeDword(0x426F14);
MakeComm(0x426F18, "'+80'");
MakeDword(0x426F18);
MakeComm(0x426F1C, "'+84'");
MakeDword(0x426F1C);
MakeComm(0x426F20, "'+88'");
MakeDword(0x426F20);
MakeComm(0x426F24, "'+8C'");
MakeDword(0x426F24);
MakeComm(0x426F28, "'+90'");
MakeDword(0x426F28);
MakeComm(0x426F2C, "'+94'");
MakeDword(0x426F2C);
MakeComm(0x426F30, "'+98'");
MakeDword(0x426F30);
MakeComm(0x426F34, "'+9C'");
MakeDword(0x426F34);
MakeComm(0x426F38, "'+A0'");
MakeDword(0x426F38);
MakeComm(0x426F3C, "'+A4'");
MakeDword(0x426F3C);
MakeComm(0x426F40, "'+A8'");
MakeDword(0x426F40);
MakeComm(0x426F44, "'+AC'");
MakeDword(0x426F44);
MakeComm(0x426F48, "'+B0'");
MakeDword(0x426F48);
MakeComm(0x426F4C, "'+B4'");
MakeDword(0x426F4C);
MakeComm(0x426F50, "'+B8'");
MakeDword(0x426F50);
MakeComm(0x426F54, "'+BC'");
MakeDword(0x426F54);
MakeComm(0x426F58, "'+C0'");
MakeDword(0x426F58);
MakeComm(0x426F5C, "'+C4'");
MakeDword(0x426F5C);
MakeComm(0x426F60, "'+C8'");
MakeDword(0x426F60);
MakeComm(0x426F64, "'+CC'");
MakeDword(0x426F64);
MakeComm(0x426F68, "'+D0'");
MakeDword(0x426F68);
MakeComm(0x426F6C, "'+D4'");
MakeDword(0x426F6C);
MakeComm(0x426F70, "'+D8'");
MakeDword(0x426F70);
MakeComm(0x426F74, "'+DC'");
MakeDword(0x426F74);
MakeComm(0x426F78, "'+E0'");
MakeDword(0x426F78);
MakeComm(0x426F7C, "'+E4'");
MakeDword(0x426F7C);
MakeUnkn(0x426F88, 1);
MakeNameEx(0x426F88, "RTTI_426F88_Class_TEdit", 0);
MakeDword(0x426F88);
MakeUnkn(0x426F8C, 1);
MakeNameEx(0x426F8C, "", 0);
MakeByte(0x426F8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426F8D, 0x426F93);
MakeDword(0x426F93);
MakeDword(0x426F97);
MakeWord(0x426F9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426F9D, 0x426FA6);
MakeWord(0x426FA6);
MakeDword(0x426FA8);
MakeDword(0x426FAC);
MakeDword(0x426FB0);
MakeDword(0x426FB4);
MakeDword(0x426FB8);
MakeDword(0x426FBC);
MakeWord(0x426FC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426FC2, 0x426FCA);
MakeDword(0x426FCA);
MakeDword(0x426FCE);
MakeDword(0x426FD2);
MakeDword(0x426FD6);
MakeDword(0x426FDA);
MakeDword(0x426FDE);
MakeWord(0x426FE2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x426FE4, 0x426FEF);
MakeDword(0x426FEF);
MakeDword(0x426FF3);
MakeDword(0x426FF7);
MakeDword(0x426FFB);
MakeDword(0x426FFF);
MakeDword(0x427003);
MakeWord(0x427007);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427009, 0x427012);
MakeDword(0x427012);
MakeDword(0x427016);
MakeDword(0x42701A);
MakeDword(0x42701E);
MakeDword(0x427022);
MakeDword(0x427026);
MakeWord(0x42702A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42702C, 0x427037);
MakeDword(0x427037);
MakeDword(0x42703B);
MakeDword(0x42703F);
MakeDword(0x427043);
MakeDword(0x427047);
MakeDword(0x42704B);
MakeWord(0x42704F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427051, 0x42705C);
MakeDword(0x42705C);
MakeDword(0x427060);
MakeDword(0x427064);
MakeDword(0x427068);
MakeDword(0x42706C);
MakeDword(0x427070);
MakeWord(0x427074);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427076, 0x427080);
MakeDword(0x427080);
MakeDword(0x427084);
MakeDword(0x427088);
MakeDword(0x42708C);
MakeDword(0x427090);
MakeDword(0x427094);
MakeWord(0x427098);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42709A, 0x4270A5);
MakeDword(0x4270A5);
MakeDword(0x4270A9);
MakeDword(0x4270AD);
MakeDword(0x4270B1);
MakeDword(0x4270B5);
MakeDword(0x4270B9);
MakeWord(0x4270BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4270BF, 0x4270C8);
MakeDword(0x4270C8);
MakeDword(0x4270CC);
MakeDword(0x4270D0);
MakeDword(0x4270D4);
MakeDword(0x4270D8);
MakeDword(0x4270DC);
MakeWord(0x4270E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4270E2, 0x4270EE);
MakeDword(0x4270EE);
MakeDword(0x4270F2);
MakeDword(0x4270F6);
MakeDword(0x4270FA);
MakeDword(0x4270FE);
MakeDword(0x427102);
MakeWord(0x427106);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427108, 0x427111);
MakeDword(0x427111);
MakeDword(0x427115);
MakeDword(0x427119);
MakeDword(0x42711D);
MakeDword(0x427121);
MakeDword(0x427125);
MakeWord(0x427129);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42712B, 0x427131);
MakeDword(0x427131);
MakeDword(0x427135);
MakeDword(0x427139);
MakeDword(0x42713D);
MakeDword(0x427141);
MakeDword(0x427145);
MakeWord(0x427149);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42714B, 0x427157);
MakeDword(0x427157);
MakeDword(0x42715B);
MakeDword(0x42715F);
MakeDword(0x427163);
MakeDword(0x427167);
MakeDword(0x42716B);
MakeWord(0x42716F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427171, 0x427177);
MakeDword(0x427177);
MakeDword(0x42717B);
MakeDword(0x42717F);
MakeDword(0x427183);
MakeDword(0x427187);
MakeDword(0x42718B);
MakeWord(0x42718F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427191, 0x42719C);
MakeDword(0x42719C);
MakeDword(0x4271A0);
MakeDword(0x4271A4);
MakeDword(0x4271A8);
MakeDword(0x4271AC);
MakeDword(0x4271B0);
MakeWord(0x4271B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4271B6, 0x4271BF);
MakeDword(0x4271BF);
MakeDword(0x4271C3);
MakeDword(0x4271C7);
MakeDword(0x4271CB);
MakeDword(0x4271CF);
MakeDword(0x4271D3);
MakeWord(0x4271D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4271D9, 0x4271E2);
MakeDword(0x4271E2);
MakeDword(0x4271E6);
MakeDword(0x4271EA);
MakeDword(0x4271EE);
MakeDword(0x4271F2);
MakeDword(0x4271F6);
MakeWord(0x4271FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4271FC, 0x427204);
MakeDword(0x427204);
MakeDword(0x427208);
MakeDword(0x42720C);
MakeDword(0x427210);
MakeDword(0x427214);
MakeDword(0x427218);
MakeWord(0x42721C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42721E, 0x427223);
MakeDword(0x427223);
MakeDword(0x427227);
MakeDword(0x42722B);
MakeDword(0x42722F);
MakeDword(0x427233);
MakeDword(0x427237);
MakeWord(0x42723B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42723D, 0x42724B);
MakeDword(0x42724B);
MakeDword(0x42724F);
MakeDword(0x427253);
MakeDword(0x427257);
MakeDword(0x42725B);
MakeDword(0x42725F);
MakeWord(0x427263);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427265, 0x42726D);
MakeDword(0x42726D);
MakeDword(0x427271);
MakeDword(0x427275);
MakeDword(0x427279);
MakeDword(0x42727D);
MakeDword(0x427281);
MakeWord(0x427285);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427287, 0x42728F);
MakeDword(0x42728F);
MakeDword(0x427293);
MakeDword(0x427297);
MakeDword(0x42729B);
MakeDword(0x42729F);
MakeDword(0x4272A3);
MakeWord(0x4272A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4272A9, 0x4272B3);
MakeDword(0x4272B3);
MakeDword(0x4272B7);
MakeDword(0x4272BB);
MakeDword(0x4272BF);
MakeDword(0x4272C3);
MakeDword(0x4272C7);
MakeWord(0x4272CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4272CD, 0x4272D8);
MakeDword(0x4272D8);
MakeDword(0x4272DC);
MakeDword(0x4272E0);
MakeDword(0x4272E4);
MakeDword(0x4272E8);
MakeDword(0x4272EC);
MakeWord(0x4272F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4272F2, 0x427301);
MakeDword(0x427301);
MakeDword(0x427305);
MakeDword(0x427309);
MakeDword(0x42730D);
MakeDword(0x427311);
MakeDword(0x427315);
MakeWord(0x427319);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42731B, 0x427327);
MakeDword(0x427327);
MakeDword(0x42732B);
MakeDword(0x42732F);
MakeDword(0x427333);
MakeDword(0x427337);
MakeDword(0x42733B);
MakeWord(0x42733F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427341, 0x42734D);
MakeDword(0x42734D);
MakeDword(0x427351);
MakeDword(0x427355);
MakeDword(0x427359);
MakeDword(0x42735D);
MakeDword(0x427361);
MakeWord(0x427365);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427367, 0x427372);
MakeDword(0x427372);
MakeDword(0x427376);
MakeDword(0x42737A);
MakeDword(0x42737E);
MakeDword(0x427382);
MakeDword(0x427386);
MakeWord(0x42738A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42738C, 0x42739B);
MakeDword(0x42739B);
MakeDword(0x42739F);
MakeDword(0x4273A3);
MakeDword(0x4273A7);
MakeDword(0x4273AB);
MakeDword(0x4273AF);
MakeWord(0x4273B3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4273B5, 0x4273C2);
MakeDword(0x4273C2);
MakeDword(0x4273C6);
MakeDword(0x4273CA);
MakeDword(0x4273CE);
MakeDword(0x4273D2);
MakeDword(0x4273D6);
MakeWord(0x4273DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4273DC, 0x4273E6);
MakeDword(0x4273E6);
MakeDword(0x4273EA);
MakeDword(0x4273EE);
MakeDword(0x4273F2);
MakeDword(0x4273F6);
MakeDword(0x4273FA);
MakeWord(0x4273FE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427400, 0x427409);
MakeDword(0x427409);
MakeDword(0x42740D);
MakeDword(0x427411);
MakeDword(0x427415);
MakeDword(0x427419);
MakeDword(0x42741D);
MakeWord(0x427421);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427423, 0x42742C);
MakeDword(0x42742C);
MakeDword(0x427430);
MakeDword(0x427434);
MakeDword(0x427438);
MakeDword(0x42743C);
MakeDword(0x427440);
MakeWord(0x427444);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427446, 0x42744F);
MakeDword(0x42744F);
MakeDword(0x427453);
MakeDword(0x427457);
MakeDword(0x42745B);
MakeDword(0x42745F);
MakeDword(0x427463);
MakeWord(0x427467);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427469, 0x427471);
MakeDword(0x427471);
MakeDword(0x427475);
MakeDword(0x427479);
MakeDword(0x42747D);
MakeDword(0x427481);
MakeDword(0x427485);
MakeWord(0x427489);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42748B, 0x427490);
MakeDword(0x427490);
MakeDword(0x427494);
MakeDword(0x427498);
MakeDword(0x42749C);
MakeDword(0x4274A0);
MakeDword(0x4274A4);
MakeWord(0x4274A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4274AA, 0x4274B2);
MakeDword(0x4274B2);
MakeDword(0x4274B6);
MakeDword(0x4274BA);
MakeDword(0x4274BE);
MakeDword(0x4274C2);
MakeDword(0x4274C6);
MakeWord(0x4274CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4274CC, 0x4274D5);
MakeDword(0x4274D5);
MakeDword(0x4274D9);
MakeDword(0x4274DD);
MakeDword(0x4274E1);
MakeDword(0x4274E5);
MakeDword(0x4274E9);
MakeWord(0x4274ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4274EF, 0x4274F7);
MakeDword(0x4274F7);
MakeDword(0x4274FB);
MakeDword(0x4274FF);
MakeDword(0x427503);
MakeDword(0x427507);
MakeDword(0x42750B);
MakeWord(0x42750F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427511, 0x427520);
MakeDword(0x427520);
MakeDword(0x427524);
MakeDword(0x427528);
MakeDword(0x42752C);
MakeDword(0x427530);
MakeDword(0x427534);
MakeWord(0x427538);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42753A, 0x427545);
MakeDword(0x427545);
MakeDword(0x427549);
MakeDword(0x42754D);
MakeDword(0x427551);
MakeDword(0x427555);
MakeDword(0x427559);
MakeWord(0x42755D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42755F, 0x42756A);
MakeDword(0x42756A);
MakeDword(0x42756E);
MakeDword(0x427572);
MakeDword(0x427576);
MakeDword(0x42757A);
MakeDword(0x42757E);
MakeWord(0x427582);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427584, 0x42758F);
MakeDword(0x42758F);
MakeDword(0x427593);
MakeDword(0x427597);
MakeDword(0x42759B);
MakeDword(0x42759F);
MakeDword(0x4275A3);
MakeWord(0x4275A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4275A9, 0x4275B3);
MakeDword(0x4275B3);
MakeDword(0x4275B7);
MakeDword(0x4275BB);
MakeDword(0x4275BF);
MakeDword(0x4275C3);
MakeDword(0x4275C7);
MakeWord(0x4275CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4275CD, 0x4275D7);
MakeDword(0x4275D7);
MakeDword(0x4275DB);
MakeDword(0x4275DF);
MakeDword(0x4275E3);
MakeDword(0x4275E7);
MakeDword(0x4275EB);
MakeWord(0x4275EF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4275F1, 0x4275F9);
MakeDword(0x4275F9);
MakeDword(0x4275FD);
MakeDword(0x427601);
MakeDword(0x427605);
MakeDword(0x427609);
MakeDword(0x42760D);
MakeWord(0x427611);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427613, 0x42761A);
MakeDword(0x42761A);
MakeDword(0x42761E);
MakeDword(0x427622);
MakeDword(0x427626);
MakeDword(0x42762A);
MakeDword(0x42762E);
MakeWord(0x427632);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427634, 0x42763E);
MakeDword(0x42763E);
MakeDword(0x427642);
MakeDword(0x427646);
MakeDword(0x42764A);
MakeDword(0x42764E);
MakeDword(0x427652);
MakeWord(0x427656);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427658, 0x427663);
MakeDword(0x427663);
MakeDword(0x427667);
MakeDword(0x42766B);
MakeDword(0x42766F);
MakeDword(0x427673);
MakeDword(0x427677);
MakeWord(0x42767B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42767D, 0x427685);
MakeDword(0x427685);
MakeDword(0x427689);
MakeDword(0x42768D);
MakeDword(0x427691);
MakeDword(0x427695);
MakeDword(0x427699);
MakeWord(0x42769D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42769F, 0x4276AB);
MakeDword(0x4276AB);
MakeDword(0x4276AF);
MakeDword(0x4276B3);
MakeDword(0x4276B7);
MakeDword(0x4276BB);
MakeDword(0x4276BF);
MakeWord(0x4276C3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4276C5, 0x4276D1);
MakeDword(0x4276D1);
MakeDword(0x4276D5);
MakeDword(0x4276D9);
MakeDword(0x4276DD);
MakeDword(0x4276E1);
MakeDword(0x4276E5);
MakeWord(0x4276E9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4276EB, 0x4276F5);
MakeDword(0x4276F5);
MakeDword(0x4276F9);
MakeDword(0x4276FD);
MakeDword(0x427701);
MakeDword(0x427705);
MakeDword(0x427709);
MakeWord(0x42770D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42770F, 0x42771B);
MakeDword(0x42771B);
MakeDword(0x42771F);
MakeDword(0x427723);
MakeDword(0x427727);
MakeDword(0x42772B);
MakeDword(0x42772F);
MakeWord(0x427733);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427735, 0x427741);
MakeUnkn(0x427744, 1);
MakeNameEx(0x427744, "VMT_427744_TButtonActionLink", 0);
MakeDword(0x427744);
MakeDword(0x427748);
MakeDword(0x42774C);
MakeDword(0x427750);
MakeDword(0x427754);
MakeDword(0x427758);
MakeDword(0x42775C);
MakeDword(0x427760);
MakeDword(0x427764);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42780C, 0x42781E);
MakeDword(0x427768);
MakeDword(0x42776C);
MakeDword(0x427770);
MakeDword(0x427774);
MakeDword(0x427778);
MakeDword(0x42777C);
MakeDword(0x427780);
MakeDword(0x427784);
MakeDword(0x427788);
MakeDword(0x42778C);
MakeComm(0x427790, "'+0'");
MakeDword(0x427790);
MakeComm(0x427794, "'+4'");
MakeDword(0x427794);
MakeComm(0x427798, "'+8'");
MakeDword(0x427798);
MakeComm(0x42779C, "'+C'");
MakeDword(0x42779C);
MakeComm(0x4277A0, "'+10'");
MakeDword(0x4277A0);
MakeComm(0x4277A4, "'+14'");
MakeDword(0x4277A4);
MakeComm(0x4277A8, "'+18'");
MakeDword(0x4277A8);
MakeComm(0x4277AC, "'+1C'");
MakeDword(0x4277AC);
MakeComm(0x4277B0, "'+20'");
MakeDword(0x4277B0);
MakeComm(0x4277B4, "'+24'");
MakeDword(0x4277B4);
MakeComm(0x4277B8, "'+28'");
MakeDword(0x4277B8);
MakeComm(0x4277BC, "'+2C'");
MakeDword(0x4277BC);
MakeComm(0x4277C0, "'+30'");
MakeDword(0x4277C0);
MakeComm(0x4277C4, "'+34'");
MakeDword(0x4277C4);
MakeComm(0x4277C8, "'+38'");
MakeDword(0x4277C8);
MakeComm(0x4277CC, "'+3C'");
MakeDword(0x4277CC);
MakeComm(0x4277D0, "'+40'");
MakeDword(0x4277D0);
MakeComm(0x4277D4, "'+44'");
MakeDword(0x4277D4);
MakeComm(0x4277D8, "'+48'");
MakeDword(0x4277D8);
MakeComm(0x4277DC, "'+4C'");
MakeDword(0x4277DC);
MakeComm(0x4277E0, "'+50'");
MakeDword(0x4277E0);
MakeComm(0x4277E4, "'+54'");
MakeDword(0x4277E4);
MakeComm(0x4277E8, "'+58'");
MakeDword(0x4277E8);
MakeComm(0x4277EC, "'+5C'");
MakeDword(0x4277EC);
MakeComm(0x4277F0, "'+60'");
MakeDword(0x4277F0);
MakeComm(0x4277F4, "'+64'");
MakeDword(0x4277F4);
MakeComm(0x4277F8, "'+68'");
MakeDword(0x4277F8);
MakeComm(0x4277FC, "'+6C'");
MakeDword(0x4277FC);
MakeComm(0x427800, "'+70'");
MakeDword(0x427800);
MakeComm(0x427804, "'+74'");
MakeDword(0x427804);
MakeComm(0x427808, "'+78'");
MakeDword(0x427808);
MakeUnkn(0x427820, 1);
MakeNameEx(0x427820, "VMT_427820_TButtonControl", 0);
MakeDword(0x427820);
MakeDword(0x427824);
MakeDword(0x427828);
MakeDword(0x42782C);
MakeDword(0x427830);
MakeDword(0x427834);
MakeDword(0x427838);
MakeDword(0x42783C);
MakeUnkn(0x42793C, 1);
MakeNameEx(0x42793C, "TButtonControl_DynamicTable", 0);
MakeWord(0x42793C);
MakeWord(0x42793E);
MakeWord(0x427940);
MakeWord(0x427942);
MakeWord(0x427944);
MakeDword(0x427946);
MakeDword(0x42794A);
MakeDword(0x42794E);
MakeDword(0x427952);
MakeDword(0x427840);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427956, 0x427965);
MakeDword(0x427844);
MakeDword(0x427848);
MakeDword(0x42784C);
MakeDword(0x427850);
MakeDword(0x427854);
MakeDword(0x427858);
MakeDword(0x42785C);
MakeDword(0x427860);
MakeDword(0x427864);
MakeDword(0x427868);
MakeComm(0x42786C, "'+0'");
MakeDword(0x42786C);
MakeComm(0x427870, "'+4'");
MakeDword(0x427870);
MakeComm(0x427874, "'+8'");
MakeDword(0x427874);
MakeComm(0x427878, "'+C'");
MakeDword(0x427878);
MakeComm(0x42787C, "'+10'");
MakeDword(0x42787C);
MakeComm(0x427880, "'+14'");
MakeDword(0x427880);
MakeComm(0x427884, "'+18'");
MakeDword(0x427884);
MakeComm(0x427888, "'+1C'");
MakeDword(0x427888);
MakeComm(0x42788C, "'+20'");
MakeDword(0x42788C);
MakeComm(0x427890, "'+24'");
MakeDword(0x427890);
MakeComm(0x427894, "'+28'");
MakeDword(0x427894);
MakeComm(0x427898, "'+2C'");
MakeDword(0x427898);
MakeComm(0x42789C, "'+30'");
MakeDword(0x42789C);
MakeComm(0x4278A0, "'+34'");
MakeDword(0x4278A0);
MakeComm(0x4278A4, "'+38'");
MakeDword(0x4278A4);
MakeComm(0x4278A8, "'+3C'");
MakeDword(0x4278A8);
MakeComm(0x4278AC, "'+40'");
MakeDword(0x4278AC);
MakeComm(0x4278B0, "'+44'");
MakeDword(0x4278B0);
MakeComm(0x4278B4, "'+48'");
MakeDword(0x4278B4);
MakeComm(0x4278B8, "'+4C'");
MakeDword(0x4278B8);
MakeComm(0x4278BC, "'+50'");
MakeDword(0x4278BC);
MakeComm(0x4278C0, "'+54'");
MakeDword(0x4278C0);
MakeComm(0x4278C4, "'+58'");
MakeDword(0x4278C4);
MakeComm(0x4278C8, "'+5C'");
MakeDword(0x4278C8);
MakeComm(0x4278CC, "'+60'");
MakeDword(0x4278CC);
MakeComm(0x4278D0, "'+64'");
MakeDword(0x4278D0);
MakeComm(0x4278D4, "'+68'");
MakeDword(0x4278D4);
MakeComm(0x4278D8, "'+6C'");
MakeDword(0x4278D8);
MakeComm(0x4278DC, "'+70'");
MakeDword(0x4278DC);
MakeComm(0x4278E0, "'+74'");
MakeDword(0x4278E0);
MakeComm(0x4278E4, "'+78'");
MakeDword(0x4278E4);
MakeComm(0x4278E8, "'+7C'");
MakeDword(0x4278E8);
MakeComm(0x4278EC, "'+80'");
MakeDword(0x4278EC);
MakeComm(0x4278F0, "'+84'");
MakeDword(0x4278F0);
MakeComm(0x4278F4, "'+88'");
MakeDword(0x4278F4);
MakeComm(0x4278F8, "'+8C'");
MakeDword(0x4278F8);
MakeComm(0x4278FC, "'+90'");
MakeDword(0x4278FC);
MakeComm(0x427900, "'+94'");
MakeDword(0x427900);
MakeComm(0x427904, "'+98'");
MakeDword(0x427904);
MakeComm(0x427908, "'+9C'");
MakeDword(0x427908);
MakeComm(0x42790C, "'+A0'");
MakeDword(0x42790C);
MakeComm(0x427910, "'+A4'");
MakeDword(0x427910);
MakeComm(0x427914, "'+A8'");
MakeDword(0x427914);
MakeComm(0x427918, "'+AC'");
MakeDword(0x427918);
MakeComm(0x42791C, "'+B0'");
MakeDword(0x42791C);
MakeComm(0x427920, "'+B4'");
MakeDword(0x427920);
MakeComm(0x427924, "'+B8'");
MakeDword(0x427924);
MakeComm(0x427928, "'+BC'");
MakeDword(0x427928);
MakeComm(0x42792C, "'+C0'");
MakeDword(0x42792C);
MakeComm(0x427930, "'+C4'");
MakeDword(0x427930);
MakeComm(0x427934, "'+C8'");
MakeDword(0x427934);
MakeComm(0x427938, "'+CC'");
MakeDword(0x427938);
MakeUnkn(0x427968, 1);
MakeNameEx(0x427968, "RTTI_427968_Class_TButtonControl", 0);
MakeDword(0x427968);
MakeUnkn(0x42796C, 1);
MakeNameEx(0x42796C, "", 0);
MakeByte(0x42796C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42796D, 0x42797C);
MakeDword(0x42797C);
MakeDword(0x427980);
MakeWord(0x427984);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427986, 0x42798F);
MakeWord(0x42798F);
MakeUnkn(0x427994, 1);
MakeNameEx(0x427994, "VMT_427994_TButton", 0);
MakeDword(0x427994);
MakeDword(0x427998);
MakeDword(0x42799C);
MakeDword(0x4279A0);
MakeDword(0x4279A4);
MakeDword(0x4279A8);
MakeDword(0x4279AC);
MakeDword(0x4279B0);
MakeUnkn(0x427AB4, 1);
MakeNameEx(0x427AB4, "TButton_DynamicTable", 0);
MakeWord(0x427AB4);
MakeWord(0x427AB6);
MakeWord(0x427AB8);
MakeWord(0x427ABA);
MakeWord(0x427ABC);
MakeWord(0x427ABE);
MakeWord(0x427AC0);
MakeWord(0x427AC2);
MakeWord(0x427AC4);
MakeDword(0x427AC6);
MakeDword(0x427ACA);
MakeDword(0x427ACE);
MakeDword(0x427AD2);
MakeDword(0x427AD6);
MakeDword(0x427ADA);
MakeDword(0x427ADE);
MakeDword(0x427AE2);
MakeDword(0x4279B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427AE6, 0x427AEE);
MakeDword(0x4279B8);
MakeDword(0x4279BC);
MakeDword(0x4279C0);
MakeDword(0x4279C4);
MakeDword(0x4279C8);
MakeDword(0x4279CC);
MakeDword(0x4279D0);
MakeDword(0x4279D4);
MakeDword(0x4279D8);
MakeDword(0x4279DC);
MakeComm(0x4279E0, "'+0'");
MakeDword(0x4279E0);
MakeComm(0x4279E4, "'+4'");
MakeDword(0x4279E4);
MakeComm(0x4279E8, "'+8'");
MakeDword(0x4279E8);
MakeComm(0x4279EC, "'+C'");
MakeDword(0x4279EC);
MakeComm(0x4279F0, "'+10'");
MakeDword(0x4279F0);
MakeComm(0x4279F4, "'+14'");
MakeDword(0x4279F4);
MakeComm(0x4279F8, "'+18'");
MakeDword(0x4279F8);
MakeComm(0x4279FC, "'+1C'");
MakeDword(0x4279FC);
MakeComm(0x427A00, "'+20'");
MakeDword(0x427A00);
MakeComm(0x427A04, "'+24'");
MakeDword(0x427A04);
MakeComm(0x427A08, "'+28'");
MakeDword(0x427A08);
MakeComm(0x427A0C, "'+2C'");
MakeDword(0x427A0C);
MakeComm(0x427A10, "'+30'");
MakeDword(0x427A10);
MakeComm(0x427A14, "'+34'");
MakeDword(0x427A14);
MakeComm(0x427A18, "'+38'");
MakeDword(0x427A18);
MakeComm(0x427A1C, "'+3C'");
MakeDword(0x427A1C);
MakeComm(0x427A20, "'+40'");
MakeDword(0x427A20);
MakeComm(0x427A24, "'+44'");
MakeDword(0x427A24);
MakeComm(0x427A28, "'+48'");
MakeDword(0x427A28);
MakeComm(0x427A2C, "'+4C'");
MakeDword(0x427A2C);
MakeComm(0x427A30, "'+50'");
MakeDword(0x427A30);
MakeComm(0x427A34, "'+54'");
MakeDword(0x427A34);
MakeComm(0x427A38, "'+58'");
MakeDword(0x427A38);
MakeComm(0x427A3C, "'+5C'");
MakeDword(0x427A3C);
MakeComm(0x427A40, "'+60'");
MakeDword(0x427A40);
MakeComm(0x427A44, "'+64'");
MakeDword(0x427A44);
MakeComm(0x427A48, "'+68'");
MakeDword(0x427A48);
MakeComm(0x427A4C, "'+6C'");
MakeDword(0x427A4C);
MakeComm(0x427A50, "'+70'");
MakeDword(0x427A50);
MakeComm(0x427A54, "'+74'");
MakeDword(0x427A54);
MakeComm(0x427A58, "'+78'");
MakeDword(0x427A58);
MakeComm(0x427A5C, "'+7C'");
MakeDword(0x427A5C);
MakeComm(0x427A60, "'+80'");
MakeDword(0x427A60);
MakeComm(0x427A64, "'+84'");
MakeDword(0x427A64);
MakeComm(0x427A68, "'+88'");
MakeDword(0x427A68);
MakeComm(0x427A6C, "'+8C'");
MakeDword(0x427A6C);
MakeComm(0x427A70, "'+90'");
MakeDword(0x427A70);
MakeComm(0x427A74, "'+94'");
MakeDword(0x427A74);
MakeComm(0x427A78, "'+98'");
MakeDword(0x427A78);
MakeComm(0x427A7C, "'+9C'");
MakeDword(0x427A7C);
MakeComm(0x427A80, "'+A0'");
MakeDword(0x427A80);
MakeComm(0x427A84, "'+A4'");
MakeDword(0x427A84);
MakeComm(0x427A88, "'+A8'");
MakeDword(0x427A88);
MakeComm(0x427A8C, "'+AC'");
MakeDword(0x427A8C);
MakeComm(0x427A90, "'+B0'");
MakeDword(0x427A90);
MakeComm(0x427A94, "'+B4'");
MakeDword(0x427A94);
MakeComm(0x427A98, "'+B8'");
MakeDword(0x427A98);
MakeComm(0x427A9C, "'+BC'");
MakeDword(0x427A9C);
MakeComm(0x427AA0, "'+C0'");
MakeDword(0x427AA0);
MakeComm(0x427AA4, "'+C4'");
MakeDword(0x427AA4);
MakeComm(0x427AA8, "'+C8'");
MakeDword(0x427AA8);
MakeComm(0x427AAC, "'+CC'");
MakeDword(0x427AAC);
MakeComm(0x427AB0, "'+D0'");
MakeDword(0x427AB0);
MakeUnkn(0x427AF0, 1);
MakeNameEx(0x427AF0, "RTTI_427AF0_Class_TButton", 0);
MakeDword(0x427AF0);
MakeUnkn(0x427AF4, 1);
MakeNameEx(0x427AF4, "", 0);
MakeByte(0x427AF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427AF5, 0x427AFD);
MakeDword(0x427AFD);
MakeDword(0x427B01);
MakeWord(0x427B05);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427B07, 0x427B10);
MakeWord(0x427B10);
MakeDword(0x427B12);
MakeDword(0x427B16);
MakeDword(0x427B1A);
MakeDword(0x427B1E);
MakeDword(0x427B22);
MakeDword(0x427B26);
MakeWord(0x427B2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427B2C, 0x427B33);
MakeDword(0x427B33);
MakeDword(0x427B37);
MakeDword(0x427B3B);
MakeDword(0x427B3F);
MakeDword(0x427B43);
MakeDword(0x427B47);
MakeWord(0x427B4B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427B4D, 0x427B55);
MakeDword(0x427B55);
MakeDword(0x427B59);
MakeDword(0x427B5D);
MakeDword(0x427B61);
MakeDword(0x427B65);
MakeDword(0x427B69);
MakeWord(0x427B6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427B6F, 0x427B78);
MakeDword(0x427B78);
MakeDword(0x427B7C);
MakeDword(0x427B80);
MakeDword(0x427B84);
MakeDword(0x427B88);
MakeDword(0x427B8C);
MakeWord(0x427B90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427B92, 0x427B99);
MakeDword(0x427B99);
MakeDword(0x427B9D);
MakeDword(0x427BA1);
MakeDword(0x427BA5);
MakeDword(0x427BA9);
MakeDword(0x427BAD);
MakeWord(0x427BB1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427BB3, 0x427BBB);
MakeDword(0x427BBB);
MakeDword(0x427BBF);
MakeDword(0x427BC3);
MakeDword(0x427BC7);
MakeDword(0x427BCB);
MakeDword(0x427BCF);
MakeWord(0x427BD3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427BD5, 0x427BE1);
MakeDword(0x427BE1);
MakeDword(0x427BE5);
MakeDword(0x427BE9);
MakeDword(0x427BED);
MakeDword(0x427BF1);
MakeDword(0x427BF5);
MakeWord(0x427BF9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427BFB, 0x427C03);
MakeDword(0x427C03);
MakeDword(0x427C07);
MakeDword(0x427C0B);
MakeDword(0x427C0F);
MakeDword(0x427C13);
MakeDword(0x427C17);
MakeWord(0x427C1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427C1D, 0x427C28);
MakeDword(0x427C28);
MakeDword(0x427C2C);
MakeDword(0x427C30);
MakeDword(0x427C34);
MakeDword(0x427C38);
MakeDword(0x427C3C);
MakeWord(0x427C40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427C42, 0x427C4B);
MakeDword(0x427C4B);
MakeDword(0x427C4F);
MakeDword(0x427C53);
MakeDword(0x427C57);
MakeDword(0x427C5B);
MakeDword(0x427C5F);
MakeWord(0x427C63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427C65, 0x427C6E);
MakeDword(0x427C6E);
MakeDword(0x427C72);
MakeDword(0x427C76);
MakeDword(0x427C7A);
MakeDword(0x427C7E);
MakeDword(0x427C82);
MakeWord(0x427C86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427C88, 0x427C90);
MakeDword(0x427C90);
MakeDword(0x427C94);
MakeDword(0x427C98);
MakeDword(0x427C9C);
MakeDword(0x427CA0);
MakeDword(0x427CA4);
MakeWord(0x427CA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427CAA, 0x427CAF);
MakeDword(0x427CAF);
MakeDword(0x427CB3);
MakeDword(0x427CB7);
MakeDword(0x427CBB);
MakeDword(0x427CBF);
MakeDword(0x427CC3);
MakeWord(0x427CC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427CC9, 0x427CD5);
MakeDword(0x427CD5);
MakeDword(0x427CD9);
MakeDword(0x427CDD);
MakeDword(0x427CE1);
MakeDword(0x427CE5);
MakeDword(0x427CE9);
MakeWord(0x427CED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427CEF, 0x427CFE);
MakeDword(0x427CFE);
MakeDword(0x427D02);
MakeDword(0x427D06);
MakeDword(0x427D0A);
MakeDword(0x427D0E);
MakeDword(0x427D12);
MakeWord(0x427D16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427D18, 0x427D23);
MakeDword(0x427D23);
MakeDword(0x427D27);
MakeDword(0x427D2B);
MakeDword(0x427D2F);
MakeDword(0x427D33);
MakeDword(0x427D37);
MakeWord(0x427D3B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427D3D, 0x427D4C);
MakeDword(0x427D4C);
MakeDword(0x427D50);
MakeDword(0x427D54);
MakeDword(0x427D58);
MakeDword(0x427D5C);
MakeDword(0x427D60);
MakeWord(0x427D64);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427D66, 0x427D70);
MakeDword(0x427D70);
MakeDword(0x427D74);
MakeDword(0x427D78);
MakeDword(0x427D7C);
MakeDword(0x427D80);
MakeDword(0x427D84);
MakeWord(0x427D88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427D8A, 0x427D93);
MakeDword(0x427D93);
MakeDword(0x427D97);
MakeDword(0x427D9B);
MakeDword(0x427D9F);
MakeDword(0x427DA3);
MakeDword(0x427DA7);
MakeWord(0x427DAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427DAD, 0x427DB6);
MakeDword(0x427DB6);
MakeDword(0x427DBA);
MakeDword(0x427DBE);
MakeDword(0x427DC2);
MakeDword(0x427DC6);
MakeDword(0x427DCA);
MakeWord(0x427DCE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427DD0, 0x427DD8);
MakeDword(0x427DD8);
MakeDword(0x427DDC);
MakeDword(0x427DE0);
MakeDword(0x427DE4);
MakeDword(0x427DE8);
MakeDword(0x427DEC);
MakeWord(0x427DF0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427DF2, 0x427DFA);
MakeDword(0x427DFA);
MakeDword(0x427DFE);
MakeDword(0x427E02);
MakeDword(0x427E06);
MakeDword(0x427E0A);
MakeDword(0x427E0E);
MakeWord(0x427E12);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427E14, 0x427E1D);
MakeDword(0x427E1D);
MakeDword(0x427E21);
MakeDword(0x427E25);
MakeDword(0x427E29);
MakeDword(0x427E2D);
MakeDword(0x427E31);
MakeWord(0x427E35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427E37, 0x427E3F);
MakeDword(0x427E3F);
MakeDword(0x427E43);
MakeDword(0x427E47);
MakeDword(0x427E4B);
MakeDword(0x427E4F);
MakeDword(0x427E53);
MakeWord(0x427E57);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427E59, 0x427E68);
MakeDword(0x427E68);
MakeDword(0x427E6C);
MakeDword(0x427E70);
MakeDword(0x427E74);
MakeDword(0x427E78);
MakeDword(0x427E7C);
MakeWord(0x427E80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427E82, 0x427E8D);
MakeDword(0x427E8D);
MakeDword(0x427E91);
MakeDword(0x427E95);
MakeDword(0x427E99);
MakeDword(0x427E9D);
MakeDword(0x427EA1);
MakeWord(0x427EA5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427EA7, 0x427EB2);
MakeDword(0x427EB2);
MakeDword(0x427EB6);
MakeDword(0x427EBA);
MakeDword(0x427EBE);
MakeDword(0x427EC2);
MakeDword(0x427EC6);
MakeWord(0x427ECA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427ECC, 0x427ED6);
MakeDword(0x427ED6);
MakeDword(0x427EDA);
MakeDword(0x427EDE);
MakeDword(0x427EE2);
MakeDword(0x427EE6);
MakeDword(0x427EEA);
MakeWord(0x427EEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427EF0, 0x427EFA);
MakeDword(0x427EFA);
MakeDword(0x427EFE);
MakeDword(0x427F02);
MakeDword(0x427F06);
MakeDword(0x427F0A);
MakeDword(0x427F0E);
MakeWord(0x427F12);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427F14, 0x427F1C);
MakeDword(0x427F1C);
MakeDword(0x427F20);
MakeDword(0x427F24);
MakeDword(0x427F28);
MakeDword(0x427F2C);
MakeDword(0x427F30);
MakeWord(0x427F34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427F36, 0x427F3D);
MakeDword(0x427F3D);
MakeDword(0x427F41);
MakeDword(0x427F45);
MakeDword(0x427F49);
MakeDword(0x427F4D);
MakeDword(0x427F51);
MakeWord(0x427F55);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427F57, 0x427F61);
MakeDword(0x427F61);
MakeDword(0x427F65);
MakeDword(0x427F69);
MakeDword(0x427F6D);
MakeDword(0x427F71);
MakeDword(0x427F75);
MakeWord(0x427F79);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427F7B, 0x427F86);
MakeDword(0x427F86);
MakeDword(0x427F8A);
MakeDword(0x427F8E);
MakeDword(0x427F92);
MakeDword(0x427F96);
MakeDword(0x427F9A);
MakeWord(0x427F9E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427FA0, 0x427FA8);
MakeDword(0x427FA8);
MakeDword(0x427FAC);
MakeDword(0x427FB0);
MakeDword(0x427FB4);
MakeDword(0x427FB8);
MakeDword(0x427FBC);
MakeWord(0x427FC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427FC2, 0x427FCE);
MakeDword(0x427FCE);
MakeDword(0x427FD2);
MakeDword(0x427FD6);
MakeDword(0x427FDA);
MakeDword(0x427FDE);
MakeDword(0x427FE2);
MakeWord(0x427FE6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x427FE8, 0x427FF4);
MakeDword(0x427FF4);
MakeDword(0x427FF8);
MakeDword(0x427FFC);
MakeDword(0x428000);
MakeDword(0x428004);
MakeDword(0x428008);
MakeWord(0x42800C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42800E, 0x428018);
MakeDword(0x428018);
MakeDword(0x42801C);
MakeDword(0x428020);
MakeDword(0x428024);
MakeDword(0x428028);
MakeDword(0x42802C);
MakeWord(0x428030);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x428032, 0x42803E);
MakeDword(0x42803E);
MakeDword(0x428042);
MakeDword(0x428046);
MakeDword(0x42804A);
MakeDword(0x42804E);
MakeDword(0x428052);
MakeWord(0x428056);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x428058, 0x428064);
MakeUnkn(0x428064, 1);
MakeNameEx(0x428064, "TCustomLabel.Create", 0x20);
MakeComm(0x428064, "'constructor TCustomLabel.Create(AOwner:TComponent);'");
MakeCode(0x428064);
MakeCode(0x428072);
MakeCode(0x4280CE);
MakeCode(0x4280DA);
MakeCode(0x4280EF);
MakeFunction(0x428064, 0x4280F4);
MakeUnkn(0x4280FC, 1);
MakeNameEx(0x4280FC, "TCustomLabel.GetLabelText", 0x20);
MakeComm(0x4280FC, "'function TCustomLabel.GetLabelText:AnsiString;'");
MakeCode(0x4280FC);
MakeFunction(0x4280FC, 0x42810E);
MakeUnkn(0x428110, 1);
MakeNameEx(0x428110, "TCustomLabel.DoDrawText", 0x20);
MakeComm(0x428110, "'procedure TCustomLabel.DoDrawText(var Rect:TRect; Flags:Longint);'");
MakeCode(0x428110);
MakeCode(0x428161);
MakeCode(0x42816E);
MakeCode(0x42817D);
MakeCode(0x42822B);
MakeCode(0x428250);
MakeCode(0x42825D);
MakeCode(0x428266);
MakeCode(0x42826B);
MakeFunction(0x428110, 0x428273);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42827C, -1);
MakeDword(0x428278);
MakeDword(0x428274);
MakeUnkn(0x428280, 1);
MakeNameEx(0x428280, "TCustomLabel.Paint", 0x20);
MakeComm(0x428280, "'procedure TCustomLabel.Paint;'");
MakeCode(0x428280);
MakeCode(0x4282C4);
MakeCode(0x42834B);
MakeCode(0x428359);
MakeCode(0x428366);
MakeFunction(0x428280, 0x42837C);
MakeUnkn(0x42837C, 1);
MakeNameEx(0x42837C, "TCustomLabel.Loaded", 0x20);
MakeComm(0x42837C, "'procedure TCustomLabel.Loaded;'");
MakeCode(0x42837C);
MakeFunction(0x42837C, 0x428395);
MakeUnkn(0x428398, 1);
MakeNameEx(0x428398, "TCustomLabel.AdjustBounds", 0x20);
MakeComm(0x428398, "'procedure TCustomLabel.AdjustBounds;'");
MakeCode(0x428398);
MakeCode(0x428436);
MakeCode(0x428445);
MakeCode(0x42845E);
MakeFunction(0x428398, 0x428465);
MakeUnkn(0x428468, 1);
MakeNameEx(0x428468, "TCustomLabel.SetAlignment", 0x20);
MakeComm(0x428468, "'procedure TCustomLabel.SetAlignment(Value:TAlignment);'");
MakeCode(0x428468);
MakeCode(0x428480);
MakeFunction(0x428468, 0x428482);
MakeUnkn(0x428484, 1);
MakeNameEx(0x428484, "TCustomLabel.SetAutoSize", 0x20);
MakeComm(0x428484, "'procedure TCustomLabel.SetAutoSize(Value:Boolean);'");
MakeCode(0x428484);
MakeCode(0x42849C);
MakeFunction(0x428484, 0x42849E);
MakeUnkn(0x4284A0, 1);
MakeNameEx(0x4284A0, "TCustomLabel.GetTransparent", 0x20);
MakeComm(0x4284A0, "'function TCustomLabel.GetTransparent:Boolean;'");
MakeCode(0x4284A0);
MakeFunction(0x4284A0, 0x4284AA);
MakeUnkn(0x4284AC, 1);
MakeNameEx(0x4284AC, "TCustomLabel.SetFocusControl", 0x20);
MakeComm(0x4284AC, "'procedure TCustomLabel.SetFocusControl(Value:TWinControl);'");
MakeCode(0x4284AC);
MakeFunction(0x4284AC, 0x4284BD);
MakeUnkn(0x4284C0, 1);
MakeNameEx(0x4284C0, "TCustomLabel.SetShowAccelChar", 0x20);
MakeComm(0x4284C0, "'procedure TCustomLabel.SetShowAccelChar(Value:Boolean);'");
MakeCode(0x4284C0);
MakeCode(0x4284D8);
MakeFunction(0x4284C0, 0x4284DA);
MakeUnkn(0x4284DC, 1);
MakeNameEx(0x4284DC, "TCustomLabel.SetTransparent", 0x20);
MakeComm(0x4284DC, "'procedure TCustomLabel.SetTransparent(Value:Boolean);'");
MakeCode(0x4284DC);
MakeCode(0x428500);
MakeCode(0x42850B);
MakeCode(0x428512);
MakeFunction(0x4284DC, 0x42851C);
MakeUnkn(0x428520, 1);
MakeNameEx(0x428520, "TCustomLabel.SetLayout", 0x20);
MakeComm(0x428520, "'procedure TCustomLabel.SetLayout(Value:TTextLayout);'");
MakeCode(0x428520);
MakeCode(0x428538);
MakeFunction(0x428520, 0x42853A);
MakeUnkn(0x42853C, 1);
MakeNameEx(0x42853C, "TCustomLabel.SetWordWrap", 0x20);
MakeComm(0x42853C, "'procedure TCustomLabel.SetWordWrap(Value:Boolean);'");
MakeCode(0x42853C);
MakeCode(0x428560);
MakeFunction(0x42853C, 0x428563);
MakeUnkn(0x428564, 1);
MakeNameEx(0x428564, "TCustomLabel.Notification", 0x20);
MakeComm(0x428564, "'procedure TCustomLabel.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x428564);
MakeCode(0x42858D);
MakeFunction(0x428564, 0x428591);
MakeUnkn(0x428594, 1);
MakeNameEx(0x428594, "TCustomLabel.CMTextChanged", 0x20);
MakeComm(0x428594, "'procedure TCustomLabel.CMTextChanged(var Message:TMessage);'");
MakeCode(0x428594);
MakeFunction(0x428594, 0x4285AD);
MakeUnkn(0x4285B0, 1);
MakeNameEx(0x4285B0, "TCustomLabel.CMFontChanged", 0x20);
MakeComm(0x4285B0, "'procedure TCustomLabel.CMFontChanged(var Message:TMessage);'");
MakeCode(0x4285B0);
MakeFunction(0x4285B0, 0x4285C7);
MakeUnkn(0x4285C8, 1);
MakeNameEx(0x4285C8, "TCustomLabel.CMDialogChar", 0x20);
MakeComm(0x4285C8, "'procedure TCustomLabel.CMDialogChar(var Message:TCMDialogChar);'");
MakeCode(0x4285C8);
MakeCode(0x42863F);
MakeCode(0x42864C);
MakeCode(0x428655);
MakeCode(0x42865A);
MakeFunction(0x4285C8, 0x428662);
MakeUnkn(0x428664, 1);
MakeNameEx(0x428664, "TCustomLabel.CMMouseEnter", 0x20);
MakeComm(0x428664, "'procedure TCustomLabel.CMMouseEnter(var Message:TMessage);'");
MakeCode(0x428664);
MakeCode(0x428686);
MakeFunction(0x428664, 0x428688);
MakeUnkn(0x428688, 1);
MakeNameEx(0x428688, "TCustomLabel.CMMouseLeave", 0x20);
MakeComm(0x428688, "'procedure TCustomLabel.CMMouseLeave(var Message:TMessage);'");
MakeCode(0x428688);
MakeCode(0x4286AA);
MakeFunction(0x428688, 0x4286AC);
MakeUnkn(0x4286AC, 1);
MakeNameEx(0x4286AC, "TCustomEdit.Create", 0x20);
MakeComm(0x4286AC, "'constructor TCustomEdit.Create(AOwner:TComponent);'");
MakeCode(0x4286AC);
MakeCode(0x4286BA);
MakeCode(0x4286DB);
MakeCode(0x4286E3);
MakeCode(0x428745);
MakeFunction(0x4286AC, 0x42874A);
MakeUnkn(0x428754, 1);
MakeNameEx(0x428754, "TCustomEdit.DoSetMaxLength", 0x20);
MakeComm(0x428754, "'procedure TCustomEdit.DoSetMaxLength(Value:Integer);'");
MakeCode(0x428754);
MakeFunction(0x428754, 0x428772);
MakeUnkn(0x428774, 1);
MakeNameEx(0x428774, "TCustomEdit.SetAutoSize", 0x20);
MakeComm(0x428774, "'procedure TCustomEdit.SetAutoSize(Value:Boolean);'");
MakeCode(0x428774);
MakeFunction(0x428774, 0x428788);
MakeUnkn(0x428788, 1);
MakeNameEx(0x428788, "TCustomEdit.SetBorderStyle", 0x20);
MakeComm(0x428788, "'procedure TCustomEdit.SetBorderStyle(Value:TBorderStyle);'");
MakeCode(0x428788);
MakeCode(0x4287A7);
MakeFunction(0x428788, 0x4287A9);
MakeUnkn(0x4287AC, 1);
MakeNameEx(0x4287AC, "TCustomEdit.SetCharCase", 0x20);
MakeComm(0x4287AC, "'procedure TCustomEdit.SetCharCase(Value:TEditCharCase);'");
MakeCode(0x4287AC);
MakeFunction(0x4287AC, 0x4287C0);
MakeUnkn(0x4287C0, 1);
MakeNameEx(0x4287C0, "TCustomEdit.SetHideSelection", 0x20);
MakeComm(0x4287C0, "'procedure TCustomEdit.SetHideSelection(Value:Boolean);'");
MakeCode(0x4287C0);
MakeFunction(0x4287C0, 0x4287D4);
MakeUnkn(0x4287D4, 1);
MakeNameEx(0x4287D4, "TCustomEdit.SetMaxLength", 0x20);
MakeComm(0x4287D4, "'procedure TCustomEdit.SetMaxLength(Value:Integer);'");
MakeCode(0x4287D4);
MakeCode(0x4287FF);
MakeFunction(0x4287D4, 0x428802);
MakeUnkn(0x428804, 1);
MakeNameEx(0x428804, "TCustomEdit.SetOEMConvert", 0x20);
MakeComm(0x428804, "'procedure TCustomEdit.SetOEMConvert(Value:Boolean);'");
MakeCode(0x428804);
MakeFunction(0x428804, 0x428818);
MakeUnkn(0x428818, 1);
MakeNameEx(0x428818, "TCustomEdit.GetModified", 0x20);
MakeComm(0x428818, "'function TCustomEdit.GetModified:Boolean;'");
MakeCode(0x428818);
MakeCode(0x428848);
MakeFunction(0x428818, 0x42884D);
MakeUnkn(0x428850, 1);
MakeNameEx(0x428850, "TCustomEdit.SetModified", 0x20);
MakeComm(0x428850, "'procedure TCustomEdit.SetModified(Value:Boolean);'");
MakeCode(0x428850);
MakeCode(0x42887D);
MakeFunction(0x428850, 0x428886);
MakeUnkn(0x428888, 1);
MakeNameEx(0x428888, "TCustomEdit.SetPasswordChar", 0x20);
MakeComm(0x428888, "'procedure TCustomEdit.SetPasswordChar(Value:Char);'");
MakeCode(0x428888);
MakeCode(0x4288EF);
MakeCode(0x4288FC);
MakeCode(0x428905);
MakeCode(0x42890A);
MakeFunction(0x428888, 0x428910);
MakeUnkn(0x428910, 1);
MakeNameEx(0x428910, "TCustomEdit.SetReadOnly", 0x20);
MakeComm(0x428910, "'procedure TCustomEdit.SetReadOnly(Value:Boolean);'");
MakeCode(0x428910);
MakeCode(0x428948);
MakeFunction(0x428910, 0x42894B);
MakeUnkn(0x42894C, 1);
MakeNameEx(0x42894C, "TCustomEdit.GetSelStart", 0x20);
MakeComm(0x42894C, "'function TCustomEdit.GetSelStart:Integer;'");
MakeCode(0x42894C);
MakeFunction(0x42894C, 0x42896F);
MakeUnkn(0x428970, 1);
MakeNameEx(0x428970, "TCustomEdit.SetSelStart", 0x20);
MakeComm(0x428970, "'procedure TCustomEdit.SetSelStart(Value:Integer);'");
MakeCode(0x428970);
MakeFunction(0x428970, 0x42898D);
MakeUnkn(0x428990, 1);
MakeNameEx(0x428990, "TCustomEdit.GetSelLength", 0x20);
MakeComm(0x428990, "'function TCustomEdit.GetSelLength:Integer;'");
MakeCode(0x428990);
MakeFunction(0x428990, 0x4289BD);
MakeUnkn(0x4289C0, 1);
MakeNameEx(0x4289C0, "TCustomEdit.SetSelLength", 0x20);
MakeComm(0x4289C0, "'procedure TCustomEdit.SetSelLength(Value:Integer);'");
MakeCode(0x4289C0);
MakeFunction(0x4289C0, 0x428A23);
MakeUnkn(0x428A24, 1);
MakeNameEx(0x428A24, "TCustomEdit.Clear", 0x20);
MakeComm(0x428A24, "'procedure TCustomEdit.Clear;'");
MakeCode(0x428A24);
MakeFunction(0x428A24, 0x428A3B);
MakeUnkn(0x428A40, 1);
MakeNameEx(0x428A40, "TCustomEdit.SelectAll", 0x20);
MakeComm(0x428A40, "'procedure TCustomEdit.SelectAll;'");
MakeCode(0x428A40);
MakeFunction(0x428A40, 0x428A5B);
MakeUnkn(0x428A5C, 1);
MakeNameEx(0x428A5C, "TCustomEdit.GetSelTextBuf", 0x20);
MakeComm(0x428A5C, "'function TCustomEdit.GetSelTextBuf(Buffer:PChar; BufSize:Integer):Integer;'");
MakeCode(0x428A5C);
MakeCode(0x428AC0);
MakeCode(0x428AD0);
MakeCode(0x428ADD);
MakeCode(0x428AE6);
MakeCode(0x428AEB);
MakeFunction(0x428A5C, 0x428AF7);
MakeUnkn(0x428AF8, 1);
MakeNameEx(0x428AF8, "TCustomEdit.GetSelText", 0x20);
MakeComm(0x428AF8, "'function TCustomEdit.GetSelText:AnsiString;'");
MakeCode(0x428AF8);
MakeCode(0x428B70);
MakeCode(0x428B7D);
MakeCode(0x428B86);
MakeCode(0x428B8B);
MakeCode(0x428B8D);
MakeFunction(0x428AF8, 0x428B94);
MakeUnkn(0x428B94, 1);
MakeNameEx(0x428B94, "TCustomEdit.CreateParams", 0x20);
MakeComm(0x428B94, "'procedure TCustomEdit.CreateParams(var Params:TCreateParams);'");
MakeCode(0x428B94);
MakeCode(0x428C45);
MakeFunction(0x428B94, 0x428C48);
MakeUnkn(0x428C50, 1);
MakeNameEx(0x428C50, "TCustomEdit.CreateWindowHandle", 0x20);
MakeComm(0x428C50, "'procedure TCustomEdit.CreateWindowHandle(const Params:TCreateParams);'");
MakeCode(0x428C50);
MakeCode(0x428CAD);
MakeCode(0x428CB4);
MakeFunction(0x428C50, 0x428CBE);
MakeUnkn(0x428CC0, 1);
MakeNameEx(0x428CC0, "TCustomEdit.CreateWnd", 0x20);
MakeComm(0x428CC0, "'procedure TCustomEdit.CreateWnd;'");
MakeCode(0x428CC0);
MakeCode(0x428CE7);
MakeCode(0x428CF4);
MakeCode(0x428CFF);
MakeCode(0x428D04);
MakeCode(0x428D57);
MakeFunction(0x428CC0, 0x428D62);
MakeUnkn(0x428D64, 1);
MakeNameEx(0x428D64, "TCustomEdit.DestroyWnd", 0x20);
MakeComm(0x428D64, "'procedure TCustomEdit.DestroyWnd;'");
MakeCode(0x428D64);
MakeFunction(0x428D64, 0x428D7D);
MakeUnkn(0x428D80, 1);
MakeNameEx(0x428D80, "TCustomEdit.UpdateHeight", 0x20);
MakeComm(0x428D80, "'procedure TCustomEdit.UpdateHeight;'");
MakeCode(0x428D80);
MakeCode(0x428DA9);
MakeFunction(0x428D80, 0x428DB8);
MakeUnkn(0x428DBC, 1);
MakeNameEx(0x428DBC, "TCustomEdit.AdjustHeight", 0x20);
MakeComm(0x428DBC, "'procedure TCustomEdit.AdjustHeight;'");
MakeCode(0x428DBC);
MakeCode(0x428E19);
MakeCode(0x428E1E);
MakeCode(0x428E2B);
MakeCode(0x428E38);
MakeCode(0x428E49);
MakeCode(0x428E50);
MakeFunction(0x428DBC, 0x428E64);
MakeUnkn(0x428E64, 1);
MakeNameEx(0x428E64, "TCustomCombo.Change", 0x20);
MakeComm(0x428E64, "'procedure TCustomCombo.Change;'");
MakeCode(0x428E64);
MakeCode(0x428E86);
MakeFunction(0x428E64, 0x428E88);
MakeUnkn(0x428E88, 1);
MakeNameEx(0x428E88, "TCustomEdit.DefaultHandler", 0x20);
MakeComm(0x428E88, "'procedure TCustomEdit.DefaultHandler(var Message:void );'");
MakeCode(0x428E88);
MakeCode(0x428EB1);
MakeFunction(0x428E88, 0x428EBD);
MakeUnkn(0x428EC0, 1);
MakeNameEx(0x428EC0, "TCustomEdit.WMSetFont", 0x20);
MakeComm(0x428EC0, "'procedure TCustomEdit.WMSetFont(var Message:TWMSetFont);'");
MakeCode(0x428EC0);
MakeCode(0x428EFD);
MakeFunction(0x428EC0, 0x428EFF);
MakeUnkn(0x428F00, 1);
MakeNameEx(0x428F00, "TCustomEdit.CMCtl3DChanged", 0x20);
MakeComm(0x428F00, "'procedure TCustomEdit.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x428F00);
MakeCode(0x428F27);
MakeFunction(0x428F00, 0x428F33);
MakeUnkn(0x428F34, 1);
MakeNameEx(0x428F34, "TCustomEdit.CMFontChanged", 0x20);
MakeComm(0x428F34, "'procedure TCustomEdit.CMFontChanged(var Message:TMessage);'");
MakeCode(0x428F34);
MakeCode(0x428F50);
MakeCode(0x428F57);
MakeFunction(0x428F34, 0x428F59);
MakeUnkn(0x428F5C, 1);
MakeNameEx(0x428F5C, "TCustomEdit.CNCommand", 0x20);
MakeComm(0x428F5C, "'procedure TCustomEdit.CNCommand(var Message:TWMCommand);'");
MakeCode(0x428F5C);
MakeCode(0x428F77);
MakeFunction(0x428F5C, 0x428F79);
MakeUnkn(0x428F7C, 1);
MakeNameEx(0x428F7C, "TCustomEdit.CMEnter", 0x20);
MakeComm(0x428F7C, "'procedure TCustomEdit.CMEnter(var Message:TCMGotFocus);'");
MakeCode(0x428F7C);
MakeCode(0x428FAB);
MakeFunction(0x428F7C, 0x428FB7);
MakeUnkn(0x428FB8, 1);
MakeNameEx(0x428FB8, "TCustomEdit.CMTextChanged", 0x20);
MakeComm(0x428FB8, "'procedure TCustomEdit.CMTextChanged(var Message:TMessage);'");
MakeCode(0x428FB8);
MakeCode(0x428FE0);
MakeCode(0x428FEB);
MakeFunction(0x428FB8, 0x428FED);
MakeUnkn(0x428FF0, 1);
MakeNameEx(0x428FF0, "TCustomEdit.WMContextMenu", 0x20);
MakeComm(0x428FF0, "'procedure TCustomEdit.WMContextMenu(var Message:TWMContextMenu);'");
MakeCode(0x428FF0);
MakeFunction(0x428FF0, 0x42900C);
MakeUnkn(0x42900C, 1);
MakeNameEx(0x42900C, "TButtonActionLink.AssignClient", 0x20);
MakeComm(0x42900C, "'procedure TButtonActionLink.AssignClient(AClient:TObject);'");
MakeCode(0x42900C);
MakeFunction(0x42900C, 0x42902E);
MakeUnkn(0x429030, 1);
MakeNameEx(0x429030, "TButtonActionLink.IsCheckedLinked", 0x20);
MakeComm(0x429030, "'function TButtonActionLink.IsCheckedLinked:Boolean;'");
MakeCode(0x429030);
MakeCode(0x42905E);
MakeCode(0x429062);
MakeFunction(0x429030, 0x429066);
MakeUnkn(0x429068, 1);
MakeNameEx(0x429068, "TButtonActionLink.SetChecked", 0x20);
MakeComm(0x429068, "'procedure TButtonActionLink.SetChecked(Value:Boolean);'");
MakeCode(0x429068);
MakeCode(0x4290A3);
MakeCode(0x4290B0);
MakeCode(0x4290BE);
MakeCode(0x4290C3);
MakeCode(0x4290C5);
MakeFunction(0x429068, 0x4290C9);
MakeUnkn(0x4290CC, 1);
MakeNameEx(0x4290CC, "TButtonControl.Create", 0x20);
MakeComm(0x4290CC, "'constructor TButtonControl.Create(AOwner:TComponent);'");
MakeCode(0x4290CC);
MakeCode(0x4290DA);
MakeCode(0x429103);
MakeCode(0x429118);
MakeFunction(0x4290CC, 0x42911D);
MakeUnkn(0x429120, 1);
MakeNameEx(0x429120, "TButtonControl.ActionChange", 0x20);
MakeComm(0x429120, "'procedure TButtonControl.ActionChange(Sender:TObject; CheckDefaults:Boolean);'");
MakeCode(0x429120);
MakeCode(0x429157);
MakeCode(0x429164);
MakeFunction(0x429120, 0x429168);
MakeUnkn(0x429168, 1);
MakeNameEx(0x429168, "TButtonControl.sub_00429168", 0x20);
MakeComm(0x429168, "'procedure TButtonControl.sub_00429168;'");
MakeCode(0x429168);
MakeFunction(0x429168, 0x42916E);
MakeCode(0x429170);
MakeFunction(0x429170, 0x429173);
MakeCode(0x429174);
MakeFunction(0x429174, 0x429175);
MakeUnkn(0x429178, 1);
MakeNameEx(0x429178, "TButtonControl.WndProc", 0x20);
MakeComm(0x429178, "'procedure TButtonControl.WndProc(var Message:TMessage);'");
MakeCode(0x429178);
MakeCode(0x429196);
MakeCode(0x4291D7);
MakeCode(0x4291E0);
MakeCode(0x4291E9);
MakeFunction(0x429178, 0x4291ED);
MakeUnkn(0x4291F0, 1);
MakeNameEx(0x4291F0, "TButton.CNCtlColorBtn", 0x20);
MakeComm(0x4291F0, "'procedure TButton.CNCtlColorBtn(var Message:TWMCtlColorBtn);'");
MakeCode(0x4291F0);
MakeCode(0x42922E);
MakeCode(0x429237);
MakeFunction(0x4291F0, 0x42923B);
MakeUnkn(0x42923C, 1);
MakeNameEx(0x42923C, "TButtonControl.WMEraseBkGnd", 0x20);
MakeComm(0x42923C, "'procedure TButtonControl.WMEraseBkGnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x42923C);
MakeCode(0x42925A);
MakeFunction(0x42923C, 0x429266);
MakeUnkn(0x429268, 1);
MakeNameEx(0x429268, "TButtonControl.CreateParams", 0x20);
MakeComm(0x429268, "'procedure TButtonControl.CreateParams(var Params:TCreateParams);'");
MakeCode(0x429268);
MakeCode(0x429287);
MakeFunction(0x429268, 0x42928A);
MakeUnkn(0x42928C, 1);
MakeNameEx(0x42928C, "TButtonControl.SetWordWrap", 0x20);
MakeComm(0x42928C, "'procedure TButtonControl.SetWordWrap(const Value:Boolean);'");
MakeCode(0x42928C);
MakeFunction(0x42928C, 0x4292A0);
MakeUnkn(0x4292A0, 1);
MakeNameEx(0x4292A0, "TButton.Create", 0x20);
MakeComm(0x4292A0, "'constructor TButton.Create(AOwner:TComponent);'");
MakeCode(0x4292A0);
MakeCode(0x4292AE);
MakeCode(0x4292F9);
MakeFunction(0x4292A0, 0x4292FE);
MakeUnkn(0x429304, 1);
MakeNameEx(0x429304, "TButton.Click", 0x20);
MakeComm(0x429304, "'procedure TButton.Click;'");
MakeCode(0x429304);
MakeCode(0x42931E);
MakeFunction(0x429304, 0x429327);
MakeUnkn(0x429328, 1);
MakeNameEx(0x429328, "TButton.UseRightToLeftAlignment", 0x20);
MakeComm(0x429328, "'procedure TButton.UseRightToLeftAlignment;'");
MakeCode(0x429328);
MakeFunction(0x429328, 0x42932B);
MakeUnkn(0x42932C, 1);
MakeNameEx(0x42932C, "TButton.SetButtonStyle", 0x20);
MakeComm(0x42932C, "'procedure TButton.SetButtonStyle(ADefault:Boolean);'");
MakeCode(0x42932C);
MakeCode(0x429349);
MakeCode(0x42934B);
MakeCode(0x429379);
MakeFunction(0x42932C, 0x42937E);
MakeUnkn(0x429380, 1);
MakeNameEx(0x429380, "TButton.SetDefault", 0x20);
MakeComm(0x429380, "'procedure TButton.SetDefault(Value:Boolean);'");
MakeCode(0x429380);
MakeCode(0x4293B2);
MakeFunction(0x429380, 0x4293B4);
MakeUnkn(0x4293B4, 1);
MakeNameEx(0x4293B4, "TButton.CreateParams", 0x20);
MakeComm(0x4293B4, "'procedure TButton.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4293B4);
MakeFunction(0x4293B4, 0x4293E6);
MakeUnkn(0x4293F0, 1);
MakeNameEx(0x4293F0, "TButton.CreateWnd", 0x20);
MakeComm(0x4293F0, "'procedure TButton.CreateWnd;'");
MakeCode(0x4293F0);
MakeFunction(0x4293F0, 0x429408);
MakeUnkn(0x429408, 1);
MakeNameEx(0x429408, "TButton.CNCommand", 0x20);
MakeComm(0x429408, "'procedure TButton.CNCommand(var Message:TWMCommand);'");
MakeCode(0x429408);
MakeCode(0x429419);
MakeFunction(0x429408, 0x42941B);
MakeUnkn(0x42941C, 1);
MakeNameEx(0x42941C, "TButton.CMDialogKey", 0x20);
MakeComm(0x42941C, "'procedure TButton.CMDialogKey(var Message:TCMDialogKey);'");
MakeCode(0x42941C);
MakeCode(0x429433);
MakeCode(0x429443);
MakeCode(0x429478);
MakeCode(0x429481);
MakeFunction(0x42941C, 0x429485);
MakeUnkn(0x42948C, 1);
MakeNameEx(0x42948C, "TButton.CMDialogChar", 0x20);
MakeComm(0x42948C, "'procedure TButton.CMDialogChar(var Message:TCMDialogChar);'");
MakeCode(0x42948C);
MakeCode(0x4294E3);
MakeCode(0x4294EC);
MakeCode(0x4294F9);
MakeCode(0x429502);
MakeCode(0x429507);
MakeFunction(0x42948C, 0x42950F);
MakeUnkn(0x429510, 1);
MakeNameEx(0x429510, "TButton.CMFocusChanged", 0x20);
MakeComm(0x429510, "'procedure TButton.CMFocusChanged(var Message:TCMFocusChanged);'");
MakeCode(0x429510);
MakeCode(0x429538);
MakeCode(0x429544);
MakeFunction(0x429510, 0x429561);
MakeUnkn(0x429564, 1);
MakeNameEx(0x429564, "TButton.WMEraseBkgnd", 0x20);
MakeComm(0x429564, "'procedure TButton.WMEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x429564);
MakeCode(0x429582);
MakeFunction(0x429564, 0x42958E);
MakeUnkn(0x429590, 1);
MakeNameEx(0x429590, "TButtonControl.CNCtlColorStatic", 0x20);
MakeComm(0x429590, "'procedure TButtonControl.CNCtlColorStatic(var Message:TWMCtlColorStatic);'");
MakeCode(0x429590);
MakeCode(0x4295CE);
MakeCode(0x4295D7);
MakeFunction(0x429590, 0x4295DB);
MakeCode(0x4295DC);
MakeCode(0x4295F3);
MakeCode(0x429600);
MakeCode(0x429601);
MakeCode(0x429606);
MakeFunction(0x4295DC, 0x42960A);
MakeCode(0x42960C);
MakeFunction(0x42960C, 0x429614);
MakeUnkn(0x429614, 1);
MakeNameEx(0x429614, "VMT_429614_THintAction", 0);
MakeDword(0x429614);
MakeDword(0x429618);
MakeDword(0x42961C);
MakeDword(0x429620);
MakeDword(0x429624);
MakeDword(0x429628);
MakeDword(0x42962C);
MakeDword(0x429630);
MakeDword(0x429634);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4296B4, 0x4296C0);
MakeDword(0x429638);
MakeDword(0x42963C);
MakeDword(0x429640);
MakeDword(0x429644);
MakeDword(0x429648);
MakeDword(0x42964C);
MakeDword(0x429650);
MakeDword(0x429654);
MakeDword(0x429658);
MakeDword(0x42965C);
MakeComm(0x429660, "'+0'");
MakeDword(0x429660);
MakeComm(0x429664, "'+4'");
MakeDword(0x429664);
MakeComm(0x429668, "'+8'");
MakeDword(0x429668);
MakeComm(0x42966C, "'+C'");
MakeDword(0x42966C);
MakeComm(0x429670, "'+10'");
MakeDword(0x429670);
MakeComm(0x429674, "'+14'");
MakeDword(0x429674);
MakeComm(0x429678, "'+18'");
MakeDword(0x429678);
MakeComm(0x42967C, "'+1C'");
MakeDword(0x42967C);
MakeComm(0x429680, "'+20'");
MakeDword(0x429680);
MakeComm(0x429684, "'+24'");
MakeDword(0x429684);
MakeComm(0x429688, "'+28'");
MakeDword(0x429688);
MakeComm(0x42968C, "'+2C'");
MakeDword(0x42968C);
MakeComm(0x429690, "'+30'");
MakeDword(0x429690);
MakeComm(0x429694, "'+34'");
MakeDword(0x429694);
MakeComm(0x429698, "'+38'");
MakeDword(0x429698);
MakeComm(0x42969C, "'+3C'");
MakeDword(0x42969C);
MakeComm(0x4296A0, "'+40'");
MakeDword(0x4296A0);
MakeComm(0x4296A4, "'+44'");
MakeDword(0x4296A4);
MakeComm(0x4296A8, "'+48'");
MakeDword(0x4296A8);
MakeComm(0x4296AC, "'+4C'");
MakeDword(0x4296AC);
MakeComm(0x4296B0, "'+50'");
MakeDword(0x4296B0);
MakeUnkn(0x4296C0, 1);
MakeNameEx(0x4296C0, "RTTI_4296C0_Class_THintAction", 0);
MakeDword(0x4296C0);
MakeUnkn(0x4296C4, 1);
MakeNameEx(0x4296C4, "", 0);
MakeByte(0x4296C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4296C5, 0x4296D1);
MakeDword(0x4296D1);
MakeDword(0x4296D5);
MakeWord(0x4296D9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4296DB, 0x4296E4);
MakeWord(0x4296E4);
MakeDword(0x4296E6);
MakeDword(0x4296EA);
MakeDword(0x4296EE);
MakeDword(0x4296F2);
MakeDword(0x4296F6);
MakeDword(0x4296FA);
MakeWord(0x4296FE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x429700, 0x429705);
MakeUnkn(0x429708, 1);
MakeNameEx(0x429708, "THintAction.Create", 0x20);
MakeComm(0x429708, "'constructor THintAction.Create(AOwner:TComponent);'");
MakeCode(0x429708);
MakeCode(0x429716);
MakeCode(0x42973C);
MakeFunction(0x429708, 0x429741);
MakeCode(0x429744);
MakeCode(0x42975B);
MakeCode(0x429768);
MakeCode(0x429769);
MakeCode(0x42976E);
MakeFunction(0x429744, 0x429772);
MakeCode(0x429774);
MakeFunction(0x429774, 0x42977C);
MakeComm(0x42977C, "'hNoKeyword'");
MakeDword(0x42977C);
MakeDword(0x429780);
MakeUnkn(0x4298B0, 1);
MakeNameEx(0x4298B0, "VMT_4298B0_TWinHelpViewer", 0);
MakeDword(0x4298B0);
MakeDword(0x4298B4);
MakeUnkn(0x429858, 1);
MakeNameEx(0x429858, "TWinHelpViewer_IntfTable", 0);
MakeDword(0x429858);
MakeByte(0x42985C);
MakeArray(0x42985C, 16);
MakeDword(0x42986C);
MakeDword(0x429814);
MakeFunction(0x4297F5, -1);
MakeCode(0x4297F5);
MakeDword(0x429818);
MakeFunction(0x4297FF, -1);
MakeCode(0x4297FF);
MakeDword(0x42981C);
MakeFunction(0x429809, -1);
MakeCode(0x429809);
MakeDword(0x429820);
MakeFunction(0x4297AD, -1);
MakeCode(0x4297AD);
MakeDword(0x429824);
MakeFunction(0x4297B5, -1);
MakeCode(0x4297B5);
MakeDword(0x429828);
MakeFunction(0x4297BD, -1);
MakeCode(0x4297BD);
MakeDword(0x42982C);
MakeFunction(0x4297C5, -1);
MakeCode(0x4297C5);
MakeDword(0x429830);
MakeFunction(0x4297CD, -1);
MakeCode(0x4297CD);
MakeDword(0x429834);
MakeFunction(0x4297D5, -1);
MakeCode(0x4297D5);
MakeDword(0x429838);
MakeFunction(0x4297DD, -1);
MakeCode(0x4297DD);
MakeDword(0x42983C);
MakeFunction(0x4297E5, -1);
MakeCode(0x4297E5);
MakeDword(0x429840);
MakeFunction(0x4297ED, -1);
MakeCode(0x4297ED);
MakeDword(0x429844);
MakeFunction(0x42978D, -1);
MakeCode(0x42978D);
MakeDword(0x429848);
MakeFunction(0x429795, -1);
MakeCode(0x429795);
MakeDword(0x42984C);
MakeFunction(0x42979D, -1);
MakeCode(0x42979D);
MakeDword(0x429850);
MakeFunction(0x4297A5, -1);
MakeCode(0x4297A5);
MakeDword(0x429854);
MakeFunction(0x429785, -1);
MakeCode(0x429785);
MakeByte(0x429784);
MakeDword(0x429870);
MakeDword(0x429874);
MakeByte(0x429878);
MakeArray(0x429878, 16);
MakeDword(0x429888);
MakeDword(0x429814);
MakeFunction(0x4297F5, -1);
MakeCode(0x4297F5);
MakeDword(0x429818);
MakeFunction(0x4297FF, -1);
MakeCode(0x4297FF);
MakeDword(0x42981C);
MakeFunction(0x429809, -1);
MakeCode(0x429809);
MakeDword(0x429820);
MakeFunction(0x4297AD, -1);
MakeCode(0x4297AD);
MakeDword(0x429824);
MakeFunction(0x4297B5, -1);
MakeCode(0x4297B5);
MakeDword(0x429828);
MakeFunction(0x4297BD, -1);
MakeCode(0x4297BD);
MakeDword(0x42982C);
MakeFunction(0x4297C5, -1);
MakeCode(0x4297C5);
MakeDword(0x429830);
MakeFunction(0x4297CD, -1);
MakeCode(0x4297CD);
MakeDword(0x429834);
MakeFunction(0x4297D5, -1);
MakeCode(0x4297D5);
MakeDword(0x429838);
MakeFunction(0x4297DD, -1);
MakeCode(0x4297DD);
MakeDword(0x42983C);
MakeFunction(0x4297E5, -1);
MakeCode(0x4297E5);
MakeDword(0x429840);
MakeFunction(0x4297ED, -1);
MakeCode(0x4297ED);
MakeDword(0x429844);
MakeFunction(0x42978D, -1);
MakeCode(0x42978D);
MakeDword(0x429848);
MakeFunction(0x429795, -1);
MakeCode(0x429795);
MakeDword(0x42984C);
MakeFunction(0x42979D, -1);
MakeCode(0x42979D);
MakeDword(0x429850);
MakeFunction(0x4297A5, -1);
MakeCode(0x4297A5);
MakeDword(0x429854);
MakeFunction(0x429785, -1);
MakeCode(0x429785);
MakeByte(0x429784);
MakeDword(0x42988C);
MakeDword(0x429890);
MakeByte(0x429894);
MakeArray(0x429894, 16);
MakeDword(0x4298A4);
MakeDword(0x429814);
MakeFunction(0x4297F5, -1);
MakeCode(0x4297F5);
MakeDword(0x429818);
MakeFunction(0x4297FF, -1);
MakeCode(0x4297FF);
MakeDword(0x42981C);
MakeFunction(0x429809, -1);
MakeCode(0x429809);
MakeDword(0x429820);
MakeFunction(0x4297AD, -1);
MakeCode(0x4297AD);
MakeDword(0x429824);
MakeFunction(0x4297B5, -1);
MakeCode(0x4297B5);
MakeDword(0x429828);
MakeFunction(0x4297BD, -1);
MakeCode(0x4297BD);
MakeDword(0x42982C);
MakeFunction(0x4297C5, -1);
MakeCode(0x4297C5);
MakeDword(0x429830);
MakeFunction(0x4297CD, -1);
MakeCode(0x4297CD);
MakeDword(0x429834);
MakeFunction(0x4297D5, -1);
MakeCode(0x4297D5);
MakeDword(0x429838);
MakeFunction(0x4297DD, -1);
MakeCode(0x4297DD);
MakeDword(0x42983C);
MakeFunction(0x4297E5, -1);
MakeCode(0x4297E5);
MakeDword(0x429840);
MakeFunction(0x4297ED, -1);
MakeCode(0x4297ED);
MakeDword(0x429844);
MakeFunction(0x42978D, -1);
MakeCode(0x42978D);
MakeDword(0x429848);
MakeFunction(0x429795, -1);
MakeCode(0x429795);
MakeDword(0x42984C);
MakeFunction(0x42979D, -1);
MakeCode(0x42979D);
MakeDword(0x429850);
MakeFunction(0x4297A5, -1);
MakeCode(0x4297A5);
MakeDword(0x429854);
MakeFunction(0x429785, -1);
MakeCode(0x429785);
MakeByte(0x429784);
MakeDword(0x4298A8);
MakeDword(0x4298AC);
MakeDword(0x4298B8);
MakeDword(0x4298BC);
MakeUnkn(0x4298FC, 1);
MakeNameEx(0x4298FC, "TWinHelpViewer_InitTable", 0);
MakeByte(0x4298FC);
MakeByte(0x4298FD);
MakeDword(0x4298FE);
MakeDword(0x429902);
MakeDword(0x429906);
MakeDword(0x42990A);
MakeDword(0x42990E);
MakeDword(0x429912);
MakeDword(0x4298C0);
MakeDword(0x4298C4);
MakeDword(0x4298C8);
MakeDword(0x4298CC);
MakeDword(0x4298D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x429916, 0x429925);
MakeDword(0x4298D4);
MakeDword(0x4298D8);
MakeDword(0x4298DC);
MakeDword(0x4298E0);
MakeDword(0x4298E4);
MakeDword(0x4298E8);
MakeDword(0x4298EC);
MakeDword(0x4298F0);
MakeDword(0x4298F4);
MakeDword(0x4298F8);
MakeUnkn(0x429928, 1);
MakeNameEx(0x429928, "TWinHelpViewer.HelpFile", 0x20);
MakeComm(0x429928, "'function TWinHelpViewer.HelpFile(const Name:AnsiString):AnsiString;'");
MakeCode(0x429928);
MakeCode(0x429964);
MakeCode(0x42996E);
MakeCode(0x42998A);
MakeCode(0x4299B8);
MakeCode(0x4299C2);
MakeCode(0x4299CF);
MakeCode(0x4299DD);
MakeCode(0x4299E2);
MakeFunction(0x429928, 0x4299F8);
MakeUnkn(0x4299F8, 1);
MakeNameEx(0x4299F8, "TWinHelpViewer.InternalShutDown", 0x20);
MakeComm(0x4299F8, "'procedure TWinHelpViewer.InternalShutDown;'");
MakeCode(0x4299F8);
MakeCode(0x429A1B);
MakeFunction(0x4299F8, 0x429A1D);
MakeUnkn(0x429A20, 1);
MakeNameEx(0x429A20, "TWinHelpViewer.GetViewerName", 0x20);
MakeComm(0x429A20, "'function TWinHelpViewer.GetViewerName:AnsiString;'");
MakeCode(0x429A20);
MakeFunction(0x429A20, 0x429A32);
MakeUnkn(0x429A34, 1);
MakeNameEx(0x429A34, "TWinHelpViewer.UnderstandsKeyword", 0x20);
MakeComm(0x429A34, "'function TWinHelpViewer.UnderstandsKeyword(const HelpString:AnsiString):Integer;'");
MakeCode(0x429A34);
MakeCode(0x429A7C);
MakeCode(0x429A80);
MakeCode(0x429A85);
MakeCode(0x429A92);
MakeCode(0x429A9B);
MakeCode(0x429AA0);
MakeFunction(0x429A34, 0x429AA9);
MakeUnkn(0x429AAC, 1);
MakeNameEx(0x429AAC, "TWinHelpViewer.GetHelpStrings", 0x20);
MakeComm(0x429AAC, "'function TWinHelpViewer.GetHelpStrings(const HelpString:AnsiString):TStringList;'");
MakeCode(0x429AAC);
MakeCode(0x429AE1);
MakeCode(0x429B19);
MakeCode(0x429B26);
MakeCode(0x429B34);
MakeCode(0x429B39);
MakeFunction(0x429AAC, 0x429B50);
MakeCode(0x429B50);
MakeFunction(0x429B50, 0x429B53);
MakeUnkn(0x429B54, 1);
MakeNameEx(0x429B54, "TWinHelpViewer.ShowTableOfContents", 0x20);
MakeComm(0x429B54, "'procedure TWinHelpViewer.ShowTableOfContents;'");
MakeCode(0x429B54);
MakeCode(0x429BB4);
MakeCode(0x429BC1);
MakeCode(0x429BCF);
MakeCode(0x429BD4);
MakeFunction(0x429B54, 0x429BDB);
MakeUnkn(0x429BDC, 1);
MakeNameEx(0x429BDC, "TWinHelpViewer.ShowHelp", 0x20);
MakeComm(0x429BDC, "'procedure TWinHelpViewer.ShowHelp(const HelpString:AnsiString);'");
MakeCode(0x429BDC);
MakeCode(0x429C1B);
MakeCode(0x429CB1);
MakeCode(0x429CBE);
MakeCode(0x429CD4);
MakeCode(0x429CD9);
MakeFunction(0x429BDC, 0x429D24);
MakeCode(0x429D24);
MakeFunction(0x429D24, 0x429D28);
MakeUnkn(0x429D28, 1);
MakeNameEx(0x429D28, "TWinHelpViewer.SoftShutDown", 0x20);
MakeComm(0x429D28, "'procedure TWinHelpViewer.SoftShutDown;'");
MakeCode(0x429D28);
MakeFunction(0x429D28, 0x429D3D);
MakeUnkn(0x429D44, 1);
MakeNameEx(0x429D44, "TWinHelpViewer.ShutDown", 0x20);
MakeComm(0x429D44, "'procedure TWinHelpViewer.ShutDown;'");
MakeCode(0x429D44);
MakeCode(0x429D5C);
MakeCode(0x429D6F);
MakeFunction(0x429D44, 0x429D71);
MakeUnkn(0x429D74, 1);
MakeNameEx(0x429D74, "TWinHelpViewer.UnderstandsTopic", 0x20);
MakeComm(0x429D74, "'function TWinHelpViewer.UnderstandsTopic(const Topic:AnsiString):Boolean;'");
MakeCode(0x429D74);
MakeCode(0x429DB6);
MakeCode(0x429DC3);
MakeCode(0x429DCC);
MakeCode(0x429DD1);
MakeFunction(0x429D74, 0x429DDB);
MakeUnkn(0x429DDC, 1);
MakeNameEx(0x429DDC, "TWinHelpViewer.DisplayTopic", 0x20);
MakeComm(0x429DDC, "'procedure TWinHelpViewer.DisplayTopic(const Topic:AnsiString);'");
MakeCode(0x429DDC);
MakeCode(0x429EB1);
MakeCode(0x429EBE);
MakeCode(0x429ED2);
MakeCode(0x429ED7);
MakeFunction(0x429DDC, 0x429EF0);
MakeUnkn(0x429EF0, 1);
MakeNameEx(0x429EF0, "TWinHelpViewer.UnderstandsContext", 0x20);
MakeComm(0x429EF0, "'function TWinHelpViewer.UnderstandsContext(const ContextID:Integer; const HelpFileName:AnsiString):Boolean;'");
MakeCode(0x429EF0);
MakeCode(0x429F3C);
MakeCode(0x429F49);
MakeCode(0x429F52);
MakeCode(0x429F57);
MakeFunction(0x429EF0, 0x429F62);
MakeUnkn(0x429F64, 1);
MakeNameEx(0x429F64, "TWinHelpViewer.DisplayHelpByContext", 0x20);
MakeComm(0x429F64, "'procedure TWinHelpViewer.DisplayHelpByContext(const ContextID:Integer; const HelpFileName:AnsiString);'");
MakeCode(0x429F64);
MakeCode(0x429FCE);
MakeCode(0x429FDB);
MakeCode(0x429FE4);
MakeCode(0x429FE9);
MakeFunction(0x429F64, 0x429FF1);
MakeUnkn(0x429FF4, 1);
MakeNameEx(0x429FF4, "TWinHelpViewer.CallWinHelp", 0x20);
MakeComm(0x429FF4, "'function TWinHelpViewer.CallWinHelp(Handle:Longint; const HelpFileName:AnsiString; Command:Word; Data:Longint):Boolean;'");
MakeCode(0x429FF4);
MakeCode(0x42A05C);
MakeCode(0x42A077);
MakeCode(0x42A079);
MakeCode(0x42A0C4);
MakeCode(0x42A0D1);
MakeCode(0x42A0DF);
MakeCode(0x42A0E4);
MakeFunction(0x429FF4, 0x42A0F1);
MakeUnkn(0x42A0F4, 1);
MakeNameEx(0x42A0F4, "WindowEnumerationTester", 0x20);
MakeComm(0x42A0F4, "'function WindowEnumerationTester(wnd:HWND; var Info:TWinHelpFinder):BOOL; stdcall;'");
MakeCode(0x42A0F4);
MakeFunction(0x42A0F4, 0x42A150);
MakeUnkn(0x42A150, 1);
MakeNameEx(0x42A150, "DialogEnumerationTester", 0x20);
MakeComm(0x42A150, "'function DialogEnumerationTester(wnd:HWND; var Info:TWinHelpFinder):BOOL; stdcall;'");
MakeCode(0x42A150);
MakeFunction(0x42A150, 0x42A1A8);
MakeUnkn(0x42A1A8, 1);
MakeNameEx(0x42A1A8, "FindWinHelp", 0x20);
MakeComm(0x42A1A8, "'function FindWinHelp:TWinHelpFinder;'");
MakeCode(0x42A1A8);
MakeFunction(0x42A1A8, 0x42A1C1);
MakeUnkn(0x42A1C4, 1);
MakeNameEx(0x42A1C4, "TWinHelpViewer.IsNewQuery", 0x20);
MakeComm(0x42A1C4, "'function TWinHelpViewer.IsNewQuery(QueryType:TWHCommandType; Command:AnsiString; Context:Integer):Boolean;'");
MakeCode(0x42A1C4);
MakeCode(0x42A21A);
MakeCode(0x42A224);
MakeCode(0x42A231);
MakeCode(0x42A23A);
MakeCode(0x42A23F);
MakeFunction(0x42A1C4, 0x42A24C);
MakeCode(0x42A24C);
MakeFunction(0x42A24C, 0x42A24F);
MakeUnkn(0x42A250, 1);
MakeNameEx(0x42A250, "TWinHelpViewer.CouldBeUnstableWindow", 0x20);
MakeComm(0x42A250, "'function TWinHelpViewer.CouldBeUnstableWindow(WndInfo:TWinHelpFinder):Boolean;'");
MakeCode(0x42A250);
MakeFunction(0x42A250, 0x42A26A);
MakeUnkn(0x42A26C, 1);
MakeNameEx(0x42A26C, "TWinHelpViewer.MakeWinHelpHappy", 0x20);
MakeComm(0x42A26C, "'function TWinHelpViewer.MakeWinHelpHappy:Boolean;'");
MakeCode(0x42A26C);
MakeCode(0x42A29D);
MakeCode(0x42A2BE);
MakeCode(0x42A2C0);
MakeFunction(0x42A26C, 0x42A2C8);
MakeUnkn(0x42A2C8, 1);
MakeNameEx(0x42A2C8, "TWinHelpViewer.RestartWinHelp", 0x20);
MakeComm(0x42A2C8, "'procedure TWinHelpViewer.RestartWinHelp;'");
MakeCode(0x42A2C8);
MakeCode(0x42A2ED);
MakeCode(0x42A32F);
MakeCode(0x42A33C);
MakeCode(0x42A345);
MakeCode(0x42A34A);
MakeFunction(0x42A2C8, 0x42A351);
MakeUnkn(0x42A354, 1);
MakeNameEx(0x42A354, "TWinHelpViewer.Create", 0x20);
MakeComm(0x42A354, "'constructor TWinHelpViewer.Create;'");
MakeCode(0x42A354);
MakeCode(0x42A362);
MakeCode(0x42A37D);
MakeCode(0x42A397);
MakeFunction(0x42A354, 0x42A39C);
MakeUnkn(0x42A3C8, 1);
MakeNameEx(0x42A3C8, "Finalization_10", 0x20);
MakeComm(0x42A3C8, "'procedure Finalization;'");
MakeCode(0x42A3C8);
MakeCode(0x42A3F6);
MakeCode(0x42A428);
MakeCode(0x42A435);
MakeCode(0x42A436);
MakeCode(0x42A43B);
MakeFunction(0x42A3C8, 0x42A43F);
MakeUnkn(0x42A440, 1);
MakeNameEx(0x42A440, "WinHelpViewer", 0x20);
MakeComm(0x42A440, "'procedure WinHelpViewer;'");
MakeCode(0x42A440);
MakeCode(0x42A484);
MakeCode(0x42A491);
MakeCode(0x42A492);
MakeCode(0x42A497);
MakeFunction(0x42A440, 0x42A49B);
MakeUnkn(0x42A49C, 1);
MakeNameEx(0x42A49C, "RTTI_42A49C_Integer_TModalResult", 0);
MakeDword(0x42A49C);
MakeUnkn(0x42A4A0, 1);
MakeNameEx(0x42A4A0, "", 0);
MakeByte(0x42A4A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A4A1, 0x42A4AE);
MakeByte(0x42A4AE);
MakeDword(0x42A4AF);
MakeDword(0x42A4B3);
MakeUnkn(0x42A4B8, 1);
MakeNameEx(0x42A4B8, "RTTI_42A4B8_Integer_TCursor", 0);
MakeDword(0x42A4B8);
MakeUnkn(0x42A4BC, 1);
MakeNameEx(0x42A4BC, "", 0);
MakeByte(0x42A4BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A4BD, 0x42A4C5);
MakeByte(0x42A4C5);
MakeDword(0x42A4C6);
MakeDword(0x42A4CA);
MakeUnkn(0x42A4D0, 1);
MakeNameEx(0x42A4D0, "RTTI_42A4D0_Enumeration_TAlign", 0);
MakeDword(0x42A4D0);
MakeUnkn(0x42A4D4, 1);
MakeNameEx(0x42A4D4, "", 0);
MakeByte(0x42A4D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A4D5, 0x42A4DC);
MakeByte(0x42A4DC);
MakeDword(0x42A4DD);
MakeDword(0x42A4E1);
MakeDword(0x42A4E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A4E9, 0x42A4F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A4F0, 0x42A4F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A4F6, 0x42A4FF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A4FF, 0x42A506);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A506, 0x42A50E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A50E, 0x42A517);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A517, 0x42A520);
MakeUnkn(0x42A52C, 1);
MakeNameEx(0x42A52C, "VMT_42A52C_TDragObject", 0);
MakeDword(0x42A52C);
MakeDword(0x42A530);
MakeDword(0x42A534);
MakeDword(0x42A538);
MakeDword(0x42A53C);
MakeDword(0x42A540);
MakeDword(0x42A544);
MakeDword(0x42A548);
MakeDword(0x42A54C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A59C, 0x42A5A8);
MakeDword(0x42A550);
MakeDword(0x42A554);
MakeDword(0x42A558);
MakeDword(0x42A55C);
MakeDword(0x42A560);
MakeDword(0x42A564);
MakeDword(0x42A568);
MakeDword(0x42A56C);
MakeDword(0x42A570);
MakeDword(0x42A574);
MakeComm(0x42A578, "'+0'");
MakeDword(0x42A578);
MakeComm(0x42A57C, "'+4'");
MakeDword(0x42A57C);
MakeComm(0x42A580, "'+8'");
MakeDword(0x42A580);
MakeComm(0x42A584, "'+C'");
MakeDword(0x42A584);
MakeComm(0x42A588, "'+10'");
MakeDword(0x42A588);
MakeComm(0x42A58C, "'+14'");
MakeDword(0x42A58C);
MakeComm(0x42A590, "'+18'");
MakeDword(0x42A590);
MakeComm(0x42A594, "'+1C'");
MakeDword(0x42A594);
MakeComm(0x42A598, "'+20'");
MakeDword(0x42A598);
MakeUnkn(0x42A5A8, 1);
MakeNameEx(0x42A5A8, "RTTI_42A5A8_Class_TDragObject", 0);
MakeDword(0x42A5A8);
MakeUnkn(0x42A5AC, 1);
MakeNameEx(0x42A5AC, "", 0);
MakeByte(0x42A5AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A5AD, 0x42A5B9);
MakeDword(0x42A5B9);
MakeDword(0x42A5BD);
MakeWord(0x42A5C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A5C3, 0x42A5CC);
MakeWord(0x42A5CC);
MakeUnkn(0x42A5D0, 1);
MakeNameEx(0x42A5D0, "VMT_42A5D0_TBaseDragControlObject", 0);
MakeDword(0x42A5D0);
MakeDword(0x42A5D4);
MakeDword(0x42A5D8);
MakeDword(0x42A5DC);
MakeDword(0x42A5E0);
MakeDword(0x42A5E4);
MakeDword(0x42A5E8);
MakeDword(0x42A5EC);
MakeDword(0x42A5F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A648, 0x42A65F);
MakeDword(0x42A5F4);
MakeDword(0x42A5F8);
MakeDword(0x42A5FC);
MakeDword(0x42A600);
MakeDword(0x42A604);
MakeDword(0x42A608);
MakeDword(0x42A60C);
MakeDword(0x42A610);
MakeDword(0x42A614);
MakeDword(0x42A618);
MakeComm(0x42A61C, "'+0'");
MakeDword(0x42A61C);
MakeComm(0x42A620, "'+4'");
MakeDword(0x42A620);
MakeComm(0x42A624, "'+8'");
MakeDword(0x42A624);
MakeComm(0x42A628, "'+C'");
MakeDword(0x42A628);
MakeComm(0x42A62C, "'+10'");
MakeDword(0x42A62C);
MakeComm(0x42A630, "'+14'");
MakeDword(0x42A630);
MakeComm(0x42A634, "'+18'");
MakeDword(0x42A634);
MakeComm(0x42A638, "'+1C'");
MakeDword(0x42A638);
MakeComm(0x42A63C, "'+20'");
MakeDword(0x42A63C);
MakeComm(0x42A640, "'+24'");
MakeDword(0x42A640);
MakeComm(0x42A644, "'+28'");
MakeDword(0x42A644);
MakeUnkn(0x42A660, 1);
MakeNameEx(0x42A660, "RTTI_42A660_Class_TBaseDragControlObject", 0);
MakeDword(0x42A660);
MakeUnkn(0x42A664, 1);
MakeNameEx(0x42A664, "", 0);
MakeByte(0x42A664);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A665, 0x42A67C);
MakeDword(0x42A67C);
MakeDword(0x42A680);
MakeWord(0x42A684);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A686, 0x42A68F);
MakeWord(0x42A68F);
MakeUnkn(0x42A694, 1);
MakeNameEx(0x42A694, "VMT_42A694_TDragControlObject", 0);
MakeDword(0x42A694);
MakeDword(0x42A698);
MakeDword(0x42A69C);
MakeDword(0x42A6A0);
MakeDword(0x42A6A4);
MakeDword(0x42A6A8);
MakeDword(0x42A6AC);
MakeDword(0x42A6B0);
MakeDword(0x42A6B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A70C, 0x42A71F);
MakeDword(0x42A6B8);
MakeDword(0x42A6BC);
MakeDword(0x42A6C0);
MakeDword(0x42A6C4);
MakeDword(0x42A6C8);
MakeDword(0x42A6CC);
MakeDword(0x42A6D0);
MakeDword(0x42A6D4);
MakeDword(0x42A6D8);
MakeDword(0x42A6DC);
MakeComm(0x42A6E0, "'+0'");
MakeDword(0x42A6E0);
MakeComm(0x42A6E4, "'+4'");
MakeDword(0x42A6E4);
MakeComm(0x42A6E8, "'+8'");
MakeDword(0x42A6E8);
MakeComm(0x42A6EC, "'+C'");
MakeDword(0x42A6EC);
MakeComm(0x42A6F0, "'+10'");
MakeDword(0x42A6F0);
MakeComm(0x42A6F4, "'+14'");
MakeDword(0x42A6F4);
MakeComm(0x42A6F8, "'+18'");
MakeDword(0x42A6F8);
MakeComm(0x42A6FC, "'+1C'");
MakeDword(0x42A6FC);
MakeComm(0x42A700, "'+20'");
MakeDword(0x42A700);
MakeComm(0x42A704, "'+24'");
MakeDword(0x42A704);
MakeComm(0x42A708, "'+28'");
MakeDword(0x42A708);
MakeUnkn(0x42A720, 1);
MakeNameEx(0x42A720, "VMT_42A720_TDragControlObjectEx", 0);
MakeDword(0x42A720);
MakeDword(0x42A724);
MakeDword(0x42A728);
MakeDword(0x42A72C);
MakeDword(0x42A730);
MakeDword(0x42A734);
MakeDword(0x42A738);
MakeDword(0x42A73C);
MakeDword(0x42A740);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A798, 0x42A7AD);
MakeDword(0x42A744);
MakeDword(0x42A748);
MakeDword(0x42A74C);
MakeDword(0x42A750);
MakeDword(0x42A754);
MakeDword(0x42A758);
MakeDword(0x42A75C);
MakeDword(0x42A760);
MakeDword(0x42A764);
MakeDword(0x42A768);
MakeComm(0x42A76C, "'+0'");
MakeDword(0x42A76C);
MakeComm(0x42A770, "'+4'");
MakeDword(0x42A770);
MakeComm(0x42A774, "'+8'");
MakeDword(0x42A774);
MakeComm(0x42A778, "'+C'");
MakeDword(0x42A778);
MakeComm(0x42A77C, "'+10'");
MakeDword(0x42A77C);
MakeComm(0x42A780, "'+14'");
MakeDword(0x42A780);
MakeComm(0x42A784, "'+18'");
MakeDword(0x42A784);
MakeComm(0x42A788, "'+1C'");
MakeDword(0x42A788);
MakeComm(0x42A78C, "'+20'");
MakeDword(0x42A78C);
MakeComm(0x42A790, "'+24'");
MakeDword(0x42A790);
MakeComm(0x42A794, "'+28'");
MakeDword(0x42A794);
MakeUnkn(0x42A7B0, 1);
MakeNameEx(0x42A7B0, "VMT_42A7B0_TDragDockObject", 0);
MakeDword(0x42A7B0);
MakeDword(0x42A7B4);
MakeDword(0x42A7B8);
MakeDword(0x42A7BC);
MakeDword(0x42A7C0);
MakeDword(0x42A7C4);
MakeDword(0x42A7C8);
MakeDword(0x42A7CC);
MakeDword(0x42A7D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A838, 0x42A848);
MakeDword(0x42A7D4);
MakeDword(0x42A7D8);
MakeDword(0x42A7DC);
MakeDword(0x42A7E0);
MakeDword(0x42A7E4);
MakeDword(0x42A7E8);
MakeDword(0x42A7EC);
MakeDword(0x42A7F0);
MakeDword(0x42A7F4);
MakeDword(0x42A7F8);
MakeComm(0x42A7FC, "'+0'");
MakeDword(0x42A7FC);
MakeComm(0x42A800, "'+4'");
MakeDword(0x42A800);
MakeComm(0x42A804, "'+8'");
MakeDword(0x42A804);
MakeComm(0x42A808, "'+C'");
MakeDword(0x42A808);
MakeComm(0x42A80C, "'+10'");
MakeDword(0x42A80C);
MakeComm(0x42A810, "'+14'");
MakeDword(0x42A810);
MakeComm(0x42A814, "'+18'");
MakeDword(0x42A814);
MakeComm(0x42A818, "'+1C'");
MakeDword(0x42A818);
MakeComm(0x42A81C, "'+20'");
MakeDword(0x42A81C);
MakeComm(0x42A820, "'+24'");
MakeDword(0x42A820);
MakeComm(0x42A824, "'+28'");
MakeDword(0x42A824);
MakeComm(0x42A828, "'+2C'");
MakeDword(0x42A828);
MakeComm(0x42A82C, "'+30'");
MakeDword(0x42A82C);
MakeComm(0x42A830, "'+34'");
MakeDword(0x42A830);
MakeComm(0x42A834, "'+38'");
MakeDword(0x42A834);
MakeUnkn(0x42A848, 1);
MakeNameEx(0x42A848, "RTTI_42A848_Class_TDragDockObject", 0);
MakeDword(0x42A848);
MakeUnkn(0x42A84C, 1);
MakeNameEx(0x42A84C, "", 0);
MakeByte(0x42A84C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A84D, 0x42A85D);
MakeDword(0x42A85D);
MakeDword(0x42A861);
MakeWord(0x42A865);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A867, 0x42A870);
MakeWord(0x42A870);
MakeUnkn(0x42A874, 1);
MakeNameEx(0x42A874, "VMT_42A874_TDragDockObjectEx", 0);
MakeDword(0x42A874);
MakeDword(0x42A878);
MakeDword(0x42A87C);
MakeDword(0x42A880);
MakeDword(0x42A884);
MakeDword(0x42A888);
MakeDword(0x42A88C);
MakeDword(0x42A890);
MakeDword(0x42A894);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A8FC, 0x42A90E);
MakeDword(0x42A898);
MakeDword(0x42A89C);
MakeDword(0x42A8A0);
MakeDword(0x42A8A4);
MakeDword(0x42A8A8);
MakeDword(0x42A8AC);
MakeDword(0x42A8B0);
MakeDword(0x42A8B4);
MakeDword(0x42A8B8);
MakeDword(0x42A8BC);
MakeComm(0x42A8C0, "'+0'");
MakeDword(0x42A8C0);
MakeComm(0x42A8C4, "'+4'");
MakeDword(0x42A8C4);
MakeComm(0x42A8C8, "'+8'");
MakeDword(0x42A8C8);
MakeComm(0x42A8CC, "'+C'");
MakeDword(0x42A8CC);
MakeComm(0x42A8D0, "'+10'");
MakeDword(0x42A8D0);
MakeComm(0x42A8D4, "'+14'");
MakeDword(0x42A8D4);
MakeComm(0x42A8D8, "'+18'");
MakeDword(0x42A8D8);
MakeComm(0x42A8DC, "'+1C'");
MakeDword(0x42A8DC);
MakeComm(0x42A8E0, "'+20'");
MakeDword(0x42A8E0);
MakeComm(0x42A8E4, "'+24'");
MakeDword(0x42A8E4);
MakeComm(0x42A8E8, "'+28'");
MakeDword(0x42A8E8);
MakeComm(0x42A8EC, "'+2C'");
MakeDword(0x42A8EC);
MakeComm(0x42A8F0, "'+30'");
MakeDword(0x42A8F0);
MakeComm(0x42A8F4, "'+34'");
MakeDword(0x42A8F4);
MakeComm(0x42A8F8, "'+38'");
MakeDword(0x42A8F8);
MakeUnkn(0x42A910, 1);
MakeNameEx(0x42A910, "VMT_42A910_TControlCanvas", 0);
MakeDword(0x42A910);
MakeDword(0x42A914);
MakeDword(0x42A918);
MakeDword(0x42A91C);
MakeDword(0x42A920);
MakeDword(0x42A924);
MakeDword(0x42A928);
MakeDword(0x42A92C);
MakeDword(0x42A930);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A974, 0x42A983);
MakeDword(0x42A934);
MakeDword(0x42A938);
MakeDword(0x42A93C);
MakeDword(0x42A940);
MakeDword(0x42A944);
MakeDword(0x42A948);
MakeDword(0x42A94C);
MakeDword(0x42A950);
MakeDword(0x42A954);
MakeDword(0x42A958);
MakeComm(0x42A95C, "'+0'");
MakeDword(0x42A95C);
MakeComm(0x42A960, "'+4'");
MakeDword(0x42A960);
MakeComm(0x42A964, "'+8'");
MakeDword(0x42A964);
MakeComm(0x42A968, "'+C'");
MakeDword(0x42A968);
MakeComm(0x42A96C, "'+10'");
MakeDword(0x42A96C);
MakeComm(0x42A970, "'+14'");
MakeDword(0x42A970);
MakeUnkn(0x42A984, 1);
MakeNameEx(0x42A984, "RTTI_42A984_Class_TControlCanvas", 0);
MakeDword(0x42A984);
MakeUnkn(0x42A988, 1);
MakeNameEx(0x42A988, "", 0);
MakeByte(0x42A988);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A989, 0x42A998);
MakeDword(0x42A998);
MakeDword(0x42A99C);
MakeWord(0x42A9A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42A9A2, 0x42A9AB);
MakeWord(0x42A9AB);
MakeUnkn(0x42A9B0, 1);
MakeNameEx(0x42A9B0, "VMT_42A9B0_TControlActionLink", 0);
MakeDword(0x42A9B0);
MakeDword(0x42A9B4);
MakeDword(0x42A9B8);
MakeDword(0x42A9BC);
MakeDword(0x42A9C0);
MakeDword(0x42A9C4);
MakeDword(0x42A9C8);
MakeDword(0x42A9CC);
MakeDword(0x42A9D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AA78, 0x42AA8B);
MakeDword(0x42A9D4);
MakeDword(0x42A9D8);
MakeDword(0x42A9DC);
MakeDword(0x42A9E0);
MakeDword(0x42A9E4);
MakeDword(0x42A9E8);
MakeDword(0x42A9EC);
MakeDword(0x42A9F0);
MakeDword(0x42A9F4);
MakeDword(0x42A9F8);
MakeComm(0x42A9FC, "'+0'");
MakeDword(0x42A9FC);
MakeComm(0x42AA00, "'+4'");
MakeDword(0x42AA00);
MakeComm(0x42AA04, "'+8'");
MakeDword(0x42AA04);
MakeComm(0x42AA08, "'+C'");
MakeDword(0x42AA08);
MakeComm(0x42AA0C, "'+10'");
MakeDword(0x42AA0C);
MakeComm(0x42AA10, "'+14'");
MakeDword(0x42AA10);
MakeComm(0x42AA14, "'+18'");
MakeDword(0x42AA14);
MakeComm(0x42AA18, "'+1C'");
MakeDword(0x42AA18);
MakeComm(0x42AA1C, "'+20'");
MakeDword(0x42AA1C);
MakeComm(0x42AA20, "'+24'");
MakeDword(0x42AA20);
MakeComm(0x42AA24, "'+28'");
MakeDword(0x42AA24);
MakeComm(0x42AA28, "'+2C'");
MakeDword(0x42AA28);
MakeComm(0x42AA2C, "'+30'");
MakeDword(0x42AA2C);
MakeComm(0x42AA30, "'+34'");
MakeDword(0x42AA30);
MakeComm(0x42AA34, "'+38'");
MakeDword(0x42AA34);
MakeComm(0x42AA38, "'+3C'");
MakeDword(0x42AA38);
MakeComm(0x42AA3C, "'+40'");
MakeDword(0x42AA3C);
MakeComm(0x42AA40, "'+44'");
MakeDword(0x42AA40);
MakeComm(0x42AA44, "'+48'");
MakeDword(0x42AA44);
MakeComm(0x42AA48, "'+4C'");
MakeDword(0x42AA48);
MakeComm(0x42AA4C, "'+50'");
MakeDword(0x42AA4C);
MakeComm(0x42AA50, "'+54'");
MakeDword(0x42AA50);
MakeComm(0x42AA54, "'+58'");
MakeDword(0x42AA54);
MakeComm(0x42AA58, "'+5C'");
MakeDword(0x42AA58);
MakeComm(0x42AA5C, "'+60'");
MakeDword(0x42AA5C);
MakeComm(0x42AA60, "'+64'");
MakeDword(0x42AA60);
MakeComm(0x42AA64, "'+68'");
MakeDword(0x42AA64);
MakeComm(0x42AA68, "'+6C'");
MakeDword(0x42AA68);
MakeComm(0x42AA6C, "'+70'");
MakeDword(0x42AA6C);
MakeComm(0x42AA70, "'+74'");
MakeDword(0x42AA70);
MakeComm(0x42AA74, "'+78'");
MakeDword(0x42AA74);
MakeUnkn(0x42AA8C, 1);
MakeNameEx(0x42AA8C, "RTTI_42AA8C_Enumeration_TMouseButton", 0);
MakeDword(0x42AA8C);
MakeUnkn(0x42AA90, 1);
MakeNameEx(0x42AA90, "", 0);
MakeByte(0x42AA90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AA91, 0x42AA9E);
MakeByte(0x42AA9E);
MakeDword(0x42AA9F);
MakeDword(0x42AAA3);
MakeDword(0x42AAA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AAAB, 0x42AAB2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AAB2, 0x42AABA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AABA, 0x42AAC3);
MakeUnkn(0x42AACC, 1);
MakeNameEx(0x42AACC, "RTTI_42AACC_Enumeration_TDragMode", 0);
MakeDword(0x42AACC);
MakeUnkn(0x42AAD0, 1);
MakeNameEx(0x42AAD0, "", 0);
MakeByte(0x42AAD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AAD1, 0x42AADB);
MakeByte(0x42AADB);
MakeDword(0x42AADC);
MakeDword(0x42AAE0);
MakeDword(0x42AAE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AAE8, 0x42AAF1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AAF1, 0x42AAFD);
MakeUnkn(0x42AB08, 1);
MakeNameEx(0x42AB08, "RTTI_42AB08_Enumeration_TDragState", 0);
MakeDword(0x42AB08);
MakeUnkn(0x42AB0C, 1);
MakeNameEx(0x42AB0C, "", 0);
MakeByte(0x42AB0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AB0D, 0x42AB18);
MakeByte(0x42AB18);
MakeDword(0x42AB19);
MakeDword(0x42AB1D);
MakeDword(0x42AB21);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AB25, 0x42AB31);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AB31, 0x42AB3D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AB3D, 0x42AB48);
MakeUnkn(0x42AB54, 1);
MakeNameEx(0x42AB54, "RTTI_42AB54_Enumeration_TDragKind", 0);
MakeDword(0x42AB54);
MakeUnkn(0x42AB58, 1);
MakeNameEx(0x42AB58, "", 0);
MakeByte(0x42AB58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AB59, 0x42AB63);
MakeByte(0x42AB63);
MakeDword(0x42AB64);
MakeDword(0x42AB68);
MakeDword(0x42AB6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AB70, 0x42AB77);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AB77, 0x42AB7E);
MakeUnkn(0x42AB88, 1);
MakeNameEx(0x42AB88, "RTTI_42AB88_Integer_TTabOrder", 0);
MakeDword(0x42AB88);
MakeUnkn(0x42AB8C, 1);
MakeNameEx(0x42AB8C, "", 0);
MakeByte(0x42AB8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AB8D, 0x42AB97);
MakeByte(0x42AB97);
MakeDword(0x42AB98);
MakeDword(0x42AB9C);
MakeUnkn(0x42ABA0, 1);
MakeNameEx(0x42ABA0, "RTTI_42ABA0_AnsiString_TCaption", 0);
MakeDword(0x42ABA0);
MakeUnkn(0x42ABA4, 1);
MakeNameEx(0x42ABA4, "", 0);
MakeByte(0x42ABA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ABA5, 0x42ABAE);
MakeUnkn(0x42ABB0, 1);
MakeNameEx(0x42ABB0, "RTTI_42ABB0_Enumeration_TAnchorKind", 0);
MakeDword(0x42ABB0);
MakeUnkn(0x42ABB4, 1);
MakeNameEx(0x42ABB4, "", 0);
MakeByte(0x42ABB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ABB5, 0x42ABC1);
MakeByte(0x42ABC1);
MakeDword(0x42ABC2);
MakeDword(0x42ABC6);
MakeDword(0x42ABCA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ABCE, 0x42ABD5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ABD5, 0x42ABDB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ABDB, 0x42ABE3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ABE3, 0x42ABEC);
MakeUnkn(0x42ABF8, 1);
MakeNameEx(0x42ABF8, "RTTI_42ABF8_Set_TAnchors", 0);
MakeDword(0x42ABF8);
MakeUnkn(0x42ABFC, 1);
MakeNameEx(0x42ABFC, "", 0);
MakeByte(0x42ABFC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ABFD, 0x42AC06);
MakeByte(0x42AC06);
MakeDword(0x42AC07);
MakeUnkn(0x42AC0C, 1);
MakeNameEx(0x42AC0C, "RTTI_42AC0C_Integer_TConstraintSize", 0);
MakeDword(0x42AC0C);
MakeUnkn(0x42AC10, 1);
MakeNameEx(0x42AC10, "", 0);
MakeByte(0x42AC10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AC11, 0x42AC21);
MakeByte(0x42AC21);
MakeDword(0x42AC22);
MakeDword(0x42AC26);
MakeUnkn(0x42AC2C, 1);
MakeNameEx(0x42AC2C, "VMT_42AC2C_TSizeConstraints", 0);
MakeDword(0x42AC2C);
MakeDword(0x42AC30);
MakeDword(0x42AC34);
MakeDword(0x42AC38);
MakeDword(0x42AC3C);
MakeDword(0x42AC40);
MakeDword(0x42AC44);
MakeDword(0x42AC48);
MakeDword(0x42AC4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AC8C, 0x42AC9D);
MakeDword(0x42AC50);
MakeDword(0x42AC54);
MakeDword(0x42AC58);
MakeDword(0x42AC5C);
MakeDword(0x42AC60);
MakeDword(0x42AC64);
MakeDword(0x42AC68);
MakeDword(0x42AC6C);
MakeDword(0x42AC70);
MakeDword(0x42AC74);
MakeComm(0x42AC78, "'+0'");
MakeDword(0x42AC78);
MakeComm(0x42AC7C, "'+4'");
MakeDword(0x42AC7C);
MakeComm(0x42AC80, "'+8'");
MakeDword(0x42AC80);
MakeComm(0x42AC84, "'+C'");
MakeDword(0x42AC84);
MakeComm(0x42AC88, "'+10'");
MakeDword(0x42AC88);
MakeUnkn(0x42ACA0, 1);
MakeNameEx(0x42ACA0, "RTTI_42ACA0_Class_TSizeConstraints", 0);
MakeDword(0x42ACA0);
MakeUnkn(0x42ACA4, 1);
MakeNameEx(0x42ACA4, "", 0);
MakeByte(0x42ACA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ACA5, 0x42ACB6);
MakeDword(0x42ACB6);
MakeDword(0x42ACBA);
MakeWord(0x42ACBE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ACC0, 0x42ACC9);
MakeWord(0x42ACC9);
MakeDword(0x42ACCB);
MakeDword(0x42ACCF);
MakeDword(0x42ACD3);
MakeDword(0x42ACD7);
MakeDword(0x42ACDB);
MakeDword(0x42ACDF);
MakeWord(0x42ACE3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ACE5, 0x42ACEF);
MakeDword(0x42ACEF);
MakeDword(0x42ACF3);
MakeDword(0x42ACF7);
MakeDword(0x42ACFB);
MakeDword(0x42ACFF);
MakeDword(0x42AD03);
MakeWord(0x42AD07);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD09, 0x42AD12);
MakeDword(0x42AD12);
MakeDword(0x42AD16);
MakeDword(0x42AD1A);
MakeDword(0x42AD1E);
MakeDword(0x42AD22);
MakeDword(0x42AD26);
MakeWord(0x42AD2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD2C, 0x42AD36);
MakeDword(0x42AD36);
MakeDword(0x42AD3A);
MakeDword(0x42AD3E);
MakeDword(0x42AD42);
MakeDword(0x42AD46);
MakeDword(0x42AD4A);
MakeWord(0x42AD4E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD50, 0x42AD59);
MakeUnkn(0x42AD5C, 1);
MakeNameEx(0x42AD5C, "RTTI_42AD5C_Method_TMouseEvent", 0);
MakeDword(0x42AD5C);
MakeUnkn(0x42AD60, 1);
MakeNameEx(0x42AD60, "", 0);
MakeByte(0x42AD60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD61, 0x42AD6D);
MakeByte(0x42AD6D);
MakeByte(0x42AD6E);
MakeByte(0x42AD6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD70, 0x42AD77);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD77, 0x42AD7F);
MakeByte(0x42AD7F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD80, 0x42AD87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD87, 0x42AD94);
MakeByte(0x42AD94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD95, 0x42AD9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AD9B, 0x42ADA7);
MakeByte(0x42ADA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ADA8, 0x42ADAA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ADAA, 0x42ADB2);
MakeByte(0x42ADB2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ADB3, 0x42ADB5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ADB5, 0x42ADBD);
MakeByte(0x42ADBD);
MakeDword(0x42ADBE);
MakeDword(0x42ADC2);
MakeDword(0x42ADC6);
MakeDword(0x42ADCA);
MakeDword(0x42ADCE);
MakeUnkn(0x42ADD4, 1);
MakeNameEx(0x42ADD4, "RTTI_42ADD4_Method_TMouseMoveEvent", 0);
MakeDword(0x42ADD4);
MakeUnkn(0x42ADD8, 1);
MakeNameEx(0x42ADD8, "", 0);
MakeByte(0x42ADD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ADD9, 0x42ADE9);
MakeByte(0x42ADE9);
MakeByte(0x42ADEA);
MakeByte(0x42ADEB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ADEC, 0x42ADF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ADF3, 0x42ADFB);
MakeByte(0x42ADFB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ADFC, 0x42AE02);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE02, 0x42AE0E);
MakeByte(0x42AE0E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE0F, 0x42AE11);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE11, 0x42AE19);
MakeByte(0x42AE19);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE1A, 0x42AE1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE1C, 0x42AE24);
MakeByte(0x42AE24);
MakeDword(0x42AE25);
MakeDword(0x42AE29);
MakeDword(0x42AE2D);
MakeDword(0x42AE31);
MakeUnkn(0x42AE38, 1);
MakeNameEx(0x42AE38, "RTTI_42AE38_Method_TKeyEvent", 0);
MakeDword(0x42AE38);
MakeUnkn(0x42AE3C, 1);
MakeNameEx(0x42AE3C, "", 0);
MakeByte(0x42AE3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE3D, 0x42AE47);
MakeByte(0x42AE47);
MakeByte(0x42AE48);
MakeByte(0x42AE49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE4A, 0x42AE51);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE51, 0x42AE59);
MakeByte(0x42AE59);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE5A, 0x42AE5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE5E, 0x42AE63);
MakeByte(0x42AE63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE64, 0x42AE6A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE6A, 0x42AE76);
MakeByte(0x42AE76);
MakeDword(0x42AE77);
MakeDword(0x42AE7B);
MakeDword(0x42AE7F);
MakeUnkn(0x42AE84, 1);
MakeNameEx(0x42AE84, "RTTI_42AE84_Method_TKeyPressEvent", 0);
MakeDword(0x42AE84);
MakeUnkn(0x42AE88, 1);
MakeNameEx(0x42AE88, "", 0);
MakeByte(0x42AE88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE89, 0x42AE98);
MakeByte(0x42AE98);
MakeByte(0x42AE99);
MakeByte(0x42AE9A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AE9B, 0x42AEA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEA2, 0x42AEAA);
MakeByte(0x42AEAA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEAB, 0x42AEAF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEAF, 0x42AEB4);
MakeByte(0x42AEB4);
MakeDword(0x42AEB5);
MakeDword(0x42AEB9);
MakeUnkn(0x42AEC0, 1);
MakeNameEx(0x42AEC0, "RTTI_42AEC0_Method_TDragOverEvent", 0);
MakeDword(0x42AEC0);
MakeUnkn(0x42AEC4, 1);
MakeNameEx(0x42AEC4, "", 0);
MakeByte(0x42AEC4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEC5, 0x42AED4);
MakeByte(0x42AED4);
MakeByte(0x42AED5);
MakeByte(0x42AED6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AED7, 0x42AEDE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEDE, 0x42AEE6);
MakeByte(0x42AEE6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEE7, 0x42AEEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEEE, 0x42AEF6);
MakeByte(0x42AEF6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEF7, 0x42AEF9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AEF9, 0x42AF01);
MakeByte(0x42AF01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF02, 0x42AF04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF04, 0x42AF0C);
MakeByte(0x42AF0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF0D, 0x42AF13);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF13, 0x42AF1E);
MakeByte(0x42AF1E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF1F, 0x42AF26);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF26, 0x42AF2E);
MakeByte(0x42AF2E);
MakeDword(0x42AF2F);
MakeDword(0x42AF33);
MakeDword(0x42AF37);
MakeDword(0x42AF3B);
MakeDword(0x42AF3F);
MakeDword(0x42AF43);
MakeUnkn(0x42AF48, 1);
MakeNameEx(0x42AF48, "RTTI_42AF48_Method_TDragDropEvent", 0);
MakeDword(0x42AF48);
MakeUnkn(0x42AF4C, 1);
MakeNameEx(0x42AF4C, "", 0);
MakeByte(0x42AF4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF4D, 0x42AF5C);
MakeByte(0x42AF5C);
MakeByte(0x42AF5D);
MakeByte(0x42AF5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF5F, 0x42AF66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF66, 0x42AF6E);
MakeByte(0x42AF6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF6F, 0x42AF76);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF76, 0x42AF7E);
MakeByte(0x42AF7E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF7F, 0x42AF81);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF81, 0x42AF89);
MakeByte(0x42AF89);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF8A, 0x42AF8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AF8C, 0x42AF94);
MakeByte(0x42AF94);
MakeDword(0x42AF95);
MakeDword(0x42AF99);
MakeDword(0x42AF9D);
MakeDword(0x42AFA1);
MakeUnkn(0x42AFA8, 1);
MakeNameEx(0x42AFA8, "RTTI_42AFA8_Method_TStartDragEvent", 0);
MakeDword(0x42AFA8);
MakeUnkn(0x42AFAC, 1);
MakeNameEx(0x42AFAC, "", 0);
MakeByte(0x42AFAC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AFAD, 0x42AFBD);
MakeByte(0x42AFBD);
MakeByte(0x42AFBE);
MakeByte(0x42AFBF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AFC0, 0x42AFC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AFC7, 0x42AFCF);
MakeByte(0x42AFCF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AFD0, 0x42AFDB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AFDB, 0x42AFE7);
MakeByte(0x42AFE7);
MakeDword(0x42AFE8);
MakeDword(0x42AFEC);
MakeUnkn(0x42AFF0, 1);
MakeNameEx(0x42AFF0, "RTTI_42AFF0_Method_TEndDragEvent", 0);
MakeDword(0x42AFF0);
MakeUnkn(0x42AFF4, 1);
MakeNameEx(0x42AFF4, "", 0);
MakeByte(0x42AFF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AFF5, 0x42B003);
MakeByte(0x42B003);
MakeByte(0x42B004);
MakeByte(0x42B005);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B006, 0x42B00D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B00D, 0x42B015);
MakeByte(0x42B015);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B016, 0x42B01D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B01D, 0x42B025);
MakeByte(0x42B025);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B026, 0x42B028);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B028, 0x42B030);
MakeByte(0x42B030);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B031, 0x42B033);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B033, 0x42B03B);
MakeByte(0x42B03B);
MakeDword(0x42B03C);
MakeDword(0x42B040);
MakeDword(0x42B044);
MakeDword(0x42B048);
MakeUnkn(0x42B04C, 1);
MakeNameEx(0x42B04C, "RTTI_42B04C_Method_TDockDropEvent", 0);
MakeDword(0x42B04C);
MakeUnkn(0x42B050, 1);
MakeNameEx(0x42B050, "", 0);
MakeByte(0x42B050);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B051, 0x42B060);
MakeByte(0x42B060);
MakeByte(0x42B061);
MakeByte(0x42B062);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B063, 0x42B06A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B06A, 0x42B072);
MakeByte(0x42B072);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B073, 0x42B07A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B07A, 0x42B08A);
MakeByte(0x42B08A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B08B, 0x42B08D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B08D, 0x42B095);
MakeByte(0x42B095);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B096, 0x42B098);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B098, 0x42B0A0);
MakeByte(0x42B0A0);
MakeDword(0x42B0A1);
MakeDword(0x42B0A5);
MakeDword(0x42B0A9);
MakeDword(0x42B0AD);
MakeUnkn(0x42B0B4, 1);
MakeNameEx(0x42B0B4, "RTTI_42B0B4_Method_TDockOverEvent", 0);
MakeDword(0x42B0B4);
MakeUnkn(0x42B0B8, 1);
MakeNameEx(0x42B0B8, "", 0);
MakeByte(0x42B0B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B0B9, 0x42B0C8);
MakeByte(0x42B0C8);
MakeByte(0x42B0C9);
MakeByte(0x42B0CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B0CB, 0x42B0D2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B0D2, 0x42B0DA);
MakeByte(0x42B0DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B0DB, 0x42B0E2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B0E2, 0x42B0F2);
MakeByte(0x42B0F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B0F3, 0x42B0F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B0F5, 0x42B0FD);
MakeByte(0x42B0FD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B0FE, 0x42B100);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B100, 0x42B108);
MakeByte(0x42B108);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B109, 0x42B10F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B10F, 0x42B11A);
MakeByte(0x42B11A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B11B, 0x42B122);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B122, 0x42B12A);
MakeByte(0x42B12A);
MakeDword(0x42B12B);
MakeDword(0x42B12F);
MakeDword(0x42B133);
MakeDword(0x42B137);
MakeDword(0x42B13B);
MakeDword(0x42B13F);
MakeUnkn(0x42B144, 1);
MakeNameEx(0x42B144, "RTTI_42B144_Method_TUnDockEvent", 0);
MakeDword(0x42B144);
MakeUnkn(0x42B148, 1);
MakeNameEx(0x42B148, "", 0);
MakeByte(0x42B148);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B149, 0x42B156);
MakeByte(0x42B156);
MakeByte(0x42B157);
MakeByte(0x42B158);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B159, 0x42B160);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B160, 0x42B168);
MakeByte(0x42B168);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B169, 0x42B170);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B170, 0x42B179);
MakeByte(0x42B179);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B17A, 0x42B184);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B184, 0x42B190);
MakeByte(0x42B190);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B191, 0x42B197);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B197, 0x42B19F);
MakeByte(0x42B19F);
MakeDword(0x42B1A0);
MakeDword(0x42B1A4);
MakeDword(0x42B1A8);
MakeDword(0x42B1AC);
MakeUnkn(0x42B1B0, 1);
MakeNameEx(0x42B1B0, "RTTI_42B1B0_Method_TStartDockEvent", 0);
MakeDword(0x42B1B0);
MakeUnkn(0x42B1B4, 1);
MakeNameEx(0x42B1B4, "", 0);
MakeByte(0x42B1B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B1B5, 0x42B1C5);
MakeByte(0x42B1C5);
MakeByte(0x42B1C6);
MakeByte(0x42B1C7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B1C8, 0x42B1CF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B1CF, 0x42B1D7);
MakeByte(0x42B1D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B1D8, 0x42B1E3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B1E3, 0x42B1F3);
MakeByte(0x42B1F3);
MakeDword(0x42B1F4);
MakeDword(0x42B1F8);
MakeUnkn(0x42B1FC, 1);
MakeNameEx(0x42B1FC, "RTTI_42B1FC_Method_TGetSiteInfoEvent", 0);
MakeDword(0x42B1FC);
MakeUnkn(0x42B200, 1);
MakeNameEx(0x42B200, "", 0);
MakeByte(0x42B200);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B201, 0x42B213);
MakeByte(0x42B213);
MakeByte(0x42B214);
MakeByte(0x42B215);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B216, 0x42B21D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B21D, 0x42B225);
MakeByte(0x42B225);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B226, 0x42B231);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B231, 0x42B23A);
MakeByte(0x42B23A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B23B, 0x42B249);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B249, 0x42B24F);
MakeByte(0x42B24F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B250, 0x42B259);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B259, 0x42B260);
MakeByte(0x42B260);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B261, 0x42B269);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B269, 0x42B271);
MakeByte(0x42B271);
MakeDword(0x42B272);
MakeDword(0x42B276);
MakeDword(0x42B27A);
MakeDword(0x42B27E);
MakeDword(0x42B282);
MakeUnkn(0x42B288, 1);
MakeNameEx(0x42B288, "RTTI_42B288_Method_TCanResizeEvent", 0);
MakeDword(0x42B288);
MakeUnkn(0x42B28C, 1);
MakeNameEx(0x42B28C, "", 0);
MakeByte(0x42B28C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B28D, 0x42B29D);
MakeByte(0x42B29D);
MakeByte(0x42B29E);
MakeByte(0x42B29F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2A0, 0x42B2A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2A7, 0x42B2AF);
MakeByte(0x42B2AF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2B0, 0x42B2B9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2B9, 0x42B2C1);
MakeByte(0x42B2C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2C2, 0x42B2CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2CC, 0x42B2D4);
MakeByte(0x42B2D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2D5, 0x42B2DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2DC, 0x42B2E4);
MakeByte(0x42B2E4);
MakeDword(0x42B2E5);
MakeDword(0x42B2E9);
MakeDword(0x42B2ED);
MakeDword(0x42B2F1);
MakeUnkn(0x42B2F8, 1);
MakeNameEx(0x42B2F8, "RTTI_42B2F8_Method_TConstrainedResizeEvent", 0);
MakeDword(0x42B2F8);
MakeUnkn(0x42B2FC, 1);
MakeNameEx(0x42B2FC, "", 0);
MakeByte(0x42B2FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B2FD, 0x42B315);
MakeByte(0x42B315);
MakeByte(0x42B316);
MakeByte(0x42B317);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B318, 0x42B31F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B31F, 0x42B327);
MakeByte(0x42B327);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B328, 0x42B331);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B331, 0x42B339);
MakeByte(0x42B339);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B33A, 0x42B344);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B344, 0x42B34C);
MakeByte(0x42B34C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B34D, 0x42B356);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B356, 0x42B35E);
MakeByte(0x42B35E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B35F, 0x42B369);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B369, 0x42B371);
MakeByte(0x42B371);
MakeDword(0x42B372);
MakeDword(0x42B376);
MakeDword(0x42B37A);
MakeDword(0x42B37E);
MakeDword(0x42B382);
MakeUnkn(0x42B388, 1);
MakeNameEx(0x42B388, "RTTI_42B388_Method_TMouseWheelEvent", 0);
MakeDword(0x42B388);
MakeUnkn(0x42B38C, 1);
MakeNameEx(0x42B38C, "", 0);
MakeByte(0x42B38C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B38D, 0x42B39E);
MakeByte(0x42B39E);
MakeByte(0x42B39F);
MakeByte(0x42B3A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3A1, 0x42B3A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3A8, 0x42B3B0);
MakeByte(0x42B3B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3B1, 0x42B3B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3B7, 0x42B3C3);
MakeByte(0x42B3C3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3C4, 0x42B3CF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3CF, 0x42B3D7);
MakeByte(0x42B3D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3D8, 0x42B3E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3E1, 0x42B3E8);
MakeByte(0x42B3E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3E9, 0x42B3F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B3F1, 0x42B3F9);
MakeByte(0x42B3F9);
MakeDword(0x42B3FA);
MakeDword(0x42B3FE);
MakeDword(0x42B402);
MakeDword(0x42B406);
MakeDword(0x42B40A);
MakeUnkn(0x42B410, 1);
MakeNameEx(0x42B410, "RTTI_42B410_Method_TMouseWheelUpDownEvent", 0);
MakeDword(0x42B410);
MakeUnkn(0x42B414, 1);
MakeNameEx(0x42B414, "", 0);
MakeByte(0x42B414);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B415, 0x42B42C);
MakeByte(0x42B42C);
MakeByte(0x42B42D);
MakeByte(0x42B42E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B42F, 0x42B436);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B436, 0x42B43E);
MakeByte(0x42B43E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B43F, 0x42B445);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B445, 0x42B451);
MakeByte(0x42B451);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B452, 0x42B45B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B45B, 0x42B462);
MakeByte(0x42B462);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B463, 0x42B46B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B46B, 0x42B473);
MakeByte(0x42B473);
MakeDword(0x42B474);
MakeDword(0x42B478);
MakeDword(0x42B47C);
MakeDword(0x42B480);
MakeUnkn(0x42B484, 1);
MakeNameEx(0x42B484, "RTTI_42B484_Method_TContextPopupEvent", 0);
MakeDword(0x42B484);
MakeUnkn(0x42B488, 1);
MakeNameEx(0x42B488, "", 0);
MakeByte(0x42B488);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B489, 0x42B49C);
MakeByte(0x42B49C);
MakeByte(0x42B49D);
MakeByte(0x42B49E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B49F, 0x42B4A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B4A6, 0x42B4AE);
MakeByte(0x42B4AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B4AF, 0x42B4B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B4B8, 0x42B4BF);
MakeByte(0x42B4BF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B4C0, 0x42B4C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B4C8, 0x42B4D0);
MakeByte(0x42B4D0);
MakeDword(0x42B4D1);
MakeDword(0x42B4D5);
MakeDword(0x42B4D9);
MakeUnkn(0x42B4E0, 1);
MakeNameEx(0x42B4E0, "VMT_42B4E0_TControl", 0);
MakeDword(0x42B4E0);
MakeDword(0x42B4E4);
MakeDword(0x42B4E8);
MakeDword(0x42B4EC);
MakeUnkn(0x42B5B8, 1);
MakeNameEx(0x42B5B8, "TControl_InitTable", 0);
MakeByte(0x42B5B8);
MakeByte(0x42B5B9);
MakeDword(0x42B5BA);
MakeDword(0x42B5BE);
MakeDword(0x42B5C2);
MakeDword(0x42B5C6);
MakeDword(0x42B5CA);
MakeDword(0x42B5CE);
MakeDword(0x42B4F0);
MakeDword(0x42B4F4);
MakeDword(0x42B4F8);
MakeDword(0x42B4FC);
MakeUnkn(0x42B5D2, 1);
MakeNameEx(0x42B5D2, "TControl_DynamicTable", 0);
MakeWord(0x42B5D2);
MakeWord(0x42B5D4);
MakeWord(0x42B5D6);
MakeWord(0x42B5D8);
MakeWord(0x42B5DA);
MakeWord(0x42B5DC);
MakeWord(0x42B5DE);
MakeWord(0x42B5E0);
MakeWord(0x42B5E2);
MakeWord(0x42B5E4);
MakeWord(0x42B5E6);
MakeWord(0x42B5E8);
MakeWord(0x42B5EA);
MakeWord(0x42B5EC);
MakeWord(0x42B5EE);
MakeWord(0x42B5F0);
MakeWord(0x42B5F2);
MakeWord(0x42B5F4);
MakeWord(0x42B5F6);
MakeWord(0x42B5F8);
MakeWord(0x42B5FA);
MakeWord(0x42B5FC);
MakeWord(0x42B5FE);
MakeWord(0x42B600);
MakeWord(0x42B602);
MakeWord(0x42B604);
MakeWord(0x42B606);
MakeWord(0x42B608);
MakeWord(0x42B60A);
MakeWord(0x42B60C);
MakeWord(0x42B60E);
MakeWord(0x42B610);
MakeWord(0x42B612);
MakeWord(0x42B614);
MakeWord(0x42B616);
MakeWord(0x42B618);
MakeWord(0x42B61A);
MakeWord(0x42B61C);
MakeWord(0x42B61E);
MakeWord(0x42B620);
MakeWord(0x42B622);
MakeWord(0x42B624);
MakeWord(0x42B626);
MakeWord(0x42B628);
MakeWord(0x42B62A);
MakeWord(0x42B62C);
MakeWord(0x42B62E);
MakeWord(0x42B630);
MakeWord(0x42B632);
MakeWord(0x42B634);
MakeWord(0x42B636);
MakeWord(0x42B638);
MakeWord(0x42B63A);
MakeWord(0x42B63C);
MakeWord(0x42B63E);
MakeWord(0x42B640);
MakeWord(0x42B642);
MakeWord(0x42B644);
MakeWord(0x42B646);
MakeWord(0x42B648);
MakeWord(0x42B64A);
MakeWord(0x42B64C);
MakeWord(0x42B64E);
MakeWord(0x42B650);
MakeWord(0x42B652);
MakeWord(0x42B654);
MakeWord(0x42B656);
MakeWord(0x42B658);
MakeWord(0x42B65A);
MakeWord(0x42B65C);
MakeWord(0x42B65E);
MakeWord(0x42B660);
MakeWord(0x42B662);
MakeWord(0x42B664);
MakeWord(0x42B666);
MakeWord(0x42B668);
MakeDword(0x42B66A);
MakeDword(0x42B66E);
MakeDword(0x42B672);
MakeDword(0x42B676);
MakeDword(0x42B67A);
MakeDword(0x42B67E);
MakeDword(0x42B682);
MakeDword(0x42B686);
MakeDword(0x42B68A);
MakeDword(0x42B68E);
MakeDword(0x42B692);
MakeDword(0x42B696);
MakeDword(0x42B69A);
MakeDword(0x42B69E);
MakeDword(0x42B6A2);
MakeDword(0x42B6A6);
MakeDword(0x42B6AA);
MakeDword(0x42B6AE);
MakeDword(0x42B6B2);
MakeDword(0x42B6B6);
MakeDword(0x42B6BA);
MakeDword(0x42B6BE);
MakeDword(0x42B6C2);
MakeDword(0x42B6C6);
MakeDword(0x42B6CA);
MakeDword(0x42B6CE);
MakeDword(0x42B6D2);
MakeDword(0x42B6D6);
MakeDword(0x42B6DA);
MakeDword(0x42B6DE);
MakeDword(0x42B6E2);
MakeDword(0x42B6E6);
MakeDword(0x42B6EA);
MakeDword(0x42B6EE);
MakeDword(0x42B6F2);
MakeDword(0x42B6F6);
MakeDword(0x42B6FA);
MakeDword(0x42B6FE);
MakeDword(0x42B702);
MakeDword(0x42B706);
MakeDword(0x42B70A);
MakeDword(0x42B70E);
MakeDword(0x42B712);
MakeDword(0x42B716);
MakeDword(0x42B71A);
MakeDword(0x42B71E);
MakeDword(0x42B722);
MakeDword(0x42B726);
MakeDword(0x42B72A);
MakeDword(0x42B72E);
MakeDword(0x42B732);
MakeDword(0x42B736);
MakeDword(0x42B73A);
MakeDword(0x42B73E);
MakeDword(0x42B742);
MakeDword(0x42B746);
MakeDword(0x42B74A);
MakeDword(0x42B74E);
MakeDword(0x42B752);
MakeDword(0x42B756);
MakeDword(0x42B75A);
MakeDword(0x42B75E);
MakeDword(0x42B762);
MakeDword(0x42B766);
MakeDword(0x42B76A);
MakeDword(0x42B76E);
MakeDword(0x42B772);
MakeDword(0x42B776);
MakeDword(0x42B77A);
MakeDword(0x42B77E);
MakeDword(0x42B782);
MakeDword(0x42B786);
MakeDword(0x42B78A);
MakeDword(0x42B78E);
MakeDword(0x42B792);
MakeDword(0x42B500);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B796, 0x42B79F);
MakeDword(0x42B504);
MakeDword(0x42B508);
MakeDword(0x42B50C);
MakeDword(0x42B510);
MakeDword(0x42B514);
MakeDword(0x42B518);
MakeDword(0x42B51C);
MakeDword(0x42B520);
MakeDword(0x42B524);
MakeDword(0x42B528);
MakeComm(0x42B52C, "'+0'");
MakeDword(0x42B52C);
MakeComm(0x42B530, "'+4'");
MakeDword(0x42B530);
MakeComm(0x42B534, "'+8'");
MakeDword(0x42B534);
MakeComm(0x42B538, "'+C'");
MakeDword(0x42B538);
MakeComm(0x42B53C, "'+10'");
MakeDword(0x42B53C);
MakeComm(0x42B540, "'+14'");
MakeDword(0x42B540);
MakeComm(0x42B544, "'+18'");
MakeDword(0x42B544);
MakeComm(0x42B548, "'+1C'");
MakeDword(0x42B548);
MakeComm(0x42B54C, "'+20'");
MakeDword(0x42B54C);
MakeComm(0x42B550, "'+24'");
MakeDword(0x42B550);
MakeComm(0x42B554, "'+28'");
MakeDword(0x42B554);
MakeComm(0x42B558, "'+2C'");
MakeDword(0x42B558);
MakeComm(0x42B55C, "'+30'");
MakeDword(0x42B55C);
MakeComm(0x42B560, "'+34'");
MakeDword(0x42B560);
MakeComm(0x42B564, "'+38'");
MakeDword(0x42B564);
MakeComm(0x42B568, "'+3C'");
MakeDword(0x42B568);
MakeComm(0x42B56C, "'+40'");
MakeDword(0x42B56C);
MakeComm(0x42B570, "'+44'");
MakeDword(0x42B570);
MakeComm(0x42B574, "'+48'");
MakeDword(0x42B574);
MakeComm(0x42B578, "'+4C'");
MakeDword(0x42B578);
MakeComm(0x42B57C, "'+50'");
MakeDword(0x42B57C);
MakeComm(0x42B580, "'+54'");
MakeDword(0x42B580);
MakeComm(0x42B584, "'+58'");
MakeDword(0x42B584);
MakeComm(0x42B588, "'+5C'");
MakeDword(0x42B588);
MakeComm(0x42B58C, "'+60'");
MakeDword(0x42B58C);
MakeComm(0x42B590, "'+64'");
MakeDword(0x42B590);
MakeComm(0x42B594, "'+68'");
MakeDword(0x42B594);
MakeComm(0x42B598, "'+6C'");
MakeDword(0x42B598);
MakeComm(0x42B59C, "'+70'");
MakeDword(0x42B59C);
MakeComm(0x42B5A0, "'+74'");
MakeDword(0x42B5A0);
MakeComm(0x42B5A4, "'+78'");
MakeDword(0x42B5A4);
MakeComm(0x42B5A8, "'+7C'");
MakeDword(0x42B5A8);
MakeComm(0x42B5AC, "'+80'");
MakeDword(0x42B5AC);
MakeComm(0x42B5B0, "'+84'");
MakeDword(0x42B5B0);
MakeComm(0x42B5B4, "'+88'");
MakeDword(0x42B5B4);
MakeUnkn(0x42B7A0, 1);
MakeNameEx(0x42B7A0, "RTTI_42B7A0_Class_TControl", 0);
MakeDword(0x42B7A0);
MakeUnkn(0x42B7A4, 1);
MakeNameEx(0x42B7A4, "", 0);
MakeByte(0x42B7A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B7A5, 0x42B7AE);
MakeDword(0x42B7AE);
MakeDword(0x42B7B2);
MakeWord(0x42B7B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B7B8, 0x42B7C1);
MakeWord(0x42B7C1);
MakeDword(0x42B7C3);
MakeDword(0x42B7C7);
MakeDword(0x42B7CB);
MakeDword(0x42B7CF);
MakeDword(0x42B7D3);
MakeDword(0x42B7D7);
MakeWord(0x42B7DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B7DD, 0x42B7E2);
MakeDword(0x42B7E2);
MakeDword(0x42B7E6);
MakeDword(0x42B7EA);
MakeDword(0x42B7EE);
MakeDword(0x42B7F2);
MakeDword(0x42B7F6);
MakeWord(0x42B7FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B7FC, 0x42B800);
MakeDword(0x42B800);
MakeDword(0x42B804);
MakeDword(0x42B808);
MakeDword(0x42B80C);
MakeDword(0x42B810);
MakeDword(0x42B814);
MakeWord(0x42B818);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B81A, 0x42B820);
MakeDword(0x42B820);
MakeDword(0x42B824);
MakeDword(0x42B828);
MakeDword(0x42B82C);
MakeDword(0x42B830);
MakeDword(0x42B834);
MakeWord(0x42B838);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B83A, 0x42B841);
MakeDword(0x42B841);
MakeDword(0x42B845);
MakeDword(0x42B849);
MakeDword(0x42B84D);
MakeDword(0x42B851);
MakeDword(0x42B855);
MakeWord(0x42B859);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B85B, 0x42B862);
MakeDword(0x42B862);
MakeDword(0x42B866);
MakeDword(0x42B86A);
MakeDword(0x42B86E);
MakeDword(0x42B872);
MakeDword(0x42B876);
MakeWord(0x42B87A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B87C, 0x42B881);
MakeDword(0x42B881);
MakeDword(0x42B885);
MakeDword(0x42B889);
MakeDword(0x42B88D);
MakeDword(0x42B891);
MakeDword(0x42B895);
MakeWord(0x42B899);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B89B, 0x42B8A4);
MakeDword(0x42B8A4);
MakeDword(0x42B8A8);
MakeDword(0x42B8AC);
MakeDword(0x42B8B0);
MakeDword(0x42B8B4);
MakeDword(0x42B8B8);
MakeWord(0x42B8BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B8BE, 0x42B8CA);
MakeDword(0x42B8CA);
MakeDword(0x42B8CE);
MakeDword(0x42B8D2);
MakeDword(0x42B8D6);
MakeDword(0x42B8DA);
MakeDword(0x42B8DE);
MakeWord(0x42B8E2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B8E4, 0x42B8F0);
MakeUnkn(0x42B8F0, 1);
MakeNameEx(0x42B8F0, "VMT_42B8F0_TWinControlActionLink", 0);
MakeDword(0x42B8F0);
MakeDword(0x42B8F4);
MakeDword(0x42B8F8);
MakeDword(0x42B8FC);
MakeDword(0x42B900);
MakeDword(0x42B904);
MakeDword(0x42B908);
MakeDword(0x42B90C);
MakeDword(0x42B910);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B9B8, 0x42B9CE);
MakeDword(0x42B914);
MakeDword(0x42B918);
MakeDword(0x42B91C);
MakeDword(0x42B920);
MakeDword(0x42B924);
MakeDword(0x42B928);
MakeDword(0x42B92C);
MakeDword(0x42B930);
MakeDword(0x42B934);
MakeDword(0x42B938);
MakeComm(0x42B93C, "'+0'");
MakeDword(0x42B93C);
MakeComm(0x42B940, "'+4'");
MakeDword(0x42B940);
MakeComm(0x42B944, "'+8'");
MakeDword(0x42B944);
MakeComm(0x42B948, "'+C'");
MakeDword(0x42B948);
MakeComm(0x42B94C, "'+10'");
MakeDword(0x42B94C);
MakeComm(0x42B950, "'+14'");
MakeDword(0x42B950);
MakeComm(0x42B954, "'+18'");
MakeDword(0x42B954);
MakeComm(0x42B958, "'+1C'");
MakeDword(0x42B958);
MakeComm(0x42B95C, "'+20'");
MakeDword(0x42B95C);
MakeComm(0x42B960, "'+24'");
MakeDword(0x42B960);
MakeComm(0x42B964, "'+28'");
MakeDword(0x42B964);
MakeComm(0x42B968, "'+2C'");
MakeDword(0x42B968);
MakeComm(0x42B96C, "'+30'");
MakeDword(0x42B96C);
MakeComm(0x42B970, "'+34'");
MakeDword(0x42B970);
MakeComm(0x42B974, "'+38'");
MakeDword(0x42B974);
MakeComm(0x42B978, "'+3C'");
MakeDword(0x42B978);
MakeComm(0x42B97C, "'+40'");
MakeDword(0x42B97C);
MakeComm(0x42B980, "'+44'");
MakeDword(0x42B980);
MakeComm(0x42B984, "'+48'");
MakeDword(0x42B984);
MakeComm(0x42B988, "'+4C'");
MakeDword(0x42B988);
MakeComm(0x42B98C, "'+50'");
MakeDword(0x42B98C);
MakeComm(0x42B990, "'+54'");
MakeDword(0x42B990);
MakeComm(0x42B994, "'+58'");
MakeDword(0x42B994);
MakeComm(0x42B998, "'+5C'");
MakeDword(0x42B998);
MakeComm(0x42B99C, "'+60'");
MakeDword(0x42B99C);
MakeComm(0x42B9A0, "'+64'");
MakeDword(0x42B9A0);
MakeComm(0x42B9A4, "'+68'");
MakeDword(0x42B9A4);
MakeComm(0x42B9A8, "'+6C'");
MakeDword(0x42B9A8);
MakeComm(0x42B9AC, "'+70'");
MakeDword(0x42B9AC);
MakeComm(0x42B9B0, "'+74'");
MakeDword(0x42B9B0);
MakeComm(0x42B9B4, "'+78'");
MakeDword(0x42B9B4);
MakeUnkn(0x42B9D0, 1);
MakeNameEx(0x42B9D0, "RTTI_42B9D0_Enumeration_TImeMode", 0);
MakeDword(0x42B9D0);
MakeUnkn(0x42B9D4, 1);
MakeNameEx(0x42B9D4, "", 0);
MakeByte(0x42B9D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B9D5, 0x42B9DE);
MakeByte(0x42B9DE);
MakeDword(0x42B9DF);
MakeDword(0x42B9E3);
MakeDword(0x42B9E7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B9EB, 0x42B9F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B9F5, 0x42B9FD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B9FD, 0x42BA04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA04, 0x42BA0F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA0F, 0x42BA18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA18, 0x42BA20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA20, 0x42BA27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA27, 0x42BA2F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA2F, 0x42BA36);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA36, 0x42BA40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA40, 0x42BA4B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA4B, 0x42BA55);
MakeUnkn(0x42BA60, 1);
MakeNameEx(0x42BA60, "RTTI_42BA60_AnsiString_TImeName", 0);
MakeDword(0x42BA60);
MakeUnkn(0x42BA64, 1);
MakeNameEx(0x42BA64, "", 0);
MakeByte(0x42BA64);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA65, 0x42BA6E);
MakeUnkn(0x42BA70, 1);
MakeNameEx(0x42BA70, "RTTI_42BA70_Integer_TBorderWidth", 0);
MakeDword(0x42BA70);
MakeUnkn(0x42BA74, 1);
MakeNameEx(0x42BA74, "", 0);
MakeByte(0x42BA74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA75, 0x42BA82);
MakeByte(0x42BA82);
MakeDword(0x42BA83);
MakeDword(0x42BA87);
MakeUnkn(0x42BA8C, 1);
MakeNameEx(0x42BA8C, "RTTI_42BA8C_Enumeration_TBevelCut", 0);
MakeDword(0x42BA8C);
MakeUnkn(0x42BA90, 1);
MakeNameEx(0x42BA90, "", 0);
MakeByte(0x42BA90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA91, 0x42BA9B);
MakeByte(0x42BA9B);
MakeDword(0x42BA9C);
MakeDword(0x42BAA0);
MakeDword(0x42BAA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAA8, 0x42BAAF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAAF, 0x42BAB9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAB9, 0x42BAC2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAC2, 0x42BACA);
MakeUnkn(0x42BAD4, 1);
MakeNameEx(0x42BAD4, "RTTI_42BAD4_Enumeration_TBevelEdge", 0);
MakeDword(0x42BAD4);
MakeUnkn(0x42BAD8, 1);
MakeNameEx(0x42BAD8, "", 0);
MakeByte(0x42BAD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAD9, 0x42BAE4);
MakeByte(0x42BAE4);
MakeDword(0x42BAE5);
MakeDword(0x42BAE9);
MakeDword(0x42BAED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAF1, 0x42BAF8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAF8, 0x42BAFE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAFE, 0x42BB06);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB06, 0x42BB0F);
MakeUnkn(0x42BB18, 1);
MakeNameEx(0x42BB18, "RTTI_42BB18_Set_TBevelEdges", 0);
MakeDword(0x42BB18);
MakeUnkn(0x42BB1C, 1);
MakeNameEx(0x42BB1C, "", 0);
MakeByte(0x42BB1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB1D, 0x42BB29);
MakeByte(0x42BB29);
MakeDword(0x42BB2A);
MakeUnkn(0x42BB30, 1);
MakeNameEx(0x42BB30, "RTTI_42BB30_Enumeration_TBevelKind", 0);
MakeDword(0x42BB30);
MakeUnkn(0x42BB34, 1);
MakeNameEx(0x42BB34, "", 0);
MakeByte(0x42BB34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB35, 0x42BB40);
MakeByte(0x42BB40);
MakeDword(0x42BB41);
MakeDword(0x42BB45);
MakeDword(0x42BB49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB4D, 0x42BB54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB54, 0x42BB5B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB5B, 0x42BB62);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB62, 0x42BB69);
MakeUnkn(0x42BB74, 1);
MakeNameEx(0x42BB74, "RTTI_42BB74_Interface_IDockManager", 0);
MakeDword(0x42BB74);
MakeUnkn(0x42BB78, 1);
MakeNameEx(0x42BB78, "", 0);
MakeByte(0x42BB78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB79, 0x42BB86);
MakeDword(0x42BB86);
MakeByte(0x42BB8A);
MakeByte(0x42BB8B);
MakeArray(0x42BB8B, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB9B, 0x42BBA4);
MakeWord(0x42BBA4);
MakeWord(0x42BBA6);
MakeUnkn(0x42BBA8, 1);
MakeNameEx(0x42BBA8, "VMT_42BBA8_TWinControl", 0);
MakeDword(0x42BBA8);
MakeDword(0x42BBAC);
MakeDword(0x42BBB0);
MakeDword(0x42BBB4);
MakeUnkn(0x42BCBC, 1);
MakeNameEx(0x42BCBC, "TWinControl_InitTable", 0);
MakeByte(0x42BCBC);
MakeByte(0x42BCBD);
MakeDword(0x42BCBE);
MakeDword(0x42BCC2);
MakeDword(0x42BCC6);
MakeDword(0x42BCCA);
MakeDword(0x42BCCE);
MakeDword(0x42BCD2);
MakeDword(0x42BBB8);
MakeDword(0x42BBBC);
MakeDword(0x42BBC0);
MakeDword(0x42BBC4);
MakeUnkn(0x42BCD6, 1);
MakeNameEx(0x42BCD6, "TWinControl_DynamicTable", 0);
MakeWord(0x42BCD6);
MakeWord(0x42BCD8);
MakeWord(0x42BCDA);
MakeWord(0x42BCDC);
MakeWord(0x42BCDE);
MakeWord(0x42BCE0);
MakeWord(0x42BCE2);
MakeWord(0x42BCE4);
MakeWord(0x42BCE6);
MakeWord(0x42BCE8);
MakeWord(0x42BCEA);
MakeWord(0x42BCEC);
MakeWord(0x42BCEE);
MakeWord(0x42BCF0);
MakeWord(0x42BCF2);
MakeWord(0x42BCF4);
MakeWord(0x42BCF6);
MakeWord(0x42BCF8);
MakeWord(0x42BCFA);
MakeWord(0x42BCFC);
MakeWord(0x42BCFE);
MakeWord(0x42BD00);
MakeWord(0x42BD02);
MakeWord(0x42BD04);
MakeWord(0x42BD06);
MakeWord(0x42BD08);
MakeWord(0x42BD0A);
MakeWord(0x42BD0C);
MakeWord(0x42BD0E);
MakeWord(0x42BD10);
MakeWord(0x42BD12);
MakeWord(0x42BD14);
MakeWord(0x42BD16);
MakeWord(0x42BD18);
MakeWord(0x42BD1A);
MakeWord(0x42BD1C);
MakeWord(0x42BD1E);
MakeWord(0x42BD20);
MakeWord(0x42BD22);
MakeWord(0x42BD24);
MakeWord(0x42BD26);
MakeWord(0x42BD28);
MakeWord(0x42BD2A);
MakeWord(0x42BD2C);
MakeWord(0x42BD2E);
MakeWord(0x42BD30);
MakeWord(0x42BD32);
MakeWord(0x42BD34);
MakeWord(0x42BD36);
MakeWord(0x42BD38);
MakeWord(0x42BD3A);
MakeWord(0x42BD3C);
MakeWord(0x42BD3E);
MakeWord(0x42BD40);
MakeWord(0x42BD42);
MakeWord(0x42BD44);
MakeWord(0x42BD46);
MakeWord(0x42BD48);
MakeWord(0x42BD4A);
MakeWord(0x42BD4C);
MakeWord(0x42BD4E);
MakeWord(0x42BD50);
MakeWord(0x42BD52);
MakeWord(0x42BD54);
MakeWord(0x42BD56);
MakeWord(0x42BD58);
MakeWord(0x42BD5A);
MakeWord(0x42BD5C);
MakeWord(0x42BD5E);
MakeWord(0x42BD60);
MakeWord(0x42BD62);
MakeWord(0x42BD64);
MakeWord(0x42BD66);
MakeWord(0x42BD68);
MakeWord(0x42BD6A);
MakeWord(0x42BD6C);
MakeWord(0x42BD6E);
MakeWord(0x42BD70);
MakeWord(0x42BD72);
MakeWord(0x42BD74);
MakeWord(0x42BD76);
MakeWord(0x42BD78);
MakeWord(0x42BD7A);
MakeWord(0x42BD7C);
MakeWord(0x42BD7E);
MakeWord(0x42BD80);
MakeWord(0x42BD82);
MakeWord(0x42BD84);
MakeWord(0x42BD86);
MakeWord(0x42BD88);
MakeWord(0x42BD8A);
MakeWord(0x42BD8C);
MakeWord(0x42BD8E);
MakeWord(0x42BD90);
MakeWord(0x42BD92);
MakeWord(0x42BD94);
MakeWord(0x42BD96);
MakeWord(0x42BD98);
MakeWord(0x42BD9A);
MakeWord(0x42BD9C);
MakeWord(0x42BD9E);
MakeWord(0x42BDA0);
MakeWord(0x42BDA2);
MakeWord(0x42BDA4);
MakeWord(0x42BDA6);
MakeWord(0x42BDA8);
MakeDword(0x42BDAA);
MakeDword(0x42BDAE);
MakeDword(0x42BDB2);
MakeDword(0x42BDB6);
MakeDword(0x42BDBA);
MakeDword(0x42BDBE);
MakeDword(0x42BDC2);
MakeDword(0x42BDC6);
MakeDword(0x42BDCA);
MakeDword(0x42BDCE);
MakeDword(0x42BDD2);
MakeDword(0x42BDD6);
MakeDword(0x42BDDA);
MakeDword(0x42BDDE);
MakeDword(0x42BDE2);
MakeDword(0x42BDE6);
MakeDword(0x42BDEA);
MakeDword(0x42BDEE);
MakeDword(0x42BDF2);
MakeDword(0x42BDF6);
MakeDword(0x42BDFA);
MakeDword(0x42BDFE);
MakeDword(0x42BE02);
MakeDword(0x42BE06);
MakeDword(0x42BE0A);
MakeDword(0x42BE0E);
MakeDword(0x42BE12);
MakeDword(0x42BE16);
MakeDword(0x42BE1A);
MakeDword(0x42BE1E);
MakeDword(0x42BE22);
MakeDword(0x42BE26);
MakeDword(0x42BE2A);
MakeDword(0x42BE2E);
MakeDword(0x42BE32);
MakeDword(0x42BE36);
MakeDword(0x42BE3A);
MakeDword(0x42BE3E);
MakeDword(0x42BE42);
MakeDword(0x42BE46);
MakeDword(0x42BE4A);
MakeDword(0x42BE4E);
MakeDword(0x42BE52);
MakeDword(0x42BE56);
MakeDword(0x42BE5A);
MakeDword(0x42BE5E);
MakeDword(0x42BE62);
MakeDword(0x42BE66);
MakeDword(0x42BE6A);
MakeDword(0x42BE6E);
MakeDword(0x42BE72);
MakeDword(0x42BE76);
MakeDword(0x42BE7A);
MakeDword(0x42BE7E);
MakeDword(0x42BE82);
MakeDword(0x42BE86);
MakeDword(0x42BE8A);
MakeDword(0x42BE8E);
MakeDword(0x42BE92);
MakeDword(0x42BE96);
MakeDword(0x42BE9A);
MakeDword(0x42BE9E);
MakeDword(0x42BEA2);
MakeDword(0x42BEA6);
MakeDword(0x42BEAA);
MakeDword(0x42BEAE);
MakeDword(0x42BEB2);
MakeDword(0x42BEB6);
MakeDword(0x42BEBA);
MakeDword(0x42BEBE);
MakeDword(0x42BEC2);
MakeDword(0x42BEC6);
MakeDword(0x42BECA);
MakeDword(0x42BECE);
MakeDword(0x42BED2);
MakeDword(0x42BED6);
MakeDword(0x42BEDA);
MakeDword(0x42BEDE);
MakeDword(0x42BEE2);
MakeDword(0x42BEE6);
MakeDword(0x42BEEA);
MakeDword(0x42BEEE);
MakeDword(0x42BEF2);
MakeDword(0x42BEF6);
MakeDword(0x42BEFA);
MakeDword(0x42BEFE);
MakeDword(0x42BF02);
MakeDword(0x42BF06);
MakeDword(0x42BF0A);
MakeDword(0x42BF0E);
MakeDword(0x42BF12);
MakeDword(0x42BF16);
MakeDword(0x42BF1A);
MakeDword(0x42BF1E);
MakeDword(0x42BF22);
MakeDword(0x42BF26);
MakeDword(0x42BF2A);
MakeDword(0x42BF2E);
MakeDword(0x42BF32);
MakeDword(0x42BF36);
MakeDword(0x42BF3A);
MakeDword(0x42BF3E);
MakeDword(0x42BF42);
MakeDword(0x42BF46);
MakeDword(0x42BF4A);
MakeDword(0x42BBC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BF4E, 0x42BF5A);
MakeDword(0x42BBCC);
MakeDword(0x42BBD0);
MakeDword(0x42BBD4);
MakeDword(0x42BBD8);
MakeDword(0x42BBDC);
MakeDword(0x42BBE0);
MakeDword(0x42BBE4);
MakeDword(0x42BBE8);
MakeDword(0x42BBEC);
MakeDword(0x42BBF0);
MakeComm(0x42BBF4, "'+0'");
MakeDword(0x42BBF4);
MakeComm(0x42BBF8, "'+4'");
MakeDword(0x42BBF8);
MakeComm(0x42BBFC, "'+8'");
MakeDword(0x42BBFC);
MakeComm(0x42BC00, "'+C'");
MakeDword(0x42BC00);
MakeComm(0x42BC04, "'+10'");
MakeDword(0x42BC04);
MakeComm(0x42BC08, "'+14'");
MakeDword(0x42BC08);
MakeComm(0x42BC0C, "'+18'");
MakeDword(0x42BC0C);
MakeComm(0x42BC10, "'+1C'");
MakeDword(0x42BC10);
MakeComm(0x42BC14, "'+20'");
MakeDword(0x42BC14);
MakeComm(0x42BC18, "'+24'");
MakeDword(0x42BC18);
MakeComm(0x42BC1C, "'+28'");
MakeDword(0x42BC1C);
MakeComm(0x42BC20, "'+2C'");
MakeDword(0x42BC20);
MakeComm(0x42BC24, "'+30'");
MakeDword(0x42BC24);
MakeComm(0x42BC28, "'+34'");
MakeDword(0x42BC28);
MakeComm(0x42BC2C, "'+38'");
MakeDword(0x42BC2C);
MakeComm(0x42BC30, "'+3C'");
MakeDword(0x42BC30);
MakeComm(0x42BC34, "'+40'");
MakeDword(0x42BC34);
MakeComm(0x42BC38, "'+44'");
MakeDword(0x42BC38);
MakeComm(0x42BC3C, "'+48'");
MakeDword(0x42BC3C);
MakeComm(0x42BC40, "'+4C'");
MakeDword(0x42BC40);
MakeComm(0x42BC44, "'+50'");
MakeDword(0x42BC44);
MakeComm(0x42BC48, "'+54'");
MakeDword(0x42BC48);
MakeComm(0x42BC4C, "'+58'");
MakeDword(0x42BC4C);
MakeComm(0x42BC50, "'+5C'");
MakeDword(0x42BC50);
MakeComm(0x42BC54, "'+60'");
MakeDword(0x42BC54);
MakeComm(0x42BC58, "'+64'");
MakeDword(0x42BC58);
MakeComm(0x42BC5C, "'+68'");
MakeDword(0x42BC5C);
MakeComm(0x42BC60, "'+6C'");
MakeDword(0x42BC60);
MakeComm(0x42BC64, "'+70'");
MakeDword(0x42BC64);
MakeComm(0x42BC68, "'+74'");
MakeDword(0x42BC68);
MakeComm(0x42BC6C, "'+78'");
MakeDword(0x42BC6C);
MakeComm(0x42BC70, "'+7C'");
MakeDword(0x42BC70);
MakeComm(0x42BC74, "'+80'");
MakeDword(0x42BC74);
MakeComm(0x42BC78, "'+84'");
MakeDword(0x42BC78);
MakeComm(0x42BC7C, "'+88'");
MakeDword(0x42BC7C);
MakeComm(0x42BC80, "'+8C'");
MakeDword(0x42BC80);
MakeComm(0x42BC84, "'+90'");
MakeDword(0x42BC84);
MakeComm(0x42BC88, "'+94'");
MakeDword(0x42BC88);
MakeComm(0x42BC8C, "'+98'");
MakeDword(0x42BC8C);
MakeComm(0x42BC90, "'+9C'");
MakeDword(0x42BC90);
MakeComm(0x42BC94, "'+A0'");
MakeDword(0x42BC94);
MakeComm(0x42BC98, "'+A4'");
MakeDword(0x42BC98);
MakeComm(0x42BC9C, "'+A8'");
MakeDword(0x42BC9C);
MakeComm(0x42BCA0, "'+AC'");
MakeDword(0x42BCA0);
MakeComm(0x42BCA4, "'+B0'");
MakeDword(0x42BCA4);
MakeComm(0x42BCA8, "'+B4'");
MakeDword(0x42BCA8);
MakeComm(0x42BCAC, "'+B8'");
MakeDword(0x42BCAC);
MakeComm(0x42BCB0, "'+BC'");
MakeDword(0x42BCB0);
MakeComm(0x42BCB4, "'+C0'");
MakeDword(0x42BCB4);
MakeComm(0x42BCB8, "'+C4'");
MakeDword(0x42BCB8);
MakeUnkn(0x42BF5C, 1);
MakeNameEx(0x42BF5C, "RTTI_42BF5C_Class_TWinControl", 0);
MakeDword(0x42BF5C);
MakeUnkn(0x42BF60, 1);
MakeNameEx(0x42BF60, "", 0);
MakeByte(0x42BF60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BF61, 0x42BF6D);
MakeDword(0x42BF6D);
MakeDword(0x42BF71);
MakeWord(0x42BF75);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BF77, 0x42BF80);
MakeWord(0x42BF80);
MakeUnkn(0x42BF84, 1);
MakeNameEx(0x42BF84, "VMT_42BF84_TGraphicControl", 0);
MakeDword(0x42BF84);
MakeDword(0x42BF88);
MakeDword(0x42BF8C);
MakeDword(0x42BF90);
MakeDword(0x42BF94);
MakeDword(0x42BF98);
MakeDword(0x42BF9C);
MakeDword(0x42BFA0);
MakeUnkn(0x42C060, 1);
MakeNameEx(0x42C060, "TGraphicControl_DynamicTable", 0);
MakeWord(0x42C060);
MakeWord(0x42C062);
MakeDword(0x42C064);
MakeDword(0x42BFA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C068, 0x42C078);
MakeDword(0x42BFA8);
MakeDword(0x42BFAC);
MakeDword(0x42BFB0);
MakeDword(0x42BFB4);
MakeDword(0x42BFB8);
MakeDword(0x42BFBC);
MakeDword(0x42BFC0);
MakeDword(0x42BFC4);
MakeDword(0x42BFC8);
MakeDword(0x42BFCC);
MakeComm(0x42BFD0, "'+0'");
MakeDword(0x42BFD0);
MakeComm(0x42BFD4, "'+4'");
MakeDword(0x42BFD4);
MakeComm(0x42BFD8, "'+8'");
MakeDword(0x42BFD8);
MakeComm(0x42BFDC, "'+C'");
MakeDword(0x42BFDC);
MakeComm(0x42BFE0, "'+10'");
MakeDword(0x42BFE0);
MakeComm(0x42BFE4, "'+14'");
MakeDword(0x42BFE4);
MakeComm(0x42BFE8, "'+18'");
MakeDword(0x42BFE8);
MakeComm(0x42BFEC, "'+1C'");
MakeDword(0x42BFEC);
MakeComm(0x42BFF0, "'+20'");
MakeDword(0x42BFF0);
MakeComm(0x42BFF4, "'+24'");
MakeDword(0x42BFF4);
MakeComm(0x42BFF8, "'+28'");
MakeDword(0x42BFF8);
MakeComm(0x42BFFC, "'+2C'");
MakeDword(0x42BFFC);
MakeComm(0x42C000, "'+30'");
MakeDword(0x42C000);
MakeComm(0x42C004, "'+34'");
MakeDword(0x42C004);
MakeComm(0x42C008, "'+38'");
MakeDword(0x42C008);
MakeComm(0x42C00C, "'+3C'");
MakeDword(0x42C00C);
MakeComm(0x42C010, "'+40'");
MakeDword(0x42C010);
MakeComm(0x42C014, "'+44'");
MakeDword(0x42C014);
MakeComm(0x42C018, "'+48'");
MakeDword(0x42C018);
MakeComm(0x42C01C, "'+4C'");
MakeDword(0x42C01C);
MakeComm(0x42C020, "'+50'");
MakeDword(0x42C020);
MakeComm(0x42C024, "'+54'");
MakeDword(0x42C024);
MakeComm(0x42C028, "'+58'");
MakeDword(0x42C028);
MakeComm(0x42C02C, "'+5C'");
MakeDword(0x42C02C);
MakeComm(0x42C030, "'+60'");
MakeDword(0x42C030);
MakeComm(0x42C034, "'+64'");
MakeDword(0x42C034);
MakeComm(0x42C038, "'+68'");
MakeDword(0x42C038);
MakeComm(0x42C03C, "'+6C'");
MakeDword(0x42C03C);
MakeComm(0x42C040, "'+70'");
MakeDword(0x42C040);
MakeComm(0x42C044, "'+74'");
MakeDword(0x42C044);
MakeComm(0x42C048, "'+78'");
MakeDword(0x42C048);
MakeComm(0x42C04C, "'+7C'");
MakeDword(0x42C04C);
MakeComm(0x42C050, "'+80'");
MakeDword(0x42C050);
MakeComm(0x42C054, "'+84'");
MakeDword(0x42C054);
MakeComm(0x42C058, "'+88'");
MakeDword(0x42C058);
MakeComm(0x42C05C, "'+8C'");
MakeDword(0x42C05C);
MakeUnkn(0x42C078, 1);
MakeNameEx(0x42C078, "RTTI_42C078_Class_TGraphicControl", 0);
MakeDword(0x42C078);
MakeUnkn(0x42C07C, 1);
MakeNameEx(0x42C07C, "", 0);
MakeByte(0x42C07C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C07D, 0x42C08D);
MakeDword(0x42C08D);
MakeDword(0x42C091);
MakeWord(0x42C095);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C097, 0x42C0A0);
MakeWord(0x42C0A0);
MakeUnkn(0x42C0A4, 1);
MakeNameEx(0x42C0A4, "VMT_42C0A4_TCustomControl", 0);
MakeDword(0x42C0A4);
MakeDword(0x42C0A8);
MakeDword(0x42C0AC);
MakeDword(0x42C0B0);
MakeDword(0x42C0B4);
MakeDword(0x42C0B8);
MakeDword(0x42C0BC);
MakeDword(0x42C0C0);
MakeUnkn(0x42C1BC, 1);
MakeNameEx(0x42C1BC, "TCustomControl_DynamicTable", 0);
MakeWord(0x42C1BC);
MakeWord(0x42C1BE);
MakeDword(0x42C1C0);
MakeDword(0x42C0C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C1C4, 0x42C1D3);
MakeDword(0x42C0C8);
MakeDword(0x42C0CC);
MakeDword(0x42C0D0);
MakeDword(0x42C0D4);
MakeDword(0x42C0D8);
MakeDword(0x42C0DC);
MakeDword(0x42C0E0);
MakeDword(0x42C0E4);
MakeDword(0x42C0E8);
MakeDword(0x42C0EC);
MakeComm(0x42C0F0, "'+0'");
MakeDword(0x42C0F0);
MakeComm(0x42C0F4, "'+4'");
MakeDword(0x42C0F4);
MakeComm(0x42C0F8, "'+8'");
MakeDword(0x42C0F8);
MakeComm(0x42C0FC, "'+C'");
MakeDword(0x42C0FC);
MakeComm(0x42C100, "'+10'");
MakeDword(0x42C100);
MakeComm(0x42C104, "'+14'");
MakeDword(0x42C104);
MakeComm(0x42C108, "'+18'");
MakeDword(0x42C108);
MakeComm(0x42C10C, "'+1C'");
MakeDword(0x42C10C);
MakeComm(0x42C110, "'+20'");
MakeDword(0x42C110);
MakeComm(0x42C114, "'+24'");
MakeDword(0x42C114);
MakeComm(0x42C118, "'+28'");
MakeDword(0x42C118);
MakeComm(0x42C11C, "'+2C'");
MakeDword(0x42C11C);
MakeComm(0x42C120, "'+30'");
MakeDword(0x42C120);
MakeComm(0x42C124, "'+34'");
MakeDword(0x42C124);
MakeComm(0x42C128, "'+38'");
MakeDword(0x42C128);
MakeComm(0x42C12C, "'+3C'");
MakeDword(0x42C12C);
MakeComm(0x42C130, "'+40'");
MakeDword(0x42C130);
MakeComm(0x42C134, "'+44'");
MakeDword(0x42C134);
MakeComm(0x42C138, "'+48'");
MakeDword(0x42C138);
MakeComm(0x42C13C, "'+4C'");
MakeDword(0x42C13C);
MakeComm(0x42C140, "'+50'");
MakeDword(0x42C140);
MakeComm(0x42C144, "'+54'");
MakeDword(0x42C144);
MakeComm(0x42C148, "'+58'");
MakeDword(0x42C148);
MakeComm(0x42C14C, "'+5C'");
MakeDword(0x42C14C);
MakeComm(0x42C150, "'+60'");
MakeDword(0x42C150);
MakeComm(0x42C154, "'+64'");
MakeDword(0x42C154);
MakeComm(0x42C158, "'+68'");
MakeDword(0x42C158);
MakeComm(0x42C15C, "'+6C'");
MakeDword(0x42C15C);
MakeComm(0x42C160, "'+70'");
MakeDword(0x42C160);
MakeComm(0x42C164, "'+74'");
MakeDword(0x42C164);
MakeComm(0x42C168, "'+78'");
MakeDword(0x42C168);
MakeComm(0x42C16C, "'+7C'");
MakeDword(0x42C16C);
MakeComm(0x42C170, "'+80'");
MakeDword(0x42C170);
MakeComm(0x42C174, "'+84'");
MakeDword(0x42C174);
MakeComm(0x42C178, "'+88'");
MakeDword(0x42C178);
MakeComm(0x42C17C, "'+8C'");
MakeDword(0x42C17C);
MakeComm(0x42C180, "'+90'");
MakeDword(0x42C180);
MakeComm(0x42C184, "'+94'");
MakeDword(0x42C184);
MakeComm(0x42C188, "'+98'");
MakeDword(0x42C188);
MakeComm(0x42C18C, "'+9C'");
MakeDword(0x42C18C);
MakeComm(0x42C190, "'+A0'");
MakeDword(0x42C190);
MakeComm(0x42C194, "'+A4'");
MakeDword(0x42C194);
MakeComm(0x42C198, "'+A8'");
MakeDword(0x42C198);
MakeComm(0x42C19C, "'+AC'");
MakeDword(0x42C19C);
MakeComm(0x42C1A0, "'+B0'");
MakeDword(0x42C1A0);
MakeComm(0x42C1A4, "'+B4'");
MakeDword(0x42C1A4);
MakeComm(0x42C1A8, "'+B8'");
MakeDword(0x42C1A8);
MakeComm(0x42C1AC, "'+BC'");
MakeDword(0x42C1AC);
MakeComm(0x42C1B0, "'+C0'");
MakeDword(0x42C1B0);
MakeComm(0x42C1B4, "'+C4'");
MakeDword(0x42C1B4);
MakeComm(0x42C1B8, "'+C8'");
MakeDword(0x42C1B8);
MakeUnkn(0x42C1D4, 1);
MakeNameEx(0x42C1D4, "RTTI_42C1D4_Class_TCustomControl", 0);
MakeDword(0x42C1D4);
MakeUnkn(0x42C1D8, 1);
MakeNameEx(0x42C1D8, "", 0);
MakeByte(0x42C1D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C1D9, 0x42C1E8);
MakeDword(0x42C1E8);
MakeDword(0x42C1EC);
MakeWord(0x42C1F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C1F2, 0x42C1FB);
MakeWord(0x42C1FB);
MakeUnkn(0x42C200, 1);
MakeNameEx(0x42C200, "VMT_42C200_THintWindow", 0);
MakeDword(0x42C200);
MakeDword(0x42C204);
MakeDword(0x42C208);
MakeDword(0x42C20C);
MakeDword(0x42C210);
MakeDword(0x42C214);
MakeDword(0x42C218);
MakeDword(0x42C21C);
MakeUnkn(0x42C32C, 1);
MakeNameEx(0x42C32C, "THintWindow_DynamicTable", 0);
MakeWord(0x42C32C);
MakeWord(0x42C32E);
MakeWord(0x42C330);
MakeWord(0x42C332);
MakeWord(0x42C334);
MakeDword(0x42C336);
MakeDword(0x42C33A);
MakeDword(0x42C33E);
MakeDword(0x42C342);
MakeDword(0x42C220);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C346, 0x42C352);
MakeDword(0x42C224);
MakeDword(0x42C228);
MakeDword(0x42C22C);
MakeDword(0x42C230);
MakeDword(0x42C234);
MakeDword(0x42C238);
MakeDword(0x42C23C);
MakeDword(0x42C240);
MakeDword(0x42C244);
MakeDword(0x42C248);
MakeComm(0x42C24C, "'+0'");
MakeDword(0x42C24C);
MakeComm(0x42C250, "'+4'");
MakeDword(0x42C250);
MakeComm(0x42C254, "'+8'");
MakeDword(0x42C254);
MakeComm(0x42C258, "'+C'");
MakeDword(0x42C258);
MakeComm(0x42C25C, "'+10'");
MakeDword(0x42C25C);
MakeComm(0x42C260, "'+14'");
MakeDword(0x42C260);
MakeComm(0x42C264, "'+18'");
MakeDword(0x42C264);
MakeComm(0x42C268, "'+1C'");
MakeDword(0x42C268);
MakeComm(0x42C26C, "'+20'");
MakeDword(0x42C26C);
MakeComm(0x42C270, "'+24'");
MakeDword(0x42C270);
MakeComm(0x42C274, "'+28'");
MakeDword(0x42C274);
MakeComm(0x42C278, "'+2C'");
MakeDword(0x42C278);
MakeComm(0x42C27C, "'+30'");
MakeDword(0x42C27C);
MakeComm(0x42C280, "'+34'");
MakeDword(0x42C280);
MakeComm(0x42C284, "'+38'");
MakeDword(0x42C284);
MakeComm(0x42C288, "'+3C'");
MakeDword(0x42C288);
MakeComm(0x42C28C, "'+40'");
MakeDword(0x42C28C);
MakeComm(0x42C290, "'+44'");
MakeDword(0x42C290);
MakeComm(0x42C294, "'+48'");
MakeDword(0x42C294);
MakeComm(0x42C298, "'+4C'");
MakeDword(0x42C298);
MakeComm(0x42C29C, "'+50'");
MakeDword(0x42C29C);
MakeComm(0x42C2A0, "'+54'");
MakeDword(0x42C2A0);
MakeComm(0x42C2A4, "'+58'");
MakeDword(0x42C2A4);
MakeComm(0x42C2A8, "'+5C'");
MakeDword(0x42C2A8);
MakeComm(0x42C2AC, "'+60'");
MakeDword(0x42C2AC);
MakeComm(0x42C2B0, "'+64'");
MakeDword(0x42C2B0);
MakeComm(0x42C2B4, "'+68'");
MakeDword(0x42C2B4);
MakeComm(0x42C2B8, "'+6C'");
MakeDword(0x42C2B8);
MakeComm(0x42C2BC, "'+70'");
MakeDword(0x42C2BC);
MakeComm(0x42C2C0, "'+74'");
MakeDword(0x42C2C0);
MakeComm(0x42C2C4, "'+78'");
MakeDword(0x42C2C4);
MakeComm(0x42C2C8, "'+7C'");
MakeDword(0x42C2C8);
MakeComm(0x42C2CC, "'+80'");
MakeDword(0x42C2CC);
MakeComm(0x42C2D0, "'+84'");
MakeDword(0x42C2D0);
MakeComm(0x42C2D4, "'+88'");
MakeDword(0x42C2D4);
MakeComm(0x42C2D8, "'+8C'");
MakeDword(0x42C2D8);
MakeComm(0x42C2DC, "'+90'");
MakeDword(0x42C2DC);
MakeComm(0x42C2E0, "'+94'");
MakeDword(0x42C2E0);
MakeComm(0x42C2E4, "'+98'");
MakeDword(0x42C2E4);
MakeComm(0x42C2E8, "'+9C'");
MakeDword(0x42C2E8);
MakeComm(0x42C2EC, "'+A0'");
MakeDword(0x42C2EC);
MakeComm(0x42C2F0, "'+A4'");
MakeDword(0x42C2F0);
MakeComm(0x42C2F4, "'+A8'");
MakeDword(0x42C2F4);
MakeComm(0x42C2F8, "'+AC'");
MakeDword(0x42C2F8);
MakeComm(0x42C2FC, "'+B0'");
MakeDword(0x42C2FC);
MakeComm(0x42C300, "'+B4'");
MakeDword(0x42C300);
MakeComm(0x42C304, "'+B8'");
MakeDword(0x42C304);
MakeComm(0x42C308, "'+BC'");
MakeDword(0x42C308);
MakeComm(0x42C30C, "'+C0'");
MakeDword(0x42C30C);
MakeComm(0x42C310, "'+C4'");
MakeDword(0x42C310);
MakeComm(0x42C314, "'+C8'");
MakeDword(0x42C314);
MakeComm(0x42C318, "'+CC'");
MakeDword(0x42C318);
MakeComm(0x42C31C, "'+D0'");
MakeDword(0x42C31C);
MakeComm(0x42C320, "'+D4'");
MakeDword(0x42C320);
MakeComm(0x42C324, "'+D8'");
MakeDword(0x42C324);
MakeComm(0x42C328, "'+DC'");
MakeDword(0x42C328);
MakeUnkn(0x42C354, 1);
MakeNameEx(0x42C354, "RTTI_42C354_Class_THintWindow", 0);
MakeDword(0x42C354);
MakeUnkn(0x42C358, 1);
MakeNameEx(0x42C358, "", 0);
MakeByte(0x42C358);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C359, 0x42C365);
MakeDword(0x42C365);
MakeDword(0x42C369);
MakeWord(0x42C36D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C36F, 0x42C378);
MakeWord(0x42C378);
MakeUnkn(0x42C37C, 1);
MakeNameEx(0x42C37C, "VMT_42C37C_TDockZone", 0);
MakeDword(0x42C37C);
MakeDword(0x42C380);
MakeDword(0x42C384);
MakeDword(0x42C388);
MakeDword(0x42C38C);
MakeDword(0x42C390);
MakeDword(0x42C394);
MakeDword(0x42C398);
MakeDword(0x42C39C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C3C8, 0x42C3D2);
MakeDword(0x42C3A0);
MakeDword(0x42C3A4);
MakeDword(0x42C3A8);
MakeDword(0x42C3AC);
MakeDword(0x42C3B0);
MakeDword(0x42C3B4);
MakeDword(0x42C3B8);
MakeDword(0x42C3BC);
MakeDword(0x42C3C0);
MakeDword(0x42C3C4);
MakeUnkn(0x42C4C8, 1);
MakeNameEx(0x42C4C8, "VMT_42C4C8_TDockTree", 0);
MakeDword(0x42C4C8);
MakeDword(0x42C4CC);
MakeUnkn(0x42C4A8, 1);
MakeNameEx(0x42C4A8, "TDockTree_IntfTable", 0);
MakeDword(0x42C4A8);
MakeByte(0x42C4AC);
MakeArray(0x42C4AC, 16);
MakeDword(0x42C4BC);
MakeDword(0x42C470);
MakeFunction(0x42C450, -1);
MakeCode(0x42C450);
MakeDword(0x42C474);
MakeFunction(0x42C45A, -1);
MakeCode(0x42C45A);
MakeDword(0x42C478);
MakeFunction(0x42C464, -1);
MakeCode(0x42C464);
MakeDword(0x42C47C);
MakeFunction(0x42C3D5, -1);
MakeCode(0x42C3D5);
MakeDword(0x42C480);
MakeFunction(0x42C3DD, -1);
MakeCode(0x42C3DD);
MakeDword(0x42C484);
MakeFunction(0x42C3E5, -1);
MakeCode(0x42C3E5);
MakeDword(0x42C488);
MakeFunction(0x42C3ED, -1);
MakeCode(0x42C3ED);
MakeDword(0x42C48C);
MakeFunction(0x42C3FA, -1);
MakeCode(0x42C3FA);
MakeDword(0x42C490);
MakeFunction(0x42C407, -1);
MakeCode(0x42C407);
MakeDword(0x42C494);
MakeFunction(0x42C414, -1);
MakeCode(0x42C414);
MakeDword(0x42C498);
MakeFunction(0x42C421, -1);
MakeCode(0x42C421);
MakeDword(0x42C49C);
MakeFunction(0x42C42E, -1);
MakeCode(0x42C42E);
MakeDword(0x42C4A0);
MakeFunction(0x42C43B, -1);
MakeCode(0x42C43B);
MakeDword(0x42C4A4);
MakeFunction(0x42C448, -1);
MakeCode(0x42C448);
MakeByte(0x42C3D4);
MakeDword(0x42C4C0);
MakeDword(0x42C4C4);
MakeDword(0x42C4D0);
MakeDword(0x42C4D4);
MakeDword(0x42C4D8);
MakeDword(0x42C4DC);
MakeDword(0x42C4E0);
MakeDword(0x42C4E4);
MakeDword(0x42C4E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C540, 0x42C54A);
MakeDword(0x42C4EC);
MakeDword(0x42C4F0);
MakeDword(0x42C4F4);
MakeDword(0x42C4F8);
MakeDword(0x42C4FC);
MakeDword(0x42C500);
MakeDword(0x42C504);
MakeDword(0x42C508);
MakeDword(0x42C50C);
MakeDword(0x42C510);
MakeComm(0x42C514, "'+0'");
MakeDword(0x42C514);
MakeComm(0x42C518, "'+4'");
MakeDword(0x42C518);
MakeComm(0x42C51C, "'+8'");
MakeDword(0x42C51C);
MakeComm(0x42C520, "'+C'");
MakeDword(0x42C520);
MakeComm(0x42C524, "'+10'");
MakeDword(0x42C524);
MakeComm(0x42C528, "'+14'");
MakeDword(0x42C528);
MakeComm(0x42C52C, "'+18'");
MakeDword(0x42C52C);
MakeComm(0x42C530, "'+1C'");
MakeDword(0x42C530);
MakeComm(0x42C534, "'+20'");
MakeDword(0x42C534);
MakeComm(0x42C538, "'+24'");
MakeDword(0x42C538);
MakeComm(0x42C53C, "'+28'");
MakeDword(0x42C53C);
MakeUnkn(0x42C54C, 1);
MakeNameEx(0x42C54C, "VMT_42C54C_TMouse", 0);
MakeDword(0x42C54C);
MakeDword(0x42C550);
MakeDword(0x42C554);
MakeDword(0x42C558);
MakeDword(0x42C55C);
MakeDword(0x42C560);
MakeDword(0x42C564);
MakeDword(0x42C568);
MakeDword(0x42C56C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C598, 0x42C59F);
MakeDword(0x42C570);
MakeDword(0x42C574);
MakeDword(0x42C578);
MakeDword(0x42C57C);
MakeDword(0x42C580);
MakeDword(0x42C584);
MakeDword(0x42C588);
MakeDword(0x42C58C);
MakeDword(0x42C590);
MakeDword(0x42C594);
MakeUnkn(0x42C5A0, 1);
MakeNameEx(0x42C5A0, "ChangeBiDiModeAlignment", 0x20);
MakeComm(0x42C5A0, "'procedure ChangeBiDiModeAlignment(var Alignment:TAlignment);'");
MakeCode(0x42C5A0);
MakeCode(0x42C5AB);
MakeCode(0x42C5AF);
MakeFunction(0x42C5A0, 0x42C5B3);
MakeUnkn(0x42C5B4, 1);
MakeNameEx(0x42C5B4, "InitWndProc", 0x20);
MakeComm(0x42C5B4, "'function InitWndProc(HWindow:HWND; Message:Longint; WParam:Longint; LParam:Longint):Longint; stdcall;'");
MakeCode(0x42C5B4);
MakeCode(0x42C611);
MakeFunction(0x42C5B4, 0x42C66B);
MakeUnkn(0x42C66C, 1);
MakeNameEx(0x42C66C, "ObjectFromHWnd", 0x20);
MakeComm(0x42C66C, "'function ObjectFromHWnd(Handle:HWND):TWinControl;'");
MakeCode(0x42C66C);
MakeCode(0x42C698);
MakeFunction(0x42C66C, 0x42C69D);
MakeUnkn(0x42C6A0, 1);
MakeNameEx(0x42C6A0, "FindControl", 0x20);
MakeComm(0x42C6A0, "'function FindControl(Handle:HWND):TWinControl;'");
MakeCode(0x42C6A0);
MakeCode(0x42C6EB);
MakeCode(0x42C6F4);
MakeFunction(0x42C6A0, 0x42C6FA);
MakeUnkn(0x42C6FC, 1);
MakeNameEx(0x42C6FC, "SendAppMessage", 0x20);
MakeComm(0x42C6FC, "'function SendAppMessage(Msg:Cardinal; WParam:Longint; LParam:Longint):Longint;'");
MakeCode(0x42C6FC);
MakeCode(0x42C71E);
MakeFunction(0x42C6FC, 0x42C723);
MakeUnkn(0x42C8C0, 1);
MakeNameEx(0x42C8C0, "CursorToIdent", 0x20);
MakeComm(0x42C8C0, "'function CursorToIdent(Cursor:Longint; var Ident:AnsiString):Boolean;'");
MakeCode(0x42C8C0);
MakeFunction(0x42C8C0, 0x42C8CD);
MakeUnkn(0x42C8D0, 1);
MakeNameEx(0x42C8D0, "IdentToCursor", 0x20);
MakeComm(0x42C8D0, "'function IdentToCursor(const Ident:AnsiString; var Cursor:Longint):Boolean;'");
MakeCode(0x42C8D0);
MakeFunction(0x42C8D0, 0x42C8DD);
MakeUnkn(0x42C8E0, 1);
MakeNameEx(0x42C8E0, "GetShortHint", 0x20);
MakeComm(0x42C8E0, "'function GetShortHint(const Hint:AnsiString):AnsiString;'");
MakeCode(0x42C8E0);
MakeCode(0x42C904);
MakeCode(0x42C914);
MakeFunction(0x42C8E0, 0x42C918);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42C920, -1);
MakeDword(0x42C91C);
MakeDword(0x42C918);
MakeUnkn(0x42C924, 1);
MakeNameEx(0x42C924, "GetLongHint", 0x20);
MakeComm(0x42C924, "'function GetLongHint(const Hint:AnsiString):AnsiString;'");
MakeCode(0x42C924);
MakeCode(0x42C948);
MakeCode(0x42C958);
MakeFunction(0x42C924, 0x42C95C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42C964, -1);
MakeDword(0x42C960);
MakeDword(0x42C95C);
MakeUnkn(0x42C968, 1);
MakeNameEx(0x42C968, "GetCaptureControl", 0x20);
MakeComm(0x42C968, "'function GetCaptureControl:TControl;'");
MakeCode(0x42C968);
MakeFunction(0x42C968, 0x42C990);
MakeUnkn(0x42C990, 1);
MakeNameEx(0x42C990, "SetCaptureControl", 0x20);
MakeComm(0x42C990, "'procedure SetCaptureControl(Control:TControl);'");
MakeCode(0x42C990);
MakeCode(0x42C9C3);
MakeCode(0x42C9D0);
MakeFunction(0x42C990, 0x42C9D2);
MakeUnkn(0x42C9D4, 1);
MakeNameEx(0x42C9D4, "VMT_42C9D4_TSiteList", 0);
MakeDword(0x42C9D4);
MakeDword(0x42C9D8);
MakeDword(0x42C9DC);
MakeDword(0x42C9E0);
MakeDword(0x42C9E4);
MakeDword(0x42C9E8);
MakeDword(0x42C9EC);
MakeDword(0x42C9F0);
MakeDword(0x42C9F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CA30, 0x42CA3A);
MakeDword(0x42C9F8);
MakeDword(0x42C9FC);
MakeDword(0x42CA00);
MakeDword(0x42CA04);
MakeDword(0x42CA08);
MakeDword(0x42CA0C);
MakeDword(0x42CA10);
MakeDword(0x42CA14);
MakeDword(0x42CA18);
MakeDword(0x42CA1C);
MakeComm(0x42CA20, "'+0'");
MakeDword(0x42CA20);
MakeComm(0x42CA24, "'+4'");
MakeDword(0x42CA24);
MakeComm(0x42CA28, "'+8'");
MakeDword(0x42CA28);
MakeComm(0x42CA2C, "'+C'");
MakeDword(0x42CA2C);
MakeUnkn(0x42CA3C, 1);
MakeNameEx(0x42CA3C, "TSiteList.Find", 0x20);
MakeComm(0x42CA3C, "'function TSiteList.Find(ParentWnd:HWND; var Index:Integer):Boolean;'");
MakeCode(0x42CA3C);
MakeCode(0x42CA4D);
MakeCode(0x42CA62);
MakeCode(0x42CA69);
MakeFunction(0x42CA3C, 0x42CA6D);
MakeUnkn(0x42CA70, 1);
MakeNameEx(0x42CA70, "GetTopParent", 0x20);
MakeComm(0x42CA70, "'function GetTopParent:HWND;'");
MakeCode(0x42CA70);
MakeCode(0x42CA85);
MakeCode(0x42CA91);
MakeFunction(0x42CA70, 0x42CA96);
MakeUnkn(0x42CA98, 1);
MakeNameEx(0x42CA98, "TSiteList.AddSite", 0x20);
MakeComm(0x42CA98, "'procedure TSiteList.AddSite(ASite:TWinControl);'");
MakeCode(0x42CA98);
MakeCode(0x42CAE1);
MakeCode(0x42CAEA);
MakeFunction(0x42CA98, 0x42CAF1);
MakeUnkn(0x42CAF4, 1);
MakeNameEx(0x42CAF4, "TSiteList.Clear", 0x20);
MakeComm(0x42CAF4, "'procedure TSiteList.Clear;'");
MakeCode(0x42CAF4);
MakeCode(0x42CB04);
MakeCode(0x42CB1B);
MakeFunction(0x42CAF4, 0x42CB26);
MakeUnkn(0x42CB28, 1);
MakeNameEx(0x42CB28, "TSiteList.GetTopSite", 0x20);
MakeComm(0x42CB28, "'function TSiteList.GetTopSite:TWinControl;'");
MakeCode(0x42CB28);
MakeCode(0x42CB47);
MakeCode(0x42CB56);
MakeCode(0x42CB72);
MakeCode(0x42CB7C);
MakeCode(0x42CB84);
MakeFunction(0x42CB28, 0x42CB8B);
MakeUnkn(0x42CB8C, 1);
MakeNameEx(0x42CB8C, "TDragObject.Assign", 0x20);
MakeComm(0x42CB8C, "'procedure TDragObject.Assign(Source:TDragObject);'");
MakeCode(0x42CB8C);
MakeFunction(0x42CB8C, 0x42CBC9);
MakeUnkn(0x42CBCC, 1);
MakeNameEx(0x42CBCC, "TDragObject.Capture", 0x20);
MakeComm(0x42CBCC, "'function TDragObject.Capture:HWND;'");
MakeCode(0x42CBCC);
MakeFunction(0x42CBCC, 0x42CBE4);
MakeCode(0x42CBE4);
MakeFunction(0x42CBE4, 0x42CBEB);
MakeUnkn(0x42CBEC, 1);
MakeNameEx(0x42CBEC, "TDragObject.GetName", 0x20);
MakeComm(0x42CBEC, "'function TDragObject.GetName:AnsiString;'");
MakeCode(0x42CBEC);
MakeFunction(0x42CBEC, 0x42CC13);
MakeUnkn(0x42CC14, 1);
MakeNameEx(0x42CC14, "TDragObject.ReleaseCapture", 0x20);
MakeComm(0x42CC14, "'procedure TDragObject.ReleaseCapture(Handle:HWND);'");
MakeCode(0x42CC14);
MakeFunction(0x42CC14, 0x42CC25);
MakeUnkn(0x42CC28, 1);
MakeNameEx(0x42CC28, "TDragObject.WndProc", 0x20);
MakeComm(0x42CC28, "'procedure TDragObject.WndProc(var Msg:TMessage);'");
MakeCode(0x42CC28);
MakeCode(0x42CC65);
MakeCode(0x42CC71);
MakeCode(0x42CC95);
MakeCode(0x42CC9E);
MakeCode(0x42CCA7);
MakeCode(0x42CCBC);
MakeCode(0x42CCCB);
MakeCode(0x42CCDA);
MakeCode(0x42CCE8);
MakeCode(0x42CCF2);
MakeCode(0x42CD07);
MakeCode(0x42CD1B);
MakeFunction(0x42CC28, 0x42CD22);
MakeCode(0x42CD24);
MakeFunction(0x42CD24, 0x42CD27);
MakeUnkn(0x42CD28, 1);
MakeNameEx(0x42CD28, "TDragObject.GetDragCursor", 0x20);
MakeComm(0x42CD28, "'function TDragObject.GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;'");
MakeCode(0x42CD28);
MakeCode(0x42CD35);
MakeCode(0x42CD39);
MakeFunction(0x42CD28, 0x42CD3D);
MakeCode(0x42CD40);
MakeFunction(0x42CD40, 0x42CD41);
MakeCode(0x42CD44);
MakeFunction(0x42CD44, 0x42CD4A);
MakeCode(0x42CD4C);
MakeFunction(0x42CD4C, 0x42CD4D);
MakeUnkn(0x42CD50, 1);
MakeNameEx(0x42CD50, "TDragObject.MainWndProc", 0x20);
MakeComm(0x42CD50, "'procedure TDragObject.MainWndProc(var Message:TMessage);'");
MakeCode(0x42CD50);
MakeCode(0x42CD70);
MakeCode(0x42CD7A);
MakeCode(0x42CD93);
MakeFunction(0x42CD50, 0x42CD99);
MakeUnkn(0x42CD9C, 1);
MakeNameEx(0x42CD9C, "TDragObject.AfterConstruction", 0x20);
MakeComm(0x42CD9C, "'procedure TDragObject.AfterConstruction;'");
MakeCode(0x42CD9C);
MakeFunction(0x42CD9C, 0x42CDA9);
MakeUnkn(0x42CDAC, 1);
MakeNameEx(0x42CDAC, "TDragObject.AfterConstruction_0", 0x20);
MakeComm(0x42CDAC, "'procedure TDragObject.AfterConstruction;'");
MakeCode(0x42CDAC);
MakeFunction(0x42CDAC, 0x42CDB9);
MakeUnkn(0x42CDBC, 1);
MakeNameEx(0x42CDBC, "TBaseDragControlObject.Create", 0x20);
MakeComm(0x42CDBC, "'constructor TBaseDragControlObject.Create(AControl:TControl);'");
MakeCode(0x42CDBC);
MakeCode(0x42CDC8);
MakeFunction(0x42CDBC, 0x42CDDF);
MakeUnkn(0x42CDE0, 1);
MakeNameEx(0x42CDE0, "TBaseDragControlObject.Assign", 0x20);
MakeComm(0x42CDE0, "'procedure TBaseDragControlObject.Assign(Source:TDragObject);'");
MakeCode(0x42CDE0);
MakeCode(0x42CE06);
MakeFunction(0x42CDE0, 0x42CE09);
MakeUnkn(0x42CE0C, 1);
MakeNameEx(0x42CE0C, "TBaseDragControlObject.EndDrag", 0x20);
MakeComm(0x42CE0C, "'procedure TBaseDragControlObject.EndDrag(Target:TObject; X:Integer; Y:Integer);'");
MakeCode(0x42CE0C);
MakeFunction(0x42CE0C, 0x42CE35);
MakeUnkn(0x42CE38, 1);
MakeNameEx(0x42CE38, "TBaseDragControlObject.Finished", 0x20);
MakeComm(0x42CE38, "'procedure TBaseDragControlObject.Finished(Target:TObject; X:Integer; Y:Integer; Accepted:Boolean);'");
MakeCode(0x42CE38);
MakeCode(0x42CE56);
MakeFunction(0x42CE38, 0x42CE6A);
MakeUnkn(0x42CE6C, 1);
MakeNameEx(0x42CE6C, "TDragControlObject.GetDragCursor", 0x20);
MakeComm(0x42CE6C, "'function TDragControlObject.GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;'");
MakeCode(0x42CE6C);
MakeCode(0x42CE7C);
MakeCode(0x42CE80);
MakeFunction(0x42CE6C, 0x42CE84);
MakeUnkn(0x42CE84, 1);
MakeNameEx(0x42CE84, "TDragControlObject.GetDragImages", 0x20);
MakeComm(0x42CE84, "'function TDragControlObject.GetDragImages:TDragImageList;'");
MakeCode(0x42CE84);
MakeFunction(0x42CE84, 0x42CE8D);
MakeUnkn(0x42CE90, 1);
MakeNameEx(0x42CE90, "TDragControlObject.HideDragImage", 0x20);
MakeComm(0x42CE90, "'procedure TDragControlObject.HideDragImage;'");
MakeCode(0x42CE90);
MakeCode(0x42CEAC);
MakeFunction(0x42CE90, 0x42CEAE);
MakeUnkn(0x42CEB0, 1);
MakeNameEx(0x42CEB0, "TDragControlObject.ShowDragImage", 0x20);
MakeComm(0x42CEB0, "'procedure TDragControlObject.ShowDragImage;'");
MakeCode(0x42CEB0);
MakeCode(0x42CECC);
MakeFunction(0x42CEB0, 0x42CECE);
MakeUnkn(0x42CED0, 1);
MakeNameEx(0x42CED0, "TDragControlObjectEx.BeforeDestruction", 0x20);
MakeComm(0x42CED0, "'procedure TDragControlObjectEx.BeforeDestruction;'");
MakeCode(0x42CED0);
MakeFunction(0x42CED0, 0x42CED1);
MakeUnkn(0x42CED4, 1);
MakeNameEx(0x42CED4, "TDragDockObject.Create", 0x20);
MakeComm(0x42CED4, "'constructor TDragDockObject.Create(AControl:TControl);'");
MakeCode(0x42CED4);
MakeCode(0x42CEE6);
MakeCode(0x42CF31);
MakeFunction(0x42CED4, 0x42CF38);
MakeUnkn(0x42CF38, 1);
MakeNameEx(0x42CF38, "TDragDockObject.Destroy", 0x20);
MakeComm(0x42CF38, "'destructor TDragDockObject.Destroy;'");
MakeCode(0x42CF38);
MakeCode(0x42CF62);
MakeFunction(0x42CF38, 0x42CF65);
MakeUnkn(0x42CF68, 1);
MakeNameEx(0x42CF68, "TDragDockObject.Assign", 0x20);
MakeComm(0x42CF68, "'procedure TDragDockObject.Assign(Source:TDragObject);'");
MakeCode(0x42CF68);
MakeCode(0x42CFC0);
MakeFunction(0x42CF68, 0x42CFC4);
MakeUnkn(0x42CFC4, 1);
MakeNameEx(0x42CFC4, "TDragDockObject.EndDrag", 0x20);
MakeComm(0x42CFC4, "'procedure TDragDockObject.EndDrag(Target:TObject; X:Integer; Y:Integer);'");
MakeCode(0x42CFC4);
MakeFunction(0x42CFC4, 0x42CFE5);
MakeUnkn(0x42D0C4, 1);
MakeNameEx(0x42D0C4, "TDragDockObjectEx.BeforeDestruction", 0x20);
MakeComm(0x42D0C4, "'procedure TDragDockObjectEx.BeforeDestruction;'");
MakeCode(0x42D0C4);
MakeFunction(0x42D0C4, 0x42D0C5);
MakeUnkn(0x42D46C, 1);
MakeNameEx(0x42D46C, "RegisterDockSite", 0x20);
MakeComm(0x42D46C, "'procedure RegisterDockSite(Site:TWinControl; DoRegister:Boolean);'");
MakeUnkn(0x42D6D0, 1);
MakeNameEx(0x42D6D0, "DragTo", 0x20);
MakeComm(0x42D6D0, "'procedure DragTo(const Pos:TPoint);'");
MakeUnkn(0x42DB10, 1);
MakeNameEx(0x42DB10, "DragInitControl", 0x20);
MakeComm(0x42DB10, "'procedure DragInitControl(Control:TControl; Immediate:Boolean; Threshold:Integer);'");
MakeUnkn(0x42DD48, 1);
MakeNameEx(0x42DD48, "DragDone", 0x20);
MakeComm(0x42DD48, "'procedure DragDone(Drop:Boolean);'");
MakeUnkn(0x42E020, 1);
MakeNameEx(0x42E020, "CancelDrag", 0x20);
MakeComm(0x42E020, "'procedure CancelDrag;'");
MakeCode(0x42E020);
MakeCode(0x42E030);
MakeFunction(0x42E020, 0x42E038);
MakeUnkn(0x42E038, 1);
MakeNameEx(0x42E038, "FindVCLWindow", 0x20);
MakeComm(0x42E038, "'function FindVCLWindow(const Pos:TPoint):TWinControl;'");
MakeCode(0x42E038);
MakeCode(0x42E04C);
MakeCode(0x42E065);
MakeFunction(0x42E038, 0x42E06A);
MakeUnkn(0x42E06C, 1);
MakeNameEx(0x42E06C, "FindDragTarget", 0x20);
MakeComm(0x42E06C, "'function FindDragTarget(const Pos:TPoint; AllowDisabled:Boolean):TControl;'");
MakeCode(0x42E06C);
MakeCode(0x42E0AA);
MakeFunction(0x42E06C, 0x42E0B3);
MakeUnkn(0x42E0B4, 1);
MakeNameEx(0x42E0B4, "ListAdd", 0x20);
MakeComm(0x42E0B4, "'procedure ListAdd(var List:TList; Item:Pointer);'");
MakeCode(0x42E0B4);
MakeCode(0x42E0CD);
MakeFunction(0x42E0B4, 0x42E0D9);
MakeUnkn(0x42E0DC, 1);
MakeNameEx(0x42E0DC, "ListRemove", 0x20);
MakeComm(0x42E0DC, "'procedure ListRemove(var List:TList; Item:Pointer);'");
MakeCode(0x42E0DC);
MakeCode(0x42E0F9);
MakeFunction(0x42E0DC, 0x42E0FB);
MakeUnkn(0x42E0FC, 1);
MakeNameEx(0x42E0FC, "MoveWindowOrg", 0x20);
MakeComm(0x42E0FC, "'procedure MoveWindowOrg(DC:HDC; DX:Integer; DY:Integer);'");
MakeCode(0x42E0FC);
MakeFunction(0x42E0FC, 0x42E12B);
MakeUnkn(0x42E12C, 1);
MakeNameEx(0x42E12C, "FreeDeviceContext", 0x20);
MakeComm(0x42E12C, "'procedure FreeDeviceContext;'");
MakeCode(0x42E12C);
MakeCode(0x42E163);
MakeCode(0x42E19F);
MakeCode(0x42E1AC);
MakeCode(0x42E1B5);
MakeCode(0x42E1BA);
MakeCode(0x42E1BC);
MakeCode(0x42E1C4);
MakeCode(0x42E1D1);
MakeCode(0x42E1DC);
MakeCode(0x42E1E1);
MakeCode(0x42E1E3);
MakeFunction(0x42E12C, 0x42E1E7);
MakeUnkn(0x42E1E8, 1);
MakeNameEx(0x42E1E8, "FreeDeviceContexts", 0x20);
MakeComm(0x42E1E8, "'procedure FreeDeviceContexts;'");
MakeCode(0x42E1E8);
MakeCode(0x42E218);
MakeCode(0x42E248);
MakeCode(0x42E255);
MakeCode(0x42E25E);
MakeCode(0x42E263);
MakeCode(0x42E265);
MakeCode(0x42E26E);
MakeCode(0x42E27B);
MakeCode(0x42E286);
MakeCode(0x42E28B);
MakeFunction(0x42E1E8, 0x42E291);
MakeUnkn(0x42E294, 1);
MakeNameEx(0x42E294, "TControlCanvas.Destroy", 0x20);
MakeComm(0x42E294, "'destructor TControlCanvas.Destroy;'");
MakeCode(0x42E294);
MakeCode(0x42E2BD);
MakeFunction(0x42E294, 0x42E2C0);
MakeUnkn(0x42E2C0, 1);
MakeNameEx(0x42E2C0, "TControlCanvas.CreateHandle", 0x20);
MakeComm(0x42E2C0, "'procedure TControlCanvas.CreateHandle;'");
MakeCode(0x42E2C0);
MakeCode(0x42E2DE);
MakeCode(0x42E30C);
MakeCode(0x42E32D);
MakeCode(0x42E33A);
MakeCode(0x42E345);
MakeCode(0x42E34A);
MakeCode(0x42E34C);
MakeCode(0x42E362);
MakeFunction(0x42E2C0, 0x42E366);
MakeUnkn(0x42E368, 1);
MakeNameEx(0x42E368, "TControlCanvas.FreeHandle", 0x20);
MakeComm(0x42E368, "'procedure TControlCanvas.FreeHandle;'");
MakeCode(0x42E368);
MakeCode(0x42E398);
MakeFunction(0x42E368, 0x42E39A);
MakeUnkn(0x42E39C, 1);
MakeNameEx(0x42E39C, "TControlCanvas.SetControl", 0x20);
MakeComm(0x42E39C, "'procedure TControlCanvas.SetControl(AControl:TControl);'");
MakeCode(0x42E39C);
MakeCode(0x42E3B1);
MakeFunction(0x42E39C, 0x42E3B4);
MakeUnkn(0x42E3B4, 1);
MakeNameEx(0x42E3B4, "TControlCanvas.UpdateTextFlags", 0x20);
MakeComm(0x42E3B4, "'procedure TControlCanvas.UpdateTextFlags;'");
MakeCode(0x42E3B4);
MakeCode(0x42E3D3);
MakeCode(0x42E3DA);
MakeFunction(0x42E3B4, 0x42E3DD);
MakeUnkn(0x42E3E0, 1);
MakeNameEx(0x42E3E0, "TSizeConstraints.Create", 0x20);
MakeComm(0x42E3E0, "'constructor TSizeConstraints.Create(Control:TControl);'");
MakeCode(0x42E3E0);
MakeCode(0x42E3EF);
MakeCode(0x42E416);
MakeFunction(0x42E3E0, 0x42E41C);
MakeUnkn(0x42E41C, 1);
MakeNameEx(0x42E41C, "TSizeConstraints.AssignTo", 0x20);
MakeComm(0x42E41C, "'procedure TSizeConstraints.AssignTo(Dest:TPersistent);'");
MakeCode(0x42E41C);
MakeCode(0x42E455);
MakeFunction(0x42E41C, 0x42E461);
MakeUnkn(0x42E464, 1);
MakeNameEx(0x42E464, "TSizeConstraints.SetConstraints", 0x20);
MakeComm(0x42E464, "'procedure TSizeConstraints.SetConstraints(Index:Integer; Value:TConstraintSize);'");
MakeCode(0x42E464);
MakeCode(0x42E476);
MakeCode(0x42E48A);
MakeCode(0x42E493);
MakeCode(0x42E4A7);
MakeCode(0x42E4B0);
MakeCode(0x42E4C6);
MakeCode(0x42E4CF);
MakeCode(0x42E4E5);
MakeCode(0x42E4EC);
MakeFunction(0x42E464, 0x42E4EE);
MakeUnkn(0x42E4F0, 1);
MakeNameEx(0x42E4F0, "TSizeConstraints.Change", 0x20);
MakeComm(0x42E4F0, "'procedure TSizeConstraints.Change;'");
MakeCode(0x42E4F0);
MakeCode(0x42E502);
MakeFunction(0x42E4F0, 0x42E504);
MakeUnkn(0x42E504, 1);
MakeNameEx(0x42E504, "TControlActionLink.AssignClient", 0x20);
MakeComm(0x42E504, "'procedure TControlActionLink.AssignClient(AClient:TObject);'");
MakeCode(0x42E504);
MakeFunction(0x42E504, 0x42E51D);
MakeUnkn(0x42E520, 1);
MakeNameEx(0x42E520, "TControlActionLink.DoShowHint", 0x20);
MakeComm(0x42E520, "'function TControlActionLink.DoShowHint(var HintStr:AnsiString):Boolean;'");
MakeCode(0x42E520);
MakeCode(0x42E5CF);
MakeCode(0x42E5DC);
MakeCode(0x42E5ED);
MakeCode(0x42E5F2);
MakeFunction(0x42E520, 0x42E5FE);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42E608, -1);
MakeDword(0x42E604);
MakeDword(0x42E600);
MakeUnkn(0x42E610, 1);
MakeNameEx(0x42E610, "TControlActionLink.IsCaptionLinked", 0x20);
MakeComm(0x42E610, "'function TControlActionLink.IsCaptionLinked:Boolean;'");
MakeCode(0x42E610);
MakeCode(0x42E659);
MakeCode(0x42E65D);
MakeCode(0x42E65F);
MakeCode(0x42E661);
MakeCode(0x42E66E);
MakeCode(0x42E677);
MakeCode(0x42E67C);
MakeFunction(0x42E610, 0x42E684);
MakeUnkn(0x42E684, 1);
MakeNameEx(0x42E684, "TControlActionLink.IsEnabledLinked", 0x20);
MakeComm(0x42E684, "'function TControlActionLink.IsEnabledLinked:Boolean;'");
MakeCode(0x42E684);
MakeCode(0x42E6AF);
MakeCode(0x42E6B3);
MakeFunction(0x42E684, 0x42E6B7);
MakeUnkn(0x42E6B8, 1);
MakeNameEx(0x42E6B8, "TControlActionLink.IsHintLinked", 0x20);
MakeComm(0x42E6B8, "'function TControlActionLink.IsHintLinked:Boolean;'");
MakeCode(0x42E6B8);
MakeCode(0x42E6E7);
MakeCode(0x42E6EB);
MakeFunction(0x42E6B8, 0x42E6EF);
MakeUnkn(0x42E6F0, 1);
MakeNameEx(0x42E6F0, "TControlActionLink.IsVisibleLinked", 0x20);
MakeComm(0x42E6F0, "'function TControlActionLink.IsVisibleLinked:Boolean;'");
MakeCode(0x42E6F0);
MakeCode(0x42E71A);
MakeCode(0x42E71E);
MakeFunction(0x42E6F0, 0x42E722);
MakeUnkn(0x42E724, 1);
MakeNameEx(0x42E724, "TControlActionLink.IsOnExecuteLinked", 0x20);
MakeComm(0x42E724, "'function TControlActionLink.IsOnExecuteLinked:Boolean;'");
MakeCode(0x42E724);
MakeCode(0x42E743);
MakeCode(0x42E747);
MakeFunction(0x42E724, 0x42E74B);
MakeUnkn(0x42E74C, 1);
MakeNameEx(0x42E74C, "TControlActionLink.SetCaption", 0x20);
MakeComm(0x42E74C, "'procedure TControlActionLink.SetCaption(const Value:AnsiString);'");
MakeCode(0x42E74C);
MakeCode(0x42E767);
MakeFunction(0x42E74C, 0x42E76A);
MakeUnkn(0x42E76C, 1);
MakeNameEx(0x42E76C, "TControlActionLink.SetEnabled", 0x20);
MakeComm(0x42E76C, "'procedure TControlActionLink.SetEnabled(Value:Boolean);'");
MakeCode(0x42E76C);
MakeCode(0x42E787);
MakeFunction(0x42E76C, 0x42E78A);
MakeUnkn(0x42E78C, 1);
MakeNameEx(0x42E78C, "TControlActionLink.SetHint", 0x20);
MakeComm(0x42E78C, "'procedure TControlActionLink.SetHint(const Value:AnsiString);'");
MakeCode(0x42E78C);
MakeCode(0x42E7AC);
MakeFunction(0x42E78C, 0x42E7AF);
MakeUnkn(0x42E7B0, 1);
MakeNameEx(0x42E7B0, "TControlActionLink.SetVisible", 0x20);
MakeComm(0x42E7B0, "'procedure TControlActionLink.SetVisible(Value:Boolean);'");
MakeCode(0x42E7B0);
MakeCode(0x42E7CB);
MakeFunction(0x42E7B0, 0x42E7CE);
MakeUnkn(0x42E7D0, 1);
MakeNameEx(0x42E7D0, "TControlActionLink.SetOnExecute", 0x20);
MakeComm(0x42E7D0, "'procedure TControlActionLink.SetOnExecute(Value:TNotifyEvent);'");
MakeCode(0x42E7D0);
MakeCode(0x42E7F6);
MakeFunction(0x42E7D0, 0x42E7FB);
MakeUnkn(0x42E7FC, 1);
MakeNameEx(0x42E7FC, "TControlActionLink.IsHelpLinked", 0x20);
MakeComm(0x42E7FC, "'function TControlActionLink.IsHelpLinked:Boolean;'");
MakeCode(0x42E7FC);
MakeCode(0x42E856);
MakeCode(0x42E85A);
MakeCode(0x42E85C);
MakeFunction(0x42E7FC, 0x42E860);
MakeUnkn(0x42E860, 1);
MakeNameEx(0x42E860, "TControlActionLink.SetHelpContext", 0x20);
MakeComm(0x42E860, "'procedure TControlActionLink.SetHelpContext(Value:THelpContext);'");
MakeCode(0x42E860);
MakeCode(0x42E87B);
MakeFunction(0x42E860, 0x42E87E);
MakeCode(0x42E880);
MakeComm(0x42E88A, "'TControlActionLink.IsHelpLinked'");
MakeComm(0x42E893, "'TControlActionLink...FClient:TControl'");
MakeCode(0x42E89B);
MakeFunction(0x42E880, 0x42E89E);
MakeUnkn(0x42E8A0, 1);
MakeNameEx(0x42E8A0, "TControlActionLink.SetHelpType", 0x20);
MakeComm(0x42E8A0, "'procedure TControlActionLink.SetHelpType(Value:THelpType);'");
MakeCode(0x42E8A0);
MakeCode(0x42E8BA);
MakeFunction(0x42E8A0, 0x42E8BD);
MakeUnkn(0x42E8C0, 1);
MakeNameEx(0x42E8C0, "TControl.Create", 0x20);
MakeComm(0x42E8C0, "'constructor TControl.Create(AOwner:TComponent);'");
MakeCode(0x42E8C0);
MakeCode(0x42E8D2);
MakeCode(0x42E988);
MakeFunction(0x42E8C0, 0x42E98F);
MakeUnkn(0x42E998, 1);
MakeNameEx(0x42E998, "TControl.Destroy", 0x20);
MakeComm(0x42E998, "'destructor TControl.Destroy;'");
MakeCode(0x42E998);
MakeCode(0x42E9FE);
MakeCode(0x42EA07);
MakeCode(0x42EA43);
MakeFunction(0x42E998, 0x42EA4A);
MakeCode(0x42EA4C);
MakeFunction(0x42EA4C, 0x42EA4F);
MakeUnkn(0x42EA50, 1);
MakeNameEx(0x42EA50, "TLabel.GetEnabled", 0x20);
MakeComm(0x42EA50, "'function TLabel.GetEnabled:Boolean;'");
MakeCode(0x42EA50);
MakeComm(0x42EA50, "'TLabel.FEnabled:Boolean'");
MakeFunction(0x42EA50, 0x42EA54);
MakeUnkn(0x42EA54, 1);
MakeNameEx(0x42EA54, "TControl.sub_0042EA54", 0x20);
MakeComm(0x42EA54, "'procedure TControl.sub_0042EA54;'");
MakeCode(0x42EA54);
MakeFunction(0x42EA54, 0x42EA57);
MakeUnkn(0x42EA58, 1);
MakeNameEx(0x42EA58, "TControl.HasParent", 0x20);
MakeComm(0x42EA58, "'procedure TControl.HasParent;'");
MakeCode(0x42EA58);
MakeFunction(0x42EA58, 0x42EA60);
MakeUnkn(0x42EA60, 1);
MakeNameEx(0x42EA60, "TControl.GetParentComponent", 0x20);
MakeComm(0x42EA60, "'procedure TControl.GetParentComponent;'");
MakeCode(0x42EA60);
MakeComm(0x42EA60, "'TControl.FParent:TWinControl'");
MakeFunction(0x42EA60, 0x42EA64);
MakeUnkn(0x42EA64, 1);
MakeNameEx(0x42EA64, "TControl.SetParentComponent", 0x20);
MakeComm(0x42EA64, "'procedure TControl.SetParentComponent(Value:TComponent);'");
MakeCode(0x42EA64);
MakeCode(0x42EA89);
MakeFunction(0x42EA64, 0x42EA8C);
MakeUnkn(0x42EA8C, 1);
MakeNameEx(0x42EA8C, "TControl.PaletteChanged", 0x20);
MakeComm(0x42EA8C, "'procedure TControl.PaletteChanged(Foreground:Boolean);'");
MakeCode(0x42EA8C);
MakeCode(0x42EAE2);
MakeCode(0x42EAF8);
MakeFunction(0x42EA8C, 0x42EB01);
MakeUnkn(0x42EB04, 1);
MakeNameEx(0x42EB04, "TControl.GetAction", 0x20);
MakeComm(0x42EB04, "'function TControl.GetAction:TBasicAction;'");
MakeCode(0x42EB04);
MakeCode(0x42EB0F);
MakeFunction(0x42EB04, 0x42EB12);
MakeUnkn(0x42EB14, 1);
MakeNameEx(0x42EB14, "TControl.SetAnchors", 0x20);
MakeComm(0x42EB14, "'procedure TControl.SetAnchors(Value:TAnchors);'");
MakeCode(0x42EB14);
MakeCode(0x42EB30);
MakeFunction(0x42EB14, 0x42EB33);
MakeUnkn(0x42EB34, 1);
MakeNameEx(0x42EB34, "TControl.SetAction", 0x20);
MakeComm(0x42EB34, "'procedure TControl.SetAction(Value:TBasicAction);'");
MakeCode(0x42EB34);
MakeCode(0x42EB55);
MakeCode(0x42EB77);
MakeCode(0x42EBAB);
MakeFunction(0x42EB34, 0x42EBAF);
MakeUnkn(0x42EBB0, 1);
MakeNameEx(0x42EBB0, "TControl.IsAnchorsStored", 0x20);
MakeComm(0x42EBB0, "'function TControl.IsAnchorsStored(Value:TAnchors):Boolean;'");
MakeCode(0x42EBB0);
MakeFunction(0x42EBB0, 0x42EBC6);
MakeUnkn(0x42EBC8, 1);
MakeNameEx(0x42EBC8, "TLabel.SetDragMode", 0x20);
MakeComm(0x42EBC8, "'procedure TLabel.SetDragMode(Value:TDragMode);'");
MakeCode(0x42EBC8);
MakeComm(0x42EBC8, "'TLabel.FDragMode:TDragMode'");
MakeFunction(0x42EBC8, 0x42EBCC);
MakeUnkn(0x42EBCC, 1);
MakeNameEx(0x42EBCC, "TControl.RequestAlign", 0x20);
MakeComm(0x42EBCC, "'procedure TControl.RequestAlign;'");
MakeCode(0x42EBCC);
MakeFunction(0x42EBCC, 0x42EBDA);
MakeUnkn(0x42EBDC, 1);
MakeNameEx(0x42EBDC, "TControl.Resize", 0x20);
MakeComm(0x42EBDC, "'procedure TControl.Resize;'");
MakeCode(0x42EBDC);
MakeCode(0x42EBF7);
MakeFunction(0x42EBDC, 0x42EBF9);
MakeUnkn(0x42EBFC, 1);
MakeNameEx(0x42EBFC, "TControl.ReadState", 0x20);
MakeComm(0x42EBFC, "'procedure TControl.ReadState(Reader:TReader);'");
MakeCode(0x42EBFC);
MakeCode(0x42EC25);
MakeCode(0x42EC89);
MakeFunction(0x42EBFC, 0x42EC8D);
MakeUnkn(0x42EC90, 1);
MakeNameEx(0x42EC90, "TControl.Notification", 0x20);
MakeComm(0x42EC90, "'procedure TControl.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x42EC90);
MakeCode(0x42ECB9);
MakeCode(0x42ECCD);
MakeFunction(0x42EC90, 0x42ECD1);
MakeUnkn(0x42ECD4, 1);
MakeNameEx(0x42ECD4, "TControl.SetAlign", 0x20);
MakeComm(0x42ECD4, "'procedure TControl.SetAlign(Value:TAlign);'");
MakeCode(0x42ECD4);
MakeCode(0x42ED10);
MakeCode(0x42ED61);
MakeCode(0x42ED6C);
MakeFunction(0x42ECD4, 0x42ED7C);
MakeUnkn(0x42ED7C, 1);
MakeNameEx(0x42ED7C, "TControl.SetBounds", 0x20);
MakeComm(0x42ED7C, "'procedure TControl.SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer);'");
MakeCode(0x42ED7C);
MakeCode(0x42EDB3);
MakeCode(0x42EE0B);
MakeFunction(0x42ED7C, 0x42EE12);
MakeUnkn(0x42EE14, 1);
MakeNameEx(0x42EE14, "TControl.UpdateAnchorRules", 0x20);
MakeComm(0x42EE14, "'procedure TControl.UpdateAnchorRules;'");
MakeCode(0x42EE14);
MakeCode(0x42EE50);
MakeCode(0x42EE65);
MakeCode(0x42EE70);
MakeCode(0x42EE7A);
MakeCode(0x42EE83);
MakeCode(0x42EE98);
MakeCode(0x42EEA3);
MakeCode(0x42EEAD);
MakeCode(0x42EEB6);
MakeCode(0x42EEE3);
MakeCode(0x42EF0E);
MakeCode(0x42EF26);
MakeFunction(0x42EE14, 0x42EF2C);
MakeUnkn(0x42EF30, 1);
MakeNameEx(0x42EF30, "TControl.SetLeft", 0x20);
MakeComm(0x42EF30, "'procedure TControl.SetLeft(Value:Integer);'");
MakeCode(0x42EF30);
MakeFunction(0x42EF30, 0x42EF53);
MakeUnkn(0x42EF54, 1);
MakeNameEx(0x42EF54, "TControl.SetTop", 0x20);
MakeComm(0x42EF54, "'procedure TControl.SetTop(Value:Integer);'");
MakeCode(0x42EF54);
MakeFunction(0x42EF54, 0x42EF79);
MakeUnkn(0x42EF7C, 1);
MakeNameEx(0x42EF7C, "TControl.SetWidth", 0x20);
MakeComm(0x42EF7C, "'procedure TControl.SetWidth(Value:Integer);'");
MakeCode(0x42EF7C);
MakeFunction(0x42EF7C, 0x42EF9F);
MakeUnkn(0x42EFA0, 1);
MakeNameEx(0x42EFA0, "TControl.SetHeight", 0x20);
MakeComm(0x42EFA0, "'procedure TControl.SetHeight(Value:Integer);'");
MakeCode(0x42EFA0);
MakeFunction(0x42EFA0, 0x42EFC3);
MakeUnkn(0x42EFC4, 1);
MakeNameEx(0x42EFC4, "TControl.Dock", 0x20);
MakeComm(0x42EFC4, "'procedure TControl.Dock(NewDockSite:TWinControl; ARect:TRect);'");
MakeCode(0x42EFC4);
MakeCode(0x42F00A);
MakeCode(0x42F02A);
MakeCode(0x42F057);
MakeCode(0x42F08B);
MakeCode(0x42F096);
MakeCode(0x42F0A8);
MakeCode(0x42F0B5);
MakeCode(0x42F0BF);
MakeCode(0x42F0C4);
MakeFunction(0x42EFC4, 0x42F0CD);
MakeUnkn(0x42F0D0, 1);
MakeNameEx(0x42F0D0, "TControl.DoDock", 0x20);
MakeComm(0x42F0D0, "'procedure TControl.DoDock(NewDockSite:TWinControl; var ARect:TRect);'");
MakeCode(0x42F0D0);
MakeCode(0x42F0F6);
MakeCode(0x42F106);
MakeCode(0x42F10F);
MakeCode(0x42F118);
MakeCode(0x42F121);
MakeFunction(0x42F0D0, 0x42F125);
MakeUnkn(0x42F128, 1);
MakeNameEx(0x42F128, "TControl.SetHelpContext", 0x20);
MakeComm(0x42F128, "'procedure TControl.SetHelpContext(const Value:THelpContext);'");
MakeCode(0x42F128);
MakeCode(0x42F135);
MakeFunction(0x42F128, 0x42F13C);
MakeUnkn(0x42F13C, 1);
MakeNameEx(0x42F13C, "TControl.SetHelpKeyword", 0x20);
MakeComm(0x42F13C, "'procedure TControl.SetHelpKeyword(const Value:AnsiString);'");
MakeCode(0x42F13C);
MakeCode(0x42F14F);
MakeFunction(0x42F13C, 0x42F15F);
MakeUnkn(0x42F160, 1);
MakeNameEx(0x42F160, "TControl.GetBoundsRect", 0x20);
MakeComm(0x42F160, "'function TControl.GetBoundsRect:TRect;'");
MakeCode(0x42F160);
MakeFunction(0x42F160, 0x42F17E);
MakeUnkn(0x42F180, 1);
MakeNameEx(0x42F180, "TControl.SetBoundsRect", 0x20);
MakeComm(0x42F180, "'procedure TControl.SetBoundsRect(const Rect:TRect);'");
MakeCode(0x42F180);
MakeFunction(0x42F180, 0x42F1AA);
MakeUnkn(0x42F1AC, 1);
MakeNameEx(0x42F1AC, "TControl.GetClientRect", 0x20);
MakeComm(0x42F1AC, "'function TControl.GetClientRect:TRect;'");
MakeCode(0x42F1AC);
MakeFunction(0x42F1AC, 0x42F1C2);
MakeUnkn(0x42F1C4, 1);
MakeNameEx(0x42F1C4, "TControl.GetClientWidth", 0x20);
MakeComm(0x42F1C4, "'function TControl.GetClientWidth:Integer;'");
MakeCode(0x42F1C4);
MakeFunction(0x42F1C4, 0x42F1DC);
MakeUnkn(0x42F1DC, 1);
MakeNameEx(0x42F1DC, "TControl.SetClientWidth", 0x20);
MakeComm(0x42F1DC, "'procedure TControl.SetClientWidth(Value:Integer);'");
MakeCode(0x42F1DC);
MakeFunction(0x42F1DC, 0x42F205);
MakeUnkn(0x42F208, 1);
MakeNameEx(0x42F208, "TControl.GetClientHeight", 0x20);
MakeComm(0x42F208, "'function TControl.GetClientHeight:Integer;'");
MakeCode(0x42F208);
MakeFunction(0x42F208, 0x42F220);
MakeUnkn(0x42F220, 1);
MakeNameEx(0x42F220, "TControl.SetClientHeight", 0x20);
MakeComm(0x42F220, "'procedure TControl.SetClientHeight(Value:Integer);'");
MakeCode(0x42F220);
MakeFunction(0x42F220, 0x42F247);
MakeCode(0x42F248);
MakeComm(0x42F267, "'TControl.FParent:TWinControl'");
MakeComm(0x42F26D, "'TControl.Name:TComponentName'");
MakeComm(0x42F294, "'EInvalidOperation.Create'");
MakeCode(0x42F29E);
MakeComm(0x42F2A0, "'TControl.FParent:TWinControl'");
MakeComm(0x42F2A5, "'TWinControl.GetClientOrigin'");
MakeComm(0x42F2A8, "'TControl.Left:Integer'");
MakeComm(0x42F2AD, "'TControl.Top:Integer'");
MakeCode(0x42F2B3);
MakeCode(0x42F2C0);
MakeCode(0x42F2C9);
MakeCode(0x42F2CE);
MakeFunction(0x42F248, 0x42F2D6);
MakeUnkn(0x42F2D8, 1);
MakeNameEx(0x42F2D8, "TControl.ClientToScreen", 0x20);
MakeComm(0x42F2D8, "'function TControl.ClientToScreen(const Point:TPoint):TPoint;'");
MakeCode(0x42F2D8);
MakeFunction(0x42F2D8, 0x42F304);
MakeUnkn(0x42F304, 1);
MakeNameEx(0x42F304, "TControl.ScreenToClient", 0x20);
MakeComm(0x42F304, "'function TControl.ScreenToClient(const Point:TPoint):TPoint;'");
MakeCode(0x42F304);
MakeFunction(0x42F304, 0x42F330);
MakeUnkn(0x42F330, 1);
MakeNameEx(0x42F330, "TControl.SendCancelMode", 0x20);
MakeComm(0x42F330, "'procedure TControl.SendCancelMode(Sender:TControl);'");
MakeCode(0x42F330);
MakeCode(0x42F33A);
MakeCode(0x42F354);
MakeCode(0x42F35B);
MakeFunction(0x42F330, 0x42F35E);
MakeUnkn(0x42F360, 1);
MakeNameEx(0x42F360, "TControl.SendDockNotification", 0x20);
MakeComm(0x42F360, "'procedure TControl.SendDockNotification(Msg:Cardinal; WParam:Integer; LParam:Integer);'");
MakeCode(0x42F360);
MakeCode(0x42F3BA);
MakeFunction(0x42F360, 0x42F3C3);
MakeUnkn(0x42F3CC, 1);
MakeNameEx(0x42F3CC, "TControl.Changed", 0x20);
MakeComm(0x42F3CC, "'procedure TControl.Changed;'");
MakeCode(0x42F3CC);
MakeFunction(0x42F3CC, 0x42F3DA);
MakeUnkn(0x42F3DC, 1);
MakeNameEx(0x42F3DC, "TControl.ChangeScale", 0x20);
MakeComm(0x42F3DC, "'procedure TControl.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x42F3DC);
MakeCode(0x42F401);
MakeCode(0x42F407);
MakeCode(0x42F41E);
MakeCode(0x42F421);
MakeCode(0x42F43A);
MakeCode(0x42F441);
MakeCode(0x42F46A);
MakeCode(0x42F47E);
MakeCode(0x42F485);
MakeCode(0x42F4BA);
MakeCode(0x42F4CE);
MakeCode(0x42F4D5);
MakeCode(0x42F518);
MakeCode(0x42F541);
MakeCode(0x42F56A);
MakeFunction(0x42F3DC, 0x42F57D);
MakeUnkn(0x42F590, 1);
MakeNameEx(0x42F590, "TControl.SetAutoSize", 0x20);
MakeComm(0x42F590, "'procedure TControl.SetAutoSize(Value:Boolean);'");
MakeCode(0x42F590);
MakeCode(0x42F5A6);
MakeFunction(0x42F590, 0x42F5A8);
MakeUnkn(0x42F5A8, 1);
MakeNameEx(0x42F5A8, "TControl.SetName", 0x20);
MakeComm(0x42F5A8, "'procedure TControl.SetName(const Value:TComponentName);'");
MakeCode(0x42F5A8);
MakeCode(0x42F60A);
MakeCode(0x42F60E);
MakeCode(0x42F610);
MakeCode(0x42F628);
MakeCode(0x42F635);
MakeCode(0x42F63E);
MakeCode(0x42F643);
MakeFunction(0x42F5A8, 0x42F64C);
MakeUnkn(0x42F64C, 1);
MakeNameEx(0x42F64C, "TControl.SetClientSize", 0x20);
MakeComm(0x42F64C, "'procedure TControl.SetClientSize(Value:TPoint);'");
MakeCode(0x42F64C);
MakeFunction(0x42F64C, 0x42F694);
MakeUnkn(0x42F694, 1);
MakeNameEx(0x42F694, "TControl.SetParent", 0x20);
MakeComm(0x42F694, "'procedure TControl.SetParent(AParent:TWinControl);'");
MakeCode(0x42F694);
MakeCode(0x42F6BA);
MakeCode(0x42F6C8);
MakeCode(0x42F6DC);
MakeFunction(0x42F694, 0x42F6DF);
MakeUnkn(0x42F6E0, 1);
MakeNameEx(0x42F6E0, "TControl.SetVisible", 0x20);
MakeComm(0x42F6E0, "'procedure TControl.SetVisible(Value:Boolean);'");
MakeCode(0x42F6E0);
MakeCode(0x42F717);
MakeFunction(0x42F6E0, 0x42F71B);
MakeUnkn(0x42F71C, 1);
MakeNameEx(0x42F71C, "TControl.SetEnabled", 0x20);
MakeComm(0x42F71C, "'procedure TControl.SetEnabled(Value:Boolean);'");
MakeCode(0x42F71C);
MakeFunction(0x42F71C, 0x42F733);
MakeUnkn(0x42F734, 1);
MakeNameEx(0x42F734, "TControl.GetTextLen", 0x20);
MakeComm(0x42F734, "'function TControl.GetTextLen:Integer;'");
MakeCode(0x42F734);
MakeFunction(0x42F734, 0x42F743);
MakeUnkn(0x42F744, 1);
MakeNameEx(0x42F744, "TControl.GetTextBuf", 0x20);
MakeComm(0x42F744, "'function TControl.GetTextBuf(Buffer:PChar; BufSize:Integer):Integer;'");
MakeCode(0x42F744);
MakeFunction(0x42F744, 0x42F750);
MakeUnkn(0x42F750, 1);
MakeNameEx(0x42F750, "TControl.GetUndockHeight", 0x20);
MakeComm(0x42F750, "'function TControl.GetUndockHeight:Integer;'");
MakeCode(0x42F750);
MakeCode(0x42F75D);
MakeFunction(0x42F750, 0x42F761);
MakeUnkn(0x42F764, 1);
MakeNameEx(0x42F764, "TControl.GetUndockWidth", 0x20);
MakeComm(0x42F764, "'function TControl.GetUndockWidth:Integer;'");
MakeCode(0x42F764);
MakeCode(0x42F771);
MakeFunction(0x42F764, 0x42F775);
MakeUnkn(0x42F778, 1);
MakeNameEx(0x42F778, "TControl.SetPopupMenu", 0x20);
MakeComm(0x42F778, "'procedure TControl.SetPopupMenu(Value:TPopupMenu);'");
MakeCode(0x42F778);
MakeCode(0x42F797);
MakeFunction(0x42F778, 0x42F79A);
MakeUnkn(0x42F79C, 1);
MakeNameEx(0x42F79C, "TControl.SetTextBuf", 0x20);
MakeComm(0x42F79C, "'procedure TControl.SetTextBuf(Buffer:PChar);'");
MakeCode(0x42F79C);
MakeFunction(0x42F79C, 0x42F7C0);
MakeUnkn(0x42F7C0, 1);
MakeNameEx(0x42F7C0, "TControl.GetText", 0x20);
MakeComm(0x42F7C0, "'function TControl.GetText:TCaption;'");
MakeCode(0x42F7C0);
MakeCode(0x42F7EB);
MakeFunction(0x42F7C0, 0x42F7EF);
MakeUnkn(0x42F7F0, 1);
MakeNameEx(0x42F7F0, "TControl.SetText", 0x20);
MakeComm(0x42F7F0, "'procedure TControl.SetText(const Value:TCaption);'");
MakeCode(0x42F7F0);
MakeCode(0x42F82F);
MakeCode(0x42F83C);
MakeCode(0x42F845);
MakeCode(0x42F84A);
MakeFunction(0x42F7F0, 0x42F851);
MakeUnkn(0x42F854, 1);
MakeNameEx(0x42F854, "TControl.SetBiDiMode", 0x20);
MakeComm(0x42F854, "'procedure TControl.SetBiDiMode(Value:TBiDiMode);'");
MakeCode(0x42F854);
MakeFunction(0x42F854, 0x42F86F);
MakeUnkn(0x42F870, 1);
MakeNameEx(0x42F870, "TControl.FontChanged", 0x20);
MakeComm(0x42F870, "'procedure TControl.FontChanged(Sender:TObject);'");
MakeCode(0x42F870);
MakeCode(0x42F8A0);
MakeFunction(0x42F870, 0x42F8B2);
MakeUnkn(0x42F8B4, 1);
MakeNameEx(0x42F8B4, "TControl.SetFont", 0x20);
MakeComm(0x42F8B4, "'procedure TControl.SetFont(Value:TFont);'");
MakeCode(0x42F8B4);
MakeFunction(0x42F8B4, 0x42F8C1);
MakeUnkn(0x42F8C4, 1);
MakeNameEx(0x42F8C4, "TControl.IsFontStored", 0x20);
MakeComm(0x42F8C4, "'function TControl.IsFontStored(Value:TFont):Boolean;'");
MakeCode(0x42F8C4);
MakeCode(0x42F8D0);
MakeCode(0x42F8D3);
MakeFunction(0x42F8C4, 0x42F8D6);
MakeUnkn(0x42F8D8, 1);
MakeNameEx(0x42F8D8, "TControl.IsShowHintStored", 0x20);
MakeComm(0x42F8D8, "'function TControl.IsShowHintStored(Value:Boolean):Boolean;'");
MakeCode(0x42F8D8);
MakeFunction(0x42F8D8, 0x42F8E1);
MakeUnkn(0x42F8E4, 1);
MakeNameEx(0x42F8E4, "TLabel.IsStoredBiDiMode", 0x20);
MakeComm(0x42F8E4, "'procedure TLabel.IsStoredBiDiMode(Value:TBiDiMode);'");
MakeCode(0x42F8E4);
MakeComm(0x42F8E4, "'TLabel.FParentBiDiMode:Boolean'");
MakeFunction(0x42F8E4, 0x42F8EA);
MakeUnkn(0x42F8EC, 1);
MakeNameEx(0x42F8EC, "TControl.SetParentFont", 0x20);
MakeComm(0x42F8EC, "'procedure TControl.SetParentFont(Value:Boolean);'");
MakeCode(0x42F8EC);
MakeFunction(0x42F8EC, 0x42F90F);
MakeUnkn(0x42F910, 1);
MakeNameEx(0x42F910, "TControl.SetShowHint", 0x20);
MakeComm(0x42F910, "'procedure TControl.SetShowHint(Value:Boolean);'");
MakeCode(0x42F910);
MakeFunction(0x42F910, 0x42F934);
MakeUnkn(0x42F934, 1);
MakeNameEx(0x42F934, "TControl.SetParentShowHint", 0x20);
MakeComm(0x42F934, "'procedure TControl.SetParentShowHint(Value:Boolean);'");
MakeCode(0x42F934);
MakeFunction(0x42F934, 0x42F95D);
MakeUnkn(0x42F960, 1);
MakeNameEx(0x42F960, "TControl.SetColor", 0x20);
MakeComm(0x42F960, "'procedure TControl.SetColor(Value:TColor);'");
MakeCode(0x42F960);
MakeFunction(0x42F960, 0x42F97B);
MakeUnkn(0x42F97C, 1);
MakeNameEx(0x42F97C, "TLabel.IsStoredColor", 0x20);
MakeComm(0x42F97C, "'procedure TLabel.IsStoredColor(Value:TColor);'");
MakeCode(0x42F97C);
MakeComm(0x42F97C, "'TLabel.FParentColor:Boolean'");
MakeFunction(0x42F97C, 0x42F982);
MakeUnkn(0x42F984, 1);
MakeNameEx(0x42F984, "TControl.SetParentColor", 0x20);
MakeComm(0x42F984, "'procedure TControl.SetParentColor(Value:Boolean);'");
MakeCode(0x42F984);
MakeFunction(0x42F984, 0x42F9A7);
MakeUnkn(0x42F9A8, 1);
MakeNameEx(0x42F9A8, "TControl.SetParentBiDiMode", 0x20);
MakeComm(0x42F9A8, "'procedure TControl.SetParentBiDiMode(Value:Boolean);'");
MakeCode(0x42F9A8);
MakeFunction(0x42F9A8, 0x42F9CB);
MakeUnkn(0x42F9CC, 1);
MakeNameEx(0x42F9CC, "TControl.SetCursor", 0x20);
MakeComm(0x42F9CC, "'procedure TControl.SetCursor(Value:TCursor);'");
MakeCode(0x42F9CC);
MakeFunction(0x42F9CC, 0x42F9E5);
MakeUnkn(0x42F9E8, 1);
MakeNameEx(0x42F9E8, "TControl.GetMouseCapture", 0x20);
MakeComm(0x42F9E8, "'function TControl.GetMouseCapture:Boolean;'");
MakeCode(0x42F9E8);
MakeFunction(0x42F9E8, 0x42F9F7);
MakeUnkn(0x42F9F8, 1);
MakeNameEx(0x42F9F8, "TControl.SetMouseCapture", 0x20);
MakeComm(0x42F9F8, "'procedure TControl.SetMouseCapture(Value:Boolean);'");
MakeCode(0x42F9F8);
MakeCode(0x42FA16);
MakeCode(0x42FA1D);
MakeFunction(0x42F9F8, 0x42FA20);
MakeUnkn(0x42FA20, 1);
MakeNameEx(0x42FA20, "TControl.BringToFront", 0x20);
MakeComm(0x42FA20, "'procedure TControl.BringToFront;'");
MakeCode(0x42FA20);
MakeFunction(0x42FA20, 0x42FA2E);
MakeUnkn(0x42FA30, 1);
MakeNameEx(0x42FA30, "TControl.SetZOrderPosition", 0x20);
MakeComm(0x42FA30, "'procedure TControl.SetZOrderPosition(Position:Integer);'");
MakeCode(0x42FA30);
MakeCode(0x42FA61);
MakeCode(0x42FA68);
MakeCode(0x42FAAA);
MakeFunction(0x42FA30, 0x42FAAE);
MakeUnkn(0x42FAB0, 1);
MakeNameEx(0x42FAB0, "TControl.SetZOrder", 0x20);
MakeComm(0x42FAB0, "'procedure TControl.SetZOrder(TopMost:Boolean);'");
MakeCode(0x42FAB0);
MakeCode(0x42FACC);
MakeFunction(0x42FAB0, 0x42FAD4);
MakeCode(0x42FAD4);
MakeComm(0x42FAF1, "'TControl.FParent:TWinControl'");
MakeComm(0x42FAF7, "'TControl.Name:TComponentName'");
MakeComm(0x42FB1E, "'EInvalidOperation.Create'");
MakeComm(0x42FB28, "'TControl.FParent:TWinControl'");
MakeCode(0x42FB28);
MakeComm(0x42FB2D, "'TWinControl.GetDeviceContext'");
MakeComm(0x42FB34, "'TControl.Top:Integer'");
MakeComm(0x42FB38, "'TControl.Left:Integer'");
MakeComm(0x42FB42, "'TControl.Height:Integer'");
MakeComm(0x42FB46, "'TControl.Width:Integer'");
MakeCode(0x42FB54);
MakeCode(0x42FB61);
MakeCode(0x42FB6A);
MakeCode(0x42FB6F);
MakeFunction(0x42FAD4, 0x42FB79);
MakeUnkn(0x42FB7C, 1);
MakeNameEx(0x42FB7C, "BackgroundClipped", 0x20);
MakeComm(0x42FB7C, "'function BackgroundClipped:Boolean;'");
MakeCode(0x42FB7C);
MakeCode(0x42FBAB);
MakeCode(0x42FBF5);
MakeCode(0x42FBF9);
MakeCode(0x42FBFD);
MakeFunction(0x42FB7C, 0x42FC07);
MakeUnkn(0x42FC08, 1);
MakeNameEx(0x42FC08, "TControl.InvalidateControl", 0x20);
MakeComm(0x42FC08, "'procedure TControl.InvalidateControl(IsVisible:Boolean; IsOpaque:Boolean);'");
MakeCode(0x42FC08);
MakeCode(0x42FC2D);
MakeCode(0x42FC6D);
MakeCode(0x42FC71);
MakeCode(0x42FC73);
MakeCode(0x42FC8D);
MakeFunction(0x42FC08, 0x42FC92);
MakeUnkn(0x42FC94, 1);
MakeNameEx(0x42FC94, "TControl.Invalidate", 0x20);
MakeComm(0x42FC94, "'procedure TControl.Invalidate;'");
MakeCode(0x42FC94);
MakeFunction(0x42FC94, 0x42FCA4);
MakeUnkn(0x42FCA4, 1);
MakeNameEx(0x42FCA4, "TControl.MouseWheelHandler", 0x20);
MakeComm(0x42FCA4, "'procedure TControl.MouseWheelHandler(var Message:TMessage);'");
MakeCode(0x42FCA4);
MakeCode(0x42FCCB);
MakeCode(0x42FCE1);
MakeFunction(0x42FCA4, 0x42FCE5);
MakeUnkn(0x42FCE8, 1);
MakeNameEx(0x42FCE8, "TControl.Update", 0x20);
MakeComm(0x42FCE8, "'procedure TControl.Update;'");
MakeCode(0x42FCE8);
MakeCode(0x42FCFA);
MakeFunction(0x42FCE8, 0x42FCFC);
MakeUnkn(0x42FCFC, 1);
MakeNameEx(0x42FCFC, "TControl.Repaint", 0x20);
MakeComm(0x42FCFC, "'procedure TControl.Repaint;'");
MakeCode(0x42FCFC);
MakeCode(0x42FD29);
MakeCode(0x42FDB2);
MakeCode(0x42FDBF);
MakeCode(0x42FDD5);
MakeCode(0x42FDDA);
MakeCode(0x42FDDC);
MakeCode(0x42FDEF);
MakeFunction(0x42FCFC, 0x42FDF4);
MakeUnkn(0x42FDF4, 1);
MakeNameEx(0x42FDF4, "TControl.sub_0042FDF4", 0x20);
MakeComm(0x42FDF4, "'procedure TControl.sub_0042FDF4;'");
MakeCode(0x42FDF4);
MakeFunction(0x42FDF4, 0x42FDF7);
MakeUnkn(0x42FDF8, 1);
MakeNameEx(0x42FDF8, "TControl.UseRightToLeftReading", 0x20);
MakeComm(0x42FDF8, "'function TControl.UseRightToLeftReading:Boolean;'");
MakeCode(0x42FDF8);
MakeCode(0x42FE0A);
MakeCode(0x42FE0D);
MakeFunction(0x42FDF8, 0x42FE10);
MakeUnkn(0x42FE10, 1);
MakeNameEx(0x42FE10, "TControl.UseRightToLeftAlignment", 0x20);
MakeComm(0x42FE10, "'procedure TControl.UseRightToLeftAlignment;'");
MakeCode(0x42FE10);
MakeCode(0x42FE22);
MakeCode(0x42FE25);
MakeFunction(0x42FE10, 0x42FE28);
MakeUnkn(0x42FE28, 1);
MakeNameEx(0x42FE28, "TControl.UseRightToLeftScrollBar", 0x20);
MakeComm(0x42FE28, "'function TControl.UseRightToLeftScrollBar:Boolean;'");
MakeCode(0x42FE28);
MakeCode(0x42FE3C);
MakeCode(0x42FE3F);
MakeFunction(0x42FE28, 0x42FE42);
MakeUnkn(0x42FE44, 1);
MakeNameEx(0x42FE44, "TControl.BeginAutoDrag", 0x20);
MakeComm(0x42FE44, "'procedure TControl.BeginAutoDrag;'");
MakeCode(0x42FE44);
MakeFunction(0x42FE44, 0x42FE5C);
MakeUnkn(0x42FE5C, 1);
MakeNameEx(0x42FE5C, "TControl.BeginDrag", 0x20);
MakeComm(0x42FE5C, "'procedure TControl.BeginDrag(Immediate:Boolean; Threshold:Integer);'");
MakeCode(0x42FE5C);
MakeCode(0x42FE99);
MakeCode(0x42FEB2);
MakeCode(0x42FEF7);
MakeCode(0x42FF03);
MakeCode(0x42FF17);
MakeFunction(0x42FE5C, 0x42FF1E);
MakeUnkn(0x42FF20, 1);
MakeNameEx(0x42FF20, "TControl.sub_0042FF20", 0x20);
MakeComm(0x42FF20, "'procedure TControl.sub_0042FF20;'");
MakeCode(0x42FF20);
MakeFunction(0x42FF20, 0x42FF21);
MakeUnkn(0x42FF24, 1);
MakeNameEx(0x42FF24, "TControl.Dragging", 0x20);
MakeComm(0x42FF24, "'function TControl.Dragging:Boolean;'");
MakeCode(0x42FF24);
MakeFunction(0x42FF24, 0x42FF2E);
MakeUnkn(0x42FF30, 1);
MakeNameEx(0x42FF30, "TControl.DragOver", 0x20);
MakeComm(0x42FF30, "'procedure TControl.DragOver(Source:TObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean);'");
MakeCode(0x42FF30);
MakeCode(0x42FF64);
MakeFunction(0x42FF30, 0x42FF6A);
MakeUnkn(0x42FF6C, 1);
MakeNameEx(0x42FF6C, "TControl.DragDrop", 0x20);
MakeComm(0x42FF6C, "'procedure TControl.DragDrop(Source:TObject; X:Integer; Y:Integer);'");
MakeCode(0x42FF6C);
MakeCode(0x42FF91);
MakeFunction(0x42FF6C, 0x42FF96);
MakeUnkn(0x42FF98, 1);
MakeNameEx(0x42FF98, "TControl.DoStartDrag", 0x20);
MakeComm(0x42FF98, "'procedure TControl.DoStartDrag(var DragObject:TDragObject);'");
MakeCode(0x42FF98);
MakeCode(0x42FFB5);
MakeFunction(0x42FF98, 0x42FFB7);
MakeUnkn(0x42FFB8, 1);
MakeNameEx(0x42FFB8, "TControl.DoEndDrag", 0x20);
MakeComm(0x42FFB8, "'procedure TControl.DoEndDrag(Target:TObject; X:Integer; Y:Integer);'");
MakeCode(0x42FFB8);
MakeCode(0x42FFDD);
MakeFunction(0x42FFB8, 0x42FFE2);
MakeUnkn(0x42FFE4, 1);
MakeNameEx(0x42FFE4, "TControl.PositionDockRect", 0x20);
MakeComm(0x42FFE4, "'procedure TControl.PositionDockRect(DragDockObject:TDragDockObject);'");
MakeCode(0x42FFE4);
MakeCode(0x42FFFF);
MakeCode(0x43006C);
MakeCode(0x4300AC);
MakeFunction(0x42FFE4, 0x4300B4);
MakeUnkn(0x4300B4, 1);
MakeNameEx(0x4300B4, "TControl.DockTrackNoTarget", 0x20);
MakeComm(0x4300B4, "'procedure TControl.DockTrackNoTarget(Source:TDragDockObject; X:Integer; Y:Integer);'");
MakeCode(0x4300B4);
MakeFunction(0x4300B4, 0x4300C6);
MakeUnkn(0x4300C8, 1);
MakeNameEx(0x4300C8, "TControl.DoEndDock", 0x20);
MakeComm(0x4300C8, "'procedure TControl.DoEndDock(Target:TObject; X:Integer; Y:Integer);'");
MakeCode(0x4300C8);
MakeCode(0x4300ED);
MakeFunction(0x4300C8, 0x4300F2);
MakeUnkn(0x4300F4, 1);
MakeNameEx(0x4300F4, "TControl.DoStartDock", 0x20);
MakeComm(0x4300F4, "'procedure TControl.DoStartDock(var DragObject:TDragObject);'");
MakeCode(0x4300F4);
MakeCode(0x430111);
MakeFunction(0x4300F4, 0x430113);
MakeUnkn(0x430114, 1);
MakeNameEx(0x430114, "TControl.DoMouseWheel", 0x20);
MakeComm(0x430114, "'procedure TControl.DoMouseWheel(Shift:TShiftState; WheelDelta:Integer; MousePos:TPoint);'");
MakeCode(0x430114);
MakeCode(0x430154);
MakeCode(0x430162);
MakeCode(0x43018F);
MakeCode(0x4301A5);
MakeCode(0x4301B9);
MakeCode(0x4301CB);
MakeFunction(0x430114, 0x4301D7);
MakeUnkn(0x4301D8, 1);
MakeNameEx(0x4301D8, "TControl.DoMouseWheelDown", 0x20);
MakeComm(0x4301D8, "'procedure TControl.DoMouseWheelDown(Shift:TShiftState; MousePos:TPoint);'");
MakeCode(0x4301D8);
MakeCode(0x430216);
MakeFunction(0x4301D8, 0x430221);
MakeUnkn(0x430224, 1);
MakeNameEx(0x430224, "TControl.DoMouseWheelUp", 0x20);
MakeComm(0x430224, "'procedure TControl.DoMouseWheelUp(Shift:TShiftState; MousePos:TPoint);'");
MakeCode(0x430224);
MakeCode(0x430262);
MakeFunction(0x430224, 0x43026D);
MakeUnkn(0x430270, 1);
MakeNameEx(0x430270, "TControl.DefaultDockImage", 0x20);
MakeComm(0x430270, "'procedure TControl.DefaultDockImage(DragDockObject:TDragDockObject; Erase:Boolean);'");
MakeCode(0x430270);
MakeCode(0x43029B);
MakeCode(0x4302A7);
MakeCode(0x430370);
MakeCode(0x43037D);
MakeCode(0x43038B);
MakeCode(0x430390);
MakeFunction(0x430270, 0x430399);
MakeUnkn(0x43039C, 1);
MakeNameEx(0x43039C, "TControl.DrawDragDockImage", 0x20);
MakeComm(0x43039C, "'procedure TControl.DrawDragDockImage(DragDockObject:TDragDockObject);'");
MakeCode(0x43039C);
MakeFunction(0x43039C, 0x4303AE);
MakeUnkn(0x4303B0, 1);
MakeNameEx(0x4303B0, "TControl.EraseDragDockImage", 0x20);
MakeComm(0x4303B0, "'procedure TControl.EraseDragDockImage(DragDockObject:TDragDockObject);'");
MakeCode(0x4303B0);
MakeFunction(0x4303B0, 0x4303C2);
MakeUnkn(0x4303C4, 1);
MakeNameEx(0x4303C4, "TControl.DoDragMsg", 0x20);
MakeComm(0x4303C4, "'procedure TControl.DoDragMsg(var DragMsg:TCMDrag);'");
MakeCode(0x4303C4);
MakeCode(0x430402);
MakeCode(0x43041E);
MakeCode(0x430449);
MakeCode(0x43046A);
MakeCode(0x430475);
MakeCode(0x430492);
MakeCode(0x4304AA);
MakeFunction(0x4303C4, 0x4304B2);
MakeUnkn(0x4304B4, 1);
MakeNameEx(0x4304B4, "TControl.ManualDock", 0x20);
MakeComm(0x4304B4, "'function TControl.ManualDock(NewDockSite:TWinControl; DropControl:TControl; ControlSide:TAlign):Boolean;'");
MakeCode(0x4304B4);
MakeCode(0x4304D1);
MakeCode(0x430518);
MakeCode(0x430552);
MakeCode(0x43058E);
MakeCode(0x4305B9);
MakeCode(0x4305BB);
MakeCode(0x4305FA);
MakeCode(0x4305FC);
MakeCode(0x430618);
MakeCode(0x430669);
MakeCode(0x430676);
MakeCode(0x43067F);
MakeCode(0x430684);
MakeCode(0x430686);
MakeFunction(0x4304B4, 0x430692);
MakeUnkn(0x430694, 1);
MakeNameEx(0x430694, "TControl.ManualFloat", 0x20);
MakeComm(0x430694, "'function TControl.ManualFloat(ScreenPos:TRect):Boolean;'");
MakeCode(0x430694);
MakeCode(0x4306C6);
MakeCode(0x4306C8);
MakeCode(0x43070F);
MakeCode(0x43071E);
MakeFunction(0x430694, 0x430727);
MakeUnkn(0x430728, 1);
MakeNameEx(0x430728, "TControl.DoConstraintsChange", 0x20);
MakeComm(0x430728, "'procedure TControl.DoConstraintsChange(Sender:TObject);'");
MakeCode(0x430728);
MakeFunction(0x430728, 0x430734);
MakeCode(0x430734);
MakeFunction(0x430734, 0x430737);
MakeUnkn(0x430738, 1);
MakeNameEx(0x430738, "TControl.CanResize", 0x20);
MakeComm(0x430738, "'function TControl.CanResize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x430738);
MakeCode(0x430760);
MakeFunction(0x430738, 0x430766);
MakeUnkn(0x430768, 1);
MakeNameEx(0x430768, "TControl.DoCanAutoSize", 0x20);
MakeComm(0x430768, "'function TControl.DoCanAutoSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x430768);
MakeCode(0x4307AF);
MakeCode(0x4307B8);
MakeCode(0x4307C9);
MakeCode(0x4307CB);
MakeFunction(0x430768, 0x4307D1);
MakeUnkn(0x4307D4, 1);
MakeNameEx(0x4307D4, "TControl.DoCanResize", 0x20);
MakeComm(0x4307D4, "'function TControl.DoCanResize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x4307D4);
MakeCode(0x4307FD);
MakeFunction(0x4307D4, 0x430804);
MakeUnkn(0x430804, 1);
MakeNameEx(0x430804, "TControl.ConstrainedResize", 0x20);
MakeComm(0x430804, "'procedure TControl.ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);'");
MakeCode(0x430804);
MakeCode(0x43082D);
MakeFunction(0x430804, 0x430832);
MakeUnkn(0x430834, 1);
MakeNameEx(0x430834, "TControl.CalcCursorPos", 0x20);
MakeComm(0x430834, "'function TControl.CalcCursorPos:TPoint;'");
MakeCode(0x430834);
MakeFunction(0x430834, 0x43085F);
MakeUnkn(0x430860, 1);
MakeNameEx(0x430860, "TControl.DesignWndProc", 0x20);
MakeComm(0x430860, "'procedure TControl.DesignWndProc(var Message:TMessage);'");
MakeCode(0x430860);
MakeCode(0x430889);
MakeCode(0x43088D);
MakeFunction(0x430860, 0x430891);
MakeUnkn(0x430894, 1);
MakeNameEx(0x430894, "TControl.DoConstrainedResize", 0x20);
MakeComm(0x430894, "'procedure TControl.DoConstrainedResize(var NewWidth:Integer; var NewHeight:Integer);'");
MakeCode(0x430894);
MakeCode(0x4308AD);
MakeCode(0x4308B2);
MakeCode(0x4308C2);
MakeCode(0x4308C8);
MakeCode(0x4308D8);
MakeCode(0x4308DE);
MakeCode(0x4308EE);
MakeCode(0x4308F4);
MakeCode(0x430922);
MakeCode(0x430934);
MakeCode(0x43094B);
MakeCode(0x430960);
MakeFunction(0x430894, 0x430967);
MakeUnkn(0x430968, 1);
MakeNameEx(0x430968, "TControl.Perform", 0x20);
MakeComm(0x430968, "'function TControl.Perform(Msg:Cardinal; WParam:Longint; LParam:Longint):Longint;'");
MakeCode(0x430968);
MakeCode(0x43098F);
MakeFunction(0x430968, 0x430999);
MakeUnkn(0x43099C, 1);
MakeNameEx(0x43099C, "TControl.CalcDockSizes", 0x20);
MakeComm(0x43099C, "'procedure TControl.CalcDockSizes;'");
MakeCode(0x43099C);
MakeCode(0x4309BE);
MakeCode(0x4309DE);
MakeCode(0x4309E9);
MakeCode(0x430A01);
MakeCode(0x430A0A);
MakeFunction(0x43099C, 0x430A0C);
MakeUnkn(0x430A0C, 1);
MakeNameEx(0x430A0C, "TControl.UpdateBoundsRect", 0x20);
MakeComm(0x430A0C, "'procedure TControl.UpdateBoundsRect(const R:TRect);'");
MakeCode(0x430A0C);
MakeFunction(0x430A0C, 0x430A2E);
MakeUnkn(0x430A30, 1);
MakeNameEx(0x430A30, "TControl.sub_00430A30", 0x20);
MakeComm(0x430A30, "'procedure TControl.sub_00430A30;'");
MakeCode(0x430A30);
MakeFunction(0x430A30, 0x430A31);
MakeUnkn(0x430A34, 1);
MakeNameEx(0x430A34, "TControl.WndProc", 0x20);
MakeComm(0x430A34, "'procedure TControl.WndProc(var Message:TMessage);'");
MakeCode(0x430A34);
MakeCode(0x430A80);
MakeCode(0x430AC0);
MakeCode(0x430AEF);
MakeCode(0x430AF2);
MakeCode(0x430B06);
MakeCode(0x430B1B);
MakeCode(0x430B31);
MakeCode(0x430B38);
MakeCode(0x430B3F);
MakeCode(0x430B9F);
MakeCode(0x430BB6);
MakeCode(0x430BBF);
MakeFunction(0x430A34, 0x430BC6);
MakeUnkn(0x430BC8, 1);
MakeNameEx(0x430BC8, "TControl.DefaultHandler", 0x20);
MakeComm(0x430BC8, "'procedure TControl.DefaultHandler(var Message:void );'");
MakeCode(0x430BC8);
MakeCode(0x430BDE);
MakeCode(0x430BE9);
MakeCode(0x430BEE);
MakeCode(0x430C06);
MakeCode(0x430C14);
MakeCode(0x430C20);
MakeCode(0x430C45);
MakeFunction(0x430BC8, 0x430C49);
MakeUnkn(0x430C50, 1);
MakeNameEx(0x430C50, "TControl.ReadIsControl", 0x20);
MakeComm(0x430C50, "'procedure TControl.ReadIsControl(Reader:TReader);'");
MakeCode(0x430C50);
MakeFunction(0x430C50, 0x430C63);
MakeUnkn(0x430C64, 1);
MakeNameEx(0x430C64, "TControl.WriteIsControl", 0x20);
MakeComm(0x430C64, "'procedure TControl.WriteIsControl(Writer:TWriter);'");
MakeCode(0x430C64);
MakeFunction(0x430C64, 0x430C6E);
MakeUnkn(0x430C70, 1);
MakeNameEx(0x430C70, "DoWriteIsControl", 0x20);
MakeComm(0x430C70, "'function DoWriteIsControl:Boolean;'");
MakeCode(0x430C70);
MakeCode(0x430C94);
MakeFunction(0x430C70, 0x430C9F);
MakeUnkn(0x430CA0, 1);
MakeNameEx(0x430CA0, "TControl.DefineProperties", 0x20);
MakeComm(0x430CA0, "'procedure TControl.DefineProperties(Filer:TFiler);'");
MakeCode(0x430CA0);
MakeFunction(0x430CA0, 0x430CDA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x430CE4, -1);
MakeDword(0x430CE0);
MakeDword(0x430CDC);
MakeUnkn(0x430CF0, 1);
MakeNameEx(0x430CF0, "TControl.Click", 0x20);
MakeComm(0x430CF0, "'procedure TControl.Click;'");
MakeCode(0x430CF0);
MakeCode(0x430D2A);
MakeCode(0x430D42);
MakeCode(0x430D5A);
MakeFunction(0x430CF0, 0x430D5C);
MakeUnkn(0x430D5C, 1);
MakeNameEx(0x430D5C, "TControl.DblClick", 0x20);
MakeComm(0x430D5C, "'procedure TControl.DblClick;'");
MakeCode(0x430D5C);
MakeCode(0x430D77);
MakeFunction(0x430D5C, 0x430D79);
MakeUnkn(0x430D7C, 1);
MakeNameEx(0x430D7C, "TControl.MouseDown", 0x20);
MakeComm(0x430D7C, "'procedure TControl.MouseDown(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x430D7C);
MakeCode(0x430DAC);
MakeFunction(0x430D7C, 0x430DB2);
MakeUnkn(0x430DB4, 1);
MakeNameEx(0x430DB4, "TControl.DoMouseDown", 0x20);
MakeComm(0x430DB4, "'procedure TControl.DoMouseDown(var Message:TWMMouse; Button:TMouseButton; Shift:TShiftState);'");
MakeCode(0x430DB4);
MakeCode(0x430DDB);
MakeCode(0x430E0A);
MakeCode(0x430E2F);
MakeFunction(0x430DB4, 0x430E38);
MakeUnkn(0x430E38, 1);
MakeNameEx(0x430E38, "TControl.WMLButtonDown", 0x20);
MakeComm(0x430E38, "'procedure TControl.WMLButtonDown(var Message:TWMLButtonDown);'");
MakeCode(0x430E38);
MakeCode(0x430E5F);
MakeCode(0x430E6A);
MakeFunction(0x430E38, 0x430E7E);
MakeUnkn(0x430E84, 1);
MakeNameEx(0x430E84, "TControl.WMNCLButtonDown", 0x20);
MakeComm(0x430E84, "'procedure TControl.WMNCLButtonDown(var Message:TWMNCLButtonDown);'");
MakeCode(0x430E84);
MakeFunction(0x430E84, 0x430E9F);
MakeUnkn(0x430EA0, 1);
MakeNameEx(0x430EA0, "TControl.WMLButtonDblClk", 0x20);
MakeComm(0x430EA0, "'procedure TControl.WMLButtonDblClk(var Message:TWMLButtonDblClk);'");
MakeCode(0x430EA0);
MakeCode(0x430EC8);
MakeCode(0x430ED9);
MakeFunction(0x430EA0, 0x430EEE);
MakeUnkn(0x430EF4, 1);
MakeNameEx(0x430EF4, "TControl.sub_00430EF4", 0x20);
MakeComm(0x430EF4, "'procedure TControl.sub_00430EF4;'");
MakeCode(0x430EF4);
MakeComm(0x430EF4, "'TControl.FPopupMenu:TPopupMenu'");
MakeFunction(0x430EF4, 0x430EF8);
MakeUnkn(0x430EF8, 1);
MakeNameEx(0x430EF8, "TControl.CheckNewSize", 0x20);
MakeComm(0x430EF8, "'function TControl.CheckNewSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x430EF8);
MakeCode(0x430F5F);
MakeCode(0x430F76);
MakeCode(0x430F78);
MakeCode(0x430F89);
MakeFunction(0x430EF8, 0x430F93);
MakeUnkn(0x430F94, 1);
MakeNameEx(0x430F94, "TControl.WMRButtonDown", 0x20);
MakeComm(0x430F94, "'procedure TControl.WMRButtonDown(var Message:TWMRButtonDown);'");
MakeCode(0x430F94);
MakeFunction(0x430F94, 0x430FB7);
MakeUnkn(0x430FBC, 1);
MakeNameEx(0x430FBC, "TControl.WMRButtonDblClk", 0x20);
MakeComm(0x430FBC, "'procedure TControl.WMRButtonDblClk(var Message:TWMRButtonDblClk);'");
MakeCode(0x430FBC);
MakeFunction(0x430FBC, 0x430FDF);
MakeUnkn(0x430FE4, 1);
MakeNameEx(0x430FE4, "TControl.WMMButtonDown", 0x20);
MakeComm(0x430FE4, "'procedure TControl.WMMButtonDown(var Message:TWMMButtonDown);'");
MakeCode(0x430FE4);
MakeFunction(0x430FE4, 0x431007);
MakeUnkn(0x43100C, 1);
MakeNameEx(0x43100C, "TControl.WMMButtonDblClk", 0x20);
MakeComm(0x43100C, "'procedure TControl.WMMButtonDblClk(var Message:TWMMButtonDblClk);'");
MakeCode(0x43100C);
MakeFunction(0x43100C, 0x43102F);
MakeUnkn(0x431034, 1);
MakeNameEx(0x431034, "TControl.MouseMove", 0x20);
MakeComm(0x431034, "'procedure TControl.MouseMove(Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x431034);
MakeCode(0x43105E);
MakeFunction(0x431034, 0x431064);
MakeUnkn(0x431064, 1);
MakeNameEx(0x431064, "TControl.WMMouseMove", 0x20);
MakeComm(0x431064, "'procedure TControl.WMMouseMove(var Message:TWMMouseMove);'");
MakeCode(0x431064);
MakeCode(0x43108E);
MakeCode(0x4310B8);
MakeCode(0x4310D7);
MakeFunction(0x431064, 0x4310DC);
MakeUnkn(0x4310DC, 1);
MakeNameEx(0x4310DC, "TControl.MouseUp", 0x20);
MakeComm(0x4310DC, "'procedure TControl.MouseUp(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4310DC);
MakeCode(0x43110C);
MakeFunction(0x4310DC, 0x431112);
MakeUnkn(0x431114, 1);
MakeNameEx(0x431114, "TControl.DoMouseUp", 0x20);
MakeComm(0x431114, "'procedure TControl.DoMouseUp(var Message:TWMMouse; Button:TMouseButton);'");
MakeCode(0x431114);
MakeCode(0x431145);
MakeFunction(0x431114, 0x431149);
MakeUnkn(0x43114C, 1);
MakeNameEx(0x43114C, "TControl.WMLButtonUp", 0x20);
MakeComm(0x43114C, "'procedure TControl.WMLButtonUp(var Message:TWMLButtonUp);'");
MakeCode(0x43114C);
MakeCode(0x43116E);
MakeCode(0x4311AF);
MakeFunction(0x43114C, 0x4311C1);
MakeUnkn(0x4311C4, 1);
MakeNameEx(0x4311C4, "TControl.WMRButtonUp", 0x20);
MakeComm(0x4311C4, "'procedure TControl.WMRButtonUp(var Message:TWMRButtonUp);'");
MakeCode(0x4311C4);
MakeFunction(0x4311C4, 0x4311E1);
MakeUnkn(0x4311E4, 1);
MakeNameEx(0x4311E4, "TControl.WMMButtonUp", 0x20);
MakeComm(0x4311E4, "'procedure TControl.WMMButtonUp(var Message:TWMMButtonUp);'");
MakeCode(0x4311E4);
MakeFunction(0x4311E4, 0x431201);
MakeUnkn(0x431204, 1);
MakeNameEx(0x431204, "TControl.WMMouseWheel", 0x20);
MakeComm(0x431204, "'procedure TControl.WMMouseWheel(var Message:TWMMouseWheel);'");
MakeCode(0x431204);
MakeCode(0x43122E);
MakeCode(0x431256);
MakeFunction(0x431204, 0x43125A);
MakeUnkn(0x43125C, 1);
MakeNameEx(0x43125C, "TControl.WMCancelMode", 0x20);
MakeComm(0x43125C, "'procedure TControl.WMCancelMode(var Message:TWMCancelMode);'");
MakeCode(0x43125C);
MakeCode(0x431292);
MakeCode(0x431297);
MakeFunction(0x43125C, 0x431299);
MakeUnkn(0x43129C, 1);
MakeNameEx(0x43129C, "TControl.WMWindowPosChanged", 0x20);
MakeComm(0x43129C, "'procedure TControl.WMWindowPosChanged(var Message:TWMWindowPosChanged);'");
MakeCode(0x43129C);
MakeCode(0x4312D8);
MakeCode(0x4312EA);
MakeCode(0x4312FE);
MakeCode(0x431310);
MakeCode(0x43133F);
MakeFunction(0x43129C, 0x431342);
MakeUnkn(0x43134C, 1);
MakeNameEx(0x43134C, "TControl.CMVisibleChanged", 0x20);
MakeComm(0x43134C, "'procedure TControl.CMVisibleChanged(var Message:TMessage);'");
MakeCode(0x43134C);
MakeCode(0x431358);
MakeCode(0x431364);
MakeCode(0x431368);
MakeCode(0x43136A);
MakeFunction(0x43134C, 0x431372);
MakeUnkn(0x431374, 1);
MakeNameEx(0x431374, "TControl.CMEnabledChanged", 0x20);
MakeComm(0x431374, "'procedure TControl.CMEnabledChanged;'");
MakeCode(0x431374);
MakeComm(0x431376, "'TControl.Invalidate'");
MakeFunction(0x431374, 0x43137A);
MakeUnkn(0x43137C, 1);
MakeNameEx(0x43137C, "TControl.CMFontChanged", 0x20);
MakeComm(0x43137C, "'procedure TControl.CMFontChanged(var Message:TMessage);'");
MakeCode(0x43137C);
MakeFunction(0x43137C, 0x431382);
MakeUnkn(0x431384, 1);
MakeNameEx(0x431384, "TControl.CMColorChanged", 0x20);
MakeComm(0x431384, "'procedure TControl.CMColorChanged(var Message:TMessage);'");
MakeCode(0x431384);
MakeFunction(0x431384, 0x43138A);
MakeUnkn(0x43138C, 1);
MakeNameEx(0x43138C, "TControl.CMParentColorChanged", 0x20);
MakeComm(0x43138C, "'procedure TControl.CMParentColorChanged(var Message:TMessage);'");
MakeCode(0x43138C);
MakeCode(0x4313A7);
MakeCode(0x4313B4);
MakeCode(0x4313B8);
MakeFunction(0x43138C, 0x4313BA);
MakeUnkn(0x4313BC, 1);
MakeNameEx(0x4313BC, "TControl.CMParentBiDiModeChanged", 0x20);
MakeComm(0x4313BC, "'procedure TControl.CMParentBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x4313BC);
MakeCode(0x4313D7);
MakeCode(0x4313DB);
MakeFunction(0x4313BC, 0x4313DE);
MakeUnkn(0x4313E0, 1);
MakeNameEx(0x4313E0, "TControl.CMMouseWheel", 0x20);
MakeComm(0x4313E0, "'procedure TControl.CMMouseWheel(var Message:TCMMouseWheel);'");
MakeCode(0x4313E0);
MakeCode(0x431419);
MakeCode(0x431436);
MakeFunction(0x4313E0, 0x43143C);
MakeUnkn(0x43143C, 1);
MakeNameEx(0x43143C, "TControl.CMBiDiModeChanged", 0x20);
MakeComm(0x43143C, "'procedure TControl.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x43143C);
MakeCode(0x431457);
MakeFunction(0x43143C, 0x431459);
MakeUnkn(0x43145C, 1);
MakeNameEx(0x43145C, "TControl.CMParentShowHintChanged", 0x20);
MakeComm(0x43145C, "'procedure TControl.CMParentShowHintChanged(var Message:TMessage);'");
MakeCode(0x43145C);
MakeCode(0x43147F);
MakeFunction(0x43145C, 0x431481);
MakeUnkn(0x431484, 1);
MakeNameEx(0x431484, "TControl.CMParentFontChanged", 0x20);
MakeComm(0x431484, "'procedure TControl.CMParentFontChanged(var Message:TMessage);'");
MakeCode(0x431484);
MakeCode(0x43149F);
MakeCode(0x4314AC);
MakeCode(0x4314B0);
MakeFunction(0x431484, 0x4314B2);
MakeUnkn(0x4314B4, 1);
MakeNameEx(0x4314B4, "TControl.CMSysFontChanged", 0x20);
MakeComm(0x4314B4, "'procedure TControl.CMSysFontChanged(var Message:TMessage);'");
MakeCode(0x4314B4);
MakeCode(0x4314D5);
MakeFunction(0x4314B4, 0x4314D7);
MakeUnkn(0x4314D8, 1);
MakeNameEx(0x4314D8, "TControl.CMHitTest", 0x20);
MakeComm(0x4314D8, "'procedure TControl.CMHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x4314D8);
MakeFunction(0x4314D8, 0x4314E0);
MakeUnkn(0x4314E0, 1);
MakeNameEx(0x4314E0, "TControl.CMMouseEnter", 0x20);
MakeComm(0x4314E0, "'procedure TControl.CMMouseEnter(var Message:TMessage);'");
MakeCode(0x4314E0);
MakeFunction(0x4314E0, 0x4314F7);
MakeUnkn(0x4314F8, 1);
MakeNameEx(0x4314F8, "TControl.CMMouseLeave", 0x20);
MakeComm(0x4314F8, "'procedure TControl.CMMouseLeave(var Message:TMessage);'");
MakeCode(0x4314F8);
MakeFunction(0x4314F8, 0x43150F);
MakeUnkn(0x431510, 1);
MakeNameEx(0x431510, "TControl.CMDesignHitTest", 0x20);
MakeComm(0x431510, "'procedure TControl.CMDesignHitTest(var Message:TWMMouse);'");
MakeCode(0x431510);
MakeFunction(0x431510, 0x431516);
MakeUnkn(0x431518, 1);
MakeNameEx(0x431518, "TControl.CreateFloatingDockSite", 0x20);
MakeComm(0x431518, "'function TControl.CreateFloatingDockSite(Bounds:TRect):TWinControl;'");
MakeCode(0x431518);
MakeCode(0x431592);
MakeFunction(0x431518, 0x43159B);
MakeUnkn(0x43159C, 1);
MakeNameEx(0x43159C, "UpdateFloatingDockSitePos", 0x20);
MakeComm(0x43159C, "'procedure UpdateFloatingDockSitePos;'");
MakeCode(0x43159C);
MakeFunction(0x43159C, 0x431625);
MakeUnkn(0x431628, 1);
MakeNameEx(0x431628, "TControl.CMFloat", 0x20);
MakeComm(0x431628, "'procedure TControl.CMFloat(var Message:TCMFloat);'");
MakeCode(0x431628);
MakeCode(0x431653);
MakeCode(0x431683);
MakeFunction(0x431628, 0x431688);
MakeUnkn(0x431688, 1);
MakeNameEx(0x431688, "TControl.ActionChange", 0x20);
MakeComm(0x431688, "'procedure TControl.ActionChange(Sender:TObject; CheckDefaults:Boolean);'");
MakeCode(0x431688);
MakeCode(0x4316E6);
MakeCode(0x4316F0);
MakeCode(0x4316FF);
MakeCode(0x431709);
MakeCode(0x431716);
MakeCode(0x431724);
MakeCode(0x43172E);
MakeCode(0x43173B);
MakeCode(0x431749);
MakeCode(0x43175B);
MakeCode(0x431768);
MakeCode(0x431776);
MakeCode(0x43177B);
MakeFunction(0x431688, 0x431784);
MakeUnkn(0x431784, 1);
MakeNameEx(0x431784, "TControl.DoActionChange", 0x20);
MakeComm(0x431784, "'procedure TControl.DoActionChange(Sender:TObject);'");
MakeCode(0x431784);
MakeCode(0x4317A4);
MakeFunction(0x431784, 0x4317A7);
MakeUnkn(0x4317A8, 1);
MakeNameEx(0x4317A8, "TControl.sub_004317A8", 0x20);
MakeComm(0x4317A8, "'procedure TControl.sub_004317A8;'");
MakeCode(0x4317A8);
MakeFunction(0x4317A8, 0x4317AE);
MakeUnkn(0x4317B0, 1);
MakeNameEx(0x4317B0, "TControl.IsCaptionStored", 0x20);
MakeComm(0x4317B0, "'function TControl.IsCaptionStored(Value:TCaption):Boolean;'");
MakeCode(0x4317B0);
MakeCode(0x4317CB);
MakeFunction(0x4317B0, 0x4317D0);
MakeUnkn(0x4317D0, 1);
MakeNameEx(0x4317D0, "TControl.IsEnabledStored", 0x20);
MakeComm(0x4317D0, "'function TControl.IsEnabledStored(Value:Boolean):Boolean;'");
MakeCode(0x4317D0);
MakeCode(0x4317EB);
MakeFunction(0x4317D0, 0x4317F0);
MakeUnkn(0x4317F0, 1);
MakeNameEx(0x4317F0, "TControl.IsHintStored", 0x20);
MakeComm(0x4317F0, "'function TControl.IsHintStored(Value:String):Boolean;'");
MakeCode(0x4317F0);
MakeCode(0x43180B);
MakeFunction(0x4317F0, 0x431810);
MakeUnkn(0x431810, 1);
MakeNameEx(0x431810, "TControl.IsHelpContextStored", 0x20);
MakeComm(0x431810, "'function TControl.IsHelpContextStored(Value:String):Boolean;'");
MakeCode(0x431810);
MakeCode(0x43182B);
MakeFunction(0x431810, 0x431830);
MakeUnkn(0x431830, 1);
MakeNameEx(0x431830, "TControl.IsVisibleStored", 0x20);
MakeComm(0x431830, "'function TControl.IsVisibleStored(Value:Boolean):Boolean;'");
MakeCode(0x431830);
MakeCode(0x43184B);
MakeFunction(0x431830, 0x431850);
MakeUnkn(0x431850, 1);
MakeNameEx(0x431850, "TControl.IsOnClickStored", 0x20);
MakeComm(0x431850, "'function TControl.IsOnClickStored(Value:TNotifyEvent):Boolean;'");
MakeCode(0x431850);
MakeCode(0x43186B);
MakeFunction(0x431850, 0x431870);
MakeUnkn(0x431870, 1);
MakeNameEx(0x431870, "TControl.Loaded", 0x20);
MakeComm(0x431870, "'procedure TControl.Loaded;'");
MakeCode(0x431870);
MakeCode(0x43189C);
MakeFunction(0x431870, 0x4318A6);
MakeUnkn(0x4318A8, 1);
MakeNameEx(0x4318A8, "TControl.AssignTo", 0x20);
MakeComm(0x4318A8, "'procedure TControl.AssignTo(Dest:TPersistent);'");
MakeCode(0x4318A8);
MakeCode(0x431925);
MakeCode(0x43192E);
MakeCode(0x43193B);
MakeCode(0x431944);
MakeCode(0x431949);
MakeFunction(0x4318A8, 0x431951);
MakeUnkn(0x431954, 1);
MakeNameEx(0x431954, "MinVar", 0x20);
MakeComm(0x431954, "'function MinVar(const Data:array[$0..-$1] of System.Double; const _Dv_:$0..-$1):Integer;'");
MakeCode(0x431954);
MakeCode(0x431970);
MakeCode(0x43197F);
MakeCode(0x431986);
MakeFunction(0x431954, 0x43198D);
MakeUnkn(0x431990, 1);
MakeNameEx(0x431990, "TControl.GetDockEdge", 0x20);
MakeComm(0x431990, "'procedure TControl.GetDockEdge(MousePos:TPoint);'");
MakeCode(0x431990);
MakeCode(0x4319B4);
MakeCode(0x4319BC);
MakeCode(0x4319C8);
MakeCode(0x4319D0);
MakeCode(0x431A27);
MakeCode(0x431A2B);
MakeCode(0x431A2F);
MakeCode(0x431A33);
MakeCode(0x431A35);
MakeFunction(0x431990, 0x431A3F);
MakeUnkn(0x431A40, 1);
MakeNameEx(0x431A40, "TControl.GetFloating", 0x20);
MakeComm(0x431A40, "'function TControl.GetFloating:Boolean;'");
MakeCode(0x431A40);
MakeCode(0x431A64);
MakeCode(0x431A68);
MakeFunction(0x431A40, 0x431A6C);
MakeCode(0x431A6C);
MakeComm(0x431A6C, "'TControl.FFloatingDockSiteClass:TWinControlClass'");
MakeFunction(0x431A6C, 0x431A73);
MakeUnkn(0x431A74, 1);
MakeNameEx(0x431A74, "TControl.AdjustSize", 0x20);
MakeComm(0x431A74, "'procedure TControl.AdjustSize;'");
MakeCode(0x431A74);
MakeCode(0x431A91);
MakeFunction(0x431A74, 0x431A93);
MakeUnkn(0x431A94, 1);
MakeNameEx(0x431A94, "TControl.DrawTextBiDiModeFlags", 0x20);
MakeComm(0x431A94, "'function TControl.DrawTextBiDiModeFlags(Flags:Longint):Longint;'");
MakeCode(0x431A94);
MakeCode(0x431AB9);
MakeCode(0x431AC4);
MakeFunction(0x431A94, 0x431AD3);
MakeUnkn(0x431AD4, 1);
MakeNameEx(0x431AD4, "TControl.DrawTextBiDiModeFlagsReadingOnly", 0x20);
MakeComm(0x431AD4, "'function TControl.DrawTextBiDiModeFlagsReadingOnly:Longint;'");
MakeCode(0x431AD4);
MakeCode(0x431AE9);
MakeFunction(0x431AD4, 0x431AED);
MakeUnkn(0x431AF0, 1);
MakeNameEx(0x431AF0, "TControl.InitiateAction", 0x20);
MakeComm(0x431AF0, "'procedure TControl.InitiateAction;'");
MakeCode(0x431AF0);
MakeFunction(0x431AF0, 0x431AFF);
MakeUnkn(0x431B00, 1);
MakeNameEx(0x431B00, "TControl.CMHintShow", 0x20);
MakeComm(0x431B00, "'procedure TControl.CMHintShow(var Message:TMessage);'");
MakeCode(0x431B00);
MakeCode(0x431B26);
MakeFunction(0x431B00, 0x431B2A);
MakeUnkn(0x431B2C, 1);
MakeNameEx(0x431B2C, "TControl.WMContextMenu", 0x20);
MakeComm(0x431B2C, "'procedure TControl.WMContextMenu(var Message:TWMContextMenu);'");
MakeCode(0x431B2C);
MakeCode(0x431B55);
MakeCode(0x431B7B);
MakeCode(0x431BB7);
MakeCode(0x431C27);
MakeCode(0x431C3C);
MakeCode(0x431C4B);
MakeFunction(0x431B2C, 0x431C53);
MakeUnkn(0x431C54, 1);
MakeNameEx(0x431C54, "TControl.DoContextPopup", 0x20);
MakeComm(0x431C54, "'procedure TControl.DoContextPopup(MousePos:TPoint; var Handled:Boolean);'");
MakeCode(0x431C54);
MakeCode(0x431C80);
MakeFunction(0x431C54, 0x431C86);
MakeUnkn(0x431C88, 1);
MakeNameEx(0x431C88, "TControl.SetConstraints", 0x20);
MakeComm(0x431C88, "'procedure TControl.SetConstraints(const Value:TSizeConstraints);'");
MakeCode(0x431C88);
MakeFunction(0x431C88, 0x431C91);
MakeUnkn(0x431C94, 1);
MakeNameEx(0x431C94, "TWinControlActionLink.AssignClient", 0x20);
MakeComm(0x431C94, "'procedure TWinControlActionLink.AssignClient(AClient:TObject);'");
MakeCode(0x431C94);
MakeFunction(0x431C94, 0x431CB6);
MakeUnkn(0x431CB8, 1);
MakeNameEx(0x431CB8, "TWinControlActionLink.IsHelpContextLinked", 0x20);
MakeComm(0x431CB8, "'procedure TWinControlActionLink.IsHelpContextLinked;'");
MakeCode(0x431CB8);
MakeComm(0x431CBA, "'TControlActionLink.IsHelpLinked'");
MakeFunction(0x431CB8, 0x431CBE);
MakeCode(0x431CC0);
MakeFunction(0x431CC0, 0x431CC6);
MakeUnkn(0x431CC8, 1);
MakeNameEx(0x431CC8, "TWinControl.Create", 0x20);
MakeComm(0x431CC8, "'constructor TWinControl.Create(AOwner:TComponent);'");
MakeCode(0x431CC8);
MakeCode(0x431CE1);
MakeCode(0x431D5C);
MakeCode(0x431D79);
MakeCode(0x431DAA);
MakeCode(0x431DB7);
MakeCode(0x431DC0);
MakeCode(0x431DC5);
MakeCode(0x431DDE);
MakeFunction(0x431CC8, 0x431DE6);
MakeUnkn(0x431DEC, 1);
MakeNameEx(0x431DEC, "TWinControl.Destroy", 0x20);
MakeComm(0x431DEC, "'destructor TWinControl.Destroy;'");
MakeCode(0x431DEC);
MakeCode(0x431E18);
MakeCode(0x431E3D);
MakeCode(0x431E50);
MakeCode(0x431E5B);
MakeCode(0x431E84);
MakeCode(0x431E9E);
MakeCode(0x431EB5);
MakeFunction(0x431DEC, 0x431EB9);
MakeUnkn(0x431EBC, 1);
MakeNameEx(0x431EBC, "TWinControl.FixupTabList", 0x20);
MakeComm(0x431EBC, "'procedure TWinControl.FixupTabList;'");
MakeCode(0x431EBC);
MakeCode(0x431F19);
MakeCode(0x431F42);
MakeCode(0x431F46);
MakeCode(0x431F51);
MakeCode(0x431F66);
MakeCode(0x431F6A);
MakeCode(0x431F77);
MakeCode(0x431F80);
MakeCode(0x431F85);
MakeCode(0x431F87);
MakeFunction(0x431EBC, 0x431F8D);
MakeUnkn(0x431F90, 1);
MakeNameEx(0x431F90, "TWinControl.ReadState", 0x20);
MakeComm(0x431F90, "'procedure TWinControl.ReadState(Reader:TReader);'");
MakeCode(0x431F90);
MakeCode(0x431FBA);
MakeCode(0x431FC7);
MakeCode(0x431FD0);
MakeCode(0x431FD5);
MakeCode(0x431FF9);
MakeFunction(0x431F90, 0x432005);
MakeCode(0x432008);
MakeFunction(0x432008, 0x432009);
MakeUnkn(0x43200C, 1);
MakeNameEx(0x43200C, "InsertBefore", 0x20);
MakeComm(0x43200C, "'function InsertBefore(C1:TControl; C2:TControl; AAlign:TAlign):Boolean;'");
MakeCode(0x43200C);
MakeCode(0x432043);
MakeCode(0x43204E);
MakeCode(0x432061);
MakeCode(0x43206C);
MakeCode(0x43207F);
MakeCode(0x432092);
MakeFunction(0x43200C, 0x432098);
MakeUnkn(0x432098, 1);
MakeNameEx(0x432098, "DoPosition", 0x20);
MakeComm(0x432098, "'procedure DoPosition(Control:TControl; AAlign:TAlign; AlignInfo:TAlignInfo);'");
MakeCode(0x432098);
MakeCode(0x4320CD);
MakeCode(0x43213C);
MakeCode(0x432150);
MakeCode(0x43217E);
MakeCode(0x43219A);
MakeCode(0x4321CA);
MakeCode(0x4321CF);
MakeCode(0x4321FD);
MakeCode(0x432219);
MakeCode(0x432249);
MakeCode(0x43224E);
MakeCode(0x43227C);
MakeCode(0x432289);
MakeCode(0x432291);
MakeCode(0x432296);
MakeCode(0x432298);
MakeCode(0x4322A2);
MakeCode(0x4322C9);
MakeCode(0x4322D2);
MakeCode(0x4322F9);
MakeCode(0x432302);
MakeCode(0x43234A);
MakeCode(0x432358);
MakeCode(0x432372);
MakeCode(0x43237F);
MakeCode(0x432399);
MakeCode(0x4323D6);
MakeCode(0x432404);
MakeCode(0x432411);
MakeCode(0x432419);
MakeCode(0x43241E);
MakeCode(0x43243A);
MakeCode(0x432467);
MakeCode(0x43247B);
MakeCode(0x43248F);
MakeCode(0x43249E);
MakeCode(0x4324AE);
MakeCode(0x4324CE);
MakeFunction(0x432098, 0x4324D5);
MakeUnkn(0x4324D8, 1);
MakeNameEx(0x4324D8, "DoAlign", 0x20);
MakeComm(0x4324D8, "'procedure DoAlign(AAlign:TAlign);'");
MakeCode(0x4324D8);
MakeCode(0x43251F);
MakeCode(0x43253B);
MakeCode(0x43255A);
MakeCode(0x432597);
MakeCode(0x4325A3);
MakeCode(0x4325A4);
MakeCode(0x4325D0);
MakeCode(0x4325DF);
MakeCode(0x4325EB);
MakeCode(0x432604);
MakeCode(0x43263B);
MakeFunction(0x4324D8, 0x432642);
MakeUnkn(0x432648, 1);
MakeNameEx(0x432648, "AlignWork", 0x20);
MakeComm(0x432648, "'function AlignWork:Boolean;'");
MakeCode(0x432648);
MakeCode(0x432665);
MakeCode(0x43268E);
MakeCode(0x432690);
MakeFunction(0x432648, 0x432697);
MakeUnkn(0x43269C, 1);
MakeNameEx(0x43269C, "TWinControl.AlignControls", 0x20);
MakeComm(0x43269C, "'procedure TWinControl.AlignControls(AControl:TControl; var Rect:TRect);'");
MakeCode(0x43269C);
MakeCode(0x4326E0);
MakeCode(0x432765);
MakeCode(0x432772);
MakeCode(0x43277B);
MakeCode(0x432780);
MakeCode(0x432782);
MakeCode(0x43279A);
MakeFunction(0x43269C, 0x43279F);
MakeUnkn(0x4327A0, 1);
MakeNameEx(0x4327A0, "TWinControl.AlignControl", 0x20);
MakeComm(0x4327A0, "'procedure TWinControl.AlignControl(AControl:TControl);'");
MakeCode(0x4327A0);
MakeCode(0x4327D8);
MakeCode(0x432809);
MakeCode(0x432816);
MakeCode(0x432827);
MakeCode(0x43282C);
MakeCode(0x43282E);
MakeFunction(0x4327A0, 0x432833);
MakeUnkn(0x432834, 1);
MakeNameEx(0x432834, "TWinControl.DisableAlign", 0x20);
MakeComm(0x432834, "'procedure TWinControl.DisableAlign;'");
MakeCode(0x432834);
MakeFunction(0x432834, 0x43283C);
MakeUnkn(0x43283C, 1);
MakeNameEx(0x43283C, "TWinControl.EnableAlign", 0x20);
MakeComm(0x43283C, "'procedure TWinControl.EnableAlign;'");
MakeCode(0x43283C);
MakeFunction(0x43283C, 0x432859);
MakeUnkn(0x43285C, 1);
MakeNameEx(0x43285C, "TWinControl.Realign", 0x20);
MakeComm(0x43285C, "'procedure TWinControl.Realign;'");
MakeCode(0x43285C);
MakeFunction(0x43285C, 0x432864);
MakeUnkn(0x432864, 1);
MakeNameEx(0x432864, "TWinControl.DoFlipChildren", 0x20);
MakeComm(0x432864, "'procedure TWinControl.DoFlipChildren;'");
MakeCode(0x432864);
MakeCode(0x4328AA);
MakeCode(0x4328E5);
MakeCode(0x4328E9);
MakeCode(0x4328F7);
MakeCode(0x432913);
MakeCode(0x432920);
MakeCode(0x432929);
MakeCode(0x43292E);
MakeFunction(0x432864, 0x432937);
MakeUnkn(0x432938, 1);
MakeNameEx(0x432938, "TWinControl.FlipChildren", 0x20);
MakeComm(0x432938, "'procedure TWinControl.FlipChildren(AllLevels:Boolean);'");
MakeCode(0x432938);
MakeCode(0x43298E);
MakeCode(0x4329B5);
MakeCode(0x4329B9);
MakeCode(0x4329C5);
MakeCode(0x4329D4);
MakeCode(0x4329EE);
MakeCode(0x4329F5);
MakeCode(0x432A04);
MakeCode(0x432A1F);
MakeCode(0x432A24);
MakeCode(0x432A3E);
MakeCode(0x432A6C);
MakeCode(0x432A70);
MakeFunction(0x432938, 0x432A77);
MakeUnkn(0x432A78, 1);
MakeNameEx(0x432A78, "TWinControl.ContainsControl", 0x20);
MakeComm(0x432A78, "'function TWinControl.ContainsControl(Control:TControl):Boolean;'");
MakeCode(0x432A78);
MakeFunction(0x432A78, 0x432A8B);
MakeUnkn(0x432A8C, 1);
MakeNameEx(0x432A8C, "TWinControl.RemoveFocus", 0x20);
MakeComm(0x432A8C, "'procedure TWinControl.RemoveFocus(Removing:Boolean);'");
MakeCode(0x432A8C);
MakeCode(0x432AA6);
MakeFunction(0x432A8C, 0x432AA9);
MakeUnkn(0x432AAC, 1);
MakeNameEx(0x432AAC, "TWinControl.Insert", 0x20);
MakeComm(0x432AAC, "'procedure TWinControl.Insert(AControl:TControl);'");
MakeCode(0x432AAC);
MakeCode(0x432AE3);
MakeCode(0x432AF0);
MakeCode(0x432AF3);
MakeFunction(0x432AAC, 0x432AF6);
MakeUnkn(0x432AF8, 1);
MakeNameEx(0x432AF8, "TWinControl.Remove", 0x20);
MakeComm(0x432AF8, "'procedure TWinControl.Remove(AControl:TControl);'");
MakeCode(0x432AF8);
MakeCode(0x432B2B);
MakeCode(0x432B38);
MakeFunction(0x432AF8, 0x432B40);
MakeUnkn(0x432B40, 1);
MakeNameEx(0x432B40, "TWinControl.InsertControl", 0x20);
MakeComm(0x432B40, "'procedure TWinControl.InsertControl(AControl:TControl);'");
MakeCode(0x432B40);
MakeCode(0x432BE3);
MakeCode(0x432BF5);
MakeCode(0x432BFE);
MakeFunction(0x432B40, 0x432C12);
MakeUnkn(0x432C14, 1);
MakeNameEx(0x432C14, "TWinControl.RemoveControl", 0x20);
MakeComm(0x432C14, "'procedure TWinControl.RemoveControl(AControl:TControl);'");
MakeCode(0x432C14);
MakeCode(0x432C53);
MakeCode(0x432C6A);
MakeFunction(0x432C14, 0x432C8F);
MakeUnkn(0x432C90, 1);
MakeNameEx(0x432C90, "TWinControl.GetControl", 0x20);
MakeComm(0x432C90, "'function TWinControl.GetControl(Index:Integer):TControl;'");
MakeCode(0x432C90);
MakeCode(0x432CA7);
MakeCode(0x432CA9);
MakeCode(0x432CB8);
MakeCode(0x432CC7);
MakeFunction(0x432C90, 0x432CCC);
MakeUnkn(0x432CCC, 1);
MakeNameEx(0x432CCC, "TWinControl.GetControlCount", 0x20);
MakeComm(0x432CCC, "'function TWinControl.GetControlCount:Integer;'");
MakeCode(0x432CCC);
MakeCode(0x432CDB);
MakeCode(0x432CE8);
MakeFunction(0x432CCC, 0x432CEB);
MakeUnkn(0x432CEC, 1);
MakeNameEx(0x432CEC, "TWinControl.Broadcast", 0x20);
MakeComm(0x432CEC, "'procedure TWinControl.Broadcast(var Message:void );'");
MakeCode(0x432CEC);
MakeCode(0x432D08);
MakeCode(0x432D26);
MakeFunction(0x432CEC, 0x432D2C);
MakeUnkn(0x432D2C, 1);
MakeNameEx(0x432D2C, "TWinControl.NotifyControls", 0x20);
MakeComm(0x432D2C, "'procedure TWinControl.NotifyControls(Msg:Word);'");
MakeCode(0x432D2C);
MakeFunction(0x432D2C, 0x432D52);
MakeUnkn(0x432D54, 1);
MakeNameEx(0x432D54, "TWinControl.CreateSubClass", 0x20);
MakeComm(0x432D54, "'procedure TWinControl.CreateSubClass(var Params:TCreateParams; ControlClassName:PChar);'");
MakeCode(0x432D54);
MakeCode(0x432DAA);
MakeCode(0x432DBB);
MakeFunction(0x432D54, 0x432DBF);
MakeUnkn(0x432DC0, 1);
MakeNameEx(0x432DC0, "TWinControl.AddBiDiModeExStyle", 0x20);
MakeComm(0x432DC0, "'procedure TWinControl.AddBiDiModeExStyle(var ExStyle:DWORD);'");
MakeCode(0x432DC0);
MakeCode(0x432DD8);
MakeCode(0x432DE9);
MakeCode(0x432E0F);
MakeCode(0x432E21);
MakeFunction(0x432DC0, 0x432E25);
MakeUnkn(0x432E28, 1);
MakeNameEx(0x432E28, "TWinControl.CreateParams", 0x20);
MakeComm(0x432E28, "'procedure TWinControl.CreateParams(var Params:TCreateParams);'");
MakeCode(0x432E28);
MakeCode(0x432E83);
MakeCode(0x432E9B);
MakeCode(0x432EAB);
MakeCode(0x432ED6);
MakeCode(0x432EDF);
MakeCode(0x432F30);
MakeCode(0x432F3D);
MakeCode(0x432F46);
MakeCode(0x432F4B);
MakeFunction(0x432E28, 0x432F54);
MakeUnkn(0x432F54, 1);
MakeNameEx(0x432F54, "TWinControl.CreateWnd", 0x20);
MakeComm(0x432F54, "'procedure TWinControl.CreateWnd;'");
MakeCode(0x432F54);
MakeCode(0x432FC0);
MakeCode(0x433000);
MakeCode(0x433034);
MakeCode(0x433045);
MakeCode(0x433065);
MakeCode(0x433089);
MakeCode(0x4330BF);
MakeCode(0x4330FC);
MakeCode(0x433109);
MakeCode(0x433115);
MakeCode(0x43311A);
MakeFunction(0x432F54, 0x433122);
MakeUnkn(0x433124, 1);
MakeNameEx(0x433124, "TWinControl.CreateWindowHandle", 0x20);
MakeComm(0x433124, "'procedure TWinControl.CreateWindowHandle(const Params:TCreateParams);'");
MakeCode(0x433124);
MakeFunction(0x433124, 0x433162);
MakeUnkn(0x433164, 1);
MakeNameEx(0x433164, "TWinControl.ReadDesignSize", 0x20);
MakeComm(0x433164, "'procedure TWinControl.ReadDesignSize(Reader:TReader);'");
MakeCode(0x433164);
MakeFunction(0x433164, 0x43319C);
MakeUnkn(0x43319C, 1);
MakeNameEx(0x43319C, "TWinControl.WriteDesignSize", 0x20);
MakeComm(0x43319C, "'procedure TWinControl.WriteDesignSize(Writer:TWriter);'");
MakeCode(0x43319C);
MakeFunction(0x43319C, 0x4331F0);
MakeUnkn(0x4331F0, 1);
MakeNameEx(0x4331F0, "PointsEqual", 0x20);
MakeComm(0x4331F0, "'function PointsEqual(const P1:TPoint; const P2:TPoint):Boolean;'");
MakeCode(0x4331F0);
MakeCode(0x4331FE);
MakeCode(0x433201);
MakeFunction(0x4331F0, 0x433204);
MakeUnkn(0x433204, 1);
MakeNameEx(0x433204, "DoWriteDesignSize", 0x20);
MakeComm(0x433204, "'function DoWriteDesignSize:Boolean;'");
MakeCode(0x433204);
MakeCode(0x43323D);
MakeCode(0x43325B);
MakeCode(0x433280);
MakeCode(0x433284);
MakeCode(0x4332A2);
MakeCode(0x4332C7);
MakeCode(0x4332CB);
MakeCode(0x4332CF);
MakeFunction(0x433204, 0x4332D8);
MakeUnkn(0x4332DC, 1);
MakeNameEx(0x4332DC, "TWinControl.DefineProperties", 0x20);
MakeComm(0x4332DC, "'procedure TWinControl.DefineProperties(Filer:TFiler);'");
MakeCode(0x4332DC);
MakeFunction(0x4332DC, 0x433321);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43332C, -1);
MakeDword(0x433328);
MakeDword(0x433324);
MakeUnkn(0x433338, 1);
MakeNameEx(0x433338, "TWinControl.DestroyWnd", 0x20);
MakeComm(0x433338, "'procedure TWinControl.DestroyWnd;'");
MakeCode(0x433338);
MakeCode(0x43335A);
MakeCode(0x433379);
MakeFunction(0x433338, 0x43338C);
MakeUnkn(0x433390, 1);
MakeNameEx(0x433390, "TWinControl.DestroyWindowHandle", 0x20);
MakeComm(0x433390, "'procedure TWinControl.DestroyWindowHandle;'");
MakeCode(0x433390);
MakeCode(0x4333C6);
MakeCode(0x4333D3);
MakeCode(0x4333DD);
MakeCode(0x4333E2);
MakeFunction(0x433390, 0x4333F2);
MakeUnkn(0x4333F4, 1);
MakeNameEx(0x4333F4, "TWinControl.PrecedingWindow", 0x20);
MakeComm(0x4333F4, "'function TWinControl.PrecedingWindow(Control:TWinControl):HWND;'");
MakeCode(0x4333F4);
MakeCode(0x43341A);
MakeCode(0x433435);
MakeCode(0x433437);
MakeFunction(0x4333F4, 0x43343B);
MakeUnkn(0x43343C, 1);
MakeNameEx(0x43343C, "TWinControl.CreateHandle", 0x20);
MakeComm(0x43343C, "'procedure TWinControl.CreateHandle;'");
MakeCode(0x43343C);
MakeCode(0x4334AB);
MakeCode(0x4334BC);
MakeCode(0x4334CE);
MakeFunction(0x43343C, 0x4334D2);
MakeCode(0x4334D4);
MakeFunction(0x4334D4, 0x4334D7);
MakeUnkn(0x4334D8, 1);
MakeNameEx(0x4334D8, "TWinControl.CustomAlignPosition", 0x20);
MakeComm(0x4334D8, "'procedure TWinControl.CustomAlignPosition(Control:TControl; var NewLeft:Integer; var NewTop:Integer; var NewWidth:Integer; var NewHeight:Integer; var AlignRect:TRect; AlignInfo:TAlignInfo);'");
MakeCode(0x4334D8);
MakeFunction(0x4334D8, 0x4334F2);
MakeUnkn(0x4334F4, 1);
MakeNameEx(0x4334F4, "TWinControl.DestroyHandle", 0x20);
MakeComm(0x4334F4, "'procedure TWinControl.DestroyHandle;'");
MakeCode(0x4334F4);
MakeCode(0x433517);
MakeCode(0x43352D);
MakeCode(0x433537);
MakeFunction(0x4334F4, 0x43353B);
MakeUnkn(0x43353C, 1);
MakeNameEx(0x43353C, "TWinControl.RecreateWnd", 0x20);
MakeComm(0x43353C, "'procedure TWinControl.RecreateWnd;'");
MakeCode(0x43353C);
MakeFunction(0x43353C, 0x433554);
MakeUnkn(0x433554, 1);
MakeNameEx(0x433554, "TWinControl.CMRecreateWnd", 0x20);
MakeComm(0x433554, "'procedure TWinControl.CMRecreateWnd(var Message:TMessage);'");
MakeCode(0x433554);
MakeCode(0x43358D);
MakeFunction(0x433554, 0x433591);
MakeUnkn(0x433594, 1);
MakeNameEx(0x433594, "TWinControl.UpdateShowing", 0x20);
MakeComm(0x433594, "'procedure TWinControl.UpdateShowing;'");
MakeCode(0x433594);
MakeCode(0x4335BB);
MakeCode(0x4335C4);
MakeCode(0x4335C8);
MakeCode(0x4335CA);
MakeCode(0x4335EA);
MakeCode(0x433602);
MakeCode(0x43361B);
MakeCode(0x433687);
MakeFunction(0x433594, 0x43368E);
MakeUnkn(0x433690, 1);
MakeNameEx(0x433690, "TWinControl.UpdateControlState", 0x20);
MakeComm(0x433690, "'procedure TWinControl.UpdateControlState;'");
MakeCode(0x433690);
MakeCode(0x433698);
MakeCode(0x4336A3);
MakeCode(0x4336C4);
MakeCode(0x4336CB);
MakeFunction(0x433690, 0x4336CE);
MakeUnkn(0x4336D0, 1);
MakeNameEx(0x4336D0, "TWinControl.SetParentWindow", 0x20);
MakeComm(0x4336D0, "'procedure TWinControl.SetParentWindow(Value:HWND);'");
MakeCode(0x4336D0);
MakeCode(0x433740);
MakeCode(0x43374D);
MakeCode(0x433754);
MakeFunction(0x4336D0, 0x433757);
MakeUnkn(0x433758, 1);
MakeNameEx(0x433758, "TWinControl.MainWndProc", 0x20);
MakeComm(0x433758, "'procedure TWinControl.MainWndProc(var Message:TMessage);'");
MakeCode(0x433758);
MakeCode(0x433787);
MakeCode(0x433794);
MakeCode(0x43379F);
MakeCode(0x4337A4);
MakeCode(0x4337A6);
MakeCode(0x4337B0);
MakeCode(0x4337C9);
MakeFunction(0x433758, 0x4337CF);
MakeUnkn(0x4337D0, 1);
MakeNameEx(0x4337D0, "GetControlAtPos", 0x20);
MakeComm(0x4337D0, "'function GetControlAtPos(AControl:TControl):Boolean;'");
MakeCode(0x4337D0);
MakeCode(0x433839);
MakeCode(0x433853);
MakeCode(0x433871);
MakeCode(0x433875);
MakeCode(0x433877);
MakeCode(0x433881);
MakeFunction(0x4337D0, 0x433886);
MakeUnkn(0x433888, 1);
MakeNameEx(0x433888, "TWinControl.ControlAtPos", 0x20);
MakeComm(0x433888, "'function TWinControl.ControlAtPos(const Pos:TPoint; AllowDisabled:Boolean; AllowWinControls:Boolean):TControl;'");
MakeCode(0x433888);
MakeCode(0x4338BB);
MakeCode(0x4338D9);
MakeCode(0x4338F2);
MakeCode(0x433910);
MakeFunction(0x433888, 0x43391B);
MakeUnkn(0x43391C, 1);
MakeNameEx(0x43391C, "TWinControl.IsControlMouseMsg", 0x20);
MakeComm(0x43391C, "'function TWinControl.IsControlMouseMsg(var Message:TWMMouse):Boolean;'");
MakeCode(0x43391C);
MakeCode(0x433953);
MakeCode(0x433957);
MakeCode(0x433974);
MakeCode(0x4339A8);
MakeFunction(0x43391C, 0x4339AF);
MakeUnkn(0x4339B0, 1);
MakeNameEx(0x4339B0, "TWinControl.WndProc", 0x20);
MakeComm(0x4339B0, "'procedure TWinControl.WndProc(var Message:TMessage);'");
MakeCode(0x4339B0);
MakeCode(0x4339DB);
MakeCode(0x4339FC);
MakeCode(0x433A26);
MakeCode(0x433A35);
MakeCode(0x433A86);
MakeCode(0x433ABE);
MakeCode(0x433ACB);
MakeCode(0x433B03);
MakeCode(0x433B0C);
MakeFunction(0x4339B0, 0x433B13);
MakeUnkn(0x433B14, 1);
MakeNameEx(0x433B14, "TWinControl.DefaultHandler", 0x20);
MakeComm(0x433B14, "'procedure TWinControl.DefaultHandler(var Message:void );'");
MakeCode(0x433B14);
MakeCode(0x433B54);
MakeCode(0x433B6E);
MakeCode(0x433B88);
MakeCode(0x433BC7);
MakeCode(0x433BD4);
MakeCode(0x433BF3);
MakeCode(0x433C0C);
MakeCode(0x433C15);
MakeFunction(0x433B14, 0x433C1A);
MakeUnkn(0x433C1C, 1);
MakeNameEx(0x433C1C, "DoControlMsg", 0x20);
MakeComm(0x433C1C, "'function DoControlMsg(ControlHandle:HWND; var Message:void ):Boolean;'");
MakeCode(0x433C1C);
MakeCode(0x433C49);
MakeFunction(0x433C1C, 0x433C4F);
MakeUnkn(0x433C50, 1);
MakeNameEx(0x433C50, "TWinControl.PaintHandler", 0x20);
MakeComm(0x433C50, "'procedure TWinControl.PaintHandler(var Message:TWMPaint);'");
MakeCode(0x433C50);
MakeCode(0x433C7D);
MakeCode(0x433CA9);
MakeCode(0x433CCD);
MakeCode(0x433CEF);
MakeCode(0x433D1A);
MakeCode(0x433D1E);
MakeCode(0x433D31);
MakeCode(0x433D3B);
MakeCode(0x433D47);
MakeCode(0x433D54);
MakeCode(0x433D6F);
MakeCode(0x433D70);
MakeCode(0x433D75);
MakeFunction(0x433C50, 0x433D7E);
MakeUnkn(0x433D80, 1);
MakeNameEx(0x433D80, "TWinControl.PaintWindow", 0x20);
MakeComm(0x433D80, "'procedure TWinControl.PaintWindow(DC:HDC);'");
MakeCode(0x433D80);
MakeFunction(0x433D80, 0x433DA5);
MakeUnkn(0x433DA8, 1);
MakeNameEx(0x433DA8, "TWinControl.PaintControls", 0x20);
MakeComm(0x433DA8, "'procedure TWinControl.PaintControls(DC:HDC; First:TControl);'");
MakeCode(0x433DA8);
MakeCode(0x433DDD);
MakeCode(0x433E00);
MakeCode(0x433E15);
MakeCode(0x433E3E);
MakeCode(0x433E76);
MakeCode(0x433EC0);
MakeCode(0x433ECA);
MakeCode(0x433EEB);
MakeCode(0x433F2B);
MakeCode(0x433FC5);
MakeCode(0x433FD0);
MakeFunction(0x433DA8, 0x433FD8);
MakeUnkn(0x433FD8, 1);
MakeNameEx(0x433FD8, "TWinControl.PaintTo", 0x20);
MakeComm(0x433FD8, "'procedure TWinControl.PaintTo(DC:HDC; X:Integer; Y:Integer);'");
MakeCode(0x433FD8);
MakeCode(0x43403D);
MakeCode(0x43405F);
MakeCode(0x4340AC);
MakeCode(0x4340E9);
MakeCode(0x43410B);
MakeCode(0x434113);
MakeFunction(0x433FD8, 0x43412C);
MakeUnkn(0x43412C, 1);
MakeNameEx(0x43412C, "TWinControl.WMPaint", 0x20);
MakeComm(0x43412C, "'procedure TWinControl.WMPaint(var Message:TWMPaint);'");
MakeCode(0x43412C);
MakeCode(0x434148);
MakeCode(0x434167);
MakeCode(0x434175);
MakeCode(0x434285);
MakeFunction(0x43412C, 0x43428C);
MakeUnkn(0x43428C, 1);
MakeNameEx(0x43428C, "TWinControl.WMCharToItem", 0x20);
MakeComm(0x43428C, "'procedure TWinControl.WMCharToItem(var Message:TWMCharToItem);'");
MakeCode(0x43428C);
MakeCode(0x4342A9);
MakeFunction(0x43428C, 0x4342AC);
MakeUnkn(0x4342AC, 1);
MakeNameEx(0x4342AC, "TWinControl.WMNotify", 0x20);
MakeComm(0x4342AC, "'procedure TWinControl.WMNotify(var Message:TWMNotify);'");
MakeCode(0x4342AC);
MakeCode(0x4342CB);
MakeFunction(0x4342AC, 0x4342CE);
MakeUnkn(0x4342D0, 1);
MakeNameEx(0x4342D0, "TWinControl.WMSysColorChange", 0x20);
MakeComm(0x4342D0, "'procedure TWinControl.WMSysColorChange(var Message:TWMSysColorChange);'");
MakeCode(0x4342D0);
MakeFunction(0x4342D0, 0x4342EA);
MakeUnkn(0x4342EC, 1);
MakeNameEx(0x4342EC, "TWinControl.WMWinIniChange", 0x20);
MakeComm(0x4342EC, "'procedure TWinControl.WMWinIniChange(var Message:TMessage);'");
MakeCode(0x4342EC);
MakeFunction(0x4342EC, 0x4342FE);
MakeUnkn(0x434300, 1);
MakeNameEx(0x434300, "TWinControl.WMFontChange", 0x20);
MakeComm(0x434300, "'procedure TWinControl.WMFontChange(var Message:TMessage);'");
MakeCode(0x434300);
MakeFunction(0x434300, 0x43430F);
MakeUnkn(0x434310, 1);
MakeNameEx(0x434310, "TWinControl.WMTimeChange", 0x20);
MakeComm(0x434310, "'procedure TWinControl.WMTimeChange(var Message:TMessage);'");
MakeCode(0x434310);
MakeFunction(0x434310, 0x43431F);
MakeUnkn(0x434320, 1);
MakeNameEx(0x434320, "TWinControl.WMCommand", 0x20);
MakeComm(0x434320, "'procedure TWinControl.WMCommand(var Message:TWMCommand);'");
MakeCode(0x434320);
MakeCode(0x43433D);
MakeFunction(0x434320, 0x434340);
MakeUnkn(0x434340, 1);
MakeNameEx(0x434340, "TWinControl.WMHScroll", 0x20);
MakeComm(0x434340, "'procedure TWinControl.WMHScroll(var Message:TWMHScroll);'");
MakeCode(0x434340);
MakeCode(0x43435D);
MakeFunction(0x434340, 0x434360);
MakeUnkn(0x434360, 1);
MakeNameEx(0x434360, "TWinControl.WMCompareItem", 0x20);
MakeComm(0x434360, "'procedure TWinControl.WMCompareItem(var Message:TWMCompareItem);'");
MakeCode(0x434360);
MakeCode(0x434380);
MakeFunction(0x434360, 0x434383);
MakeUnkn(0x434384, 1);
MakeNameEx(0x434384, "TWinControl.WMDeleteItem", 0x20);
MakeComm(0x434384, "'procedure TWinControl.WMDeleteItem(var Message:TWMDeleteItem);'");
MakeCode(0x434384);
MakeCode(0x4343A4);
MakeFunction(0x434384, 0x4343A7);
MakeUnkn(0x4343A8, 1);
MakeNameEx(0x4343A8, "TWinControl.WMDrawItem", 0x20);
MakeComm(0x4343A8, "'procedure TWinControl.WMDrawItem(var Message:TWMDrawItem);'");
MakeCode(0x4343A8);
MakeCode(0x4343C8);
MakeFunction(0x4343A8, 0x4343CB);
MakeUnkn(0x4343CC, 1);
MakeNameEx(0x4343CC, "TWinControl.WMMeasureItem", 0x20);
MakeComm(0x4343CC, "'procedure TWinControl.WMMeasureItem(var Message:TWMMeasureItem);'");
MakeCode(0x4343CC);
MakeCode(0x4343EC);
MakeFunction(0x4343CC, 0x4343EF);
MakeUnkn(0x4343F0, 1);
MakeNameEx(0x4343F0, "TWinControl.WMEraseBkgnd", 0x20);
MakeComm(0x4343F0, "'procedure TWinControl.WMEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x4343F0);
MakeCode(0x434433);
MakeCode(0x434444);
MakeCode(0x434469);
MakeFunction(0x4343F0, 0x434477);
MakeUnkn(0x434478, 1);
MakeNameEx(0x434478, "TWinControl.WMWindowPosChanged", 0x20);
MakeComm(0x434478, "'procedure TWinControl.WMWindowPosChanged(var Message:TWMWindowPosChanged);'");
MakeCode(0x434478);
MakeCode(0x43449E);
MakeCode(0x4344A2);
MakeCode(0x4344A4);
MakeCode(0x4344BD);
MakeCode(0x4344C1);
MakeCode(0x4344C3);
MakeCode(0x4344DF);
MakeCode(0x4344E3);
MakeCode(0x4344E5);
MakeCode(0x4344FD);
MakeCode(0x43450A);
MakeCode(0x434529);
MakeCode(0x434530);
MakeFunction(0x434478, 0x434535);
MakeUnkn(0x434538, 1);
MakeNameEx(0x434538, "TWinControl.WMWindowPosChanging", 0x20);
MakeComm(0x434538, "'procedure TWinControl.WMWindowPosChanging(var Message:TWMWindowPosChanging);'");
MakeCode(0x434538);
MakeCode(0x434573);
MakeFunction(0x434538, 0x434580);
MakeUnkn(0x434588, 1);
MakeNameEx(0x434588, "TWinControl.WMSize", 0x20);
MakeComm(0x434588, "'procedure TWinControl.WMSize(var Message:TWMSize);'");
MakeCode(0x434588);
MakeCode(0x4345B6);
MakeFunction(0x434588, 0x4345B9);
MakeUnkn(0x4345BC, 1);
MakeNameEx(0x4345BC, "TWinControl.WMMove", 0x20);
MakeComm(0x4345BC, "'procedure TWinControl.WMMove(var Message:TWMMove);'");
MakeCode(0x4345BC);
MakeFunction(0x4345BC, 0x4345CF);
MakeUnkn(0x4345D0, 1);
MakeNameEx(0x4345D0, "TWinControl.WMSetCursor", 0x20);
MakeComm(0x4345D0, "'procedure TWinControl.WMSetCursor(var Message:TWMSetCursor);'");
MakeCode(0x4345D0);
MakeCode(0x434645);
MakeCode(0x434649);
MakeCode(0x43465A);
MakeCode(0x43465E);
MakeCode(0x434681);
MakeCode(0x4346BF);
MakeCode(0x4346C8);
MakeFunction(0x4345D0, 0x4346CF);
MakeUnkn(0x4346D0, 1);
MakeNameEx(0x4346D0, "TWinControl.WMKillFocus", 0x20);
MakeComm(0x4346D0, "'procedure TWinControl.WMKillFocus(var Message:TWMSetFocus);'");
MakeCode(0x4346D0);
MakeFunction(0x4346D0, 0x4346E3);
MakeUnkn(0x4346E4, 1);
MakeNameEx(0x4346E4, "TWinControl.WMSetFocus", 0x20);
MakeComm(0x4346E4, "'procedure TWinControl.WMSetFocus(var Message:TWMSetFocus);'");
MakeCode(0x4346E4);
MakeFunction(0x4346E4, 0x4346F7);
MakeUnkn(0x4346F8, 1);
MakeNameEx(0x4346F8, "TWinControl.WMIMEStartComp", 0x20);
MakeComm(0x4346F8, "'procedure TWinControl.WMIMEStartComp(var Message:TMessage);'");
MakeCode(0x4346F8);
MakeFunction(0x4346F8, 0x43470B);
MakeUnkn(0x43470C, 1);
MakeNameEx(0x43470C, "TWinControl.WMIMEEndComp", 0x20);
MakeComm(0x43470C, "'procedure TWinControl.WMIMEEndComp(var Message:TMessage);'");
MakeCode(0x43470C);
MakeFunction(0x43470C, 0x43471F);
MakeUnkn(0x434720, 1);
MakeNameEx(0x434720, "TWinControl.ResetIme", 0x20);
MakeComm(0x434720, "'procedure TWinControl.ResetIme;'");
MakeCode(0x434720);
MakeCode(0x4347CF);
MakeCode(0x4347D7);
MakeCode(0x4347E9);
MakeCode(0x4347F6);
MakeCode(0x4347FF);
MakeCode(0x434804);
MakeFunction(0x434720, 0x43480C);
MakeUnkn(0x43480C, 1);
MakeNameEx(0x43480C, "TWinControl.SetIme", 0x20);
MakeComm(0x43480C, "'procedure TWinControl.SetIme;'");
MakeCode(0x43480C);
MakeCode(0x434869);
MakeCode(0x434880);
MakeCode(0x43488D);
MakeCode(0x434896);
MakeCode(0x43489B);
MakeFunction(0x43480C, 0x4348A1);
MakeUnkn(0x4348A4, 1);
MakeNameEx(0x4348A4, "TWinControl.DoAddDockClient", 0x20);
MakeComm(0x4348A4, "'procedure TWinControl.DoAddDockClient(Client:TControl; const ARect:TRect);'");
MakeCode(0x4348A4);
MakeFunction(0x4348A4, 0x4348B2);
MakeUnkn(0x4348B4, 1);
MakeNameEx(0x4348B4, "TWinControl.DoRemoveDockClient", 0x20);
MakeComm(0x4348B4, "'procedure TWinControl.DoRemoveDockClient(Client:TControl);'");
MakeCode(0x4348B4);
MakeFunction(0x4348B4, 0x4348B5);
MakeUnkn(0x4348B8, 1);
MakeNameEx(0x4348B8, "TWinControl.DoEnter", 0x20);
MakeComm(0x4348B8, "'procedure TWinControl.DoEnter;'");
MakeCode(0x4348B8);
MakeCode(0x4348D3);
MakeFunction(0x4348B8, 0x4348D5);
MakeUnkn(0x4348D8, 1);
MakeNameEx(0x4348D8, "TWinControl.DoExit", 0x20);
MakeComm(0x4348D8, "'procedure TWinControl.DoExit;'");
MakeCode(0x4348D8);
MakeCode(0x4348F3);
MakeFunction(0x4348D8, 0x4348F5);
MakeUnkn(0x4348F8, 1);
MakeNameEx(0x4348F8, "TWinControl.DockDrop", 0x20);
MakeComm(0x4348F8, "'procedure TWinControl.DockDrop(Source:TDragDockObject; X:Integer; Y:Integer);'");
MakeCode(0x4348F8);
MakeCode(0x434941);
MakeFunction(0x4348F8, 0x434948);
MakeUnkn(0x434948, 1);
MakeNameEx(0x434948, "TWinControl.DoDockOver", 0x20);
MakeComm(0x434948, "'procedure TWinControl.DoDockOver(Source:TDragDockObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean);'");
MakeCode(0x434948);
MakeCode(0x434975);
MakeFunction(0x434948, 0x43497A);
MakeUnkn(0x43497C, 1);
MakeNameEx(0x43497C, "TWinControl.DockOver", 0x20);
MakeComm(0x43497C, "'procedure TWinControl.DockOver(Source:TDragDockObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean);'");
MakeCode(0x43497C);
MakeFunction(0x43497C, 0x4349BB);
MakeUnkn(0x4349BC, 1);
MakeNameEx(0x4349BC, "TWinControl.DoUnDock", 0x20);
MakeComm(0x4349BC, "'procedure TWinControl.DoUnDock(NewTarget:TWinControl; Client:TControl);'");
MakeCode(0x4349BC);
MakeCode(0x4349EA);
MakeCode(0x434A03);
MakeCode(0x434A07);
MakeCode(0x434A09);
MakeFunction(0x4349BC, 0x434A14);
MakeUnkn(0x434A14, 1);
MakeNameEx(0x434A14, "TWinControl.ReloadDockedControl", 0x20);
MakeComm(0x434A14, "'procedure TWinControl.ReloadDockedControl(const AControlName:AnsiString; var AControl:TControl);'");
MakeCode(0x434A14);
MakeFunction(0x434A14, 0x434A38);
MakeUnkn(0x434A38, 1);
MakeNameEx(0x434A38, "TWinControl.GetDockClientCount", 0x20);
MakeComm(0x434A38, "'function TWinControl.GetDockClientCount:Integer;'");
MakeCode(0x434A38);
MakeCode(0x434A46);
MakeFunction(0x434A38, 0x434A49);
MakeUnkn(0x434A4C, 1);
MakeNameEx(0x434A4C, "TWinControl.GetDockClients", 0x20);
MakeComm(0x434A4C, "'function TWinControl.GetDockClients(Index:Integer):TControl;'");
MakeCode(0x434A4C);
MakeCode(0x434A68);
MakeCode(0x434A6A);
MakeFunction(0x434A4C, 0x434A6E);
MakeUnkn(0x434A70, 1);
MakeNameEx(0x434A70, "TWinControl.GetSiteInfo", 0x20);
MakeComm(0x434A70, "'procedure TWinControl.GetSiteInfo(Client:TControl; var InfluenceRect:TRect; MousePos:TPoint; var CanDock:Boolean);'");
MakeCode(0x434A70);
MakeCode(0x434AC2);
MakeFunction(0x434A70, 0x434ACB);
MakeUnkn(0x434ACC, 1);
MakeNameEx(0x434ACC, "TWinControl.GetVisibleDockClientCount", 0x20);
MakeComm(0x434ACC, "'function TWinControl.GetVisibleDockClientCount:Integer;'");
MakeCode(0x434ACC);
MakeCode(0x434AE6);
MakeCode(0x434AFA);
MakeCode(0x434B00);
MakeFunction(0x434ACC, 0x434B06);
MakeUnkn(0x434B08, 1);
MakeNameEx(0x434B08, "TWinControl.sub_00434B08", 0x20);
MakeComm(0x434B08, "'procedure TWinControl.sub_00434B08;'");
MakeCode(0x434B08);
MakeFunction(0x434B08, 0x434B09);
MakeUnkn(0x434B0C, 1);
MakeNameEx(0x434B0C, "TWinControl.CreateDockManager", 0x20);
MakeComm(0x434B0C, "'procedure TWinControl.CreateDockManager;'");
MakeCode(0x434B0C);
MakeCode(0x434B42);
MakeCode(0x434B4B);
MakeCode(0x434B58);
MakeCode(0x434B6A);
MakeCode(0x434B6C);
MakeFunction(0x434B0C, 0x434B75);
MakeUnkn(0x434B78, 1);
MakeNameEx(0x434B78, "TWinControl.SetDockSite", 0x20);
MakeComm(0x434B78, "'procedure TWinControl.SetDockSite(Value:Boolean);'");
MakeCode(0x434B78);
MakeCode(0x434BD3);
MakeCode(0x434BEE);
MakeCode(0x434C0A);
MakeCode(0x434C17);
MakeCode(0x434C20);
MakeCode(0x434C25);
MakeFunction(0x434B78, 0x434C2D);
MakeUnkn(0x434C30, 1);
MakeNameEx(0x434C30, "TWinControl.CMDockClient", 0x20);
MakeComm(0x434C30, "'procedure TWinControl.CMDockClient(var Message:TCMDockClient);'");
MakeCode(0x434C30);
MakeCode(0x434CDC);
MakeCode(0x434CE9);
MakeCode(0x434CF2);
MakeCode(0x434CF7);
MakeCode(0x434D0A);
MakeCode(0x434D14);
MakeFunction(0x434C30, 0x434D1B);
MakeUnkn(0x434D1C, 1);
MakeNameEx(0x434D1C, "TWinControl.CMUnDockClient", 0x20);
MakeComm(0x434D1C, "'procedure TWinControl.CMUnDockClient(var Message:TCMUnDockClient);'");
MakeCode(0x434D1C);
MakeFunction(0x434D1C, 0x434D42);
MakeUnkn(0x434D44, 1);
MakeNameEx(0x434D44, "TWinControl.CMFloat", 0x20);
MakeComm(0x434D44, "'procedure TWinControl.CMFloat(var Message:TCMFloat);'");
MakeCode(0x434D44);
MakeCode(0x434D92);
MakeCode(0x434D9F);
MakeCode(0x434DAD);
MakeCode(0x434DAE);
MakeCode(0x434DB3);
MakeCode(0x434DB5);
MakeFunction(0x434D44, 0x434DC5);
MakeUnkn(0x434DC8, 1);
MakeNameEx(0x434DC8, "TWinControl.KeyDown", 0x20);
MakeComm(0x434DC8, "'procedure TWinControl.KeyDown(var Key:Word; Shift:TShiftState);'");
MakeCode(0x434DC8);
MakeCode(0x434DED);
MakeFunction(0x434DC8, 0x434DF0);
MakeUnkn(0x434DF0, 1);
MakeNameEx(0x434DF0, "TWinControl.DoKeyDown", 0x20);
MakeComm(0x434DF0, "'function TWinControl.DoKeyDown(var Message:TWMKey):Boolean;'");
MakeCode(0x434DF0);
MakeCode(0x434E22);
MakeCode(0x434E4B);
MakeCode(0x434E4D);
MakeFunction(0x434DF0, 0x434E55);
MakeUnkn(0x434E58, 1);
MakeNameEx(0x434E58, "TWinControl.WMKeyDown", 0x20);
MakeComm(0x434E58, "'procedure TWinControl.WMKeyDown(var Message:TWMKeyDown);'");
MakeCode(0x434E58);
MakeCode(0x434E74);
MakeFunction(0x434E58, 0x434E82);
MakeUnkn(0x434E84, 1);
MakeNameEx(0x434E84, "TWinControl.WMSysKeyDown", 0x20);
MakeComm(0x434E84, "'procedure TWinControl.WMSysKeyDown(var Message:TWMKeyDown);'");
MakeCode(0x434E84);
MakeCode(0x434EA0);
MakeFunction(0x434E84, 0x434EAE);
MakeUnkn(0x434EB0, 1);
MakeNameEx(0x434EB0, "TWinControl.KeyUp", 0x20);
MakeComm(0x434EB0, "'procedure TWinControl.KeyUp(var Key:Word; Shift:TShiftState);'");
MakeCode(0x434EB0);
MakeCode(0x434ED5);
MakeFunction(0x434EB0, 0x434ED8);
MakeUnkn(0x434ED8, 1);
MakeNameEx(0x434ED8, "TWinControl.DoKeyUp", 0x20);
MakeComm(0x434ED8, "'function TWinControl.DoKeyUp(var Message:TWMKey):Boolean;'");
MakeCode(0x434ED8);
MakeCode(0x434F0A);
MakeCode(0x434F33);
MakeCode(0x434F35);
MakeFunction(0x434ED8, 0x434F3D);
MakeUnkn(0x434F40, 1);
MakeNameEx(0x434F40, "TWinControl.WMKeyUp", 0x20);
MakeComm(0x434F40, "'procedure TWinControl.WMKeyUp(var Message:TWMKeyUp);'");
MakeCode(0x434F40);
MakeCode(0x434F5C);
MakeFunction(0x434F40, 0x434F5F);
MakeUnkn(0x434F60, 1);
MakeNameEx(0x434F60, "TWinControl.WMSysKeyUp", 0x20);
MakeComm(0x434F60, "'procedure TWinControl.WMSysKeyUp(var Message:TWMKeyUp);'");
MakeCode(0x434F60);
MakeCode(0x434F7C);
MakeFunction(0x434F60, 0x434F7F);
MakeUnkn(0x434F80, 1);
MakeNameEx(0x434F80, "TWinControl.KeyPress", 0x20);
MakeComm(0x434F80, "'procedure TWinControl.KeyPress(var Key:Char);'");
MakeCode(0x434F80);
MakeCode(0x434F9D);
MakeFunction(0x434F80, 0x434F9F);
MakeUnkn(0x434FA0, 1);
MakeNameEx(0x434FA0, "TWinControl.DoKeyPress", 0x20);
MakeComm(0x434FA0, "'function TWinControl.DoKeyPress(var Message:TWMKey):Boolean;'");
MakeCode(0x434FA0);
MakeCode(0x434FD2);
MakeCode(0x434FFA);
MakeCode(0x434FFC);
MakeFunction(0x434FA0, 0x435004);
MakeUnkn(0x435004, 1);
MakeNameEx(0x435004, "TWinControl.WMChar", 0x20);
MakeComm(0x435004, "'procedure TWinControl.WMChar(var Message:TWMChar);'");
MakeCode(0x435004);
MakeCode(0x435020);
MakeFunction(0x435004, 0x435023);
MakeUnkn(0x435024, 1);
MakeNameEx(0x435024, "TraverseControls", 0x20);
MakeComm(0x435024, "'function TraverseControls(Container:TWinControl):Boolean;'");
MakeCode(0x435024);
MakeCode(0x435056);
MakeCode(0x43509C);
MakeCode(0x4350BD);
MakeCode(0x4350C3);
MakeCode(0x4350C7);
MakeFunction(0x435024, 0x4350D1);
MakeUnkn(0x4350D4, 1);
MakeNameEx(0x4350D4, "TWinControl.WMSysCommand", 0x20);
MakeComm(0x4350D4, "'procedure TWinControl.WMSysCommand(var Message:TWMSysCommand);'");
MakeCode(0x4350D4);
MakeCode(0x43514D);
MakeCode(0x43516C);
MakeCode(0x435176);
MakeFunction(0x4350D4, 0x43517B);
MakeUnkn(0x43517C, 1);
MakeNameEx(0x43517C, "TWinControl.WMVKeyToItem", 0x20);
MakeComm(0x43517C, "'procedure TWinControl.WMVKeyToItem(var Message:TWMVKeyToItem);'");
MakeCode(0x43517C);
MakeCode(0x435199);
MakeFunction(0x43517C, 0x43519C);
MakeUnkn(0x43519C, 1);
MakeNameEx(0x43519C, "TWinControl.WMParentNotify", 0x20);
MakeComm(0x43519C, "'procedure TWinControl.WMParentNotify(var Message:TWMParentNotify);'");
MakeCode(0x43519C);
MakeCode(0x4351B3);
MakeCode(0x4351C1);
MakeCode(0x4351CA);
MakeFunction(0x43519C, 0x4351CE);
MakeUnkn(0x4351D0, 1);
MakeNameEx(0x4351D0, "TWinControl.WMVScroll", 0x20);
MakeComm(0x4351D0, "'procedure TWinControl.WMVScroll(var Message:TWMVScroll);'");
MakeCode(0x4351D0);
MakeCode(0x4351ED);
MakeFunction(0x4351D0, 0x4351F0);
MakeUnkn(0x4351F0, 1);
MakeNameEx(0x4351F0, "TWinControl.WMDestroy", 0x20);
MakeComm(0x4351F0, "'procedure TWinControl.WMDestroy(var Message:TWMDestroy);'");
MakeCode(0x4351F0);
MakeFunction(0x4351F0, 0x435224);
MakeUnkn(0x435224, 1);
MakeNameEx(0x435224, "TWinControl.WMNCDestroy", 0x20);
MakeComm(0x435224, "'procedure TWinControl.WMNCDestroy(var Message:TWMNCDestroy);'");
MakeCode(0x435224);
MakeFunction(0x435224, 0x43523F);
MakeUnkn(0x435240, 1);
MakeNameEx(0x435240, "TWinControl.WMNCHitTest", 0x20);
MakeComm(0x435240, "'procedure TWinControl.WMNCHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x435240);
MakeCode(0x435258);
MakeFunction(0x435240, 0x435261);
MakeUnkn(0x435264, 1);
MakeNameEx(0x435264, "TWinControl.PaletteChanged", 0x20);
MakeComm(0x435264, "'procedure TWinControl.PaletteChanged(Foreground:Boolean);'");
MakeCode(0x435264);
MakeCode(0x43528F);
MakeCode(0x4352B1);
MakeFunction(0x435264, 0x4352B9);
MakeUnkn(0x4352BC, 1);
MakeNameEx(0x4352BC, "TWinControl.WMQueryNewPalette", 0x20);
MakeComm(0x4352BC, "'procedure TWinControl.WMQueryNewPalette(var Message:TMessage);'");
MakeCode(0x4352BC);
MakeFunction(0x4352BC, 0x4352DF);
MakeUnkn(0x4352E0, 1);
MakeNameEx(0x4352E0, "TWinControl.WMPaletteChanged", 0x20);
MakeComm(0x4352E0, "'procedure TWinControl.WMPaletteChanged(var Message:TMessage);'");
MakeCode(0x4352E0);
MakeFunction(0x4352E0, 0x4352FE);
MakeUnkn(0x435300, 1);
MakeNameEx(0x435300, "TWinControl.CMShowHintChanged", 0x20);
MakeComm(0x435300, "'procedure TWinControl.CMShowHintChanged(var Message:TMessage);'");
MakeCode(0x435300);
MakeFunction(0x435300, 0x435317);
MakeUnkn(0x435318, 1);
MakeNameEx(0x435318, "TWinControl.CMBiDiModeChanged", 0x20);
MakeComm(0x435318, "'procedure TWinControl.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x435318);
MakeCode(0x43533F);
MakeFunction(0x435318, 0x43534D);
MakeUnkn(0x435350, 1);
MakeNameEx(0x435350, "TWinControl.CMEnter", 0x20);
MakeComm(0x435350, "'procedure TWinControl.CMEnter(var Message:TWMNoParams);'");
MakeCode(0x435350);
MakeCode(0x435390);
MakeCode(0x4353B4);
MakeFunction(0x435350, 0x4353C2);
MakeUnkn(0x4353C4, 1);
MakeNameEx(0x4353C4, "TWinControl.CMExit", 0x20);
MakeComm(0x4353C4, "'procedure TWinControl.CMExit(var Message:TWMNoParams);'");
MakeCode(0x4353C4);
MakeFunction(0x4353C4, 0x4353D0);
MakeUnkn(0x4353D0, 1);
MakeNameEx(0x4353D0, "TWinControl.CMDesignHitTest", 0x20);
MakeComm(0x4353D0, "'procedure TWinControl.CMDesignHitTest(var Message:TWMMouse);'");
MakeCode(0x4353D0);
MakeCode(0x4353EC);
MakeFunction(0x4353D0, 0x4353EF);
MakeUnkn(0x4353F0, 1);
MakeNameEx(0x4353F0, "TWinControl.CMChanged", 0x20);
MakeComm(0x4353F0, "'procedure TWinControl.CMChanged(var Message:TMessage);'");
MakeCode(0x4353F0);
MakeCode(0x435400);
MakeFunction(0x4353F0, 0x435402);
MakeUnkn(0x435404, 1);
MakeNameEx(0x435404, "TWinControl.CMChildKey", 0x20);
MakeComm(0x435404, "'procedure TWinControl.CMChildKey(var Message:TMessage);'");
MakeCode(0x435404);
MakeCode(0x435414);
MakeFunction(0x435404, 0x435416);
MakeUnkn(0x435418, 1);
MakeNameEx(0x435418, "TWinControl.CMDialogKey", 0x20);
MakeComm(0x435418, "'procedure TWinControl.CMDialogKey(var Message:TWMKey);'");
MakeCode(0x435418);
MakeFunction(0x435418, 0x43541E);
MakeUnkn(0x435420, 1);
MakeNameEx(0x435420, "TWinControl.CMDialogChar", 0x20);
MakeComm(0x435420, "'procedure TWinControl.CMDialogChar(var Message:TWMKey);'");
MakeCode(0x435420);
MakeFunction(0x435420, 0x435426);
MakeUnkn(0x435428, 1);
MakeNameEx(0x435428, "TWinControl.CMFocusChanged", 0x20);
MakeComm(0x435428, "'procedure TWinControl.CMFocusChanged(var Message:TCMFocusChanged);'");
MakeCode(0x435428);
MakeFunction(0x435428, 0x43542E);
MakeUnkn(0x435430, 1);
MakeNameEx(0x435430, "TWinControl.CMVisibleChanged", 0x20);
MakeComm(0x435430, "'procedure TWinControl.CMVisibleChanged(var Message:TMessage);'");
MakeCode(0x435430);
MakeCode(0x435448);
MakeCode(0x435454);
MakeCode(0x43545B);
MakeFunction(0x435430, 0x43545D);
MakeUnkn(0x435460, 1);
MakeNameEx(0x435460, "TWinControl.CMShowingChanged", 0x20);
MakeComm(0x435460, "'procedure TWinControl.CMShowingChanged(var Message:TMessage);'");
MakeCode(0x435460);
MakeFunction(0x435460, 0x435488);
MakeUnkn(0x435488, 1);
MakeNameEx(0x435488, "TWinControl.CMEnabledChanged", 0x20);
MakeComm(0x435488, "'procedure TWinControl.CMEnabledChanged(var Message:TMessage);'");
MakeCode(0x435488);
MakeCode(0x4354A5);
MakeCode(0x4354CE);
MakeFunction(0x435488, 0x4354D0);
MakeUnkn(0x4354D0, 1);
MakeNameEx(0x4354D0, "TWinControl.CMColorChanged", 0x20);
MakeComm(0x4354D0, "'procedure TWinControl.CMColorChanged(var Message:TMessage);'");
MakeCode(0x4354D0);
MakeFunction(0x4354D0, 0x4354F5);
MakeUnkn(0x4354F8, 1);
MakeNameEx(0x4354F8, "TWinControl.CMFontChanged", 0x20);
MakeComm(0x4354F8, "'procedure TWinControl.CMFontChanged(var Message:TMessage);'");
MakeCode(0x4354F8);
MakeCode(0x435525);
MakeFunction(0x4354F8, 0x435532);
MakeUnkn(0x435534, 1);
MakeNameEx(0x435534, "TWinControl.CMCursorChanged", 0x20);
MakeComm(0x435534, "'procedure TWinControl.CMCursorChanged(var Message:TMessage);'");
MakeCode(0x435534);
MakeCode(0x43556D);
MakeFunction(0x435534, 0x435571);
MakeUnkn(0x435574, 1);
MakeNameEx(0x435574, "TWinControl.CMBorderChanged", 0x20);
MakeComm(0x435574, "'procedure TWinControl.CMBorderChanged(var Message:TMessage);'");
MakeCode(0x435574);
MakeCode(0x4355AF);
MakeFunction(0x435574, 0x4355B1);
MakeUnkn(0x4355B4, 1);
MakeNameEx(0x4355B4, "TWinControl.CMCtl3DChanged", 0x20);
MakeComm(0x4355B4, "'procedure TWinControl.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x4355B4);
MakeCode(0x4355E5);
MakeFunction(0x4355B4, 0x4355F2);
MakeUnkn(0x4355F4, 1);
MakeNameEx(0x4355F4, "TWinControl.CMParentCtl3DChanged", 0x20);
MakeComm(0x4355F4, "'procedure TWinControl.CMParentCtl3DChanged(var Message:TMessage);'");
MakeCode(0x4355F4);
MakeCode(0x435618);
MakeCode(0x435628);
MakeCode(0x43562F);
MakeFunction(0x4355F4, 0x435631);
MakeUnkn(0x435634, 1);
MakeNameEx(0x435634, "TWinControl.CMSysColorChange", 0x20);
MakeComm(0x435634, "'procedure TWinControl.CMSysColorChange;'");
MakeCode(0x435634);
MakeFunction(0x435634, 0x43563A);
MakeUnkn(0x43563C, 1);
MakeNameEx(0x43563C, "TWinControl.CMWinIniChange", 0x20);
MakeComm(0x43563C, "'procedure TWinControl.CMWinIniChange;'");
MakeCode(0x43563C);
MakeFunction(0x43563C, 0x435642);
MakeUnkn(0x435644, 1);
MakeNameEx(0x435644, "TWinControl.CMFontChange", 0x20);
MakeComm(0x435644, "'procedure TWinControl.CMFontChange;'");
MakeCode(0x435644);
MakeFunction(0x435644, 0x43564A);
MakeUnkn(0x43564C, 1);
MakeNameEx(0x43564C, "TWinControl.CMTimeChange", 0x20);
MakeComm(0x43564C, "'procedure TWinControl.CMTimeChange;'");
MakeCode(0x43564C);
MakeFunction(0x43564C, 0x435652);
MakeUnkn(0x435654, 1);
MakeNameEx(0x435654, "TWinControl.CMDrag", 0x20);
MakeComm(0x435654, "'procedure TWinControl.CMDrag(var Message:TCMDrag);'");
MakeCode(0x435654);
MakeCode(0x43566F);
MakeCode(0x435681);
MakeCode(0x4356A9);
MakeFunction(0x435654, 0x4356B0);
MakeUnkn(0x4356B0, 1);
MakeNameEx(0x4356B0, "TWinControl.CMControlListChange", 0x20);
MakeComm(0x4356B0, "'procedure TWinControl.CMControlListChange(var Message:TMessage);'");
MakeCode(0x4356B0);
MakeCode(0x4356C0);
MakeFunction(0x4356B0, 0x4356C2);
MakeUnkn(0x4356C4, 1);
MakeNameEx(0x4356C4, "TWinControl.CMSysFontChanged", 0x20);
MakeComm(0x4356C4, "'procedure TWinControl.CMSysFontChanged(var Message:TMessage);'");
MakeCode(0x4356C4);
MakeFunction(0x4356C4, 0x4356DF);
MakeUnkn(0x4356E0, 1);
MakeNameEx(0x4356E0, "TWinControl.IsMenuKey", 0x20);
MakeComm(0x4356E0, "'function TWinControl.IsMenuKey(var Message:TWMKey):Boolean;'");
MakeCode(0x4356E0);
MakeCode(0x435701);
MakeCode(0x435729);
MakeCode(0x435730);
MakeCode(0x43574F);
MakeCode(0x435769);
MakeFunction(0x4356E0, 0x435774);
MakeUnkn(0x435774, 1);
MakeNameEx(0x435774, "TWinControl.CNKeyDown", 0x20);
MakeComm(0x435774, "'procedure TWinControl.CNKeyDown(var Message:TWMKeyDown);'");
MakeCode(0x435774);
MakeCode(0x4357DF);
MakeCode(0x4357EE);
MakeCode(0x4357F5);
MakeCode(0x4357FC);
MakeCode(0x435801);
MakeCode(0x43584C);
MakeCode(0x435851);
MakeFunction(0x435774, 0x435855);
MakeUnkn(0x435858, 1);
MakeNameEx(0x435858, "TWinControl.CNKeyUp", 0x20);
MakeComm(0x435858, "'procedure TWinControl.CNKeyUp(var Message:TWMKeyUp);'");
MakeCode(0x435858);
MakeCode(0x435884);
MakeCode(0x435891);
MakeCode(0x4358A5);
MakeFunction(0x435858, 0x4358A9);
MakeUnkn(0x4358AC, 1);
MakeNameEx(0x4358AC, "TWinControl.CNChar", 0x20);
MakeComm(0x4358AC, "'procedure TWinControl.CNChar(var Message:TWMChar);'");
MakeCode(0x4358AC);
MakeCode(0x4358F0);
MakeCode(0x4358F5);
MakeFunction(0x4358AC, 0x4358F8);
MakeUnkn(0x4358F8, 1);
MakeNameEx(0x4358F8, "TWinControl.CNSysKeyDown", 0x20);
MakeComm(0x4358F8, "'procedure TWinControl.CNSysKeyDown(var Message:TWMKeyDown);'");
MakeCode(0x4358F8);
MakeCode(0x43594A);
MakeCode(0x43594F);
MakeFunction(0x4358F8, 0x435952);
MakeUnkn(0x435954, 1);
MakeNameEx(0x435954, "TWinControl.CNSysChar", 0x20);
MakeComm(0x435954, "'procedure TWinControl.CNSysChar(var Message:TWMChar);'");
MakeCode(0x435954);
MakeCode(0x435983);
MakeFunction(0x435954, 0x435986);
MakeUnkn(0x435988, 1);
MakeNameEx(0x435988, "TWinControl.SetBounds", 0x20);
MakeComm(0x435988, "'procedure TWinControl.SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer);'");
MakeCode(0x435988);
MakeCode(0x4359B5);
MakeCode(0x4359EC);
MakeCode(0x435A44);
MakeCode(0x435A56);
MakeFunction(0x435988, 0x435A5F);
MakeUnkn(0x435A60, 1);
MakeNameEx(0x435A60, "TWinControl.ScaleControls", 0x20);
MakeComm(0x435A60, "'procedure TWinControl.ScaleControls(M:Integer; D:Integer);'");
MakeCode(0x435A60);
MakeCode(0x435A81);
MakeCode(0x435A9E);
MakeFunction(0x435A60, 0x435AA5);
MakeUnkn(0x435AA8, 1);
MakeNameEx(0x435AA8, "TWinControl.ChangeScale", 0x20);
MakeComm(0x435AA8, "'procedure TWinControl.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x435AA8);
MakeCode(0x435B24);
MakeCode(0x435B30);
MakeCode(0x435B3D);
MakeCode(0x435B46);
MakeCode(0x435B4B);
MakeFunction(0x435AA8, 0x435B52);
MakeUnkn(0x435B54, 1);
MakeNameEx(0x435B54, "TWinControl.ScrollBy", 0x20);
MakeComm(0x435B54, "'procedure TWinControl.ScrollBy(DeltaX:Integer; DeltaY:Integer);'");
MakeCode(0x435B54);
MakeCode(0x435B78);
MakeCode(0x435B7C);
MakeCode(0x435B7E);
MakeCode(0x435BA3);
MakeCode(0x435BB4);
MakeCode(0x435BD9);
MakeCode(0x435BE8);
MakeCode(0x435C19);
MakeCode(0x435C1D);
MakeFunction(0x435B54, 0x435C2C);
MakeUnkn(0x435C2C, 1);
MakeNameEx(0x435C2C, "TWinControl.ShowControl", 0x20);
MakeComm(0x435C2C, "'procedure TWinControl.ShowControl(AControl:TControl);'");
MakeCode(0x435C2C);
MakeCode(0x435C40);
MakeFunction(0x435C2C, 0x435C42);
MakeUnkn(0x435C44, 1);
MakeNameEx(0x435C44, "TWinControl.SetZOrderPosition", 0x20);
MakeComm(0x435C44, "'procedure TWinControl.SetZOrderPosition(Position:Integer);'");
MakeCode(0x435C44);
MakeCode(0x435C64);
MakeCode(0x435C89);
MakeCode(0x435C90);
MakeCode(0x435CAF);
MakeCode(0x435CC3);
MakeCode(0x435CD8);
MakeCode(0x435CED);
MakeCode(0x435CFF);
MakeCode(0x435D16);
MakeFunction(0x435C44, 0x435D1B);
MakeUnkn(0x435D1C, 1);
MakeNameEx(0x435D1C, "TWinControl.SetZOrder", 0x20);
MakeComm(0x435D1C, "'procedure TWinControl.SetZOrder(TopMost:Boolean);'");
MakeCode(0x435D1C);
MakeCode(0x435D35);
MakeCode(0x435D37);
MakeCode(0x435D46);
MakeCode(0x435D52);
MakeCode(0x435D78);
MakeFunction(0x435D1C, 0x435D7B);
MakeUnkn(0x435D7C, 1);
MakeNameEx(0x435D7C, "TWinControl.GetDeviceContext", 0x20);
MakeComm(0x435D7C, "'function TWinControl.GetDeviceContext(var WindowHandle:HWND):HDC;'");
MakeCode(0x435D7C);
MakeCode(0x435D9B);
MakeCode(0x435DA8);
MakeCode(0x435DC3);
MakeFunction(0x435D7C, 0x435DCE);
MakeUnkn(0x435DD0, 1);
MakeNameEx(0x435DD0, "TWinControl.Invalidate", 0x20);
MakeComm(0x435DD0, "'procedure TWinControl.Invalidate;'");
MakeCode(0x435DD0);
MakeFunction(0x435DD0, 0x435DDF);
MakeUnkn(0x435DE0, 1);
MakeNameEx(0x435DE0, "TWinControl.CMInvalidate", 0x20);
MakeComm(0x435DE0, "'procedure TWinControl.CMInvalidate(var Message:TMessage);'");
MakeCode(0x435DE0);
MakeCode(0x435E0A);
MakeCode(0x435E4B);
MakeCode(0x435E68);
MakeCode(0x435E6C);
MakeFunction(0x435DE0, 0x435E70);
MakeUnkn(0x435E70, 1);
MakeNameEx(0x435E70, "TWinControl.Update", 0x20);
MakeComm(0x435E70, "'procedure TWinControl.Update;'");
MakeCode(0x435E70);
MakeCode(0x435E8A);
MakeFunction(0x435E70, 0x435E8C);
MakeUnkn(0x435E8C, 1);
MakeNameEx(0x435E8C, "TWinControl.Repaint", 0x20);
MakeComm(0x435E8C, "'procedure TWinControl.Repaint;'");
MakeCode(0x435E8C);
MakeFunction(0x435E8C, 0x435EA2);
MakeUnkn(0x435EA4, 1);
MakeNameEx(0x435EA4, "TWinControl.InvalidateFrame", 0x20);
MakeComm(0x435EA4, "'procedure TWinControl.InvalidateFrame;'");
MakeCode(0x435EA4);
MakeFunction(0x435EA4, 0x435EDC);
MakeUnkn(0x435EDC, 1);
MakeNameEx(0x435EDC, "TWinControl.CanFocus", 0x20);
MakeComm(0x435EDC, "'procedure TWinControl.CanFocus;'");
MakeCode(0x435EDC);
MakeCode(0x435EF6);
MakeCode(0x435F0E);
MakeCode(0x435F12);
MakeFunction(0x435EDC, 0x435F19);
MakeUnkn(0x435F1C, 1);
MakeNameEx(0x435F1C, "TWinControl.SetFocus", 0x20);
MakeComm(0x435F1C, "'procedure TWinControl.SetFocus;'");
MakeCode(0x435F1C);
MakeCode(0x435F33);
MakeCode(0x435F4B);
MakeCode(0x435F52);
MakeFunction(0x435F1C, 0x435F54);
MakeUnkn(0x435F54, 1);
MakeNameEx(0x435F54, "TWinControl.Focused", 0x20);
MakeComm(0x435F54, "'procedure TWinControl.Focused;'");
MakeCode(0x435F54);
MakeCode(0x435F6D);
MakeCode(0x435F71);
MakeFunction(0x435F54, 0x435F75);
MakeUnkn(0x435F78, 1);
MakeNameEx(0x435F78, "TWinControl.HandleNeeded", 0x20);
MakeComm(0x435F78, "'procedure TWinControl.HandleNeeded;'");
MakeCode(0x435F78);
MakeFunction(0x435F78, 0x435F9C);
MakeUnkn(0x435F9C, 1);
MakeNameEx(0x435F9C, "TWinControl.GetHandle", 0x20);
MakeComm(0x435F9C, "'function TWinControl.GetHandle:HWND;'");
MakeCode(0x435F9C);
MakeFunction(0x435F9C, 0x435FAE);
MakeCode(0x435FB0);
MakeCode(0x435FDD);
MakeComm(0x435FE6, "'TControl.FVisible:Boolean'");
MakeComm(0x435FEC, "'TControl.FComponentState:TComponentState'");
MakeComm(0x435FF2, "'TControl.?f51:byte'");
MakeCode(0x435FF8);
MakeComm(0x435FFA, "'TControl.Left:Integer'");
MakeComm(0x435FFF, "'TControl.Left:Integer'");
MakeCode(0x436004);
MakeComm(0x436007, "'TControl.Top:Integer'");
MakeComm(0x43600C, "'TControl.Top:Integer'");
MakeComm(0x436012, "'TControl.Left:Integer'");
MakeCode(0x436012);
MakeComm(0x436015, "'TControl.Width:Integer'");
MakeComm(0x43601D, "'TControl.Left:Integer'");
MakeComm(0x436020, "'TControl.Width:Integer'");
MakeComm(0x436026, "'TControl.Top:Integer'");
MakeCode(0x436026);
MakeComm(0x436029, "'TControl.Height:Integer'");
MakeComm(0x436031, "'TControl.Top:Integer'");
MakeComm(0x436034, "'TControl.Height:Integer'");
MakeCode(0x43603A);
MakeCode(0x43603E);
MakeFunction(0x435FB0, 0x436043);
MakeUnkn(0x436044, 1);
MakeNameEx(0x436044, "TWinControl.GetClientOrigin", 0x20);
MakeComm(0x436044, "'function TWinControl.GetClientOrigin:TPoint;'");
MakeCode(0x436044);
MakeFunction(0x436044, 0x436064);
MakeUnkn(0x436064, 1);
MakeNameEx(0x436064, "TWinControl.GetClientRect", 0x20);
MakeComm(0x436064, "'function TWinControl.GetClientRect:TRect;'");
MakeCode(0x436064);
MakeFunction(0x436064, 0x43607B);
MakeUnkn(0x43607C, 1);
MakeNameEx(0x43607C, "TWinControl.AdjustSize", 0x20);
MakeComm(0x43607C, "'procedure TWinControl.AdjustSize;'");
MakeCode(0x43607C);
MakeCode(0x4360B9);
MakeFunction(0x43607C, 0x4360BC);
MakeUnkn(0x4360BC, 1);
MakeNameEx(0x4360BC, "TWinControl.SetBorderWidth", 0x20);
MakeComm(0x4360BC, "'procedure TWinControl.SetBorderWidth(Value:TBorderWidth);'");
MakeCode(0x4360BC);
MakeFunction(0x4360BC, 0x4360D9);
MakeUnkn(0x4360DC, 1);
MakeNameEx(0x4360DC, "TWinControl.SetCtl3D", 0x20);
MakeComm(0x4360DC, "'procedure TWinControl.SetCtl3D(Value:Boolean);'");
MakeCode(0x4360DC);
MakeFunction(0x4360DC, 0x436100);
MakeUnkn(0x436100, 1);
MakeNameEx(0x436100, "TWinControl.IsCtl3DStored", 0x20);
MakeComm(0x436100, "'function TWinControl.IsCtl3DStored(Value:Boolean):Boolean;'");
MakeCode(0x436100);
MakeFunction(0x436100, 0x436109);
MakeUnkn(0x43610C, 1);
MakeNameEx(0x43610C, "TWinControl.SetParentCtl3D", 0x20);
MakeComm(0x43610C, "'procedure TWinControl.SetParentCtl3D(Value:Boolean);'");
MakeCode(0x43610C);
MakeFunction(0x43610C, 0x436135);
MakeUnkn(0x436138, 1);
MakeNameEx(0x436138, "TWinControl.GetTabOrder", 0x20);
MakeComm(0x436138, "'function TWinControl.GetTabOrder:TTabOrder;'");
MakeCode(0x436138);
MakeCode(0x436153);
MakeFunction(0x436138, 0x436159);
MakeUnkn(0x43615C, 1);
MakeNameEx(0x43615C, "TWinControl.UpdateTabOrder", 0x20);
MakeComm(0x43615C, "'procedure TWinControl.UpdateTabOrder(Value:TTabOrder);'");
MakeCode(0x43615C);
MakeCode(0x436185);
MakeCode(0x43618F);
MakeCode(0x4361B0);
MakeFunction(0x43615C, 0x4361B5);
MakeUnkn(0x4361B8, 1);
MakeNameEx(0x4361B8, "TWinControl.SetTabOrder", 0x20);
MakeComm(0x4361B8, "'procedure TWinControl.SetTabOrder(Value:TTabOrder);'");
MakeCode(0x4361B8);
MakeCode(0x4361C8);
MakeFunction(0x4361B8, 0x4361CE);
MakeUnkn(0x4361D0, 1);
MakeNameEx(0x4361D0, "TWinControl.SetTabStop", 0x20);
MakeComm(0x4361D0, "'procedure TWinControl.SetTabStop(Value:Boolean);'");
MakeCode(0x4361D0);
MakeCode(0x43620B);
MakeCode(0x43621A);
MakeCode(0x43622A);
MakeFunction(0x4361D0, 0x43622D);
MakeUnkn(0x436230, 1);
MakeNameEx(0x436230, "TWinControl.SetUseDockManager", 0x20);
MakeComm(0x436230, "'procedure TWinControl.SetUseDockManager(Value:Boolean);'");
MakeCode(0x436230);
MakeCode(0x43627E);
MakeCode(0x43628B);
MakeCode(0x436294);
MakeCode(0x436299);
MakeFunction(0x436230, 0x4362A0);
MakeUnkn(0x4362A0, 1);
MakeNameEx(0x4362A0, "TWinControl.HandleAllocated", 0x20);
MakeComm(0x4362A0, "'function TWinControl.HandleAllocated:Boolean;'");
MakeCode(0x4362A0);
MakeFunction(0x4362A0, 0x4362AB);
MakeUnkn(0x4362AC, 1);
MakeNameEx(0x4362AC, "TWinControl.UpdateBounds", 0x20);
MakeComm(0x4362AC, "'procedure TWinControl.UpdateBounds;'");
MakeCode(0x4362AC);
MakeCode(0x4362E9);
MakeCode(0x4362F6);
MakeCode(0x436331);
MakeFunction(0x4362AC, 0x436361);
MakeUnkn(0x436364, 1);
MakeNameEx(0x436364, "TWinControl.GetTabOrderList", 0x20);
MakeComm(0x436364, "'procedure TWinControl.GetTabOrderList(List:TList);'");
MakeCode(0x436364);
MakeCode(0x43638B);
MakeCode(0x4363BB);
MakeFunction(0x436364, 0x4363C2);
MakeUnkn(0x4363C4, 1);
MakeNameEx(0x4363C4, "TWinControl.FindNextControl", 0x20);
MakeComm(0x4363C4, "'function TWinControl.FindNextControl(CurControl:TWinControl; GoForward:Boolean; CheckTabStop:Boolean; CheckParent:Boolean):TWinControl;'");
MakeCode(0x4363C4);
MakeCode(0x436438);
MakeCode(0x43643D);
MakeCode(0x436440);
MakeCode(0x436453);
MakeCode(0x43645D);
MakeCode(0x43645E);
MakeCode(0x436488);
MakeCode(0x436496);
MakeCode(0x436499);
MakeCode(0x4364A4);
MakeCode(0x4364B1);
MakeCode(0x4364BA);
MakeCode(0x4364BF);
MakeFunction(0x4363C4, 0x4364CD);
MakeUnkn(0x4364D0, 1);
MakeNameEx(0x4364D0, "TWinControl.SelectNext", 0x20);
MakeComm(0x4364D0, "'procedure TWinControl.SelectNext(CurControl:TWinControl; GoForward:Boolean; CheckTabStop:Boolean);'");
MakeCode(0x4364D0);
MakeCode(0x4364F5);
MakeFunction(0x4364D0, 0x4364FA);
MakeUnkn(0x4364FC, 1);
MakeNameEx(0x4364FC, "TWinControl.GetChildren", 0x20);
MakeComm(0x4364FC, "'procedure TWinControl.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x4364FC);
MakeCode(0x43651C);
MakeCode(0x436536);
MakeCode(0x43653A);
MakeFunction(0x4364FC, 0x436542);
MakeUnkn(0x436544, 1);
MakeNameEx(0x436544, "TWinControl.SetChildOrder", 0x20);
MakeComm(0x436544, "'procedure TWinControl.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x436544);
MakeCode(0x436567);
MakeCode(0x436581);
MakeFunction(0x436544, 0x436584);
MakeUnkn(0x436584, 1);
MakeNameEx(0x436584, "TWinControl.CanResize", 0x20);
MakeComm(0x436584, "'procedure TWinControl.CanResize(var NewWidth:Integer; var NewHeight:Integer);'");
MakeCode(0x436584);
MakeFunction(0x436584, 0x43658A);
MakeUnkn(0x43658C, 1);
MakeNameEx(0x43658C, "DoCalcConstraints", 0x20);
MakeComm(0x43658C, "'procedure DoCalcConstraints(Control:TControl; var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);'");
MakeCode(0x43658C);
MakeCode(0x4365A9);
MakeCode(0x4365AD);
MakeCode(0x4365BD);
MakeCode(0x4365C1);
MakeCode(0x4365D4);
MakeCode(0x4365DB);
MakeCode(0x4365EE);
MakeCode(0x4365F5);
MakeFunction(0x43658C, 0x43660D);
MakeUnkn(0x436610, 1);
MakeNameEx(0x436610, "TWinControl.CalcConstraints", 0x20);
MakeComm(0x436610, "'procedure TWinControl.CalcConstraints(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);'");
MakeCode(0x436610);
MakeCode(0x436699);
MakeCode(0x4366A9);
MakeCode(0x4366B9);
MakeCode(0x4366C9);
MakeCode(0x436719);
MakeCode(0x43673F);
MakeCode(0x436765);
MakeCode(0x43676B);
MakeCode(0x436771);
MakeCode(0x43679D);
MakeCode(0x4367B4);
MakeCode(0x4367BA);
MakeCode(0x4367BE);
MakeCode(0x4367CF);
MakeCode(0x4367D3);
MakeCode(0x4367D7);
MakeCode(0x436801);
MakeCode(0x436818);
MakeCode(0x43681C);
MakeCode(0x43681E);
MakeCode(0x43682B);
MakeCode(0x436855);
MakeCode(0x436881);
MakeCode(0x43688A);
MakeCode(0x436893);
MakeCode(0x4368BD);
MakeCode(0x4368E9);
MakeCode(0x4368F2);
MakeCode(0x4368FC);
MakeCode(0x43691A);
MakeCode(0x436935);
MakeCode(0x436940);
MakeCode(0x43695E);
MakeCode(0x436979);
MakeCode(0x436984);
MakeCode(0x436991);
MakeCode(0x4369A1);
MakeCode(0x4369B1);
MakeCode(0x4369C1);
MakeCode(0x4369D1);
MakeCode(0x4369D2);
MakeCode(0x4369D7);
MakeCode(0x4369D9);
MakeFunction(0x436610, 0x4369E2);
MakeUnkn(0x4369EC, 1);
MakeNameEx(0x4369EC, "TWinControl.ConstrainedResize", 0x20);
MakeComm(0x4369EC, "'procedure TWinControl.ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);'");
MakeCode(0x4369EC);
MakeFunction(0x4369EC, 0x436A25);
MakeUnkn(0x436A28, 1);
MakeNameEx(0x436A28, "TWinControl.ActionChange", 0x20);
MakeComm(0x436A28, "'procedure TWinControl.ActionChange(Sender:TObject; CheckDefaults:Boolean);'");
MakeCode(0x436A28);
MakeCode(0x436A5A);
MakeCode(0x436A64);
MakeFunction(0x436A28, 0x436A68);
MakeUnkn(0x436A68, 1);
MakeNameEx(0x436A68, "TWinControl.sub_004317A8", 0x20);
MakeComm(0x436A68, "'procedure TWinControl.sub_004317A8;'");
MakeCode(0x436A68);
MakeFunction(0x436A68, 0x436A6E);
MakeUnkn(0x436A70, 1);
MakeNameEx(0x436A70, "TWinControl.AssignTo", 0x20);
MakeComm(0x436A70, "'procedure TWinControl.AssignTo(Dest:TPersistent);'");
MakeCode(0x436A70);
MakeCode(0x436A9D);
MakeFunction(0x436A70, 0x436AA0);
MakeUnkn(0x436AA0, 1);
MakeNameEx(0x436AA0, "TWinControl.CanAutoSize", 0x20);
MakeComm(0x436AA0, "'function TWinControl.CanAutoSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x436AA0);
MakeCode(0x436AEC);
MakeCode(0x436B40);
MakeCode(0x436B5D);
MakeCode(0x436B71);
MakeCode(0x436B79);
MakeCode(0x436B7B);
MakeCode(0x436B8B);
MakeCode(0x436B90);
MakeCode(0x436BAB);
MakeCode(0x436BB1);
MakeCode(0x436BBE);
MakeCode(0x436BCF);
MakeCode(0x436BD4);
MakeCode(0x436BE8);
MakeCode(0x436C18);
MakeCode(0x436C1F);
MakeCode(0x436C5B);
MakeCode(0x436C62);
MakeFunction(0x436AA0, 0x436C6C);
MakeUnkn(0x436C6C, 1);
MakeNameEx(0x436C6C, "TWinControl.SetBevelCut", 0x20);
MakeComm(0x436C6C, "'procedure TWinControl.SetBevelCut(Index:Integer; const Value:TBevelCut);'");
MakeCode(0x436C6C);
MakeCode(0x436C75);
MakeCode(0x436C92);
MakeFunction(0x436C6C, 0x436CAF);
MakeUnkn(0x436CB0, 1);
MakeNameEx(0x436CB0, "TWinControl.SetBevelEdges", 0x20);
MakeComm(0x436CB0, "'procedure TWinControl.SetBevelEdges(const Value:TBevelEdges);'");
MakeCode(0x436CB0);
MakeCode(0x436CDB);
MakeFunction(0x436CB0, 0x436CDE);
MakeUnkn(0x436CE0, 1);
MakeNameEx(0x436CE0, "TWinControl.SetBevelKind", 0x20);
MakeComm(0x436CE0, "'procedure TWinControl.SetBevelKind(const Value:TBevelKind);'");
MakeCode(0x436CE0);
MakeFunction(0x436CE0, 0x436CFD);
MakeUnkn(0x436D00, 1);
MakeNameEx(0x436D00, "TWinControl.WMNCCalcSize", 0x20);
MakeComm(0x436D00, "'procedure TWinControl.WMNCCalcSize(var Message:TWMNCCalcSize);'");
MakeCode(0x436D00);
MakeCode(0x436D49);
MakeCode(0x436D58);
MakeCode(0x436D65);
MakeCode(0x436D71);
MakeCode(0x436D7D);
MakeCode(0x436D89);
MakeFunction(0x436D00, 0x436D8D);
MakeUnkn(0x436D90, 1);
MakeNameEx(0x436D90, "TWinControl.WMNCPaint", 0x20);
MakeComm(0x436D90, "'procedure TWinControl.WMNCPaint(var Message:TMessage);'");
MakeCode(0x436D90);
MakeCode(0x436DBB);
MakeCode(0x436E91);
MakeCode(0x436EA6);
MakeCode(0x436EC7);
MakeCode(0x436ED6);
MakeCode(0x436EE5);
MakeCode(0x436EFB);
MakeCode(0x436F0A);
MakeCode(0x436F20);
MakeCode(0x436F82);
MakeCode(0x436FD6);
MakeCode(0x436FE3);
MakeCode(0x436FF6);
MakeCode(0x436FFB);
MakeCode(0x436FFD);
MakeCode(0x43702E);
MakeFunction(0x436D90, 0x437035);
MakeUnkn(0x437038, 1);
MakeNameEx(0x437038, "TWinControl.WMContextMenu", 0x20);
MakeComm(0x437038, "'procedure TWinControl.WMContextMenu(var Message:TWMContextMenu);'");
MakeCode(0x437038);
MakeCode(0x43708D);
MakeCode(0x43709C);
MakeFunction(0x437038, 0x4370A3);
MakeUnkn(0x4370A4, 1);
MakeNameEx(0x4370A4, "TWinControl.UpdateUIState", 0x20);
MakeComm(0x4370A4, "'procedure TWinControl.UpdateUIState(CharCode:Word);'");
MakeCode(0x4370A4);
MakeCode(0x4370C8);
MakeCode(0x4370E7);
MakeCode(0x437104);
MakeFunction(0x4370A4, 0x437107);
MakeUnkn(0x437108, 1);
MakeNameEx(0x437108, "TWinControl.WMPrintClient", 0x20);
MakeComm(0x437108, "'procedure TWinControl.WMPrintClient(var Message:TWMPrintClient);'");
MakeCode(0x437108);
MakeCode(0x43711D);
MakeCode(0x437126);
MakeCode(0x43712F);
MakeCode(0x437136);
MakeFunction(0x437108, 0x437138);
MakeUnkn(0x437138, 1);
MakeNameEx(0x437138, "TWinControl.GetParentBackground", 0x20);
MakeComm(0x437138, "'function TWinControl.GetParentBackground:Boolean;'");
MakeCode(0x437138);
MakeFunction(0x437138, 0x437140);
MakeUnkn(0x437140, 1);
MakeNameEx(0x437140, "TWinControl.SetParentBackground", 0x20);
MakeComm(0x437140, "'procedure TWinControl.SetParentBackground(Value:Boolean);'");
MakeCode(0x437140);
MakeCode(0x437162);
MakeCode(0x43716F);
MakeCode(0x437176);
MakeFunction(0x437140, 0x437179);
MakeUnkn(0x437180, 1);
MakeNameEx(0x437180, "TGraphicControl.Create", 0x20);
MakeComm(0x437180, "'constructor TGraphicControl.Create(AOwner:TComponent);'");
MakeCode(0x437180);
MakeCode(0x437192);
MakeCode(0x4371D4);
MakeFunction(0x437180, 0x4371DB);
MakeUnkn(0x4371DC, 1);
MakeNameEx(0x4371DC, "TGraphicControl.Destroy", 0x20);
MakeComm(0x4371DC, "'destructor TGraphicControl.Destroy;'");
MakeCode(0x4371DC);
MakeCode(0x4371F6);
MakeCode(0x437218);
MakeFunction(0x4371DC, 0x43721B);
MakeUnkn(0x43721C, 1);
MakeNameEx(0x43721C, "TGraphicControl.WMPaint", 0x20);
MakeComm(0x43721C, "'procedure TGraphicControl.WMPaint(var Message:TWMPaint);'");
MakeCode(0x43721C);
MakeCode(0x437276);
MakeCode(0x437283);
MakeCode(0x437294);
MakeCode(0x437299);
MakeCode(0x43729B);
MakeCode(0x4372A8);
MakeCode(0x4372B7);
MakeCode(0x4372BC);
MakeCode(0x4372BE);
MakeFunction(0x43721C, 0x4372C2);
MakeCode(0x4372C4);
MakeFunction(0x4372C4, 0x4372C5);
MakeUnkn(0x4372C8, 1);
MakeNameEx(0x4372C8, "THintWindow.Create", 0x20);
MakeComm(0x4372C8, "'constructor THintWindow.Create(AOwner:TComponent);'");
MakeCode(0x4372C8);
MakeCode(0x4372D6);
MakeCode(0x43732C);
MakeFunction(0x4372C8, 0x437331);
MakeUnkn(0x437334, 1);
MakeNameEx(0x437334, "THintWindow.CreateParams", 0x20);
MakeComm(0x437334, "'procedure THintWindow.CreateParams(var Params:TCreateParams);'");
MakeCode(0x437334);
MakeCode(0x437361);
MakeCode(0x43737B);
MakeCode(0x43738B);
MakeFunction(0x437334, 0x437398);
MakeUnkn(0x437398, 1);
MakeNameEx(0x437398, "THintWindow.WMNCHitTest", 0x20);
MakeComm(0x437398, "'procedure THintWindow.WMNCHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x437398);
MakeFunction(0x437398, 0x4373A0);
MakeUnkn(0x4373A0, 1);
MakeNameEx(0x4373A0, "THintWindow.WMNCPaint", 0x20);
MakeComm(0x4373A0, "'procedure THintWindow.WMNCPaint(var Message:TMessage);'");
MakeCode(0x4373A0);
MakeCode(0x4373D6);
MakeCode(0x4373E3);
MakeCode(0x4373F6);
MakeCode(0x4373FB);
MakeFunction(0x4373A0, 0x437401);
MakeUnkn(0x437404, 1);
MakeNameEx(0x437404, "THintWindow.Paint", 0x20);
MakeComm(0x437404, "'procedure THintWindow.Paint;'");
MakeCode(0x437404);
MakeCode(0x437487);
MakeCode(0x437494);
MakeCode(0x43749D);
MakeCode(0x4374A2);
MakeFunction(0x437404, 0x4374A9);
MakeUnkn(0x4374AC, 1);
MakeNameEx(0x4374AC, "THintWindow.IsHintMsg", 0x20);
MakeComm(0x4374AC, "'function THintWindow.IsHintMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x4374AC);
MakeCode(0x4374BE);
MakeCode(0x4374FF);
MakeCode(0x43750C);
MakeFunction(0x4374AC, 0x437510);
MakeUnkn(0x437510, 1);
MakeNameEx(0x437510, "THintWindow.ReleaseHandle", 0x20);
MakeComm(0x437510, "'procedure THintWindow.ReleaseHandle;'");
MakeCode(0x437510);
MakeFunction(0x437510, 0x437516);
MakeUnkn(0x437518, 1);
MakeNameEx(0x437518, "THintWindow.CMTextChanged", 0x20);
MakeComm(0x437518, "'procedure THintWindow.CMTextChanged(var Message:TMessage);'");
MakeCode(0x437518);
MakeCode(0x437588);
MakeCode(0x437595);
MakeCode(0x4375A3);
MakeCode(0x4375A8);
MakeFunction(0x437518, 0x4375AF);
MakeUnkn(0x4375B0, 1);
MakeNameEx(0x4375B0, "THintWindow.ActivateHint", 0x20);
MakeComm(0x4375B0, "'procedure THintWindow.ActivateHint(Rect:TRect; const AHint:AnsiString);'");
MakeCode(0x4375B0);
MakeCode(0x437622);
MakeCode(0x437646);
MakeCode(0x43765C);
MakeCode(0x437672);
MakeCode(0x4376FC);
MakeCode(0x437715);
MakeCode(0x437717);
MakeCode(0x437739);
MakeCode(0x437763);
MakeCode(0x437770);
MakeCode(0x437789);
MakeCode(0x43778E);
MakeFunction(0x4375B0, 0x437797);
MakeUnkn(0x437798, 1);
MakeNameEx(0x437798, "THintWindow.ActivateHintData", 0x20);
MakeComm(0x437798, "'procedure THintWindow.ActivateHintData(Rect:TRect; const AHint:AnsiString; AData:Pointer);'");
MakeCode(0x437798);
MakeFunction(0x437798, 0x4377BE);
MakeCode(0x4377C0);
MakeComm(0x4377F8, "'THintWindow...FCanvas:TCanvas'");
MakeFunction(0x4377C0, 0x437819);
MakeCode(0x43781C);
MakeComm(0x437825, "'THintWindow.Height:Integer'");
MakeComm(0x43782E, "'THintWindow.Width:Integer'");
MakeCode(0x437859);
MakeCode(0x437880);
MakeFunction(0x43781C, 0x437886);
MakeUnkn(0x437888, 1);
MakeNameEx(0x437888, "THintWindow.WMPrint", 0x20);
MakeComm(0x437888, "'procedure THintWindow.WMPrint(var Message:TMessage);'");
MakeCode(0x437888);
MakeFunction(0x437888, 0x4378AC);
MakeUnkn(0x4378AC, 1);
MakeNameEx(0x4378AC, "ClientToWindow", 0x20);
MakeComm(0x4378AC, "'function ClientToWindow(Handle:HWND; X:Integer; Y:Integer):TPoint;'");
MakeCode(0x4378AC);
MakeFunction(0x4378AC, 0x4378EC);
MakeUnkn(0x4378EC, 1);
MakeNameEx(0x4378EC, "TDragImageList.CombineDragCursor", 0x20);
MakeComm(0x4378EC, "'procedure TDragImageList.CombineDragCursor;'");
MakeCode(0x4378EC);
MakeCode(0x437995);
MakeCode(0x4379A2);
MakeCode(0x4379AC);
MakeCode(0x4379B1);
MakeCode(0x4379B3);
MakeFunction(0x4378EC, 0x4379B8);
MakeUnkn(0x4379B8, 1);
MakeNameEx(0x4379B8, "TDragImageList.SetDragImage", 0x20);
MakeComm(0x4379B8, "'function TDragImageList.SetDragImage(Index:Integer; HotSpotX:Integer; HotSpotY:Integer):Boolean;'");
MakeCode(0x4379B8);
MakeCode(0x4379F5);
MakeCode(0x4379F7);
MakeFunction(0x4379B8, 0x4379FE);
MakeUnkn(0x437A00, 1);
MakeNameEx(0x437A00, "TDragImageList.SetDragCursor", 0x20);
MakeComm(0x437A00, "'procedure TDragImageList.SetDragCursor(Value:TCursor);'");
MakeCode(0x437A00);
MakeFunction(0x437A00, 0x437A16);
MakeUnkn(0x437A18, 1);
MakeNameEx(0x437A18, "TDragImageList.BeginDrag", 0x20);
MakeComm(0x437A18, "'function TDragImageList.BeginDrag(Window:HWND; X:Integer; Y:Integer):Boolean;'");
MakeCode(0x437A18);
MakeCode(0x437A4A);
MakeCode(0x437A6E);
MakeFunction(0x437A18, 0x437A78);
MakeUnkn(0x437A78, 1);
MakeNameEx(0x437A78, "TDragImageList.DragLock", 0x20);
MakeComm(0x437A78, "'function TDragImageList.DragLock(Window:HWND; XPos:Integer; YPos:Integer):Boolean;'");
MakeCode(0x437A78);
MakeCode(0x437ACE);
MakeFunction(0x437A78, 0x437AD9);
MakeUnkn(0x437ADC, 1);
MakeNameEx(0x437ADC, "TDragImageList.DragUnlock", 0x20);
MakeComm(0x437ADC, "'procedure TDragImageList.DragUnlock;'");
MakeCode(0x437ADC);
MakeCode(0x437AFE);
MakeFunction(0x437ADC, 0x437B00);
MakeUnkn(0x437B00, 1);
MakeNameEx(0x437B00, "TDragImageList.DragMove", 0x20);
MakeComm(0x437B00, "'function TDragImageList.DragMove(X:Integer; Y:Integer):Boolean;'");
MakeCode(0x437B00);
MakeCode(0x437B3B);
MakeCode(0x437B3D);
MakeFunction(0x437B00, 0x437B43);
MakeUnkn(0x437B44, 1);
MakeNameEx(0x437B44, "TDragImageList.ShowDragImage", 0x20);
MakeComm(0x437B44, "'procedure TDragImageList.ShowDragImage;'");
MakeCode(0x437B44);
MakeCode(0x437B59);
MakeFunction(0x437B44, 0x437B5B);
MakeUnkn(0x437B5C, 1);
MakeNameEx(0x437B5C, "TDragImageList.HideDragImage", 0x20);
MakeComm(0x437B5C, "'procedure TDragImageList.HideDragImage;'");
MakeCode(0x437B5C);
MakeCode(0x437B71);
MakeFunction(0x437B5C, 0x437B73);
MakeUnkn(0x437B74, 1);
MakeNameEx(0x437B74, "TDragImageList.EndDrag", 0x20);
MakeComm(0x437B74, "'function TDragImageList.EndDrag:Boolean;'");
MakeCode(0x437B74);
MakeCode(0x437BB2);
MakeCode(0x437BB4);
MakeFunction(0x437B74, 0x437BB9);
MakeUnkn(0x437BBC, 1);
MakeNameEx(0x437BBC, "TCustomControl.Create", 0x20);
MakeComm(0x437BBC, "'constructor TCustomControl.Create(AOwner:TComponent);'");
MakeCode(0x437BBC);
MakeCode(0x437BCE);
MakeCode(0x437C10);
MakeFunction(0x437BBC, 0x437C17);
MakeUnkn(0x437C18, 1);
MakeNameEx(0x437C18, "TCustomControl.Destroy", 0x20);
MakeComm(0x437C18, "'destructor TCustomControl.Destroy;'");
MakeCode(0x437C18);
MakeCode(0x437C45);
MakeFunction(0x437C18, 0x437C48);
MakeUnkn(0x437C48, 1);
MakeNameEx(0x437C48, "TCustomControl.WMPaint", 0x20);
MakeComm(0x437C48, "'procedure TCustomControl.WMPaint(var Message:TWMPaint);'");
MakeCode(0x437C48);
MakeFunction(0x437C48, 0x437C66);
MakeUnkn(0x437C68, 1);
MakeNameEx(0x437C68, "TCustomControl.PaintWindow", 0x20);
MakeComm(0x437C68, "'procedure TCustomControl.PaintWindow(DC:HDC);'");
MakeCode(0x437C68);
MakeCode(0x437CC5);
MakeCode(0x437CD2);
MakeCode(0x437CE3);
MakeCode(0x437CE8);
MakeCode(0x437CEA);
MakeCode(0x437CF7);
MakeCode(0x437D06);
MakeCode(0x437D0B);
MakeFunction(0x437C68, 0x437D11);
MakeCode(0x437D14);
MakeFunction(0x437D14, 0x437D15);
MakeUnkn(0x437D18, 1);
MakeNameEx(0x437D18, "NextVisibleZone", 0x20);
MakeComm(0x437D18, "'function NextVisibleZone(StartZone:TDockZone):TDockZone;'");
MakeCode(0x437D18);
MakeCode(0x437D1D);
MakeCode(0x437D20);
MakeCode(0x437D2F);
MakeFunction(0x437D18, 0x437D33);
MakeUnkn(0x437D34, 1);
MakeNameEx(0x437D34, "IsOrientationSet", 0x20);
MakeComm(0x437D34, "'function IsOrientationSet(Zone:TDockZone):Boolean;'");
MakeCode(0x437D34);
MakeCode(0x437D41);
MakeCode(0x437D4F);
MakeCode(0x437D52);
MakeFunction(0x437D34, 0x437D55);
MakeUnkn(0x437D58, 1);
MakeNameEx(0x437D58, "TDockZone.Create", 0x20);
MakeComm(0x437D58, "'constructor TDockZone.Create(Tree:TDockTree);'");
MakeCode(0x437D58);
MakeCode(0x437D64);
MakeFunction(0x437D58, 0x437D7B);
MakeUnkn(0x437D7C, 1);
MakeNameEx(0x437D7C, "TDockZone.GetChildCount", 0x20);
MakeComm(0x437D7C, "'function TDockZone.GetChildCount:Integer;'");
MakeCode(0x437D7C);
MakeCode(0x437D85);
MakeCode(0x437D8D);
MakeFunction(0x437D7C, 0x437D90);
MakeUnkn(0x437D90, 1);
MakeNameEx(0x437D90, "TDockZone.GetVisibleChildCount", 0x20);
MakeComm(0x437D90, "'function TDockZone.GetVisibleChildCount:Integer;'");
MakeCode(0x437D90);
MakeCode(0x437D9C);
MakeCode(0x437DA6);
MakeFunction(0x437D90, 0x437DAA);
MakeUnkn(0x437DAC, 1);
MakeNameEx(0x437DAC, "TDockZone.GetVisible", 0x20);
MakeComm(0x437DAC, "'function TDockZone.GetVisible:Boolean;'");
MakeCode(0x437DAC);
MakeFunction(0x437DAC, 0x437DE0);
MakeUnkn(0x437DE0, 1);
MakeNameEx(0x437DE0, "TDockZone.GetLimitBegin", 0x20);
MakeComm(0x437DE0, "'function TDockZone.GetLimitBegin:Integer;'");
MakeCode(0x437DE0);
MakeCode(0x437DEC);
MakeCode(0x437DEF);
MakeCode(0x437E02);
MakeCode(0x437E13);
MakeFunction(0x437DE0, 0x437E27);
MakeUnkn(0x437E28, 1);
MakeNameEx(0x437E28, "TDockZone.GetLimitSize", 0x20);
MakeComm(0x437E28, "'function TDockZone.GetLimitSize:Integer;'");
MakeCode(0x437E28);
MakeCode(0x437E34);
MakeCode(0x437E37);
MakeCode(0x437E4A);
MakeCode(0x437E5B);
MakeFunction(0x437E28, 0x437E6F);
MakeUnkn(0x437E70, 1);
MakeNameEx(0x437E70, "TDockZone.GetTopLeft", 0x20);
MakeComm(0x437E70, "'function TDockZone.GetTopLeft(Orient:Integer):Integer;'");
MakeCode(0x437E70);
MakeCode(0x437E7D);
MakeCode(0x437E97);
MakeCode(0x437E99);
MakeCode(0x437ECD);
MakeCode(0x437ED3);
MakeCode(0x437ED5);
MakeFunction(0x437E70, 0x437EDB);
MakeUnkn(0x437EDC, 1);
MakeNameEx(0x437EDC, "TDockZone.GetHeightWidth", 0x20);
MakeComm(0x437EDC, "'function TDockZone.GetHeightWidth(Orient:Integer):Integer;'");
MakeCode(0x437EDC);
MakeCode(0x437F09);
MakeCode(0x437F36);
MakeCode(0x437F3F);
MakeCode(0x437F43);
MakeCode(0x437F62);
MakeCode(0x437F64);
MakeCode(0x437F7E);
MakeCode(0x437F85);
MakeFunction(0x437EDC, 0x437F8C);
MakeUnkn(0x437F8C, 1);
MakeNameEx(0x437F8C, "TDockZone.ResetChildren", 0x20);
MakeComm(0x437F8C, "'procedure TDockZone.ResetChildren;'");
MakeCode(0x437F8C);
MakeCode(0x437FC0);
MakeCode(0x437FD0);
MakeCode(0x437FE0);
MakeCode(0x437FE2);
MakeCode(0x438009);
MakeCode(0x43802F);
MakeFunction(0x437F8C, 0x438032);
MakeUnkn(0x4382A4, 1);
MakeNameEx(0x4382A4, "TDockZone.GetZoneLimit", 0x20);
MakeComm(0x4382A4, "'function TDockZone.GetZoneLimit:Integer;'");
MakeUnkn(0x4382CC, 1);
MakeNameEx(0x4382CC, "TDockZone.SetZoneLimit", 0x20);
MakeComm(0x4382CC, "'procedure TDockZone.SetZoneLimit(const Value:Integer);'");
MakeUnkn(0x4382E0, 1);
MakeNameEx(0x4382E0, "TDockZone.ExpandZoneLimit", 0x20);
MakeComm(0x4382E0, "'procedure TDockZone.ExpandZoneLimit(NewLimit:Integer);'");
MakeUnkn(0x43831C, 1);
MakeNameEx(0x43831C, "TDockZone.ResetZoneLimits", 0x20);
MakeComm(0x43831C, "'procedure TDockZone.ResetZoneLimits;'");
MakeUnkn(0x43837C, 1);
MakeNameEx(0x43837C, "TDockZone.NextVisible", 0x20);
MakeComm(0x43837C, "'function TDockZone.NextVisible:TDockZone;'");
MakeUnkn(0x438388, 1);
MakeNameEx(0x438388, "TDockZone.PrevVisible", 0x20);
MakeComm(0x438388, "'function TDockZone.PrevVisible:TDockZone;'");
MakeUnkn(0x4383A4, 1);
MakeNameEx(0x4383A4, "TDockZone.FirstVisibleChild", 0x20);
MakeComm(0x4383A4, "'function TDockZone.FirstVisibleChild:TDockZone;'");
MakeUnkn(0x4385F0, 1);
MakeNameEx(0x4385F0, "TDockTree.FindControlZone", 0x20);
MakeComm(0x4385F0, "'function TDockTree.FindControlZone(Control:TControl):TDockZone;'");
MakeUnkn(0x438658, 1);
MakeNameEx(0x438658, "TDockTree.ForEachAt", 0x20);
MakeComm(0x438658, "'procedure TDockTree.ForEachAt(Zone:TDockZone; Proc:TForEachZoneProc);'");
MakeUnkn(0x438DE4, 1);
MakeNameEx(0x438DE4, "TDockTree.InternalHitTest", 0x20);
MakeComm(0x438DE4, "'function TDockTree.InternalHitTest(const MousePos:TPoint; var HTFlag:Integer):TDockZone;'");
MakeUnkn(0x439D28, 1);
MakeNameEx(0x439D28, "TDockTree.SplitterMouseDown", 0x20);
MakeComm(0x439D28, "'procedure TDockTree.SplitterMouseDown(OnZone:TDockZone; MousePos:TPoint);'");
MakeUnkn(0x439D88, 1);
MakeNameEx(0x439D88, "TDockTree.SplitterMouseUp", 0x20);
MakeComm(0x439D88, "'procedure TDockTree.SplitterMouseUp;'");
MakeUnkn(0x439E2C, 1);
MakeNameEx(0x439E2C, "TDockTree.UpdateZone", 0x20);
MakeComm(0x439E2C, "'procedure TDockTree.UpdateZone(Zone:TDockZone);'");
MakeUnkn(0x439E3C, 1);
MakeNameEx(0x439E3C, "TDockTree.DrawSizeSplitter", 0x20);
MakeComm(0x439E3C, "'procedure TDockTree.DrawSizeSplitter;'");
MakeUnkn(0x439FB8, 1);
MakeNameEx(0x439FB8, "TDockTree.GetNextLimit", 0x20);
MakeComm(0x439FB8, "'function TDockTree.GetNextLimit(AZone:TDockZone):Integer;'");
MakeUnkn(0x43A008, 1);
MakeNameEx(0x43A008, "GetDockAlign", 0x20);
MakeComm(0x43A008, "'function GetDockAlign(Client:TControl; DropCtl:TControl):TAlign;'");
MakeCode(0x43A008);
MakeCode(0x43A04B);
MakeCode(0x43A067);
MakeCode(0x43A074);
MakeCode(0x43A07B);
MakeFunction(0x43A008, 0x43A084);
MakeUnkn(0x43A084, 1);
MakeNameEx(0x43A084, "HideZone", 0x20);
MakeComm(0x43A084, "'procedure HideZone(const Zone:TDockZone);'");
MakeCode(0x43A084);
MakeFunction(0x43A084, 0x43A103);
MakeUnkn(0x43A104, 1);
MakeNameEx(0x43A104, "ShowZone", 0x20);
MakeComm(0x43A104, "'procedure ShowZone(const Zone:TDockZone);'");
MakeCode(0x43A104);
MakeFunction(0x43A104, 0x43A23C);
MakeUnkn(0x43A23C, 1);
MakeNameEx(0x43A23C, "TDockTree.ControlVisibilityChanged", 0x20);
MakeComm(0x43A23C, "'procedure TDockTree.ControlVisibilityChanged(Control:TControl; Visible:Boolean);'");
MakeCode(0x43A23C);
MakeCode(0x43A266);
MakeCode(0x43A26D);
MakeCode(0x43A27A);
MakeCode(0x43A2A3);
MakeCode(0x43A2A5);
MakeCode(0x43A2BB);
MakeFunction(0x43A23C, 0x43A2C1);
MakeUnkn(0x43A2C4, 1);
MakeNameEx(0x43A2C4, "CalcSplitterPos", 0x20);
MakeComm(0x43A2C4, "'procedure CalcSplitterPos;'");
MakeCode(0x43A2C4);
MakeCode(0x43A2FD);
MakeCode(0x43A319);
MakeCode(0x43A333);
MakeCode(0x43A34D);
MakeFunction(0x43A2C4, 0x43A352);
MakeUnkn(0x43A354, 1);
MakeNameEx(0x43A354, "TDockTree.WindowProc", 0x20);
MakeComm(0x43A354, "'procedure TDockTree.WindowProc(var Message:TMessage);'");
MakeCode(0x43A354);
MakeCode(0x43A3A0);
MakeCode(0x43A3DD);
MakeCode(0x43A420);
MakeCode(0x43A46F);
MakeCode(0x43A4AA);
MakeCode(0x43A4F6);
MakeCode(0x43A51F);
MakeCode(0x43A575);
MakeCode(0x43A583);
MakeCode(0x43A590);
MakeCode(0x43A637);
MakeCode(0x43A675);
MakeCode(0x43A68E);
MakeCode(0x43A701);
MakeCode(0x43A716);
MakeCode(0x43A723);
MakeCode(0x43A72C);
MakeCode(0x43A731);
MakeFunction(0x43A354, 0x43A73A);
MakeUnkn(0x43A73C, 1);
MakeNameEx(0x43A73C, "TMouse.Create", 0x20);
MakeComm(0x43A73C, "'constructor TMouse.Create;'");
MakeCode(0x43A73C);
MakeCode(0x43A74A);
MakeCode(0x43A776);
MakeCode(0x43A79E);
MakeCode(0x43A7A2);
MakeCode(0x43A7A4);
MakeCode(0x43A7C5);
MakeFunction(0x43A73C, 0x43A7CA);
MakeUnkn(0x43A7CC, 1);
MakeNameEx(0x43A7CC, "TMouse.Destroy", 0x20);
MakeComm(0x43A7CC, "'destructor TMouse.Destroy;'");
MakeCode(0x43A7CC);
MakeCode(0x43A7F7);
MakeFunction(0x43A7CC, 0x43A7FA);
MakeUnkn(0x43A7FC, 1);
MakeNameEx(0x43A7FC, "TMouse.GetCapture", 0x20);
MakeComm(0x43A7FC, "'function TMouse.GetCapture:HWND;'");
MakeCode(0x43A7FC);
MakeFunction(0x43A7FC, 0x43A802);
MakeUnkn(0x43A804, 1);
MakeNameEx(0x43A804, "TMouse.GetCursorPos", 0x20);
MakeComm(0x43A804, "'function TMouse.GetCursorPos:TPoint;'");
MakeCode(0x43A804);
MakeFunction(0x43A804, 0x43A814);
MakeUnkn(0x43A814, 1);
MakeNameEx(0x43A814, "TMouse.GetMouseData", 0x20);
MakeComm(0x43A814, "'procedure TMouse.GetMouseData;'");
MakeCode(0x43A814);
MakeFunction(0x43A814, 0x43A82D);
MakeUnkn(0x43A830, 1);
MakeNameEx(0x43A830, "TMouse.GetNativeData", 0x20);
MakeComm(0x43A830, "'procedure TMouse.GetNativeData;'");
MakeCode(0x43A830);
MakeCode(0x43A85B);
MakeFunction(0x43A830, 0x43A85E);
MakeUnkn(0x43A860, 1);
MakeNameEx(0x43A860, "TMouse.GetRegisteredData", 0x20);
MakeComm(0x43A860, "'procedure TMouse.GetRegisteredData;'");
MakeCode(0x43A860);
MakeFunction(0x43A860, 0x43A887);
MakeUnkn(0x43A888, 1);
MakeNameEx(0x43A888, "TMouse.SetCapture", 0x20);
MakeComm(0x43A888, "'procedure TMouse.SetCapture(const Value:HWND);'");
MakeCode(0x43A888);
MakeCode(0x43A8A4);
MakeCode(0x43A8AA);
MakeFunction(0x43A888, 0x43A8AD);
MakeUnkn(0x43A8B0, 1);
MakeNameEx(0x43A8B0, "TMouse.SettingChanged", 0x20);
MakeComm(0x43A8B0, "'procedure TMouse.SettingChanged(Setting:Integer);'");
MakeCode(0x43A8B0);
MakeCode(0x43A8BF);
MakeCode(0x43A8D5);
MakeCode(0x43A8DE);
MakeCode(0x43A8FB);
MakeCode(0x43A90F);
MakeFunction(0x43A8B0, 0x43A911);
MakeUnkn(0x43A914, 1);
MakeNameEx(0x43A914, "InitIMM32", 0x20);
MakeComm(0x43A914, "'procedure InitIMM32;'");
MakeCode(0x43A914);
MakeCode(0x43A968);
MakeCode(0x43AA63);
MakeCode(0x43AA70);
MakeCode(0x43AA7A);
MakeCode(0x43AA7F);
MakeCode(0x43AA81);
MakeFunction(0x43A914, 0x43AA85);
MakeUnkn(0x43AB7C, 1);
MakeNameEx(0x43AB7C, "Win32NLSEnableIME", 0x20);
MakeComm(0x43AB7C, "'function Win32NLSEnableIME(hWnd:HWND; Enable:Boolean):Boolean;'");
MakeCode(0x43AB7C);
MakeCode(0x43AB94);
MakeFunction(0x43AB7C, 0x43AB97);
MakeUnkn(0x43AB98, 1);
MakeNameEx(0x43AB98, "SetImeMode", 0x20);
MakeComm(0x43AB98, "'procedure SetImeMode(hWnd:HWND; Mode:TImeMode);'");
MakeCode(0x43AB98);
MakeCode(0x43ABCC);
MakeCode(0x43AC0C);
MakeCode(0x43AC17);
MakeCode(0x43AC22);
MakeCode(0x43AC52);
MakeCode(0x43AC6B);
MakeFunction(0x43AB98, 0x43AC71);
MakeUnkn(0x43AC74, 1);
MakeNameEx(0x43AC74, "Imm32IsIME", 0x20);
MakeComm(0x43AC74, "'function Imm32IsIME(hKl:HKL):Boolean;'");
MakeCode(0x43AC74);
MakeCode(0x43AC85);
MakeFunction(0x43AC74, 0x43AC88);
MakeUnkn(0x43AC88, 1);
MakeNameEx(0x43AC88, "DoneControls", 0x20);
MakeComm(0x43AC88, "'procedure DoneControls;'");
MakeCode(0x43AC88);
MakeFunction(0x43AC88, 0x43AD0E);
MakeUnkn(0x43AD10, 1);
MakeNameEx(0x43AD10, "InitControls", 0x20);
MakeComm(0x43AD10, "'procedure InitControls;'");
MakeCode(0x43AD10);
MakeCode(0x43AE6A);
MakeCode(0x43AE77);
MakeCode(0x43AE88);
MakeCode(0x43AE8D);
MakeFunction(0x43AD10, 0x43AE94);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43AE9C, -1);
MakeDword(0x43AE98);
MakeDword(0x43AE94);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43AEB0, -1);
MakeDword(0x43AEAC);
MakeDword(0x43AEA8);
MakeUnkn(0x43AEDC, 1);
MakeNameEx(0x43AEDC, "Finalization_11", 0x20);
MakeComm(0x43AEDC, "'procedure Finalization;'");
MakeCode(0x43AEDC);
MakeCode(0x43AF2D);
MakeCode(0x43AF3A);
MakeCode(0x43AF3B);
MakeCode(0x43AF40);
MakeFunction(0x43AEDC, 0x43AF44);
MakeUnkn(0x43AF44, 1);
MakeNameEx(0x43AF44, "Controls", 0x20);
MakeComm(0x43AF44, "'procedure Controls;'");
MakeCode(0x43AF44);
MakeCode(0x43AFBC);
MakeCode(0x43AFC9);
MakeCode(0x43AFCA);
MakeCode(0x43AFCF);
MakeFunction(0x43AF44, 0x43AFD3);
MakeUnkn(0x43AFD4, 1);
MakeNameEx(0x43AFD4, "VMT_43AFD4_TContainedAction", 0);
MakeDword(0x43AFD4);
MakeDword(0x43AFD8);
MakeDword(0x43AFDC);
MakeDword(0x43AFE0);
MakeUnkn(0x43B068, 1);
MakeNameEx(0x43B068, "TContainedAction_InitTable", 0);
MakeByte(0x43B068);
MakeByte(0x43B069);
MakeDword(0x43B06A);
MakeDword(0x43B06E);
MakeDword(0x43B072);
MakeDword(0x43B076);
MakeDword(0x43AFE4);
MakeDword(0x43AFE8);
MakeDword(0x43AFEC);
MakeDword(0x43AFF0);
MakeUnkn(0x43B07A, 1);
MakeNameEx(0x43B07A, "TContainedAction_DynamicTable", 0);
MakeWord(0x43B07A);
MakeWord(0x43B07C);
MakeWord(0x43B07E);
MakeWord(0x43B080);
MakeWord(0x43B082);
MakeDword(0x43B084);
MakeDword(0x43B088);
MakeDword(0x43B08C);
MakeDword(0x43B090);
MakeDword(0x43AFF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B094, 0x43B0A5);
MakeDword(0x43AFF8);
MakeDword(0x43AFFC);
MakeDword(0x43B000);
MakeDword(0x43B004);
MakeDword(0x43B008);
MakeDword(0x43B00C);
MakeDword(0x43B010);
MakeDword(0x43B014);
MakeDword(0x43B018);
MakeDword(0x43B01C);
MakeComm(0x43B020, "'+0'");
MakeDword(0x43B020);
MakeComm(0x43B024, "'+4'");
MakeDword(0x43B024);
MakeComm(0x43B028, "'+8'");
MakeDword(0x43B028);
MakeComm(0x43B02C, "'+C'");
MakeDword(0x43B02C);
MakeComm(0x43B030, "'+10'");
MakeDword(0x43B030);
MakeComm(0x43B034, "'+14'");
MakeDword(0x43B034);
MakeComm(0x43B038, "'+18'");
MakeDword(0x43B038);
MakeComm(0x43B03C, "'+1C'");
MakeDword(0x43B03C);
MakeComm(0x43B040, "'+20'");
MakeDword(0x43B040);
MakeComm(0x43B044, "'+24'");
MakeDword(0x43B044);
MakeComm(0x43B048, "'+28'");
MakeDword(0x43B048);
MakeComm(0x43B04C, "'+2C'");
MakeDword(0x43B04C);
MakeComm(0x43B050, "'+30'");
MakeDword(0x43B050);
MakeComm(0x43B054, "'+34'");
MakeDword(0x43B054);
MakeComm(0x43B058, "'+38'");
MakeDword(0x43B058);
MakeComm(0x43B05C, "'+3C'");
MakeDword(0x43B05C);
MakeComm(0x43B060, "'+40'");
MakeDword(0x43B060);
MakeComm(0x43B064, "'+44'");
MakeDword(0x43B064);
MakeUnkn(0x43B0A8, 1);
MakeNameEx(0x43B0A8, "RTTI_43B0A8_Class_TContainedAction", 0);
MakeDword(0x43B0A8);
MakeUnkn(0x43B0AC, 1);
MakeNameEx(0x43B0AC, "", 0);
MakeByte(0x43B0AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B0AD, 0x43B0BE);
MakeDword(0x43B0BE);
MakeDword(0x43B0C2);
MakeWord(0x43B0C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B0C8, 0x43B0D1);
MakeWord(0x43B0D1);
MakeDword(0x43B0D3);
MakeDword(0x43B0D7);
MakeDword(0x43B0DB);
MakeDword(0x43B0DF);
MakeDword(0x43B0E3);
MakeDword(0x43B0E7);
MakeWord(0x43B0EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B0ED, 0x43B0F6);
MakeUnkn(0x43B0F8, 1);
MakeNameEx(0x43B0F8, "VMT_43B0F8_TCustomActionList", 0);
MakeDword(0x43B0F8);
MakeDword(0x43B0FC);
MakeDword(0x43B100);
MakeDword(0x43B104);
MakeDword(0x43B108);
MakeDword(0x43B10C);
MakeDword(0x43B110);
MakeDword(0x43B114);
MakeUnkn(0x43B17C, 1);
MakeNameEx(0x43B17C, "TCustomActionList_DynamicTable", 0);
MakeWord(0x43B17C);
MakeWord(0x43B17E);
MakeWord(0x43B180);
MakeWord(0x43B182);
MakeWord(0x43B184);
MakeDword(0x43B186);
MakeDword(0x43B18A);
MakeDword(0x43B18E);
MakeDword(0x43B192);
MakeDword(0x43B118);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B196, 0x43B1A8);
MakeDword(0x43B11C);
MakeDword(0x43B120);
MakeDword(0x43B124);
MakeDword(0x43B128);
MakeDword(0x43B12C);
MakeDword(0x43B130);
MakeDword(0x43B134);
MakeDword(0x43B138);
MakeDword(0x43B13C);
MakeDword(0x43B140);
MakeComm(0x43B144, "'+0'");
MakeDword(0x43B144);
MakeComm(0x43B148, "'+4'");
MakeDword(0x43B148);
MakeComm(0x43B14C, "'+8'");
MakeDword(0x43B14C);
MakeComm(0x43B150, "'+C'");
MakeDword(0x43B150);
MakeComm(0x43B154, "'+10'");
MakeDword(0x43B154);
MakeComm(0x43B158, "'+14'");
MakeDword(0x43B158);
MakeComm(0x43B15C, "'+18'");
MakeDword(0x43B15C);
MakeComm(0x43B160, "'+1C'");
MakeDword(0x43B160);
MakeComm(0x43B164, "'+20'");
MakeDword(0x43B164);
MakeComm(0x43B168, "'+24'");
MakeDword(0x43B168);
MakeComm(0x43B16C, "'+28'");
MakeDword(0x43B16C);
MakeComm(0x43B170, "'+2C'");
MakeDword(0x43B170);
MakeComm(0x43B174, "'+30'");
MakeDword(0x43B174);
MakeComm(0x43B178, "'+34'");
MakeDword(0x43B178);
MakeUnkn(0x43B1A8, 1);
MakeNameEx(0x43B1A8, "RTTI_43B1A8_Class_TCustomActionList", 0);
MakeDword(0x43B1A8);
MakeUnkn(0x43B1AC, 1);
MakeNameEx(0x43B1AC, "", 0);
MakeByte(0x43B1AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B1AD, 0x43B1BF);
MakeDword(0x43B1BF);
MakeDword(0x43B1C3);
MakeWord(0x43B1C7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B1C9, 0x43B1D2);
MakeWord(0x43B1D2);
MakeUnkn(0x43B1D4, 1);
MakeNameEx(0x43B1D4, "VMT_43B1D4_TShortCutList", 0);
MakeDword(0x43B1D4);
MakeDword(0x43B1D8);
MakeDword(0x43B1DC);
MakeDword(0x43B1E0);
MakeDword(0x43B1E4);
MakeDword(0x43B1E8);
MakeDword(0x43B1EC);
MakeDword(0x43B1F0);
MakeDword(0x43B1F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2B8, 0x43B2C6);
MakeDword(0x43B1F8);
MakeDword(0x43B1FC);
MakeDword(0x43B200);
MakeDword(0x43B204);
MakeDword(0x43B208);
MakeDword(0x43B20C);
MakeDword(0x43B210);
MakeDword(0x43B214);
MakeDword(0x43B218);
MakeDword(0x43B21C);
MakeComm(0x43B220, "'+0'");
MakeDword(0x43B220);
MakeComm(0x43B224, "'+4'");
MakeDword(0x43B224);
MakeComm(0x43B228, "'+8'");
MakeDword(0x43B228);
MakeComm(0x43B22C, "'+C'");
MakeDword(0x43B22C);
MakeComm(0x43B230, "'+10'");
MakeDword(0x43B230);
MakeComm(0x43B234, "'+14'");
MakeDword(0x43B234);
MakeComm(0x43B238, "'+18'");
MakeDword(0x43B238);
MakeComm(0x43B23C, "'+1C'");
MakeDword(0x43B23C);
MakeComm(0x43B240, "'+20'");
MakeDword(0x43B240);
MakeComm(0x43B244, "'+24'");
MakeDword(0x43B244);
MakeComm(0x43B248, "'+28'");
MakeDword(0x43B248);
MakeComm(0x43B24C, "'+2C'");
MakeDword(0x43B24C);
MakeComm(0x43B250, "'+30'");
MakeDword(0x43B250);
MakeComm(0x43B254, "'+34'");
MakeDword(0x43B254);
MakeComm(0x43B258, "'+38'");
MakeDword(0x43B258);
MakeComm(0x43B25C, "'+3C'");
MakeDword(0x43B25C);
MakeComm(0x43B260, "'+40'");
MakeDword(0x43B260);
MakeComm(0x43B264, "'+44'");
MakeDword(0x43B264);
MakeComm(0x43B268, "'+48'");
MakeDword(0x43B268);
MakeComm(0x43B26C, "'+4C'");
MakeDword(0x43B26C);
MakeComm(0x43B270, "'+50'");
MakeDword(0x43B270);
MakeComm(0x43B274, "'+54'");
MakeDword(0x43B274);
MakeComm(0x43B278, "'+58'");
MakeDword(0x43B278);
MakeComm(0x43B27C, "'+5C'");
MakeDword(0x43B27C);
MakeComm(0x43B280, "'+60'");
MakeDword(0x43B280);
MakeComm(0x43B284, "'+64'");
MakeDword(0x43B284);
MakeComm(0x43B288, "'+68'");
MakeDword(0x43B288);
MakeComm(0x43B28C, "'+6C'");
MakeDword(0x43B28C);
MakeComm(0x43B290, "'+70'");
MakeDword(0x43B290);
MakeComm(0x43B294, "'+74'");
MakeDword(0x43B294);
MakeComm(0x43B298, "'+78'");
MakeDword(0x43B298);
MakeComm(0x43B29C, "'+7C'");
MakeDword(0x43B29C);
MakeComm(0x43B2A0, "'+80'");
MakeDword(0x43B2A0);
MakeComm(0x43B2A4, "'+84'");
MakeDword(0x43B2A4);
MakeComm(0x43B2A8, "'+88'");
MakeDword(0x43B2A8);
MakeComm(0x43B2AC, "'+8C'");
MakeDword(0x43B2AC);
MakeComm(0x43B2B0, "'+90'");
MakeDword(0x43B2B0);
MakeComm(0x43B2B4, "'+94'");
MakeDword(0x43B2B4);
MakeUnkn(0x43B2C8, 1);
MakeNameEx(0x43B2C8, "RTTI_43B2C8_Class_TShortCutList", 0);
MakeDword(0x43B2C8);
MakeUnkn(0x43B2CC, 1);
MakeNameEx(0x43B2CC, "", 0);
MakeByte(0x43B2CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2CD, 0x43B2DB);
MakeDword(0x43B2DB);
MakeDword(0x43B2DF);
MakeWord(0x43B2E3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2E5, 0x43B2EE);
MakeWord(0x43B2EE);
MakeUnkn(0x43B2F0, 1);
MakeNameEx(0x43B2F0, "VMT_43B2F0_TCustomAction", 0);
MakeDword(0x43B2F0);
MakeDword(0x43B2F4);
MakeDword(0x43B2F8);
MakeDword(0x43B2FC);
MakeUnkn(0x43B390, 1);
MakeNameEx(0x43B390, "TCustomAction_InitTable", 0);
MakeByte(0x43B390);
MakeByte(0x43B391);
MakeDword(0x43B392);
MakeDword(0x43B396);
MakeDword(0x43B39A);
MakeDword(0x43B39E);
MakeDword(0x43B3A2);
MakeDword(0x43B3A6);
MakeDword(0x43B3AA);
MakeDword(0x43B3AE);
MakeDword(0x43B300);
MakeDword(0x43B304);
MakeDword(0x43B308);
MakeDword(0x43B30C);
MakeUnkn(0x43B3B2, 1);
MakeNameEx(0x43B3B2, "TCustomAction_DynamicTable", 0);
MakeWord(0x43B3B2);
MakeWord(0x43B3B4);
MakeWord(0x43B3B6);
MakeDword(0x43B3B8);
MakeDword(0x43B3BC);
MakeDword(0x43B310);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B3C0, 0x43B3CE);
MakeDword(0x43B314);
MakeDword(0x43B318);
MakeDword(0x43B31C);
MakeDword(0x43B320);
MakeDword(0x43B324);
MakeDword(0x43B328);
MakeDword(0x43B32C);
MakeDword(0x43B330);
MakeDword(0x43B334);
MakeDword(0x43B338);
MakeComm(0x43B33C, "'+0'");
MakeDword(0x43B33C);
MakeComm(0x43B340, "'+4'");
MakeDword(0x43B340);
MakeComm(0x43B344, "'+8'");
MakeDword(0x43B344);
MakeComm(0x43B348, "'+C'");
MakeDword(0x43B348);
MakeComm(0x43B34C, "'+10'");
MakeDword(0x43B34C);
MakeComm(0x43B350, "'+14'");
MakeDword(0x43B350);
MakeComm(0x43B354, "'+18'");
MakeDword(0x43B354);
MakeComm(0x43B358, "'+1C'");
MakeDword(0x43B358);
MakeComm(0x43B35C, "'+20'");
MakeDword(0x43B35C);
MakeComm(0x43B360, "'+24'");
MakeDword(0x43B360);
MakeComm(0x43B364, "'+28'");
MakeDword(0x43B364);
MakeComm(0x43B368, "'+2C'");
MakeDword(0x43B368);
MakeComm(0x43B36C, "'+30'");
MakeDword(0x43B36C);
MakeComm(0x43B370, "'+34'");
MakeDword(0x43B370);
MakeComm(0x43B374, "'+38'");
MakeDword(0x43B374);
MakeComm(0x43B378, "'+3C'");
MakeDword(0x43B378);
MakeComm(0x43B37C, "'+40'");
MakeDword(0x43B37C);
MakeComm(0x43B380, "'+44'");
MakeDword(0x43B380);
MakeComm(0x43B384, "'+48'");
MakeDword(0x43B384);
MakeComm(0x43B388, "'+4C'");
MakeDword(0x43B388);
MakeComm(0x43B38C, "'+50'");
MakeDword(0x43B38C);
MakeUnkn(0x43B3D0, 1);
MakeNameEx(0x43B3D0, "RTTI_43B3D0_Class_TCustomAction", 0);
MakeDword(0x43B3D0);
MakeUnkn(0x43B3D4, 1);
MakeNameEx(0x43B3D4, "", 0);
MakeByte(0x43B3D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B3D5, 0x43B3E3);
MakeDword(0x43B3E3);
MakeDword(0x43B3E7);
MakeWord(0x43B3EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B3ED, 0x43B3F6);
MakeWord(0x43B3F6);
MakeUnkn(0x43B3F8, 1);
MakeNameEx(0x43B3F8, "VMT_43B3F8_TActionLink", 0);
MakeDword(0x43B3F8);
MakeDword(0x43B3FC);
MakeDword(0x43B400);
MakeDword(0x43B404);
MakeDword(0x43B408);
MakeDword(0x43B40C);
MakeDword(0x43B410);
MakeDword(0x43B414);
MakeDword(0x43B418);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B4BC, 0x43B4C8);
MakeDword(0x43B41C);
MakeDword(0x43B420);
MakeDword(0x43B424);
MakeDword(0x43B428);
MakeDword(0x43B42C);
MakeDword(0x43B430);
MakeDword(0x43B434);
MakeDword(0x43B438);
MakeDword(0x43B43C);
MakeDword(0x43B440);
MakeComm(0x43B444, "'+0'");
MakeDword(0x43B444);
MakeComm(0x43B448, "'+4'");
MakeDword(0x43B448);
MakeComm(0x43B44C, "'+8'");
MakeDword(0x43B44C);
MakeComm(0x43B450, "'+C'");
MakeDword(0x43B450);
MakeComm(0x43B454, "'+10'");
MakeDword(0x43B454);
MakeComm(0x43B458, "'+14'");
MakeDword(0x43B458);
MakeComm(0x43B45C, "'+18'");
MakeDword(0x43B45C);
MakeComm(0x43B460, "'+1C'");
MakeDword(0x43B460);
MakeComm(0x43B464, "'+20'");
MakeDword(0x43B464);
MakeComm(0x43B468, "'+24'");
MakeDword(0x43B468);
MakeComm(0x43B46C, "'+28'");
MakeDword(0x43B46C);
MakeComm(0x43B470, "'+2C'");
MakeDword(0x43B470);
MakeComm(0x43B474, "'+30'");
MakeDword(0x43B474);
MakeComm(0x43B478, "'+34'");
MakeDword(0x43B478);
MakeComm(0x43B47C, "'+38'");
MakeDword(0x43B47C);
MakeComm(0x43B480, "'+3C'");
MakeDword(0x43B480);
MakeComm(0x43B484, "'+40'");
MakeDword(0x43B484);
MakeComm(0x43B488, "'+44'");
MakeDword(0x43B488);
MakeComm(0x43B48C, "'+48'");
MakeDword(0x43B48C);
MakeComm(0x43B490, "'+4C'");
MakeDword(0x43B490);
MakeComm(0x43B494, "'+50'");
MakeDword(0x43B494);
MakeComm(0x43B498, "'+54'");
MakeDword(0x43B498);
MakeComm(0x43B49C, "'+58'");
MakeDword(0x43B49C);
MakeComm(0x43B4A0, "'+5C'");
MakeDword(0x43B4A0);
MakeComm(0x43B4A4, "'+60'");
MakeDword(0x43B4A4);
MakeComm(0x43B4A8, "'+64'");
MakeDword(0x43B4A8);
MakeComm(0x43B4AC, "'+68'");
MakeDword(0x43B4AC);
MakeComm(0x43B4B0, "'+6C'");
MakeDword(0x43B4B0);
MakeComm(0x43B4B4, "'+70'");
MakeDword(0x43B4B4);
MakeComm(0x43B4B8, "'+74'");
MakeDword(0x43B4B8);
MakeUnkn(0x43B4C8, 1);
MakeNameEx(0x43B4C8, "TContainedAction.Destroy", 0x20);
MakeComm(0x43B4C8, "'destructor TContainedAction.Destroy;'");
MakeCode(0x43B4C8);
MakeCode(0x43B4E1);
MakeCode(0x43B4F8);
MakeFunction(0x43B4C8, 0x43B4FB);
MakeUnkn(0x43B4FC, 1);
MakeNameEx(0x43B4FC, "TContainedAction.GetIndex", 0x20);
MakeComm(0x43B4FC, "'function TContainedAction.GetIndex:Integer;'");
MakeCode(0x43B4FC);
MakeCode(0x43B50D);
MakeFunction(0x43B4FC, 0x43B511);
MakeUnkn(0x43B514, 1);
MakeNameEx(0x43B514, "TContainedAction.IsStoredCategory", 0x20);
MakeComm(0x43B514, "'function TContainedAction.IsStoredCategory(Value:String):Boolean;'");
MakeCode(0x43B514);
MakeFunction(0x43B514, 0x43B517);
MakeUnkn(0x43B518, 1);
MakeNameEx(0x43B518, "TContainedAction.GetParentComponent", 0x20);
MakeComm(0x43B518, "'procedure TContainedAction.GetParentComponent;'");
MakeCode(0x43B518);
MakeCode(0x43B522);
MakeFunction(0x43B518, 0x43B528);
MakeUnkn(0x43B528, 1);
MakeNameEx(0x43B528, "TContainedAction.HasParent", 0x20);
MakeComm(0x43B528, "'procedure TContainedAction.HasParent;'");
MakeCode(0x43B528);
MakeCode(0x43B531);
MakeFunction(0x43B528, 0x43B537);
MakeUnkn(0x43B538, 1);
MakeNameEx(0x43B538, "TContainedAction.ReadState", 0x20);
MakeComm(0x43B538, "'procedure TContainedAction.ReadState(Reader:TReader);'");
MakeCode(0x43B538);
MakeCode(0x43B565);
MakeFunction(0x43B538, 0x43B569);
MakeUnkn(0x43B56C, 1);
MakeNameEx(0x43B56C, "TContainedAction.SetIndex", 0x20);
MakeComm(0x43B56C, "'procedure TContainedAction.SetIndex(Value:Integer);'");
MakeCode(0x43B56C);
MakeCode(0x43B58D);
MakeCode(0x43B594);
MakeCode(0x43B5AF);
MakeFunction(0x43B56C, 0x43B5B3);
MakeUnkn(0x43B5B4, 1);
MakeNameEx(0x43B5B4, "TContainedAction.SetCategory", 0x20);
MakeComm(0x43B5B4, "'procedure TContainedAction.SetCategory(const Value:AnsiString);'");
MakeCode(0x43B5B4);
MakeCode(0x43B5DC);
MakeFunction(0x43B5B4, 0x43B5DF);
MakeUnkn(0x43B5E0, 1);
MakeNameEx(0x43B5E0, "TContainedAction.SetActionList", 0x20);
MakeComm(0x43B5E0, "'procedure TContainedAction.SetActionList(AActionList:TCustomActionList);'");
MakeCode(0x43B5E0);
MakeCode(0x43B5F8);
MakeCode(0x43B605);
MakeFunction(0x43B5E0, 0x43B608);
MakeUnkn(0x43B608, 1);
MakeNameEx(0x43B608, "TContainedAction.SetParentComponent", 0x20);
MakeComm(0x43B608, "'procedure TContainedAction.SetParentComponent(AParent:TComponent);'");
MakeCode(0x43B608);
MakeCode(0x43B62E);
MakeFunction(0x43B608, 0x43B631);
MakeUnkn(0x43B634, 1);
MakeNameEx(0x43B634, "TContainedAction.Execute", 0x20);
MakeComm(0x43B634, "'procedure TContainedAction.Execute;'");
MakeCode(0x43B634);
MakeCode(0x43B651);
MakeCode(0x43B683);
MakeCode(0x43B685);
MakeFunction(0x43B634, 0x43B689);
MakeUnkn(0x43B68C, 1);
MakeNameEx(0x43B68C, "TContainedAction.Update", 0x20);
MakeComm(0x43B68C, "'function TContainedAction.Update:Boolean;'");
MakeCode(0x43B68C);
MakeCode(0x43B6A9);
MakeCode(0x43B6DB);
MakeCode(0x43B6DD);
MakeFunction(0x43B68C, 0x43B6E1);
MakeUnkn(0x43B6E4, 1);
MakeNameEx(0x43B6E4, "TCustomActionList.Create", 0x20);
MakeComm(0x43B6E4, "'constructor TCustomActionList.Create(AOwner:TComponent);'");
MakeCode(0x43B6E4);
MakeCode(0x43B6F6);
MakeCode(0x43B749);
MakeFunction(0x43B6E4, 0x43B750);
MakeUnkn(0x43B750, 1);
MakeNameEx(0x43B750, "TCustomActionList.Destroy", 0x20);
MakeComm(0x43B750, "'destructor TCustomActionList.Destroy;'");
MakeCode(0x43B750);
MakeCode(0x43B766);
MakeCode(0x43B772);
MakeCode(0x43B79A);
MakeFunction(0x43B750, 0x43B79E);
MakeUnkn(0x43B7A0, 1);
MakeNameEx(0x43B7A0, "TCustomActionList.GetChildren", 0x20);
MakeComm(0x43B7A0, "'procedure TCustomActionList.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x43B7A0);
MakeCode(0x43B7BF);
MakeCode(0x43B7DB);
MakeCode(0x43B7DF);
MakeFunction(0x43B7A0, 0x43B7E7);
MakeUnkn(0x43B7E8, 1);
MakeNameEx(0x43B7E8, "TCustomActionList.SetChildOrder", 0x20);
MakeComm(0x43B7E8, "'procedure TCustomActionList.SetChildOrder(Component:TComponent; Order:Integer);'");
MakeCode(0x43B7E8);
MakeCode(0x43B813);
MakeFunction(0x43B7E8, 0x43B817);
MakeUnkn(0x43B818, 1);
MakeNameEx(0x43B818, "TCustomActionList.GetAction", 0x20);
MakeComm(0x43B818, "'function TCustomActionList.GetAction(Index:Integer):TContainedAction;'");
MakeCode(0x43B818);
MakeFunction(0x43B818, 0x43B82B);
MakeUnkn(0x43B82C, 1);
MakeNameEx(0x43B82C, "TCustomActionList.GetActionCount", 0x20);
MakeComm(0x43B82C, "'function TCustomActionList.GetActionCount:Integer;'");
MakeCode(0x43B82C);
MakeFunction(0x43B82C, 0x43B833);
MakeUnkn(0x43B834, 1);
MakeNameEx(0x43B834, "TCustomActionList.SetImages", 0x20);
MakeComm(0x43B834, "'procedure TCustomActionList.SetImages(Value:TCustomImageList);'");
MakeCode(0x43B834);
MakeCode(0x43B849);
MakeCode(0x43B864);
MakeFunction(0x43B834, 0x43B867);
MakeUnkn(0x43B868, 1);
MakeNameEx(0x43B868, "TCustomActionList.ImageListChange", 0x20);
MakeComm(0x43B868, "'procedure TCustomActionList.ImageListChange(Sender:TObject);'");
MakeCode(0x43B868);
MakeFunction(0x43B868, 0x43B873);
MakeUnkn(0x43B874, 1);
MakeNameEx(0x43B874, "TCustomActionList.Notification", 0x20);
MakeComm(0x43B874, "'procedure TCustomActionList.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x43B874);
MakeCode(0x43B89D);
MakeCode(0x43B8B7);
MakeFunction(0x43B874, 0x43B8BB);
MakeUnkn(0x43B8BC, 1);
MakeNameEx(0x43B8BC, "TCustomActionList.AddAction", 0x20);
MakeComm(0x43B8BC, "'procedure TCustomActionList.AddAction(Action:TContainedAction);'");
MakeCode(0x43B8BC);
MakeFunction(0x43B8BC, 0x43B8DB);
MakeUnkn(0x43B8DC, 1);
MakeNameEx(0x43B8DC, "TCustomActionList.RemoveAction", 0x20);
MakeComm(0x43B8DC, "'procedure TCustomActionList.RemoveAction(Action:TContainedAction);'");
MakeCode(0x43B8DC);
MakeCode(0x43B8F5);
MakeFunction(0x43B8DC, 0x43B8F8);
MakeUnkn(0x43B8F8, 1);
MakeNameEx(0x43B8F8, "TCustomActionList.Change", 0x20);
MakeComm(0x43B8F8, "'procedure TCustomActionList.Change;'");
MakeCode(0x43B8F8);
MakeCode(0x43B90C);
MakeCode(0x43B91A);
MakeCode(0x43B92C);
MakeCode(0x43B95A);
MakeFunction(0x43B8F8, 0x43B95E);
MakeUnkn(0x43B960, 1);
MakeNameEx(0x43B960, "TCustomActionList.IsShortCut", 0x20);
MakeComm(0x43B960, "'function TCustomActionList.IsShortCut(var Message:TWMKey):Boolean;'");
MakeCode(0x43B960);
MakeCode(0x43B997);
MakeCode(0x43B9D7);
MakeCode(0x43B9E0);
MakeCode(0x43B9E4);
MakeCode(0x43B9E6);
MakeFunction(0x43B960, 0x43B9EC);
MakeUnkn(0x43B9EC, 1);
MakeNameEx(0x43B9EC, "TCustomActionList.ExecuteAction", 0x20);
MakeComm(0x43B9EC, "'procedure TCustomActionList.ExecuteAction(Action:TBasicAction);'");
MakeCode(0x43B9EC);
MakeCode(0x43BA03);
MakeFunction(0x43B9EC, 0x43BA09);
MakeUnkn(0x43BA0C, 1);
MakeNameEx(0x43BA0C, "TCustomActionList.UpdateAction", 0x20);
MakeComm(0x43BA0C, "'procedure TCustomActionList.UpdateAction(Action:TBasicAction);'");
MakeCode(0x43BA0C);
MakeCode(0x43BA23);
MakeFunction(0x43BA0C, 0x43BA29);
MakeUnkn(0x43BA2C, 1);
MakeNameEx(0x43BA2C, "TActionLink.IsCaptionLinked", 0x20);
MakeComm(0x43BA2C, "'function TActionLink.IsCaptionLinked:Boolean;'");
MakeCode(0x43BA2C);
MakeFunction(0x43BA2C, 0x43BA3F);
MakeUnkn(0x43BA40, 1);
MakeNameEx(0x43BA40, "TActionLink.IsCheckedLinked", 0x20);
MakeComm(0x43BA40, "'function TActionLink.IsCheckedLinked:Boolean;'");
MakeCode(0x43BA40);
MakeFunction(0x43BA40, 0x43BA53);
MakeUnkn(0x43BA54, 1);
MakeNameEx(0x43BA54, "TActionLink.IsEnabledLinked", 0x20);
MakeComm(0x43BA54, "'function TActionLink.IsEnabledLinked:Boolean;'");
MakeCode(0x43BA54);
MakeFunction(0x43BA54, 0x43BA67);
MakeUnkn(0x43BA68, 1);
MakeNameEx(0x43BA68, "TActionLink.IsGroupIndexLinked", 0x20);
MakeComm(0x43BA68, "'function TActionLink.IsGroupIndexLinked:Boolean;'");
MakeCode(0x43BA68);
MakeFunction(0x43BA68, 0x43BA7B);
MakeUnkn(0x43BA7C, 1);
MakeNameEx(0x43BA7C, "TActionLink.IsHelpContextLinked", 0x20);
MakeComm(0x43BA7C, "'function TActionLink.IsHelpContextLinked:Boolean;'");
MakeCode(0x43BA7C);
MakeFunction(0x43BA7C, 0x43BA8F);
MakeUnkn(0x43BA90, 1);
MakeNameEx(0x43BA90, "TActionLink.IsHelpLinked", 0x20);
MakeComm(0x43BA90, "'function TActionLink.IsHelpLinked:Boolean;'");
MakeCode(0x43BA90);
MakeFunction(0x43BA90, 0x43BAA3);
MakeUnkn(0x43BAA4, 1);
MakeNameEx(0x43BAA4, "TActionLink.IsHintLinked", 0x20);
MakeComm(0x43BAA4, "'function TActionLink.IsHintLinked:Boolean;'");
MakeCode(0x43BAA4);
MakeFunction(0x43BAA4, 0x43BAB7);
MakeUnkn(0x43BAB8, 1);
MakeNameEx(0x43BAB8, "TActionLink.IsImageIndexLinked", 0x20);
MakeComm(0x43BAB8, "'function TActionLink.IsImageIndexLinked:Boolean;'");
MakeCode(0x43BAB8);
MakeFunction(0x43BAB8, 0x43BACB);
MakeUnkn(0x43BACC, 1);
MakeNameEx(0x43BACC, "TActionLink.IsShortCutLinked", 0x20);
MakeComm(0x43BACC, "'function TActionLink.IsShortCutLinked:Boolean;'");
MakeCode(0x43BACC);
MakeFunction(0x43BACC, 0x43BADF);
MakeUnkn(0x43BAE0, 1);
MakeNameEx(0x43BAE0, "TActionLink.IsVisibleLinked", 0x20);
MakeComm(0x43BAE0, "'function TActionLink.IsVisibleLinked:Boolean;'");
MakeCode(0x43BAE0);
MakeFunction(0x43BAE0, 0x43BAF3);
MakeCode(0x43BAF4);
MakeFunction(0x43BAF4, 0x43BAF5);
MakeCode(0x43BAF8);
MakeFunction(0x43BAF8, 0x43BAF9);
MakeCode(0x43BAFC);
MakeFunction(0x43BAFC, 0x43BAFD);
MakeCode(0x43BB00);
MakeFunction(0x43BB00, 0x43BB01);
MakeCode(0x43BB04);
MakeFunction(0x43BB04, 0x43BB05);
MakeCode(0x43BB08);
MakeFunction(0x43BB08, 0x43BB09);
MakeCode(0x43BB0C);
MakeFunction(0x43BB0C, 0x43BB0D);
MakeCode(0x43BB10);
MakeFunction(0x43BB10, 0x43BB11);
MakeCode(0x43BB14);
MakeFunction(0x43BB14, 0x43BB15);
MakeCode(0x43BB18);
MakeFunction(0x43BB18, 0x43BB19);
MakeCode(0x43BB1C);
MakeFunction(0x43BB1C, 0x43BB1D);
MakeCode(0x43BB20);
MakeFunction(0x43BB20, 0x43BB21);
MakeUnkn(0x43BB24, 1);
MakeNameEx(0x43BB24, "TCustomAction.Create", 0x20);
MakeComm(0x43BB24, "'constructor TCustomAction.Create(AOwner:TComponent);'");
MakeCode(0x43BB24);
MakeCode(0x43BB32);
MakeCode(0x43BB71);
MakeFunction(0x43BB24, 0x43BB76);
MakeUnkn(0x43BB78, 1);
MakeNameEx(0x43BB78, "TCustomAction.Destroy", 0x20);
MakeComm(0x43BB78, "'destructor TCustomAction.Destroy;'");
MakeCode(0x43BB78);
MakeCode(0x43BBAD);
MakeCode(0x43BBC4);
MakeFunction(0x43BB78, 0x43BBC7);
MakeUnkn(0x43BBC8, 1);
MakeNameEx(0x43BBC8, "TCustomAction.AssignTo", 0x20);
MakeComm(0x43BBC8, "'procedure TCustomAction.AssignTo(Dest:TPersistent);'");
MakeCode(0x43BBC8);
MakeCode(0x43BC67);
MakeCode(0x43BC70);
MakeFunction(0x43BBC8, 0x43BC74);
MakeUnkn(0x43BC74, 1);
MakeNameEx(0x43BC74, "TCustomAction.SetCaption", 0x20);
MakeComm(0x43BC74, "'procedure TCustomAction.SetCaption(const Value:AnsiString);'");
MakeCode(0x43BC74);
MakeCode(0x43BC98);
MakeCode(0x43BCB8);
MakeCode(0x43BCBC);
MakeCode(0x43BCCE);
MakeFunction(0x43BC74, 0x43BCD3);
MakeUnkn(0x43BCD4, 1);
MakeNameEx(0x43BCD4, "TCustomAction.SetChecked", 0x20);
MakeComm(0x43BCD4, "'procedure TCustomAction.SetChecked(Value:Boolean);'");
MakeCode(0x43BCD4);
MakeCode(0x43BD1F);
MakeCode(0x43BD41);
MakeCode(0x43BD45);
MakeCode(0x43BD72);
MakeCode(0x43BDAB);
MakeCode(0x43BDAF);
MakeCode(0x43BDB7);
MakeCode(0x43BDD3);
MakeFunction(0x43BCD4, 0x43BDD9);
MakeUnkn(0x43BDDC, 1);
MakeNameEx(0x43BDDC, "TCustomAction.SetEnabled", 0x20);
MakeComm(0x43BDDC, "'procedure TCustomAction.SetEnabled(Value:Boolean);'");
MakeCode(0x43BDDC);
MakeCode(0x43BE04);
MakeCode(0x43BE0D);
MakeCode(0x43BE1B);
MakeCode(0x43BE3B);
MakeCode(0x43BE3F);
MakeCode(0x43BE4C);
MakeFunction(0x43BDDC, 0x43BE51);
MakeUnkn(0x43BE54, 1);
MakeNameEx(0x43BE54, "TCustomAction.SetHelpKeyword", 0x20);
MakeComm(0x43BE54, "'procedure TCustomAction.SetHelpKeyword(const Value:AnsiString);'");
MakeCode(0x43BE54);
MakeCode(0x43BE76);
MakeCode(0x43BEA0);
MakeCode(0x43BEA4);
MakeCode(0x43BEB5);
MakeFunction(0x43BE54, 0x43BEBA);
MakeUnkn(0x43BEBC, 1);
MakeNameEx(0x43BEBC, "TCustomAction.SetHelpContext", 0x20);
MakeComm(0x43BEBC, "'procedure TCustomAction.SetHelpContext(Value:THelpContext);'");
MakeCode(0x43BEBC);
MakeCode(0x43BEDB);
MakeCode(0x43BEFB);
MakeCode(0x43BEFF);
MakeCode(0x43BF0C);
MakeFunction(0x43BEBC, 0x43BF11);
MakeUnkn(0x43BF14, 1);
MakeNameEx(0x43BF14, "TCustomAction.SetHint", 0x20);
MakeComm(0x43BF14, "'procedure TCustomAction.SetHint(const Value:AnsiString);'");
MakeCode(0x43BF14);
MakeCode(0x43BF38);
MakeCode(0x43BF58);
MakeCode(0x43BF5C);
MakeCode(0x43BF6E);
MakeFunction(0x43BF14, 0x43BF73);
MakeUnkn(0x43BF74, 1);
MakeNameEx(0x43BF74, "TCustomAction.SetImageIndex", 0x20);
MakeComm(0x43BF74, "'procedure TCustomAction.SetImageIndex(Value:TImageIndex);'");
MakeCode(0x43BF74);
MakeCode(0x43BF96);
MakeCode(0x43BFB6);
MakeCode(0x43BFBA);
MakeCode(0x43BFCA);
MakeFunction(0x43BF74, 0x43BFCF);
MakeUnkn(0x43BFD0, 1);
MakeNameEx(0x43BFD0, "TCustomAction.SetShortCut", 0x20);
MakeComm(0x43BFD0, "'procedure TCustomAction.SetShortCut(Value:TShortCut);'");
MakeCode(0x43BFD0);
MakeCode(0x43BFF5);
MakeCode(0x43C016);
MakeCode(0x43C01A);
MakeCode(0x43C02C);
MakeFunction(0x43BFD0, 0x43C031);
MakeUnkn(0x43C034, 1);
MakeNameEx(0x43C034, "TCustomAction.SetVisible", 0x20);
MakeComm(0x43C034, "'procedure TCustomAction.SetVisible(Value:Boolean);'");
MakeCode(0x43C034);
MakeCode(0x43C052);
MakeCode(0x43C07B);
MakeCode(0x43C07F);
MakeCode(0x43C08C);
MakeFunction(0x43C034, 0x43C091);
MakeUnkn(0x43C094, 1);
MakeNameEx(0x43C094, "TCustomAction.SetName", 0x20);
MakeComm(0x43C094, "'procedure TCustomAction.SetName(const Value:TComponentName);'");
MakeCode(0x43C094);
MakeCode(0x43C0B5);
MakeCode(0x43C0B9);
MakeCode(0x43C0BB);
MakeCode(0x43C0DC);
MakeFunction(0x43C094, 0x43C0E0);
MakeUnkn(0x43C0E0, 1);
MakeNameEx(0x43C0E0, "TCustomAction.DoHint", 0x20);
MakeComm(0x43C0E0, "'procedure TCustomAction.DoHint(var HintStr:AnsiString);'");
MakeCode(0x43C0E0);
MakeCode(0x43C100);
MakeFunction(0x43C0E0, 0x43C106);
MakeUnkn(0x43C108, 1);
MakeNameEx(0x43C108, "TCustomAction.Execute", 0x20);
MakeComm(0x43C108, "'procedure TCustomAction.Execute;'");
MakeCode(0x43C108);
MakeCode(0x43C11A);
MakeCode(0x43C142);
MakeCode(0x43C14F);
MakeCode(0x43C160);
MakeCode(0x43C164);
MakeCode(0x43C166);
MakeFunction(0x43C108, 0x43C168);
MakeUnkn(0x43C168, 1);
MakeNameEx(0x43C168, "TCustomAction.GetSecondaryShortCuts", 0x20);
MakeComm(0x43C168, "'function TCustomAction.GetSecondaryShortCuts:TShortCutList;'");
MakeCode(0x43C168);
MakeCode(0x43C186);
MakeFunction(0x43C168, 0x43C18E);
MakeUnkn(0x43C190, 1);
MakeNameEx(0x43C190, "TCustomAction.HandleShortCut", 0x20);
MakeComm(0x43C190, "'function TCustomAction.HandleShortCut:Boolean;'");
MakeCode(0x43C190);
MakeFunction(0x43C190, 0x43C19C);
MakeUnkn(0x43C19C, 1);
MakeNameEx(0x43C19C, "TShortCutList.Add", 0x20);
MakeComm(0x43C19C, "'function TShortCutList.Add(const S:AnsiString):Integer;'");
MakeCode(0x43C19C);
MakeFunction(0x43C19C, 0x43C1C7);
MakeUnkn(0x43C1C8, 1);
MakeNameEx(0x43C1C8, "TShortCutList.IndexOfShortCut", 0x20);
MakeComm(0x43C1C8, "'function TShortCutList.IndexOfShortCut(const Shortcut:TShortCut):Integer;'");
MakeCode(0x43C1C8);
MakeCode(0x43C1E9);
MakeCode(0x43C1FC);
MakeCode(0x43C200);
MakeFunction(0x43C1C8, 0x43C209);
MakeCode(0x43C20C);
MakeCode(0x43C223);
MakeCode(0x43C230);
MakeCode(0x43C231);
MakeCode(0x43C236);
MakeFunction(0x43C20C, 0x43C23A);
MakeUnkn(0x43C23C, 1);
MakeNameEx(0x43C23C, "ActnList", 0x20);
MakeComm(0x43C23C, "'procedure ActnList;'");
MakeCode(0x43C23C);
MakeFunction(0x43C23C, 0x43C266);
MakeUnkn(0x43C268, 1);
MakeNameEx(0x43C268, "VMT_43C268_TChangeLink", 0);
MakeDword(0x43C268);
MakeDword(0x43C26C);
MakeDword(0x43C270);
MakeDword(0x43C274);
MakeDword(0x43C278);
MakeDword(0x43C27C);
MakeDword(0x43C280);
MakeDword(0x43C284);
MakeUnkn(0x43C2B4, 1);
MakeNameEx(0x43C2B4, "TChangeLink_DynamicTable", 0);
MakeWord(0x43C2B4);
MakeWord(0x43C2B6);
MakeDword(0x43C2B8);
MakeDword(0x43C288);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C2BC, 0x43C2C8);
MakeDword(0x43C28C);
MakeDword(0x43C290);
MakeDword(0x43C294);
MakeDword(0x43C298);
MakeDword(0x43C29C);
MakeDword(0x43C2A0);
MakeDword(0x43C2A4);
MakeDword(0x43C2A8);
MakeDword(0x43C2AC);
MakeDword(0x43C2B0);
MakeUnkn(0x43C2C8, 1);
MakeNameEx(0x43C2C8, "RTTI_43C2C8_Integer_TImageIndex", 0);
MakeDword(0x43C2C8);
MakeUnkn(0x43C2CC, 1);
MakeNameEx(0x43C2CC, "", 0);
MakeByte(0x43C2CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C2CD, 0x43C2D9);
MakeByte(0x43C2D9);
MakeDword(0x43C2DA);
MakeDword(0x43C2DE);
MakeUnkn(0x43C2E4, 1);
MakeNameEx(0x43C2E4, "VMT_43C2E4_TCustomImageList", 0);
MakeDword(0x43C2E4);
MakeDword(0x43C2E8);
MakeDword(0x43C2EC);
MakeDword(0x43C2F0);
MakeDword(0x43C2F4);
MakeDword(0x43C2F8);
MakeDword(0x43C2FC);
MakeDword(0x43C300);
MakeUnkn(0x43C374, 1);
MakeNameEx(0x43C374, "TCustomImageList_DynamicTable", 0);
MakeWord(0x43C374);
MakeWord(0x43C376);
MakeDword(0x43C378);
MakeDword(0x43C304);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C37C, 0x43C38D);
MakeDword(0x43C308);
MakeDword(0x43C30C);
MakeDword(0x43C310);
MakeDword(0x43C314);
MakeDword(0x43C318);
MakeDword(0x43C31C);
MakeDword(0x43C320);
MakeDword(0x43C324);
MakeDword(0x43C328);
MakeDword(0x43C32C);
MakeComm(0x43C330, "'+0'");
MakeDword(0x43C330);
MakeComm(0x43C334, "'+4'");
MakeDword(0x43C334);
MakeComm(0x43C338, "'+8'");
MakeDword(0x43C338);
MakeComm(0x43C33C, "'+C'");
MakeDword(0x43C33C);
MakeComm(0x43C340, "'+10'");
MakeDword(0x43C340);
MakeComm(0x43C344, "'+14'");
MakeDword(0x43C344);
MakeComm(0x43C348, "'+18'");
MakeDword(0x43C348);
MakeComm(0x43C34C, "'+1C'");
MakeDword(0x43C34C);
MakeComm(0x43C350, "'+20'");
MakeDword(0x43C350);
MakeComm(0x43C354, "'+24'");
MakeDword(0x43C354);
MakeComm(0x43C358, "'+28'");
MakeDword(0x43C358);
MakeComm(0x43C35C, "'+2C'");
MakeDword(0x43C35C);
MakeComm(0x43C360, "'+30'");
MakeDword(0x43C360);
MakeComm(0x43C364, "'+34'");
MakeDword(0x43C364);
MakeComm(0x43C368, "'+38'");
MakeDword(0x43C368);
MakeComm(0x43C36C, "'+3C'");
MakeDword(0x43C36C);
MakeComm(0x43C370, "'+40'");
MakeDword(0x43C370);
MakeUnkn(0x43C390, 1);
MakeNameEx(0x43C390, "RTTI_43C390_Class_TCustomImageList", 0);
MakeDword(0x43C390);
MakeUnkn(0x43C394, 1);
MakeNameEx(0x43C394, "", 0);
MakeByte(0x43C394);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C395, 0x43C3A6);
MakeDword(0x43C3A6);
MakeDword(0x43C3AA);
MakeWord(0x43C3AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C3B0, 0x43C3B8);
MakeWord(0x43C3B8);
MakeUnkn(0x43C3BC, 1);
MakeNameEx(0x43C3BC, "GetRGBColor", 0x20);
MakeComm(0x43C3BC, "'function GetRGBColor(Value:TColor):DWORD;'");
MakeCode(0x43C3BC);
MakeCode(0x43C3D0);
MakeCode(0x43C3D4);
MakeFunction(0x43C3BC, 0x43C3DA);
MakeUnkn(0x43C3DC, 1);
MakeNameEx(0x43C3DC, "GetColor", 0x20);
MakeComm(0x43C3DC, "'function GetColor(Value:DWORD):TColor;'");
MakeCode(0x43C3DC);
MakeCode(0x43C3F4);
MakeFunction(0x43C3DC, 0x43C3FA);
MakeUnkn(0x43C3FC, 1);
MakeNameEx(0x43C3FC, "TCustomImageList.Create", 0x20);
MakeComm(0x43C3FC, "'constructor TCustomImageList.Create(AOwner:TComponent);'");
MakeCode(0x43C3FC);
MakeCode(0x43C40A);
MakeCode(0x43C441);
MakeFunction(0x43C3FC, 0x43C446);
MakeUnkn(0x43C448, 1);
MakeNameEx(0x43C448, "TCustomImageList.Destroy", 0x20);
MakeComm(0x43C448, "'destructor TCustomImageList.Destroy;'");
MakeCode(0x43C448);
MakeCode(0x43C456);
MakeCode(0x43C466);
MakeCode(0x43C497);
MakeCode(0x43C4AE);
MakeFunction(0x43C448, 0x43C4B2);
MakeCode(0x43C4B4);
MakeComm(0x43C4D1, "'TList.Create'");
MakeComm(0x43C4D6, "'TCustomImageList.FClients:TList'");
MakeComm(0x43C4D9, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x43C4E8, "'TCustomImageList.FWidth:Integer'");
MakeCode(0x43C4EE);
MakeComm(0x43C505, "'EInvalidOperation.Create'");
MakeComm(0x43C50F, "'TCustomImageList.FAllocBy:Integer'");
MakeCode(0x43C50F);
MakeComm(0x43C516, "'TCustomImageList.FMasked:Boolean'");
MakeComm(0x43C523, "'TCustomImageList.FImageType:TImageType'");
MakeComm(0x43C527, "'TCustomImageList.FBkColor:TColor'");
MakeComm(0x43C52E, "'TCustomImageList.FBlendColor:TColor'");
MakeComm(0x43C53C, "'TBitmap.Create'");
MakeComm(0x43C541, "'TCustomImageList.FBitmap:TBitmap'");
MakeCode(0x43C54B);
MakeCode(0x43C558);
MakeCode(0x43C561);
MakeCode(0x43C566);
MakeFunction(0x43C4B4, 0x43C56C);
MakeUnkn(0x43C56C, 1);
MakeNameEx(0x43C56C, "TCustomImageList.HandleAllocated", 0x20);
MakeComm(0x43C56C, "'function TCustomImageList.HandleAllocated:Boolean;'");
MakeCode(0x43C56C);
MakeFunction(0x43C56C, 0x43C574);
MakeUnkn(0x43C574, 1);
MakeNameEx(0x43C574, "TCustomImageList.HandleNeeded", 0x20);
MakeComm(0x43C574, "'procedure TCustomImageList.HandleNeeded;'");
MakeCode(0x43C574);
MakeFunction(0x43C574, 0x43C580);
MakeUnkn(0x43C580, 1);
MakeNameEx(0x43C580, "TCustomImageList.InitBitmap", 0x20);
MakeComm(0x43C580, "'procedure TCustomImageList.InitBitmap;'");
MakeCode(0x43C580);
MakeCode(0x43C608);
MakeCode(0x43C615);
MakeCode(0x43C621);
MakeCode(0x43C626);
MakeCode(0x43C63F);
MakeFunction(0x43C580, 0x43C644);
MakeUnkn(0x43C644, 1);
MakeNameEx(0x43C644, "TCustomImageList.SetNewDimensions", 0x20);
MakeComm(0x43C644, "'procedure TCustomImageList.SetNewDimensions(Value:HIMAGELIST);'");
MakeCode(0x43C644);
MakeFunction(0x43C644, 0x43C67B);
MakeUnkn(0x43C67C, 1);
MakeNameEx(0x43C67C, "TCustomImageList.SetHandle", 0x20);
MakeComm(0x43C67C, "'procedure TCustomImageList.SetHandle(Value:HIMAGELIST);'");
MakeCode(0x43C67C);
MakeCode(0x43C6A4);
MakeFunction(0x43C67C, 0x43C6A7);
MakeUnkn(0x43C6A8, 1);
MakeNameEx(0x43C6A8, "TCustomImageList.GetHandle", 0x20);
MakeComm(0x43C6A8, "'function TCustomImageList.GetHandle:HIMAGELIST;'");
MakeCode(0x43C6A8);
MakeFunction(0x43C6A8, 0x43C6B7);
MakeUnkn(0x43C6B8, 1);
MakeNameEx(0x43C6B8, "TCustomImageList.GetImageHandle", 0x20);
MakeComm(0x43C6B8, "'function TCustomImageList.GetImageHandle(Image:TBitmap; ImageDDB:TBitmap):HBITMAP;'");
MakeCode(0x43C6B8);
MakeCode(0x43C6E2);
MakeCode(0x43C6FD);
MakeCode(0x43C705);
MakeFunction(0x43C6B8, 0x43C709);
MakeUnkn(0x43C70C, 1);
MakeNameEx(0x43C70C, "TCustomImageList.FreeHandle", 0x20);
MakeComm(0x43C70C, "'procedure TCustomImageList.FreeHandle;'");
MakeCode(0x43C70C);
MakeCode(0x43C72E);
MakeFunction(0x43C70C, 0x43C741);
MakeUnkn(0x43C744, 1);
MakeNameEx(0x43C744, "TCustomImageList.CreateImageList", 0x20);
MakeComm(0x43C744, "'procedure TCustomImageList.CreateImageList;'");
MakeCode(0x43C744);
MakeCode(0x43C7AE);
MakeCode(0x43C7C1);
MakeCode(0x43C7CE);
MakeCode(0x43C7D7);
MakeCode(0x43C7DC);
MakeFunction(0x43C744, 0x43C7E3);
MakeUnkn(0x43C7E4, 1);
MakeNameEx(0x43C7E4, "TCustomImageList.Add", 0x20);
MakeComm(0x43C7E4, "'function TCustomImageList.Add(Image:TBitmap; Mask:TBitmap):Integer;'");
MakeCode(0x43C7E4);
MakeCode(0x43C860);
MakeCode(0x43C86D);
MakeCode(0x43C876);
MakeCode(0x43C87B);
MakeCode(0x43C87D);
MakeCode(0x43C88A);
MakeCode(0x43C893);
MakeCode(0x43C898);
MakeFunction(0x43C7E4, 0x43C8AF);
MakeUnkn(0x43C8B0, 1);
MakeNameEx(0x43C8B0, "TCustomImageList.GetCount", 0x20);
MakeComm(0x43C8B0, "'function TCustomImageList.GetCount:Integer;'");
MakeCode(0x43C8B0);
MakeCode(0x43C8CD);
MakeFunction(0x43C8B0, 0x43C8D1);
MakeUnkn(0x43C8D4, 1);
MakeNameEx(0x43C8D4, "TCustomImageList.Delete", 0x20);
MakeComm(0x43C8D4, "'procedure TCustomImageList.Delete(Index:Integer);'");
MakeCode(0x43C8D4);
MakeCode(0x43C919);
MakeCode(0x43C932);
MakeCode(0x43C93D);
MakeCode(0x43C94A);
MakeCode(0x43C953);
MakeCode(0x43C958);
MakeFunction(0x43C8D4, 0x43C95F);
MakeUnkn(0x43C960, 1);
MakeNameEx(0x43C960, "TCustomImageList.Clear", 0x20);
MakeComm(0x43C960, "'procedure TCustomImageList.Clear;'");
MakeCode(0x43C960);
MakeFunction(0x43C960, 0x43C969);
MakeUnkn(0x43C96C, 1);
MakeNameEx(0x43C96C, "TCustomImageList.SetBkColor", 0x20);
MakeComm(0x43C96C, "'procedure TCustomImageList.SetBkColor(Value:TColor);'");
MakeCode(0x43C96C);
MakeCode(0x43C990);
MakeCode(0x43C993);
MakeFunction(0x43C96C, 0x43C9A1);
MakeUnkn(0x43C9A4, 1);
MakeNameEx(0x43C9A4, "TCustomImageList.GetBkColor", 0x20);
MakeComm(0x43C9A4, "'function TCustomImageList.GetBkColor:TColor;'");
MakeCode(0x43C9A4);
MakeCode(0x43C9C6);
MakeFunction(0x43C9A4, 0x43C9CB);
MakeCode(0x43C9CC);
MakeComm(0x43C9F5, "'TCustomImageList.FBlendColor:TColor'");
MakeComm(0x43CA35, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeCode(0x43CA35);
MakeComm(0x43CA42, "'TBitmap.Create'");
MakeComm(0x43CA49, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeComm(0x43CA55, "'TCustomImageList.FWidth:Integer'");
MakeComm(0x43CA5C, "'TBitmap.SetWidth'");
MakeComm(0x43CA5F, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x43CA66, "'TBitmap.SetHeight'");
MakeComm(0x43CA69, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeCode(0x43CA69);
MakeComm(0x43CA71, "'TCanvas.Brush:TBrush'");
MakeComm(0x43CA7E, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x43CA86, "'TCustomImageList.FWidth:Integer'");
MakeComm(0x43CA96, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeComm(0x43CAB2, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeComm(0x43CAD4, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x43CADF, "'TCustomImageList.FWidth:Integer'");
MakeComm(0x43CAED, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeComm(0x43CB33, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x43CB37, "'TCustomImageList.FWidth:Integer'");
MakeComm(0x43CB81, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x43CB85, "'TCustomImageList.FWidth:Integer'");
MakeCode(0x43CB97);
MakeFunction(0x43C9CC, 0x43CBA0);
MakeUnkn(0x43CBA0, 1);
MakeNameEx(0x43CBA0, "TCustomImageList.Draw", 0x20);
MakeComm(0x43CBA0, "'procedure TCustomImageList.Draw(Canvas:TCanvas; X:Integer; Y:Integer; Index:Integer; Enabled:Boolean);'");
MakeCode(0x43CBA0);
MakeFunction(0x43CBA0, 0x43CBC2);
MakeUnkn(0x43CBC4, 1);
MakeNameEx(0x43CBC4, "TCustomImageList.Draw_0", 0x20);
MakeComm(0x43CBC4, "'procedure TCustomImageList.Draw(Canvas:TCanvas; X:Integer; Y:Integer; Index:Integer; ADrawingStyle:TDrawingStyle; AImageType:TImageType; Enabled:Boolean);'");
MakeCode(0x43CBC4);
MakeCode(0x43CC09);
MakeFunction(0x43CBC4, 0x43CC10);
MakeUnkn(0x43CC10, 1);
MakeNameEx(0x43CC10, "TCustomImageList.CopyImages", 0x20);
MakeComm(0x43CC10, "'procedure TCustomImageList.CopyImages(Value:HIMAGELIST; Index:Integer);'");
MakeCode(0x43CC10);
MakeCode(0x43CCE0);
MakeCode(0x43CCE9);
MakeCode(0x43CD55);
MakeCode(0x43CD59);
MakeCode(0x43CD66);
MakeCode(0x43CD6F);
MakeCode(0x43CD74);
MakeCode(0x43CD76);
MakeCode(0x43CD83);
MakeCode(0x43CD8C);
MakeCode(0x43CD91);
MakeCode(0x43CD93);
MakeCode(0x43CDA0);
MakeCode(0x43CDA9);
MakeCode(0x43CDAE);
MakeFunction(0x43CC10, 0x43CDB7);
MakeUnkn(0x43CDB8, 1);
MakeNameEx(0x43CDB8, "TCustomImageList.AddImages", 0x20);
MakeComm(0x43CDB8, "'procedure TCustomImageList.AddImages(Value:TCustomImageList);'");
MakeCode(0x43CDB8);
MakeCode(0x43CDD5);
MakeFunction(0x43CDB8, 0x43CDD8);
MakeUnkn(0x43CDD8, 1);
MakeNameEx(0x43CDD8, "TCustomImageList.Assign", 0x20);
MakeComm(0x43CDD8, "'procedure TCustomImageList.Assign(Source:TPersistent);'");
MakeCode(0x43CDD8);
MakeCode(0x43CDEC);
MakeCode(0x43CE48);
MakeCode(0x43CE5D);
MakeCode(0x43CE89);
MakeCode(0x43CE92);
MakeFunction(0x43CDD8, 0x43CE95);
MakeUnkn(0x43CE98, 1);
MakeNameEx(0x43CE98, "TCustomImageList.AssignTo", 0x20);
MakeComm(0x43CE98, "'procedure TCustomImageList.AssignTo(Dest:TPersistent);'");
MakeCode(0x43CE98);
MakeCode(0x43CF00);
MakeCode(0x43CF15);
MakeCode(0x43CF3C);
MakeFunction(0x43CE98, 0x43CF48);
MakeUnkn(0x43CF48, 1);
MakeNameEx(0x43CF48, "TCustomImageList.CheckImage", 0x20);
MakeComm(0x43CF48, "'procedure TCustomImageList.CheckImage(Image:TGraphic);'");
MakeCode(0x43CF48);
MakeCode(0x43CF7D);
MakeCode(0x43CF9E);
MakeCode(0x43CFAB);
MakeCode(0x43CFB4);
MakeCode(0x43CFB9);
MakeFunction(0x43CF48, 0x43CFC0);
MakeUnkn(0x43CFC0, 1);
MakeNameEx(0x43CFC0, "TCustomImageList.SetDrawingStyle", 0x20);
MakeComm(0x43CFC0, "'procedure TCustomImageList.SetDrawingStyle(Value:TDrawingStyle);'");
MakeCode(0x43CFC0);
MakeCode(0x43CFD6);
MakeFunction(0x43CFC0, 0x43CFD8);
MakeUnkn(0x43CFD8, 1);
MakeNameEx(0x43CFD8, "TCustomImageList.GetHotSpot", 0x20);
MakeComm(0x43CFD8, "'function TCustomImageList.GetHotSpot:TPoint;'");
MakeCode(0x43CFD8);
MakeFunction(0x43CFD8, 0x43CFE8);
MakeUnkn(0x43CFE8, 1);
MakeNameEx(0x43CFE8, "TCustomImageList.Change", 0x20);
MakeComm(0x43CFE8, "'procedure TCustomImageList.Change;'");
MakeCode(0x43CFE8);
MakeCode(0x43D00A);
MakeCode(0x43D021);
MakeCode(0x43D030);
MakeFunction(0x43CFE8, 0x43D035);
MakeUnkn(0x43D038, 1);
MakeNameEx(0x43D038, "TCustomImageList.UnRegisterChanges", 0x20);
MakeComm(0x43D038, "'procedure TCustomImageList.UnRegisterChanges(Value:TChangeLink);'");
MakeCode(0x43D038);
MakeCode(0x43D052);
MakeCode(0x43D071);
MakeCode(0x43D075);
MakeFunction(0x43D038, 0x43D07A);
MakeUnkn(0x43D07C, 1);
MakeNameEx(0x43D07C, "TCustomImageList.RegisterChanges", 0x20);
MakeComm(0x43D07C, "'procedure TCustomImageList.RegisterChanges(Value:TChangeLink);'");
MakeCode(0x43D07C);
MakeFunction(0x43D07C, 0x43D08E);
MakeUnkn(0x43D090, 1);
MakeNameEx(0x43D090, "StreamsEqual", 0x20);
MakeComm(0x43D090, "'function StreamsEqual(S1:TMemoryStream; S2:TMemoryStream):Boolean;'");
MakeCode(0x43D090);
MakeCode(0x43D0AD);
MakeCode(0x43D0C8);
MakeCode(0x43D0CD);
MakeFunction(0x43D090, 0x43D0D2);
MakeUnkn(0x43D0D4, 1);
MakeNameEx(0x43D0D4, "TCustomImageList.Equal", 0x20);
MakeComm(0x43D0D4, "'function TCustomImageList.Equal(IL:TCustomImageList):Boolean;'");
MakeCode(0x43D0D4);
MakeCode(0x43D0F9);
MakeCode(0x43D102);
MakeCode(0x43D121);
MakeCode(0x43D17D);
MakeCode(0x43D18A);
MakeCode(0x43D193);
MakeCode(0x43D198);
MakeCode(0x43D19A);
MakeCode(0x43D1A7);
MakeCode(0x43D1B0);
MakeCode(0x43D1B5);
MakeCode(0x43D1B7);
MakeFunction(0x43D0D4, 0x43D1C1);
MakeUnkn(0x43D1C4, 1);
MakeNameEx(0x43D1C4, "DoWrite_1", 0x20);
MakeComm(0x43D1C4, "'function DoWrite:Boolean;'");
MakeCode(0x43D1C4);
MakeCode(0x43D206);
MakeCode(0x43D20B);
MakeCode(0x43D21B);
MakeFunction(0x43D1C4, 0x43D21E);
MakeUnkn(0x43D220, 1);
MakeNameEx(0x43D220, "TCustomImageList.DefineProperties", 0x20);
MakeComm(0x43D220, "'procedure TCustomImageList.DefineProperties(Filer:TFiler);'");
MakeCode(0x43D220);
MakeFunction(0x43D220, 0x43D267);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43D270, -1);
MakeDword(0x43D26C);
MakeDword(0x43D268);
MakeUnkn(0x43D278, 1);
MakeNameEx(0x43D278, "TCustomImageList.ReadD2Stream", 0x20);
MakeComm(0x43D278, "'procedure TCustomImageList.ReadD2Stream(Stream:TStream);'");
MakeCode(0x43D278);
MakeCode(0x43D3BA);
MakeCode(0x43D3E3);
MakeCode(0x43D492);
MakeCode(0x43D49C);
MakeCode(0x43D4A9);
MakeCode(0x43D4C2);
MakeCode(0x43D4C7);
MakeCode(0x43D4C9);
MakeCode(0x43D4D6);
MakeCode(0x43D4DF);
MakeCode(0x43D4E4);
MakeCode(0x43D4E6);
MakeCode(0x43D4F3);
MakeCode(0x43D4FC);
MakeCode(0x43D501);
MakeFunction(0x43D278, 0x43D50A);
MakeUnkn(0x43D50C, 1);
MakeNameEx(0x43D50C, "TCustomImageList.ReadD3Stream", 0x20);
MakeComm(0x43D50C, "'procedure TCustomImageList.ReadD3Stream(Stream:TStream);'");
MakeCode(0x43D50C);
MakeCode(0x43D546);
MakeCode(0x43D556);
MakeCode(0x43D563);
MakeCode(0x43D56C);
MakeCode(0x43D571);
MakeCode(0x43D623);
MakeCode(0x43D65F);
MakeCode(0x43D66F);
MakeCode(0x43D67C);
MakeCode(0x43D685);
MakeCode(0x43D68A);
MakeCode(0x43D68C);
MakeCode(0x43D699);
MakeCode(0x43D6A2);
MakeCode(0x43D6A7);
MakeCode(0x43D6CC);
MakeFunction(0x43D50C, 0x43D6D2);
MakeUnkn(0x43D6D4, 1);
MakeNameEx(0x43D6D4, "TCustomImageList.ReadData", 0x20);
MakeComm(0x43D6D4, "'procedure TCustomImageList.ReadData(Stream:TStream);'");
MakeCode(0x43D6D4);
MakeCode(0x43D74E);
MakeCode(0x43D757);
MakeFunction(0x43D6D4, 0x43D75E);
MakeUnkn(0x43D760, 1);
MakeNameEx(0x43D760, "TCustomImageList.WriteData", 0x20);
MakeComm(0x43D760, "'procedure TCustomImageList.WriteData(Stream:TStream);'");
MakeCode(0x43D760);
MakeCode(0x43D7AF);
MakeCode(0x43D7E3);
MakeCode(0x43D811);
MakeCode(0x43D81B);
MakeCode(0x43D844);
MakeCode(0x43D851);
MakeCode(0x43D85A);
MakeCode(0x43D85F);
MakeFunction(0x43D760, 0x43D867);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43D870, -1);
MakeDword(0x43D86C);
MakeDword(0x43D868);
MakeUnkn(0x43D8A4, 1);
MakeNameEx(0x43D8A4, "TCustomImageList.BeginUpdate", 0x20);
MakeComm(0x43D8A4, "'procedure TCustomImageList.BeginUpdate;'");
MakeCode(0x43D8A4);
MakeFunction(0x43D8A4, 0x43D8A8);
MakeUnkn(0x43D8A8, 1);
MakeNameEx(0x43D8A8, "TCustomImageList.EndUpdate", 0x20);
MakeComm(0x43D8A8, "'procedure TCustomImageList.EndUpdate;'");
MakeCode(0x43D8A8);
MakeCode(0x43D8B2);
MakeCode(0x43D8C5);
MakeFunction(0x43D8A8, 0x43D8C7);
MakeUnkn(0x43D8C8, 1);
MakeNameEx(0x43D8C8, "TChangeLink.Destroy", 0x20);
MakeComm(0x43D8C8, "'destructor TChangeLink.Destroy;'");
MakeCode(0x43D8C8);
MakeCode(0x43D8E1);
MakeCode(0x43D8F8);
MakeFunction(0x43D8C8, 0x43D8FB);
MakeUnkn(0x43D8FC, 1);
MakeNameEx(0x43D8FC, "TChangeLink.Change", 0x20);
MakeComm(0x43D8FC, "'procedure TChangeLink.Change;'");
MakeCode(0x43D8FC);
MakeCode(0x43D90F);
MakeFunction(0x43D8FC, 0x43D911);
MakeCode(0x43D914);
MakeCode(0x43D92B);
MakeCode(0x43D938);
MakeCode(0x43D939);
MakeCode(0x43D93E);
MakeFunction(0x43D914, 0x43D942);
MakeCode(0x43D944);
MakeFunction(0x43D944, 0x43D94C);
MakeUnkn(0x43D94C, 1);
MakeNameEx(0x43D94C, "VMT_43D94C_EMenuError", 0);
MakeDword(0x43D94C);
MakeDword(0x43D950);
MakeDword(0x43D954);
MakeDword(0x43D958);
MakeDword(0x43D95C);
MakeDword(0x43D960);
MakeDword(0x43D964);
MakeDword(0x43D968);
MakeDword(0x43D96C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D998, 0x43D9A3);
MakeDword(0x43D970);
MakeDword(0x43D974);
MakeDword(0x43D978);
MakeDword(0x43D97C);
MakeDword(0x43D980);
MakeDword(0x43D984);
MakeDword(0x43D988);
MakeDword(0x43D98C);
MakeDword(0x43D990);
MakeDword(0x43D994);
MakeUnkn(0x43D9A4, 1);
MakeNameEx(0x43D9A4, "RTTI_43D9A4_Enumeration_TMenuBreak", 0);
MakeDword(0x43D9A4);
MakeUnkn(0x43D9A8, 1);
MakeNameEx(0x43D9A8, "", 0);
MakeByte(0x43D9A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9A9, 0x43D9B4);
MakeByte(0x43D9B4);
MakeDword(0x43D9B5);
MakeDword(0x43D9B9);
MakeDword(0x43D9BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9C1, 0x43D9C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9C8, 0x43D9D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9D0, 0x43D9DB);
MakeUnkn(0x43D9E4, 1);
MakeNameEx(0x43D9E4, "RTTI_43D9E4_Method_TMenuChangeEvent", 0);
MakeDword(0x43D9E4);
MakeUnkn(0x43D9E8, 1);
MakeNameEx(0x43D9E8, "", 0);
MakeByte(0x43D9E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9E9, 0x43D9FA);
MakeByte(0x43D9FA);
MakeByte(0x43D9FB);
MakeByte(0x43D9FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9FD, 0x43DA04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA04, 0x43DA0C);
MakeByte(0x43DA0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA0D, 0x43DA14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA14, 0x43DA1E);
MakeByte(0x43DA1E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA1F, 0x43DA27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA27, 0x43DA2F);
MakeByte(0x43DA2F);
MakeDword(0x43DA30);
MakeDword(0x43DA34);
MakeDword(0x43DA38);
MakeUnkn(0x43DA3C, 1);
MakeNameEx(0x43DA3C, "RTTI_43DA3C_Method_TMenuDrawItemEvent", 0);
MakeDword(0x43DA3C);
MakeUnkn(0x43DA40, 1);
MakeNameEx(0x43DA40, "", 0);
MakeByte(0x43DA40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA41, 0x43DA54);
MakeByte(0x43DA54);
MakeByte(0x43DA55);
MakeByte(0x43DA56);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA57, 0x43DA5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA5E, 0x43DA66);
MakeByte(0x43DA66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA67, 0x43DA6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA6F, 0x43DA77);
MakeByte(0x43DA77);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA78, 0x43DA7E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA7E, 0x43DA84);
MakeByte(0x43DA84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA85, 0x43DA8E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA8E, 0x43DA96);
MakeByte(0x43DA96);
MakeDword(0x43DA97);
MakeDword(0x43DA9B);
MakeDword(0x43DA9F);
MakeDword(0x43DAA3);
MakeUnkn(0x43DAA8, 1);
MakeNameEx(0x43DAA8, "RTTI_43DAA8_Method_TAdvancedMenuDrawItemEvent", 0);
MakeDword(0x43DAA8);
MakeUnkn(0x43DAAC, 1);
MakeNameEx(0x43DAAC, "", 0);
MakeByte(0x43DAAC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAAD, 0x43DAC8);
MakeByte(0x43DAC8);
MakeByte(0x43DAC9);
MakeByte(0x43DACA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DACB, 0x43DAD2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAD2, 0x43DADA);
MakeByte(0x43DADA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DADB, 0x43DAE3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAE3, 0x43DAEB);
MakeByte(0x43DAEB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAEC, 0x43DAF2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAF2, 0x43DAF8);
MakeByte(0x43DAF8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAF9, 0x43DAFF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAFF, 0x43DB0F);
MakeByte(0x43DB0F);
MakeDword(0x43DB10);
MakeDword(0x43DB14);
MakeDword(0x43DB18);
MakeDword(0x43DB1C);
MakeUnkn(0x43DB20, 1);
MakeNameEx(0x43DB20, "RTTI_43DB20_Method_TMenuMeasureItemEvent", 0);
MakeDword(0x43DB20);
MakeUnkn(0x43DB24, 1);
MakeNameEx(0x43DB24, "", 0);
MakeByte(0x43DB24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB25, 0x43DB3B);
MakeByte(0x43DB3B);
MakeByte(0x43DB3C);
MakeByte(0x43DB3D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB3E, 0x43DB45);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB45, 0x43DB4D);
MakeByte(0x43DB4D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB4E, 0x43DB56);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB56, 0x43DB5E);
MakeByte(0x43DB5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB5F, 0x43DB65);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB65, 0x43DB6D);
MakeByte(0x43DB6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB6E, 0x43DB75);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB75, 0x43DB7D);
MakeByte(0x43DB7D);
MakeDword(0x43DB7E);
MakeDword(0x43DB82);
MakeDword(0x43DB86);
MakeDword(0x43DB8A);
MakeUnkn(0x43DB90, 1);
MakeNameEx(0x43DB90, "RTTI_43DB90_Enumeration_TMenuItemAutoFlag", 0);
MakeDword(0x43DB90);
MakeUnkn(0x43DB94, 1);
MakeNameEx(0x43DB94, "", 0);
MakeByte(0x43DB94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB95, 0x43DBA7);
MakeByte(0x43DBA7);
MakeDword(0x43DBA8);
MakeDword(0x43DBAC);
MakeDword(0x43DBB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DBB4, 0x43DBC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DBC0, 0x43DBC9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DBC9, 0x43DBD2);
MakeUnkn(0x43DBD8, 1);
MakeNameEx(0x43DBD8, "RTTI_43DBD8_Enumeration_TMenuAutoFlag", 0);
MakeDword(0x43DBD8);
MakeUnkn(0x43DBDC, 1);
MakeNameEx(0x43DBDC, "", 0);
MakeByte(0x43DBDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DBDD, 0x43DBEB);
MakeByte(0x43DBEB);
MakeDword(0x43DBEC);
MakeDword(0x43DBF0);
MakeDword(0x43DBF4);
MakeUnkn(0x43DC00, 1);
MakeNameEx(0x43DC00, "VMT_43DC00_TMenuActionLink", 0);
MakeDword(0x43DC00);
MakeDword(0x43DC04);
MakeDword(0x43DC08);
MakeDword(0x43DC0C);
MakeDword(0x43DC10);
MakeDword(0x43DC14);
MakeDword(0x43DC18);
MakeDword(0x43DC1C);
MakeDword(0x43DC20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DCC8, 0x43DCD8);
MakeDword(0x43DC24);
MakeDword(0x43DC28);
MakeDword(0x43DC2C);
MakeDword(0x43DC30);
MakeDword(0x43DC34);
MakeDword(0x43DC38);
MakeDword(0x43DC3C);
MakeDword(0x43DC40);
MakeDword(0x43DC44);
MakeDword(0x43DC48);
MakeComm(0x43DC4C, "'+0'");
MakeDword(0x43DC4C);
MakeComm(0x43DC50, "'+4'");
MakeDword(0x43DC50);
MakeComm(0x43DC54, "'+8'");
MakeDword(0x43DC54);
MakeComm(0x43DC58, "'+C'");
MakeDword(0x43DC58);
MakeComm(0x43DC5C, "'+10'");
MakeDword(0x43DC5C);
MakeComm(0x43DC60, "'+14'");
MakeDword(0x43DC60);
MakeComm(0x43DC64, "'+18'");
MakeDword(0x43DC64);
MakeComm(0x43DC68, "'+1C'");
MakeDword(0x43DC68);
MakeComm(0x43DC6C, "'+20'");
MakeDword(0x43DC6C);
MakeComm(0x43DC70, "'+24'");
MakeDword(0x43DC70);
MakeComm(0x43DC74, "'+28'");
MakeDword(0x43DC74);
MakeComm(0x43DC78, "'+2C'");
MakeDword(0x43DC78);
MakeComm(0x43DC7C, "'+30'");
MakeDword(0x43DC7C);
MakeComm(0x43DC80, "'+34'");
MakeDword(0x43DC80);
MakeComm(0x43DC84, "'+38'");
MakeDword(0x43DC84);
MakeComm(0x43DC88, "'+3C'");
MakeDword(0x43DC88);
MakeComm(0x43DC8C, "'+40'");
MakeDword(0x43DC8C);
MakeComm(0x43DC90, "'+44'");
MakeDword(0x43DC90);
MakeComm(0x43DC94, "'+48'");
MakeDword(0x43DC94);
MakeComm(0x43DC98, "'+4C'");
MakeDword(0x43DC98);
MakeComm(0x43DC9C, "'+50'");
MakeDword(0x43DC9C);
MakeComm(0x43DCA0, "'+54'");
MakeDword(0x43DCA0);
MakeComm(0x43DCA4, "'+58'");
MakeDword(0x43DCA4);
MakeComm(0x43DCA8, "'+5C'");
MakeDword(0x43DCA8);
MakeComm(0x43DCAC, "'+60'");
MakeDword(0x43DCAC);
MakeComm(0x43DCB0, "'+64'");
MakeDword(0x43DCB0);
MakeComm(0x43DCB4, "'+68'");
MakeDword(0x43DCB4);
MakeComm(0x43DCB8, "'+6C'");
MakeDword(0x43DCB8);
MakeComm(0x43DCBC, "'+70'");
MakeDword(0x43DCBC);
MakeComm(0x43DCC0, "'+74'");
MakeDword(0x43DCC0);
MakeComm(0x43DCC4, "'+78'");
MakeDword(0x43DCC4);
MakeUnkn(0x43DCD8, 1);
MakeNameEx(0x43DCD8, "VMT_43DCD8_TMenuItem", 0);
MakeDword(0x43DCD8);
MakeDword(0x43DCDC);
MakeDword(0x43DCE0);
MakeDword(0x43DCE4);
MakeUnkn(0x43DD6C, 1);
MakeNameEx(0x43DD6C, "TMenuItem_InitTable", 0);
MakeByte(0x43DD6C);
MakeByte(0x43DD6D);
MakeDword(0x43DD6E);
MakeDword(0x43DD72);
MakeDword(0x43DD76);
MakeDword(0x43DD7A);
MakeDword(0x43DD7E);
MakeDword(0x43DD82);
MakeDword(0x43DCE8);
MakeDword(0x43DCEC);
MakeDword(0x43DCF0);
MakeDword(0x43DCF4);
MakeUnkn(0x43DD86, 1);
MakeNameEx(0x43DD86, "TMenuItem_DynamicTable", 0);
MakeWord(0x43DD86);
MakeWord(0x43DD88);
MakeWord(0x43DD8A);
MakeWord(0x43DD8C);
MakeWord(0x43DD8E);
MakeWord(0x43DD90);
MakeWord(0x43DD92);
MakeWord(0x43DD94);
MakeDword(0x43DD96);
MakeDword(0x43DD9A);
MakeDword(0x43DD9E);
MakeDword(0x43DDA2);
MakeDword(0x43DDA6);
MakeDword(0x43DDAA);
MakeDword(0x43DDAE);
MakeDword(0x43DCF8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DDB2, 0x43DDBC);
MakeDword(0x43DCFC);
MakeDword(0x43DD00);
MakeDword(0x43DD04);
MakeDword(0x43DD08);
MakeDword(0x43DD0C);
MakeDword(0x43DD10);
MakeDword(0x43DD14);
MakeDword(0x43DD18);
MakeDword(0x43DD1C);
MakeDword(0x43DD20);
MakeComm(0x43DD24, "'+0'");
MakeDword(0x43DD24);
MakeComm(0x43DD28, "'+4'");
MakeDword(0x43DD28);
MakeComm(0x43DD2C, "'+8'");
MakeDword(0x43DD2C);
MakeComm(0x43DD30, "'+C'");
MakeDword(0x43DD30);
MakeComm(0x43DD34, "'+10'");
MakeDword(0x43DD34);
MakeComm(0x43DD38, "'+14'");
MakeDword(0x43DD38);
MakeComm(0x43DD3C, "'+18'");
MakeDword(0x43DD3C);
MakeComm(0x43DD40, "'+1C'");
MakeDword(0x43DD40);
MakeComm(0x43DD44, "'+20'");
MakeDword(0x43DD44);
MakeComm(0x43DD48, "'+24'");
MakeDword(0x43DD48);
MakeComm(0x43DD4C, "'+28'");
MakeDword(0x43DD4C);
MakeComm(0x43DD50, "'+2C'");
MakeDword(0x43DD50);
MakeComm(0x43DD54, "'+30'");
MakeDword(0x43DD54);
MakeComm(0x43DD58, "'+34'");
MakeDword(0x43DD58);
MakeComm(0x43DD5C, "'+38'");
MakeDword(0x43DD5C);
MakeComm(0x43DD60, "'+3C'");
MakeDword(0x43DD60);
MakeComm(0x43DD64, "'+40'");
MakeDword(0x43DD64);
MakeComm(0x43DD68, "'+44'");
MakeDword(0x43DD68);
MakeUnkn(0x43DDBC, 1);
MakeNameEx(0x43DDBC, "RTTI_43DDBC_Class_TMenuItem", 0);
MakeDword(0x43DDBC);
MakeUnkn(0x43DDC0, 1);
MakeNameEx(0x43DDC0, "", 0);
MakeByte(0x43DDC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DDC1, 0x43DDCB);
MakeDword(0x43DDCB);
MakeDword(0x43DDCF);
MakeWord(0x43DDD3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DDD5, 0x43DDDB);
MakeWord(0x43DDDB);
MakeDword(0x43DDDD);
MakeDword(0x43DDE1);
MakeDword(0x43DDE5);
MakeDword(0x43DDE9);
MakeDword(0x43DDED);
MakeDword(0x43DDF1);
MakeWord(0x43DDF5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DDF7, 0x43DDFE);
MakeDword(0x43DDFE);
MakeDword(0x43DE02);
MakeDword(0x43DE06);
MakeDword(0x43DE0A);
MakeDword(0x43DE0E);
MakeDword(0x43DE12);
MakeWord(0x43DE16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DE18, 0x43DE22);
MakeDword(0x43DE22);
MakeDword(0x43DE26);
MakeDword(0x43DE2A);
MakeDword(0x43DE2E);
MakeDword(0x43DE32);
MakeDword(0x43DE36);
MakeWord(0x43DE3A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DE3C, 0x43DE48);
MakeDword(0x43DE48);
MakeDword(0x43DE4C);
MakeDword(0x43DE50);
MakeDword(0x43DE54);
MakeDword(0x43DE58);
MakeDword(0x43DE5C);
MakeWord(0x43DE60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DE62, 0x43DE74);
MakeDword(0x43DE74);
MakeDword(0x43DE78);
MakeDword(0x43DE7C);
MakeDword(0x43DE80);
MakeDword(0x43DE84);
MakeDword(0x43DE88);
MakeWord(0x43DE8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DE8E, 0x43DE95);
MakeDword(0x43DE95);
MakeDword(0x43DE99);
MakeDword(0x43DE9D);
MakeDword(0x43DEA1);
MakeDword(0x43DEA5);
MakeDword(0x43DEA9);
MakeWord(0x43DEAD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DEAF, 0x43DEB5);
MakeDword(0x43DEB5);
MakeDword(0x43DEB9);
MakeDword(0x43DEBD);
MakeDword(0x43DEC1);
MakeDword(0x43DEC5);
MakeDword(0x43DEC9);
MakeWord(0x43DECD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DECF, 0x43DED7);
MakeDword(0x43DED7);
MakeDword(0x43DEDB);
MakeDword(0x43DEDF);
MakeDword(0x43DEE3);
MakeDword(0x43DEE7);
MakeDword(0x43DEEB);
MakeWord(0x43DEEF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DEF1, 0x43DEF9);
MakeDword(0x43DEF9);
MakeDword(0x43DEFD);
MakeDword(0x43DF01);
MakeDword(0x43DF05);
MakeDword(0x43DF09);
MakeDword(0x43DF0D);
MakeWord(0x43DF11);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF13, 0x43DF21);
MakeDword(0x43DF21);
MakeDword(0x43DF25);
MakeDword(0x43DF29);
MakeDword(0x43DF2D);
MakeDword(0x43DF31);
MakeDword(0x43DF35);
MakeWord(0x43DF39);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF3B, 0x43DF43);
MakeDword(0x43DF43);
MakeDword(0x43DF47);
MakeDword(0x43DF4B);
MakeDword(0x43DF4F);
MakeDword(0x43DF53);
MakeDword(0x43DF57);
MakeWord(0x43DF5B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF5D, 0x43DF65);
MakeDword(0x43DF65);
MakeDword(0x43DF69);
MakeDword(0x43DF6D);
MakeDword(0x43DF71);
MakeDword(0x43DF75);
MakeDword(0x43DF79);
MakeWord(0x43DF7D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF7F, 0x43DF8A);
MakeDword(0x43DF8A);
MakeDword(0x43DF8E);
MakeDword(0x43DF92);
MakeDword(0x43DF96);
MakeDword(0x43DF9A);
MakeDword(0x43DF9E);
MakeWord(0x43DFA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DFA4, 0x43DFB0);
MakeDword(0x43DFB0);
MakeDword(0x43DFB4);
MakeDword(0x43DFB8);
MakeDword(0x43DFBC);
MakeDword(0x43DFC0);
MakeDword(0x43DFC4);
MakeWord(0x43DFC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DFCA, 0x43DFCF);
MakeDword(0x43DFCF);
MakeDword(0x43DFD3);
MakeDword(0x43DFD7);
MakeDword(0x43DFDB);
MakeDword(0x43DFDF);
MakeDword(0x43DFE3);
MakeWord(0x43DFE7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DFE9, 0x43DFF4);
MakeDword(0x43DFF4);
MakeDword(0x43DFF8);
MakeDword(0x43DFFC);
MakeDword(0x43E000);
MakeDword(0x43E004);
MakeDword(0x43E008);
MakeWord(0x43E00C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E00E, 0x43E018);
MakeDword(0x43E018);
MakeDword(0x43E01C);
MakeDword(0x43E020);
MakeDword(0x43E024);
MakeDword(0x43E028);
MakeDword(0x43E02C);
MakeWord(0x43E030);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E032, 0x43E03B);
MakeDword(0x43E03B);
MakeDword(0x43E03F);
MakeDword(0x43E043);
MakeDword(0x43E047);
MakeDword(0x43E04B);
MakeDword(0x43E04F);
MakeWord(0x43E053);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E055, 0x43E05D);
MakeDword(0x43E05D);
MakeDword(0x43E061);
MakeDword(0x43E065);
MakeDword(0x43E069);
MakeDword(0x43E06D);
MakeDword(0x43E071);
MakeWord(0x43E075);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E077, 0x43E07F);
MakeDword(0x43E07F);
MakeDword(0x43E083);
MakeDword(0x43E087);
MakeDword(0x43E08B);
MakeDword(0x43E08F);
MakeDword(0x43E093);
MakeWord(0x43E097);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E099, 0x43E0A4);
MakeDword(0x43E0A4);
MakeDword(0x43E0A8);
MakeDword(0x43E0AC);
MakeDword(0x43E0B0);
MakeDword(0x43E0B4);
MakeDword(0x43E0B8);
MakeWord(0x43E0BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E0BE, 0x43E0D1);
MakeDword(0x43E0D1);
MakeDword(0x43E0D5);
MakeDword(0x43E0D9);
MakeDword(0x43E0DD);
MakeDword(0x43E0E1);
MakeDword(0x43E0E5);
MakeWord(0x43E0E9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E0EB, 0x43E0F9);
MakeUnkn(0x43E0FC, 1);
MakeNameEx(0x43E0FC, "VMT_43E0FC_TMenu", 0);
MakeDword(0x43E0FC);
MakeDword(0x43E100);
MakeDword(0x43E104);
MakeDword(0x43E108);
MakeUnkn(0x43E184, 1);
MakeNameEx(0x43E184, "TMenu_InitTable", 0);
MakeByte(0x43E184);
MakeByte(0x43E185);
MakeDword(0x43E186);
MakeDword(0x43E18A);
MakeDword(0x43E18E);
MakeDword(0x43E192);
MakeDword(0x43E10C);
MakeDword(0x43E110);
MakeDword(0x43E114);
MakeDword(0x43E118);
MakeUnkn(0x43E196, 1);
MakeNameEx(0x43E196, "TMenu_DynamicTable", 0);
MakeWord(0x43E196);
MakeWord(0x43E198);
MakeWord(0x43E19A);
MakeWord(0x43E19C);
MakeDword(0x43E19E);
MakeDword(0x43E1A2);
MakeDword(0x43E1A6);
MakeDword(0x43E11C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1AA, 0x43E1B0);
MakeDword(0x43E120);
MakeDword(0x43E124);
MakeDword(0x43E128);
MakeDword(0x43E12C);
MakeDword(0x43E130);
MakeDword(0x43E134);
MakeDword(0x43E138);
MakeDword(0x43E13C);
MakeDword(0x43E140);
MakeDword(0x43E144);
MakeComm(0x43E148, "'+0'");
MakeDword(0x43E148);
MakeComm(0x43E14C, "'+4'");
MakeDword(0x43E14C);
MakeComm(0x43E150, "'+8'");
MakeDword(0x43E150);
MakeComm(0x43E154, "'+C'");
MakeDword(0x43E154);
MakeComm(0x43E158, "'+10'");
MakeDword(0x43E158);
MakeComm(0x43E15C, "'+14'");
MakeDword(0x43E15C);
MakeComm(0x43E160, "'+18'");
MakeDword(0x43E160);
MakeComm(0x43E164, "'+1C'");
MakeDword(0x43E164);
MakeComm(0x43E168, "'+20'");
MakeDword(0x43E168);
MakeComm(0x43E16C, "'+24'");
MakeDword(0x43E16C);
MakeComm(0x43E170, "'+28'");
MakeDword(0x43E170);
MakeComm(0x43E174, "'+2C'");
MakeDword(0x43E174);
MakeComm(0x43E178, "'+30'");
MakeDword(0x43E178);
MakeComm(0x43E17C, "'+34'");
MakeDword(0x43E17C);
MakeComm(0x43E180, "'+38'");
MakeDword(0x43E180);
MakeUnkn(0x43E1B0, 1);
MakeNameEx(0x43E1B0, "RTTI_43E1B0_Class_TMenu", 0);
MakeDword(0x43E1B0);
MakeUnkn(0x43E1B4, 1);
MakeNameEx(0x43E1B4, "", 0);
MakeByte(0x43E1B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1B5, 0x43E1BB);
MakeDword(0x43E1BB);
MakeDword(0x43E1BF);
MakeWord(0x43E1C3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1C5, 0x43E1CB);
MakeWord(0x43E1CB);
MakeDword(0x43E1CD);
MakeDword(0x43E1D1);
MakeDword(0x43E1D5);
MakeDword(0x43E1D9);
MakeDword(0x43E1DD);
MakeDword(0x43E1E1);
MakeWord(0x43E1E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1E7, 0x43E1ED);
MakeUnkn(0x43E1F0, 1);
MakeNameEx(0x43E1F0, "VMT_43E1F0_TMainMenu", 0);
MakeDword(0x43E1F0);
MakeDword(0x43E1F4);
MakeDword(0x43E1F8);
MakeDword(0x43E1FC);
MakeDword(0x43E200);
MakeDword(0x43E204);
MakeDword(0x43E208);
MakeDword(0x43E20C);
MakeDword(0x43E210);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E278, 0x43E282);
MakeDword(0x43E214);
MakeDword(0x43E218);
MakeDword(0x43E21C);
MakeDword(0x43E220);
MakeDword(0x43E224);
MakeDword(0x43E228);
MakeDword(0x43E22C);
MakeDword(0x43E230);
MakeDword(0x43E234);
MakeDword(0x43E238);
MakeComm(0x43E23C, "'+0'");
MakeDword(0x43E23C);
MakeComm(0x43E240, "'+4'");
MakeDword(0x43E240);
MakeComm(0x43E244, "'+8'");
MakeDword(0x43E244);
MakeComm(0x43E248, "'+C'");
MakeDword(0x43E248);
MakeComm(0x43E24C, "'+10'");
MakeDword(0x43E24C);
MakeComm(0x43E250, "'+14'");
MakeDword(0x43E250);
MakeComm(0x43E254, "'+18'");
MakeDword(0x43E254);
MakeComm(0x43E258, "'+1C'");
MakeDword(0x43E258);
MakeComm(0x43E25C, "'+20'");
MakeDword(0x43E25C);
MakeComm(0x43E260, "'+24'");
MakeDword(0x43E260);
MakeComm(0x43E264, "'+28'");
MakeDword(0x43E264);
MakeComm(0x43E268, "'+2C'");
MakeDword(0x43E268);
MakeComm(0x43E26C, "'+30'");
MakeDword(0x43E26C);
MakeComm(0x43E270, "'+34'");
MakeDword(0x43E270);
MakeComm(0x43E274, "'+38'");
MakeDword(0x43E274);
MakeUnkn(0x43E284, 1);
MakeNameEx(0x43E284, "RTTI_43E284_Class_TMainMenu", 0);
MakeDword(0x43E284);
MakeUnkn(0x43E288, 1);
MakeNameEx(0x43E288, "", 0);
MakeByte(0x43E288);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E289, 0x43E293);
MakeDword(0x43E293);
MakeDword(0x43E297);
MakeWord(0x43E29B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E29D, 0x43E2A3);
MakeWord(0x43E2A3);
MakeDword(0x43E2A5);
MakeDword(0x43E2A9);
MakeDword(0x43E2AD);
MakeDword(0x43E2B1);
MakeDword(0x43E2B5);
MakeDword(0x43E2B9);
MakeWord(0x43E2BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E2BF, 0x43E2CB);
MakeDword(0x43E2CB);
MakeDword(0x43E2CF);
MakeDword(0x43E2D3);
MakeDword(0x43E2D7);
MakeDword(0x43E2DB);
MakeDword(0x43E2DF);
MakeWord(0x43E2E3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E2E5, 0x43E2F7);
MakeDword(0x43E2F7);
MakeDword(0x43E2FB);
MakeDword(0x43E2FF);
MakeDword(0x43E303);
MakeDword(0x43E307);
MakeDword(0x43E30B);
MakeWord(0x43E30F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E311, 0x43E31B);
MakeDword(0x43E31B);
MakeDword(0x43E31F);
MakeDword(0x43E323);
MakeDword(0x43E327);
MakeDword(0x43E32B);
MakeDword(0x43E32F);
MakeWord(0x43E333);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E335, 0x43E33E);
MakeDword(0x43E33E);
MakeDword(0x43E342);
MakeDword(0x43E346);
MakeDword(0x43E34A);
MakeDword(0x43E34E);
MakeDword(0x43E352);
MakeWord(0x43E356);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E358, 0x43E35F);
MakeDword(0x43E35F);
MakeDword(0x43E363);
MakeDword(0x43E367);
MakeDword(0x43E36B);
MakeDword(0x43E36F);
MakeDword(0x43E373);
MakeWord(0x43E377);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E379, 0x43E383);
MakeDword(0x43E383);
MakeDword(0x43E387);
MakeDword(0x43E38B);
MakeDword(0x43E38F);
MakeDword(0x43E393);
MakeDword(0x43E397);
MakeWord(0x43E39B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E39D, 0x43E3AC);
MakeDword(0x43E3AC);
MakeDword(0x43E3B0);
MakeDword(0x43E3B4);
MakeDword(0x43E3B8);
MakeDword(0x43E3BC);
MakeDword(0x43E3C0);
MakeWord(0x43E3C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E3C6, 0x43E3CF);
MakeUnkn(0x43E3D0, 1);
MakeNameEx(0x43E3D0, "RTTI_43E3D0_Enumeration_TPopupAlignment", 0);
MakeDword(0x43E3D0);
MakeUnkn(0x43E3D4, 1);
MakeNameEx(0x43E3D4, "", 0);
MakeByte(0x43E3D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E3D5, 0x43E3E5);
MakeByte(0x43E3E5);
MakeDword(0x43E3E6);
MakeDword(0x43E3EA);
MakeDword(0x43E3EE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E3F2, 0x43E3F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E3F9, 0x43E401);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E401, 0x43E40A);
MakeUnkn(0x43E410, 1);
MakeNameEx(0x43E410, "RTTI_43E410_Enumeration_TTrackButton", 0);
MakeDword(0x43E410);
MakeUnkn(0x43E414, 1);
MakeNameEx(0x43E414, "", 0);
MakeByte(0x43E414);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E415, 0x43E422);
MakeByte(0x43E422);
MakeDword(0x43E423);
MakeDword(0x43E427);
MakeDword(0x43E42B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E42F, 0x43E43D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E43D, 0x43E44A);
MakeUnkn(0x43E450, 1);
MakeNameEx(0x43E450, "RTTI_43E450_Enumeration_TMenuAnimations", 0);
MakeDword(0x43E450);
MakeUnkn(0x43E454, 1);
MakeNameEx(0x43E454, "", 0);
MakeByte(0x43E454);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E455, 0x43E465);
MakeByte(0x43E465);
MakeDword(0x43E466);
MakeDword(0x43E46A);
MakeDword(0x43E46E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E472, 0x43E480);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E480, 0x43E48E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E48E, 0x43E49C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E49C, 0x43E4AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E4AA, 0x43E4B1);
MakeUnkn(0x43E4B8, 1);
MakeNameEx(0x43E4B8, "RTTI_43E4B8_Set_TMenuAnimation", 0);
MakeDword(0x43E4B8);
MakeUnkn(0x43E4BC, 1);
MakeNameEx(0x43E4BC, "", 0);
MakeByte(0x43E4BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E4BD, 0x43E4CC);
MakeByte(0x43E4CC);
MakeDword(0x43E4CD);
MakeUnkn(0x43E4D4, 1);
MakeNameEx(0x43E4D4, "VMT_43E4D4_TPopupMenu", 0);
MakeDword(0x43E4D4);
MakeDword(0x43E4D8);
MakeDword(0x43E4DC);
MakeDword(0x43E4E0);
MakeDword(0x43E4E4);
MakeDword(0x43E4E8);
MakeDword(0x43E4EC);
MakeDword(0x43E4F0);
MakeDword(0x43E4F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E564, 0x43E56F);
MakeDword(0x43E4F8);
MakeDword(0x43E4FC);
MakeDword(0x43E500);
MakeDword(0x43E504);
MakeDword(0x43E508);
MakeDword(0x43E50C);
MakeDword(0x43E510);
MakeDword(0x43E514);
MakeDword(0x43E518);
MakeDword(0x43E51C);
MakeComm(0x43E520, "'+0'");
MakeDword(0x43E520);
MakeComm(0x43E524, "'+4'");
MakeDword(0x43E524);
MakeComm(0x43E528, "'+8'");
MakeDword(0x43E528);
MakeComm(0x43E52C, "'+C'");
MakeDword(0x43E52C);
MakeComm(0x43E530, "'+10'");
MakeDword(0x43E530);
MakeComm(0x43E534, "'+14'");
MakeDword(0x43E534);
MakeComm(0x43E538, "'+18'");
MakeDword(0x43E538);
MakeComm(0x43E53C, "'+1C'");
MakeDword(0x43E53C);
MakeComm(0x43E540, "'+20'");
MakeDword(0x43E540);
MakeComm(0x43E544, "'+24'");
MakeDword(0x43E544);
MakeComm(0x43E548, "'+28'");
MakeDword(0x43E548);
MakeComm(0x43E54C, "'+2C'");
MakeDword(0x43E54C);
MakeComm(0x43E550, "'+30'");
MakeDword(0x43E550);
MakeComm(0x43E554, "'+34'");
MakeDword(0x43E554);
MakeComm(0x43E558, "'+38'");
MakeDword(0x43E558);
MakeComm(0x43E55C, "'+3C'");
MakeDword(0x43E55C);
MakeComm(0x43E560, "'+40'");
MakeDword(0x43E560);
MakeUnkn(0x43E570, 1);
MakeNameEx(0x43E570, "RTTI_43E570_Class_TPopupMenu", 0);
MakeDword(0x43E570);
MakeUnkn(0x43E574, 1);
MakeNameEx(0x43E574, "", 0);
MakeByte(0x43E574);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E575, 0x43E580);
MakeDword(0x43E580);
MakeDword(0x43E584);
MakeWord(0x43E588);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E58A, 0x43E590);
MakeWord(0x43E590);
MakeDword(0x43E592);
MakeDword(0x43E596);
MakeDword(0x43E59A);
MakeDword(0x43E59E);
MakeDword(0x43E5A2);
MakeDword(0x43E5A6);
MakeWord(0x43E5AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E5AC, 0x43E5B6);
MakeDword(0x43E5B6);
MakeDword(0x43E5BA);
MakeDword(0x43E5BE);
MakeDword(0x43E5C2);
MakeDword(0x43E5C6);
MakeDword(0x43E5CA);
MakeWord(0x43E5CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E5D0, 0x43E5DC);
MakeDword(0x43E5DC);
MakeDword(0x43E5E0);
MakeDword(0x43E5E4);
MakeDword(0x43E5E8);
MakeDword(0x43E5EC);
MakeDword(0x43E5F0);
MakeWord(0x43E5F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E5F6, 0x43E608);
MakeDword(0x43E608);
MakeDword(0x43E60C);
MakeDword(0x43E610);
MakeDword(0x43E614);
MakeDword(0x43E618);
MakeDword(0x43E61C);
MakeWord(0x43E620);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E622, 0x43E62C);
MakeDword(0x43E62C);
MakeDword(0x43E630);
MakeDword(0x43E634);
MakeDword(0x43E638);
MakeDword(0x43E63C);
MakeDword(0x43E640);
MakeWord(0x43E644);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E646, 0x43E64F);
MakeDword(0x43E64F);
MakeDword(0x43E653);
MakeDword(0x43E657);
MakeDword(0x43E65B);
MakeDword(0x43E65F);
MakeDword(0x43E663);
MakeWord(0x43E667);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E669, 0x43E675);
MakeDword(0x43E675);
MakeDword(0x43E679);
MakeDword(0x43E67D);
MakeDword(0x43E681);
MakeDword(0x43E685);
MakeDword(0x43E689);
MakeWord(0x43E68D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E68F, 0x43E696);
MakeDword(0x43E696);
MakeDword(0x43E69A);
MakeDword(0x43E69E);
MakeDword(0x43E6A2);
MakeDword(0x43E6A6);
MakeDword(0x43E6AA);
MakeWord(0x43E6AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E6B0, 0x43E6BE);
MakeDword(0x43E6BE);
MakeDword(0x43E6C2);
MakeDword(0x43E6C6);
MakeDword(0x43E6CA);
MakeDword(0x43E6CE);
MakeDword(0x43E6D2);
MakeWord(0x43E6D6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E6D8, 0x43E6E2);
MakeDword(0x43E6E2);
MakeDword(0x43E6E6);
MakeDword(0x43E6EA);
MakeDword(0x43E6EE);
MakeDword(0x43E6F2);
MakeDword(0x43E6F6);
MakeWord(0x43E6FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E6FC, 0x43E70B);
MakeDword(0x43E70B);
MakeDword(0x43E70F);
MakeDword(0x43E713);
MakeDword(0x43E717);
MakeDword(0x43E71B);
MakeDword(0x43E71F);
MakeWord(0x43E723);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E725, 0x43E731);
MakeDword(0x43E731);
MakeDword(0x43E735);
MakeDword(0x43E739);
MakeDword(0x43E73D);
MakeDword(0x43E741);
MakeDword(0x43E745);
MakeWord(0x43E749);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E74B, 0x43E754);
MakeDword(0x43E754);
MakeDword(0x43E758);
MakeDword(0x43E75C);
MakeDword(0x43E760);
MakeDword(0x43E764);
MakeDword(0x43E768);
MakeWord(0x43E76C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E76E, 0x43E776);
MakeUnkn(0x43E778, 1);
MakeNameEx(0x43E778, "VMT_43E778_TPopupList", 0);
MakeDword(0x43E778);
MakeDword(0x43E77C);
MakeDword(0x43E780);
MakeDword(0x43E784);
MakeDword(0x43E788);
MakeDword(0x43E78C);
MakeDword(0x43E790);
MakeDword(0x43E794);
MakeDword(0x43E798);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E7D8, 0x43E7E3);
MakeDword(0x43E79C);
MakeDword(0x43E7A0);
MakeDword(0x43E7A4);
MakeDword(0x43E7A8);
MakeDword(0x43E7AC);
MakeDword(0x43E7B0);
MakeDword(0x43E7B4);
MakeDword(0x43E7B8);
MakeDword(0x43E7BC);
MakeDword(0x43E7C0);
MakeComm(0x43E7C4, "'+0'");
MakeDword(0x43E7C4);
MakeComm(0x43E7C8, "'+4'");
MakeDword(0x43E7C8);
MakeComm(0x43E7CC, "'+8'");
MakeDword(0x43E7CC);
MakeComm(0x43E7D0, "'+C'");
MakeDword(0x43E7D0);
MakeComm(0x43E7D4, "'+10'");
MakeDword(0x43E7D4);
MakeUnkn(0x43E7E4, 1);
MakeNameEx(0x43E7E4, "VMT_43E7E4_TMenuItemStack", 0);
MakeDword(0x43E7E4);
MakeDword(0x43E7E8);
MakeDword(0x43E7EC);
MakeDword(0x43E7F0);
MakeDword(0x43E7F4);
MakeDword(0x43E7F8);
MakeDword(0x43E7FC);
MakeDword(0x43E800);
MakeDword(0x43E804);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E83C, 0x43E84B);
MakeDword(0x43E808);
MakeDword(0x43E80C);
MakeDword(0x43E810);
MakeDword(0x43E814);
MakeDword(0x43E818);
MakeDword(0x43E81C);
MakeDword(0x43E820);
MakeDword(0x43E824);
MakeDword(0x43E828);
MakeDword(0x43E82C);
MakeComm(0x43E830, "'+0'");
MakeDword(0x43E830);
MakeComm(0x43E834, "'+4'");
MakeDword(0x43E834);
MakeComm(0x43E838, "'+8'");
MakeDword(0x43E838);
MakeUnkn(0x43E87C, 1);
MakeNameEx(0x43E87C, "FindPopupControl", 0x20);
MakeComm(0x43E87C, "'function FindPopupControl(const Pos:TPoint):TControl;'");
MakeCode(0x43E87C);
MakeCode(0x43E8A5);
MakeFunction(0x43E87C, 0x43E8AB);
MakeUnkn(0x43E8AC, 1);
MakeNameEx(0x43E8AC, "ReturnAddr_0", 0x20);
MakeComm(0x43E8AC, "'function ReturnAddr:Pointer;'");
MakeCode(0x43E8AC);
MakeFunction(0x43E8AC, 0x43E8B1);
MakeUnkn(0x43E8B4, 1);
MakeNameEx(0x43E8B4, "Error_0", 0x20);
MakeComm(0x43E8B4, "'procedure Error(ResStr:PResStringRec);'");
MakeCode(0x43E8B4);
MakeFunction(0x43E8B4, 0x43E8D2);
MakeUnkn(0x43E8D4, 1);
MakeNameEx(0x43E8D4, "ShortCut", 0x20);
MakeComm(0x43E8D4, "'function ShortCut(Key:Word; Shift:TShiftState):TShortCut;'");
MakeCode(0x43E8D4);
MakeCode(0x43E8F5);
MakeCode(0x43E8FF);
MakeCode(0x43E909);
MakeFunction(0x43E8D4, 0x43E90C);
MakeUnkn(0x43E90C, 1);
MakeNameEx(0x43E90C, "GetSpecialName", 0x20);
MakeComm(0x43E90C, "'function GetSpecialName(ShortCut:TShortCut):AnsiString;'");
MakeCode(0x43E90C);
MakeCode(0x43E95B);
MakeFunction(0x43E90C, 0x43E960);
MakeUnkn(0x43E960, 1);
MakeNameEx(0x43E960, "ShortCutToText", 0x20);
MakeComm(0x43E960, "'function ShortCutToText(ShortCut:TShortCut):AnsiString;'");
MakeCode(0x43E960);
MakeCode(0x43E9B2);
MakeCode(0x43E9D2);
MakeCode(0x43E9FB);
MakeCode(0x43EA13);
MakeCode(0x43EA26);
MakeCode(0x43EA39);
MakeCode(0x43EA54);
MakeCode(0x43EA6C);
MakeCode(0x43EA80);
MakeCode(0x43EA94);
MakeCode(0x43EAA8);
MakeCode(0x43EAC9);
MakeCode(0x43EAD5);
MakeCode(0x43EAF5);
MakeCode(0x43EB08);
MakeCode(0x43EB1B);
MakeCode(0x43EB27);
MakeCode(0x43EB2E);
MakeCode(0x43EB3B);
MakeCode(0x43EB49);
MakeCode(0x43EB4E);
MakeFunction(0x43E960, 0x43EB56);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43EB60, -1);
MakeDword(0x43EB5C);
MakeDword(0x43EB58);
MakeUnkn(0x43EB64, 1);
MakeNameEx(0x43EB64, "CompareFront", 0x20);
MakeComm(0x43EB64, "'function CompareFront(var Text:AnsiString; const Front:AnsiString):Boolean;'");
MakeCode(0x43EB64);
MakeCode(0x43EBBA);
MakeFunction(0x43EB64, 0x43EBC0);
MakeUnkn(0x43EBC0, 1);
MakeNameEx(0x43EBC0, "TextToShortCut", 0x20);
MakeComm(0x43EBC0, "'function TextToShortCut(Text:AnsiString):TShortCut;'");
MakeCode(0x43EBC0);
MakeCode(0x43EBEB);
MakeCode(0x43EC04);
MakeCode(0x43EC1C);
MakeCode(0x43EC35);
MakeCode(0x43EC4E);
MakeCode(0x43EC58);
MakeCode(0x43EC78);
MakeCode(0x43EC80);
MakeCode(0x43EC8D);
MakeCode(0x43EC9B);
MakeCode(0x43ECA0);
MakeFunction(0x43EBC0, 0x43ECAB);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43ECB4, -1);
MakeDword(0x43ECB0);
MakeDword(0x43ECAC);
MakeUnkn(0x43ECB8, 1);
MakeNameEx(0x43ECB8, "UniqueCommand", 0x20);
MakeComm(0x43ECB8, "'function UniqueCommand:Word;'");
MakeCode(0x43ECB8);
MakeFunction(0x43ECB8, 0x43ECD8);
MakeUnkn(0x43ECD8, 1);
MakeNameEx(0x43ECD8, "Iterate", 0x20);
MakeComm(0x43ECD8, "'function Iterate(var I:Integer; MenuItem:TMenuItem; AFunc:Pointer):Boolean;'");
MakeCode(0x43ECD8);
MakeCode(0x43ECF1);
MakeCode(0x43ED1E);
MakeCode(0x43ED2F);
MakeFunction(0x43ECD8, 0x43ED38);
MakeUnkn(0x43ED38, 1);
MakeNameEx(0x43ED38, "IterateMenus", 0x20);
MakeComm(0x43ED38, "'procedure IterateMenus(Func:Pointer; Menu1:TMenuItem; Menu2:TMenuItem);'");
MakeCode(0x43ED38);
MakeCode(0x43ED64);
MakeCode(0x43ED74);
MakeCode(0x43ED7D);
MakeCode(0x43ED9A);
MakeCode(0x43EDB0);
MakeCode(0x43EDCC);
MakeCode(0x43EDE7);
MakeCode(0x43EDEA);
MakeCode(0x43EE03);
MakeCode(0x43EE06);
MakeCode(0x43EE1E);
MakeCode(0x43EE36);
MakeFunction(0x43ED38, 0x43EE3D);
MakeUnkn(0x43EE40, 1);
MakeNameEx(0x43EE40, "TMenuActionLink.AssignClient", 0x20);
MakeComm(0x43EE40, "'procedure TMenuActionLink.AssignClient(AClient:TObject);'");
MakeCode(0x43EE40);
MakeFunction(0x43EE40, 0x43EE59);
MakeUnkn(0x43EE5C, 1);
MakeNameEx(0x43EE5C, "TMenuActionLink.IsAutoCheckLinked", 0x20);
MakeComm(0x43EE5C, "'function TMenuActionLink.IsAutoCheckLinked:Boolean;'");
MakeCode(0x43EE5C);
MakeFunction(0x43EE5C, 0x43EE81);
MakeUnkn(0x43EE84, 1);
MakeNameEx(0x43EE84, "TMenuActionLink.IsCaptionLinked", 0x20);
MakeComm(0x43EE84, "'function TMenuActionLink.IsCaptionLinked:Boolean;'");
MakeCode(0x43EE84);
MakeCode(0x43EEB2);
MakeCode(0x43EEB6);
MakeFunction(0x43EE84, 0x43EEBA);
MakeUnkn(0x43EEBC, 1);
MakeNameEx(0x43EEBC, "TMenuActionLink.IsCheckedLinked", 0x20);
MakeComm(0x43EEBC, "'function TMenuActionLink.IsCheckedLinked:Boolean;'");
MakeCode(0x43EEBC);
MakeCode(0x43EEE3);
MakeCode(0x43EEE7);
MakeFunction(0x43EEBC, 0x43EEEB);
MakeUnkn(0x43EEEC, 1);
MakeNameEx(0x43EEEC, "TMenuActionLink.IsEnabledLinked", 0x20);
MakeComm(0x43EEEC, "'function TMenuActionLink.IsEnabledLinked:Boolean;'");
MakeCode(0x43EEEC);
MakeCode(0x43EF13);
MakeCode(0x43EF17);
MakeFunction(0x43EEEC, 0x43EF1B);
MakeUnkn(0x43EF1C, 1);
MakeNameEx(0x43EF1C, "TMenuActionLink.IsHelpContextLinked", 0x20);
MakeComm(0x43EF1C, "'function TMenuActionLink.IsHelpContextLinked:Boolean;'");
MakeCode(0x43EF1C);
MakeCode(0x43EF43);
MakeCode(0x43EF47);
MakeFunction(0x43EF1C, 0x43EF4B);
MakeUnkn(0x43EF4C, 1);
MakeNameEx(0x43EF4C, "TMenuActionLink.IsHintLinked", 0x20);
MakeComm(0x43EF4C, "'function TMenuActionLink.IsHintLinked:Boolean;'");
MakeCode(0x43EF4C);
MakeCode(0x43EF78);
MakeCode(0x43EF7C);
MakeFunction(0x43EF4C, 0x43EF80);
MakeUnkn(0x43EF80, 1);
MakeNameEx(0x43EF80, "TMenuActionLink.IsGroupIndexLinked", 0x20);
MakeComm(0x43EF80, "'function TMenuActionLink.IsGroupIndexLinked:Boolean;'");
MakeCode(0x43EF80);
MakeCode(0x43EFB3);
MakeCode(0x43EFB7);
MakeFunction(0x43EF80, 0x43EFBB);
MakeUnkn(0x43EFBC, 1);
MakeNameEx(0x43EFBC, "TMenuActionLink.IsImageIndexLinked", 0x20);
MakeComm(0x43EFBC, "'function TMenuActionLink.IsImageIndexLinked:Boolean;'");
MakeCode(0x43EFBC);
MakeCode(0x43EFE6);
MakeCode(0x43EFEA);
MakeFunction(0x43EFBC, 0x43EFEE);
MakeUnkn(0x43EFF0, 1);
MakeNameEx(0x43EFF0, "TMenuActionLink.IsShortCutLinked", 0x20);
MakeComm(0x43EFF0, "'procedure TMenuActionLink.IsShortCutLinked;'");
MakeCode(0x43EFF0);
MakeCode(0x43F01C);
MakeFunction(0x43EFF0, 0x43F01F);
MakeUnkn(0x43F664, 1);
MakeNameEx(0x43F664, "TMenuItem.MergeWith", 0x20);
MakeComm(0x43F664, "'procedure TMenuItem.MergeWith(Menu:TMenuItem);'");
MakeUnkn(0x43F6DC, 1);
MakeNameEx(0x43F6DC, "TMenuItem.RebuildHandle", 0x20);
MakeComm(0x43F6DC, "'procedure TMenuItem.RebuildHandle;'");
MakeUnkn(0x43F80C, 1);
MakeNameEx(0x43F80C, "TMenuItem.GetHandle", 0x20);
MakeComm(0x43F80C, "'function TMenuItem.GetHandle:HMENU;'");
MakeUnkn(0x4410D0, 1);
MakeNameEx(0x4410D0, "TMenuItem.SetBreak", 0x20);
MakeComm(0x4410D0, "'procedure TMenuItem.SetBreak(Value:TMenuBreak);'");
MakeUnkn(0x4410E0, 1);
MakeNameEx(0x4410E0, "TMenuItem.SetCaption", 0x20);
MakeComm(0x4410E0, "'procedure TMenuItem.SetCaption(Value:String);'");
MakeUnkn(0x441150, 1);
MakeNameEx(0x441150, "TMenuItem.SetChecked", 0x20);
MakeComm(0x441150, "'procedure TMenuItem.SetChecked(Value:Boolean);'");
MakeUnkn(0x4411A4, 1);
MakeNameEx(0x4411A4, "TMenuItem.SetEnabled", 0x20);
MakeComm(0x4411A4, "'procedure TMenuItem.SetEnabled(Value:Boolean);'");
MakeUnkn(0x44121C, 1);
MakeNameEx(0x44121C, "TMenuItem.SetGroupIndex", 0x20);
MakeComm(0x44121C, "'procedure TMenuItem.SetGroupIndex(Value:Byte);'");
MakeUnkn(0x441260, 1);
MakeNameEx(0x441260, "TMenuItem.GetAction", 0x20);
MakeComm(0x441260, "'procedure TMenuItem.GetAction;'");
MakeUnkn(0x441278, 1);
MakeNameEx(0x441278, "TMenuItem.GetCount", 0x20);
MakeComm(0x441278, "'function TMenuItem.GetCount:Integer;'");
MakeUnkn(0x441288, 1);
MakeNameEx(0x441288, "TMenuItem.GetItem", 0x20);
MakeComm(0x441288, "'function TMenuItem.GetItem(Index:Integer):TMenuItem;'");
MakeUnkn(0x4412AC, 1);
MakeNameEx(0x4412AC, "TMenuItem.SetShortCut", 0x20);
MakeComm(0x4412AC, "'procedure TMenuItem.SetShortCut(Value:TShortCut);'");
MakeUnkn(0x4412C0, 1);
MakeNameEx(0x4412C0, "TMenuItem.SetVisible", 0x20);
MakeComm(0x4412C0, "'procedure TMenuItem.SetVisible(Value:Boolean);'");
MakeUnkn(0x4412D0, 1);
MakeNameEx(0x4412D0, "TMenuItem.SetImageIndex", 0x20);
MakeComm(0x4412D0, "'procedure TMenuItem.SetImageIndex(Value:TImageIndex);'");
MakeUnkn(0x441398, 1);
MakeNameEx(0x441398, "TMenuItem.SetDefault", 0x20);
MakeComm(0x441398, "'procedure TMenuItem.SetDefault(Value:Boolean);'");
MakeUnkn(0x4416D4, 1);
MakeNameEx(0x4416D4, "TMenuItem.GetBitmap", 0x20);
MakeComm(0x4416D4, "'procedure TMenuItem.GetBitmap;'");
MakeUnkn(0x4416FC, 1);
MakeNameEx(0x4416FC, "TMenuItem.SetAction", 0x20);
MakeComm(0x4416FC, "'procedure TMenuItem.SetAction(Value:TBasicAction);'");
MakeUnkn(0x44176C, 1);
MakeNameEx(0x44176C, "TMenuItem.SetBitmap", 0x20);
MakeComm(0x44176C, "'procedure TMenuItem.SetBitmap(Value:TBitmap);'");
MakeUnkn(0x441844, 1);
MakeNameEx(0x441844, "TMenuItem.SetRadioItem", 0x20);
MakeComm(0x441844, "'procedure TMenuItem.SetRadioItem(Value:Boolean);'");
MakeUnkn(0x4419B4, 1);
MakeNameEx(0x4419B4, "TMenuItem.IsStoredCaption", 0x20);
MakeComm(0x4419B4, "'procedure TMenuItem.IsStoredCaption(Value:String);'");
MakeUnkn(0x4419D4, 1);
MakeNameEx(0x4419D4, "TMenuItem.IsStoredChecked", 0x20);
MakeComm(0x4419D4, "'procedure TMenuItem.IsStoredChecked(Value:Boolean);'");
MakeUnkn(0x4419F4, 1);
MakeNameEx(0x4419F4, "TMenuItem.IsStoredEnabled", 0x20);
MakeComm(0x4419F4, "'procedure TMenuItem.IsStoredEnabled(Value:Boolean);'");
MakeUnkn(0x441A14, 1);
MakeNameEx(0x441A14, "TMenuItem.IsStoredHint", 0x20);
MakeComm(0x441A14, "'procedure TMenuItem.IsStoredHint(Value:String);'");
MakeUnkn(0x441A34, 1);
MakeNameEx(0x441A34, "TMenuItem.IsStoredHelpContext", 0x20);
MakeComm(0x441A34, "'procedure TMenuItem.IsStoredHelpContext(Value:THelpContext);'");
MakeUnkn(0x441A54, 1);
MakeNameEx(0x441A54, "TMenuItem.IsStoredImageIndex", 0x20);
MakeComm(0x441A54, "'procedure TMenuItem.IsStoredImageIndex(Value:TImageIndex);'");
MakeUnkn(0x441A74, 1);
MakeNameEx(0x441A74, "TMenuItem.IsStoredShortCut", 0x20);
MakeComm(0x441A74, "'procedure TMenuItem.IsStoredShortCut(Value:TShortCut);'");
MakeUnkn(0x441A94, 1);
MakeNameEx(0x441A94, "TMenuItem.IsStoredVisible", 0x20);
MakeComm(0x441A94, "'procedure TMenuItem.IsStoredVisible(Value:Boolean);'");
MakeUnkn(0x441AB4, 1);
MakeNameEx(0x441AB4, "TMenuItem.IsStoredOnClick", 0x20);
MakeComm(0x441AB4, "'procedure TMenuItem.IsStoredOnClick(Value:TNotifyEvent);'");
MakeUnkn(0x441BA0, 1);
MakeNameEx(0x441BA0, "TMenuItem.SetSubMenuImages", 0x20);
MakeComm(0x441BA0, "'procedure TMenuItem.SetSubMenuImages(Value:TCustomImageList);'");
MakeUnkn(0x441E38, 1);
MakeNameEx(0x441E38, "TMenuItem.InternalRethinkHotkeys", 0x20);
MakeComm(0x441E38, "'function TMenuItem.InternalRethinkHotkeys(ForceRethink:Boolean):Boolean;'");
MakeUnkn(0x442300, 1);
MakeNameEx(0x442300, "TMenuItem.SetAutoHotkeys", 0x20);
MakeComm(0x442300, "'procedure TMenuItem.SetAutoHotkeys(Value:TMenuItemAutoFlag);'");
MakeUnkn(0x442334, 1);
MakeNameEx(0x442334, "TMenuItem.InternalRethinkLines", 0x20);
MakeComm(0x442334, "'function TMenuItem.InternalRethinkLines(ForceRethink:Boolean):Boolean;'");
MakeUnkn(0x44247C, 1);
MakeNameEx(0x44247C, "TMenuItem.SetAutoLineReduction", 0x20);
MakeComm(0x44247C, "'procedure TMenuItem.SetAutoLineReduction(Value:TMenuItemAutoFlag);'");
MakeUnkn(0x4424E4, 1);
MakeNameEx(0x4424E4, "TMenu.Create", 0x20);
MakeComm(0x4424E4, "'constructor TMenu.Create(AOwner:TComponent);'");
MakeUnkn(0x442580, 1);
MakeNameEx(0x442580, "TMenu.Destroy", 0x20);
MakeComm(0x442580, "'destructor TMenu.Destroy;'");
MakeUnkn(0x4425D4, 1);
MakeNameEx(0x4425D4, "TMenu.GetHandle", 0x20);
MakeComm(0x4425D4, "'function TMenu.GetHandle:HMENU;'");
MakeUnkn(0x4426CC, 1);
MakeNameEx(0x4426CC, "TMenu.FindItem", 0x20);
MakeComm(0x4426CC, "'function TMenu.FindItem(Value:Integer; Kind:TFindItemKind):TMenuItem;'");
MakeUnkn(0x4426FC, 1);
MakeNameEx(0x4426FC, "TMenu.GetHelpContext", 0x20);
MakeComm(0x4426FC, "'function TMenu.GetHelpContext(Value:Integer; ByCommand:Boolean):THelpContext;'");
MakeUnkn(0x44276C, 1);
MakeNameEx(0x44276C, "TMenu.DispatchCommand", 0x20);
MakeComm(0x44276C, "'function TMenu.DispatchCommand(ACommand:Word):Boolean;'");
MakeUnkn(0x442788, 1);
MakeNameEx(0x442788, "TMenu.DispatchPopup", 0x20);
MakeComm(0x442788, "'function TMenu.DispatchPopup(AHandle:HMENU):Boolean;'");
MakeUnkn(0x442850, 1);
MakeNameEx(0x442850, "TMenu.IsOwnerDraw", 0x20);
MakeComm(0x442850, "'function TMenu.IsOwnerDraw:Boolean;'");
MakeUnkn(0x442AE4, 1);
MakeNameEx(0x442AE4, "TMainMenu.IsStoredBiDiMode", 0x20);
MakeComm(0x442AE4, "'procedure TMainMenu.IsStoredBiDiMode(Value:TBiDiMode);'");
MakeUnkn(0x442AEC, 1);
MakeNameEx(0x442AEC, "TMenu.DoBiDiModeChanged", 0x20);
MakeComm(0x442AEC, "'procedure TMenu.DoBiDiModeChanged;'");
MakeUnkn(0x442C48, 1);
MakeNameEx(0x442C48, "TMenu.UpdateImage", 0x20);
MakeComm(0x442C48, "'function TMenu.UpdateImage:Boolean;'");
MakeUnkn(0x442CCC, 1);
MakeNameEx(0x442CCC, "TMainMenu.SetOwnerDraw", 0x20);
MakeComm(0x442CCC, "'procedure TMainMenu.SetOwnerDraw(Value:Boolean);'");
MakeUnkn(0x442CDC, 1);
MakeNameEx(0x442CDC, "TMenu.AdjustBiDiBehavior", 0x20);
MakeComm(0x442CDC, "'procedure TMenu.AdjustBiDiBehavior;'");
MakeUnkn(0x442D58, 1);
MakeNameEx(0x442D58, "TMenu.SetWindowHandle", 0x20);
MakeComm(0x442D58, "'procedure TMenu.SetWindowHandle(Value:HWND);'");
MakeUnkn(0x442DC0, 1);
MakeNameEx(0x442DC0, "TMenu.MenuChanged", 0x20);
MakeComm(0x442DC0, "'procedure TMenu.MenuChanged(Sender:TObject; Source:TMenuItem; Rebuild:Boolean);'");
MakeUnkn(0x442E08, 1);
MakeNameEx(0x442E08, "TMainMenu.SetImages", 0x20);
MakeComm(0x442E08, "'procedure TMainMenu.SetImages(Value:TCustomImageList);'");
MakeUnkn(0x442FCC, 1);
MakeNameEx(0x442FCC, "TMenu.ProcessMenuChar", 0x20);
MakeComm(0x442FCC, "'procedure TMenu.ProcessMenuChar(var Message:TWMMenuChar);'");
MakeUnkn(0x443144, 1);
MakeNameEx(0x443144, "TMenu.DoGetMenuString", 0x20);
MakeComm(0x443144, "'function TMenu.DoGetMenuString(Menu:HMENU; ItemID:UINT; Str:PChar; MaxCount:Integer; Flag:UINT):Integer;'");
MakeCode(0x443144);
MakeCode(0x443189);
MakeCode(0x4431A5);
MakeCode(0x4431CC);
MakeCode(0x4431D0);
MakeCode(0x4431E3);
MakeFunction(0x443144, 0x4431EB);
MakeUnkn(0x4431EC, 1);
MakeNameEx(0x4431EC, "TMenu.SetBiDiMode", 0x20);
MakeComm(0x4431EC, "'procedure TMenu.SetBiDiMode(Value:TBiDiMode);'");
MakeCode(0x4431EC);
MakeFunction(0x4431EC, 0x4431FE);
MakeUnkn(0x443200, 1);
MakeNameEx(0x443200, "TMenu.SetParentBiDiMode", 0x20);
MakeComm(0x443200, "'procedure TMenu.SetParentBiDiMode(Value:Boolean);'");
MakeCode(0x443200);
MakeFunction(0x443200, 0x44320E);
MakeUnkn(0x443210, 1);
MakeNameEx(0x443210, "TMenu.ParentBiDiModeChanged", 0x20);
MakeComm(0x443210, "'procedure TMenu.ParentBiDiModeChanged;'");
MakeCode(0x443210);
MakeCode(0x443233);
MakeFunction(0x443210, 0x443235);
MakeUnkn(0x443238, 1);
MakeNameEx(0x443238, "TMenu.ParentBiDiModeChanged_0", 0x20);
MakeComm(0x443238, "'procedure TMenu.ParentBiDiModeChanged(AControl:TObject);'");
MakeCode(0x443238);
MakeCode(0x44325F);
MakeFunction(0x443238, 0x443262);
MakeUnkn(0x443264, 1);
MakeNameEx(0x443264, "TMenu.GetAutoHotkeys", 0x20);
MakeComm(0x443264, "'function TMenu.GetAutoHotkeys:TMenuAutoFlag;'");
MakeCode(0x443264);
MakeFunction(0x443264, 0x443272);
MakeUnkn(0x443274, 1);
MakeNameEx(0x443274, "TMenu.SetAutoHotkeys", 0x20);
MakeComm(0x443274, "'procedure TMenu.SetAutoHotkeys(const Value:TMenuAutoFlag);'");
MakeCode(0x443274);
MakeFunction(0x443274, 0x443284);
MakeUnkn(0x443284, 1);
MakeNameEx(0x443284, "TMenu.GetAutoLineReduction", 0x20);
MakeComm(0x443284, "'function TMenu.GetAutoLineReduction:TMenuAutoFlag;'");
MakeCode(0x443284);
MakeFunction(0x443284, 0x443292);
MakeUnkn(0x443294, 1);
MakeNameEx(0x443294, "TMenu.SetAutoLineReduction", 0x20);
MakeComm(0x443294, "'procedure TMenu.SetAutoLineReduction(const Value:TMenuAutoFlag);'");
MakeCode(0x443294);
MakeFunction(0x443294, 0x4432A4);
MakeUnkn(0x4432A4, 1);
MakeNameEx(0x4432A4, "TMainMenu.SetAutoMerge", 0x20);
MakeComm(0x4432A4, "'procedure TMainMenu.SetAutoMerge(Value:Boolean);'");
MakeCode(0x4432A4);
MakeFunction(0x4432A4, 0x4432C3);
MakeUnkn(0x4432C4, 1);
MakeNameEx(0x4432C4, "TMainMenu.MenuChanged", 0x20);
MakeComm(0x4432C4, "'procedure TMainMenu.MenuChanged(Sender:TObject; Source:TMenuItem; Rebuild:Boolean);'");
MakeCode(0x4432C4);
MakeCode(0x4432F7);
MakeCode(0x443304);
MakeFunction(0x4432C4, 0x44331C);
MakeUnkn(0x44331C, 1);
MakeNameEx(0x44331C, "TMainMenu.Merge", 0x20);
MakeComm(0x44331C, "'procedure TMainMenu.Merge(Menu:TMainMenu);'");
MakeCode(0x44331C);
MakeCode(0x44332C);
MakeFunction(0x44331C, 0x443337);
MakeUnkn(0x443338, 1);
MakeNameEx(0x443338, "TMainMenu.Unmerge", 0x20);
MakeComm(0x443338, "'procedure TMainMenu.Unmerge(Menu:TMainMenu);'");
MakeCode(0x443338);
MakeFunction(0x443338, 0x443352);
MakeUnkn(0x443354, 1);
MakeNameEx(0x443354, "TMainMenu.ItemChanged", 0x20);
MakeComm(0x443354, "'procedure TMainMenu.ItemChanged;'");
MakeCode(0x443354);
MakeCode(0x44337B);
MakeFunction(0x443354, 0x44337E);
MakeUnkn(0x443380, 1);
MakeNameEx(0x443380, "TMainMenu.GetHandle", 0x20);
MakeComm(0x443380, "'function TMainMenu.GetHandle:HMENU;'");
MakeCode(0x443380);
MakeCode(0x44338A);
MakeFunction(0x443380, 0x443390);
MakeUnkn(0x443390, 1);
MakeNameEx(0x443390, "TPopupList.MainWndProc", 0x20);
MakeComm(0x443390, "'procedure TPopupList.MainWndProc(var Message:TMessage);'");
MakeCode(0x443390);
MakeCode(0x4433B0);
MakeCode(0x4433BA);
MakeCode(0x4433D3);
MakeFunction(0x443390, 0x4433D9);
MakeUnkn(0x4433DC, 1);
MakeNameEx(0x4433DC, "TPopupList.WndProc", 0x20);
MakeComm(0x4433DC, "'procedure TPopupList.WndProc(var Message:TMessage);'");
MakeCode(0x4433DC);
MakeCode(0x443426);
MakeCode(0x44343E);
MakeCode(0x443450);
MakeCode(0x443474);
MakeCode(0x443486);
MakeCode(0x4434A9);
MakeCode(0x4434B7);
MakeCode(0x4434C5);
MakeCode(0x4434E2);
MakeCode(0x4434EB);
MakeCode(0x4434F2);
MakeCode(0x443532);
MakeCode(0x443536);
MakeCode(0x443549);
MakeCode(0x443561);
MakeCode(0x44358A);
MakeCode(0x4435A4);
MakeCode(0x4435E0);
MakeCode(0x443602);
MakeCode(0x44362B);
MakeCode(0x44363E);
MakeCode(0x44364B);
MakeCode(0x443663);
MakeCode(0x4436FD);
MakeCode(0x44370A);
MakeCode(0x443725);
MakeCode(0x44372A);
MakeCode(0x44372C);
MakeCode(0x443739);
MakeCode(0x443742);
MakeCode(0x443747);
MakeCode(0x443749);
MakeCode(0x443756);
MakeCode(0x44376E);
MakeCode(0x44381E);
MakeCode(0x44382B);
MakeCode(0x443843);
MakeCode(0x443848);
MakeCode(0x44384A);
MakeCode(0x443857);
MakeCode(0x443860);
MakeCode(0x443865);
MakeCode(0x443867);
MakeCode(0x443874);
MakeCode(0x443885);
MakeCode(0x44388A);
MakeCode(0x44388C);
MakeCode(0x443896);
MakeCode(0x4438A4);
MakeCode(0x4438CF);
MakeCode(0x4438DB);
MakeCode(0x4438DF);
MakeCode(0x4438F9);
MakeCode(0x443906);
MakeCode(0x44390F);
MakeCode(0x443914);
MakeFunction(0x4433DC, 0x44391D);
MakeUnkn(0x443920, 1);
MakeNameEx(0x443920, "TPopupList.Add", 0x20);
MakeComm(0x443920, "'procedure TPopupList.Add(Popup:TPopupMenu);'");
MakeCode(0x443920);
MakeCode(0x44393A);
MakeFunction(0x443920, 0x443946);
MakeUnkn(0x443948, 1);
MakeNameEx(0x443948, "TPopupList.Remove", 0x20);
MakeComm(0x443948, "'procedure TPopupList.Remove(Popup:TPopupMenu);'");
MakeCode(0x443948);
MakeCode(0x443960);
MakeFunction(0x443948, 0x443962);
MakeUnkn(0x443964, 1);
MakeNameEx(0x443964, "TPopupMenu.Create", 0x20);
MakeComm(0x443964, "'constructor TPopupMenu.Create(AOwner:TComponent);'");
MakeCode(0x443964);
MakeCode(0x443972);
MakeCode(0x4439D3);
MakeFunction(0x443964, 0x4439D8);
MakeUnkn(0x4439D8, 1);
MakeNameEx(0x4439D8, "TPopupMenu.Destroy", 0x20);
MakeComm(0x4439D8, "'destructor TPopupMenu.Destroy;'");
MakeCode(0x4439D8);
MakeCode(0x443A06);
MakeFunction(0x4439D8, 0x443A09);
MakeUnkn(0x443A0C, 1);
MakeNameEx(0x443A0C, "TPopupMenu.DoPopup", 0x20);
MakeComm(0x443A0C, "'procedure TPopupMenu.DoPopup(Sender:TObject);'");
MakeCode(0x443A0C);
MakeCode(0x443A1C);
MakeFunction(0x443A0C, 0x443A1E);
MakeUnkn(0x443A20, 1);
MakeNameEx(0x443A20, "TPopupMenu.GetHelpContext", 0x20);
MakeComm(0x443A20, "'function TPopupMenu.GetHelpContext:?;'");
MakeCode(0x443A20);
MakeComm(0x443A20, "'TPopupMenu.Items:TMenuItem'");
MakeComm(0x443A23, "'TMenuItem.HelpContext:THelpContext'");
MakeFunction(0x443A20, 0x443A27);
MakeUnkn(0x443A28, 1);
MakeNameEx(0x443A28, "TPopupMenu.SetHelpContext", 0x20);
MakeComm(0x443A28, "'procedure TPopupMenu.SetHelpContext(Value:THelpContext);'");
MakeCode(0x443A28);
MakeComm(0x443A28, "'TPopupMenu.Items:TMenuItem'");
MakeComm(0x443A2B, "'TMenuItem.HelpContext:THelpContext'");
MakeFunction(0x443A28, 0x443A2F);
MakeUnkn(0x443A30, 1);
MakeNameEx(0x443A30, "TPopupMenu.SetBiDiModeFromPopupControl", 0x20);
MakeComm(0x443A30, "'procedure TPopupMenu.SetBiDiModeFromPopupControl;'");
MakeCode(0x443A30);
MakeCode(0x443A60);
MakeCode(0x443A75);
MakeFunction(0x443A30, 0x443A77);
MakeUnkn(0x443A78, 1);
MakeNameEx(0x443A78, "TPopupMenu.UseRightToLeftAlignment", 0x20);
MakeComm(0x443A78, "'function TPopupMenu.UseRightToLeftAlignment:Boolean;'");
MakeCode(0x443A78);
MakeCode(0x443AA6);
MakeCode(0x443AB6);
MakeCode(0x443ABD);
MakeFunction(0x443A78, 0x443AC1);
MakeUnkn(0x443AC4, 1);
MakeNameEx(0x443AC4, "TPopupMenu.Popup", 0x20);
MakeComm(0x443AC4, "'procedure TPopupMenu.Popup(X:Integer; Y:Integer);'");
MakeCode(0x443AC4);
MakeFunction(0x443AC4, 0x443B78);
MakeUnkn(0x443B78, 1);
MakeNameEx(0x443B78, "TMenuItemStack.ClearItem", 0x20);
MakeComm(0x443B78, "'procedure TMenuItemStack.ClearItem(AItem:TMenuItem);'");
MakeCode(0x443B78);
MakeCode(0x443B8E);
MakeCode(0x443BAA);
MakeCode(0x443BAE);
MakeFunction(0x443B78, 0x443BB3);
MakeUnkn(0x443BB4, 1);
MakeNameEx(0x443BB4, "DrawMenuItem", 0x20);
MakeComm(0x443BB4, "'procedure DrawMenuItem(MenuItem:TMenuItem; ACanvas:TCanvas; ARect:TRect; State:TOwnerDrawState);'");
MakeCode(0x443BB4);
MakeCode(0x443BE9);
MakeCode(0x443BED);
MakeCode(0x443BEF);
MakeCode(0x443C1F);
MakeCode(0x443C3B);
MakeCode(0x443C61);
MakeCode(0x443C7B);
MakeFunction(0x443BB4, 0x443C9A);
MakeUnkn(0x443C9C, 1);
MakeNameEx(0x443C9C, "StripHotkey", 0x20);
MakeComm(0x443C9C, "'function StripHotkey(const Text:AnsiString):AnsiString;'");
MakeCode(0x443C9C);
MakeCode(0x443CB2);
MakeCode(0x443CCE);
MakeCode(0x443D13);
MakeCode(0x443D21);
MakeCode(0x443D22);
MakeFunction(0x443C9C, 0x443D30);
MakeUnkn(0x443D30, 1);
MakeNameEx(0x443D30, "GetHotkey", 0x20);
MakeComm(0x443D30, "'function GetHotkey(const Text:AnsiString):AnsiString;'");
MakeCode(0x443D30);
MakeCode(0x443D51);
MakeCode(0x443D68);
MakeCode(0x443D89);
MakeCode(0x443D8E);
MakeFunction(0x443D30, 0x443D93);
MakeUnkn(0x443D94, 1);
MakeNameEx(0x443D94, "AnsiSameCaption", 0x20);
MakeComm(0x443D94, "'function AnsiSameCaption(const Text1:AnsiString; const Text2:AnsiString):Boolean;'");
MakeCode(0x443D94);
MakeCode(0x443DD2);
MakeCode(0x443DDF);
MakeCode(0x443DED);
MakeCode(0x443DF2);
MakeFunction(0x443D94, 0x443DFC);
MakeUnkn(0x443DFC, 1);
MakeNameEx(0x443DFC, "_NF__590", 0x20);
MakeComm(0x443DFC, "'procedure _NF__590;'");
MakeCode(0x443DFC);
MakeFunction(0x443DFC, 0x443E90);
MakeUnkn(0x443E90, 1);
MakeNameEx(0x443E90, "Finalization_12", 0x20);
MakeComm(0x443E90, "'procedure Finalization;'");
MakeCode(0x443E90);
MakeCode(0x443EE6);
MakeCode(0x443EF3);
MakeCode(0x443EF4);
MakeCode(0x443EF9);
MakeFunction(0x443E90, 0x443EFD);
MakeUnkn(0x443F00, 1);
MakeNameEx(0x443F00, "Menus", 0x20);
MakeComm(0x443F00, "'procedure Menus;'");
MakeCode(0x443F00);
MakeFunction(0x443F00, 0x443F85);
MakeUnkn(0x443F88, 1);
MakeNameEx(0x443F88, "RTTI_443F88_Integer_TScrollBarInc", 0);
MakeDword(0x443F88);
MakeUnkn(0x443F8C, 1);
MakeNameEx(0x443F8C, "", 0);
MakeByte(0x443F8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443F8D, 0x443F9B);
MakeByte(0x443F9B);
MakeDword(0x443F9C);
MakeDword(0x443FA0);
MakeUnkn(0x443FA4, 1);
MakeNameEx(0x443FA4, "RTTI_443FA4_Enumeration_TScrollBarStyle", 0);
MakeDword(0x443FA4);
MakeUnkn(0x443FA8, 1);
MakeNameEx(0x443FA8, "", 0);
MakeByte(0x443FA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443FA9, 0x443FB9);
MakeByte(0x443FB9);
MakeDword(0x443FBA);
MakeDword(0x443FBE);
MakeDword(0x443FC2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443FC6, 0x443FD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443FD0, 0x443FD7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443FD7, 0x443FE2);
MakeUnkn(0x443FE8, 1);
MakeNameEx(0x443FE8, "VMT_443FE8_TControlScrollBar", 0);
MakeDword(0x443FE8);
MakeDword(0x443FEC);
MakeDword(0x443FF0);
MakeDword(0x443FF4);
MakeDword(0x443FF8);
MakeDword(0x443FFC);
MakeDword(0x444000);
MakeDword(0x444004);
MakeDword(0x444008);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444040, 0x444052);
MakeDword(0x44400C);
MakeDword(0x444010);
MakeDword(0x444014);
MakeDword(0x444018);
MakeDword(0x44401C);
MakeDword(0x444020);
MakeDword(0x444024);
MakeDword(0x444028);
MakeDword(0x44402C);
MakeDword(0x444030);
MakeComm(0x444034, "'+0'");
MakeDword(0x444034);
MakeComm(0x444038, "'+4'");
MakeDword(0x444038);
MakeComm(0x44403C, "'+8'");
MakeDword(0x44403C);
MakeUnkn(0x444054, 1);
MakeNameEx(0x444054, "RTTI_444054_Class_TControlScrollBar", 0);
MakeDword(0x444054);
MakeUnkn(0x444058, 1);
MakeNameEx(0x444058, "", 0);
MakeByte(0x444058);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444059, 0x44406B);
MakeDword(0x44406B);
MakeDword(0x44406F);
MakeWord(0x444073);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444075, 0x44407B);
MakeWord(0x44407B);
MakeDword(0x44407D);
MakeDword(0x444081);
MakeDword(0x444085);
MakeDword(0x444089);
MakeDword(0x44408D);
MakeDword(0x444091);
MakeWord(0x444095);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444097, 0x4440A2);
MakeDword(0x4440A2);
MakeDword(0x4440A6);
MakeDword(0x4440AA);
MakeDword(0x4440AE);
MakeDword(0x4440B2);
MakeDword(0x4440B6);
MakeWord(0x4440BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4440BC, 0x4440C2);
MakeDword(0x4440C2);
MakeDword(0x4440C6);
MakeDword(0x4440CA);
MakeDword(0x4440CE);
MakeDword(0x4440D2);
MakeDword(0x4440D6);
MakeWord(0x4440DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4440DC, 0x4440E6);
MakeDword(0x4440E6);
MakeDword(0x4440EA);
MakeDword(0x4440EE);
MakeDword(0x4440F2);
MakeDword(0x4440F6);
MakeDword(0x4440FA);
MakeWord(0x4440FE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444100, 0x444107);
MakeDword(0x444107);
MakeDword(0x44410B);
MakeDword(0x44410F);
MakeDword(0x444113);
MakeDword(0x444117);
MakeDword(0x44411B);
MakeWord(0x44411F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444121, 0x44412D);
MakeDword(0x44412D);
MakeDword(0x444131);
MakeDword(0x444135);
MakeDword(0x444139);
MakeDword(0x44413D);
MakeDword(0x444141);
MakeWord(0x444145);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444147, 0x444150);
MakeDword(0x444150);
MakeDword(0x444154);
MakeDword(0x444158);
MakeDword(0x44415C);
MakeDword(0x444160);
MakeDword(0x444164);
MakeWord(0x444168);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44416A, 0x444170);
MakeDword(0x444170);
MakeDword(0x444174);
MakeDword(0x444178);
MakeDword(0x44417C);
MakeDword(0x444180);
MakeDword(0x444184);
MakeWord(0x444188);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44418A, 0x444191);
MakeDword(0x444191);
MakeDword(0x444195);
MakeDword(0x444199);
MakeDword(0x44419D);
MakeDword(0x4441A1);
MakeDword(0x4441A5);
MakeWord(0x4441A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4441AB, 0x4441B0);
MakeDword(0x4441B0);
MakeDword(0x4441B4);
MakeDword(0x4441B8);
MakeDword(0x4441BC);
MakeDword(0x4441C0);
MakeDword(0x4441C4);
MakeWord(0x4441C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4441CA, 0x4441D0);
MakeDword(0x4441D0);
MakeDword(0x4441D4);
MakeDword(0x4441D8);
MakeDword(0x4441DC);
MakeDword(0x4441E0);
MakeDword(0x4441E4);
MakeWord(0x4441E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4441EA, 0x4441F4);
MakeDword(0x4441F4);
MakeDword(0x4441F8);
MakeDword(0x4441FC);
MakeDword(0x444200);
MakeDword(0x444204);
MakeDword(0x444208);
MakeWord(0x44420C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44420E, 0x444217);
MakeDword(0x444217);
MakeDword(0x44421B);
MakeDword(0x44421F);
MakeDword(0x444223);
MakeDword(0x444227);
MakeDword(0x44422B);
MakeWord(0x44422F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444231, 0x444239);
MakeUnkn(0x44423C, 1);
MakeNameEx(0x44423C, "RTTI_44423C_Enumeration_TWindowState", 0);
MakeDword(0x44423C);
MakeUnkn(0x444240, 1);
MakeNameEx(0x444240, "", 0);
MakeByte(0x444240);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444241, 0x44424E);
MakeByte(0x44424E);
MakeDword(0x44424F);
MakeDword(0x444253);
MakeDword(0x444257);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44425B, 0x444264);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444264, 0x444270);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444270, 0x44427C);
MakeUnkn(0x444284, 1);
MakeNameEx(0x444284, "VMT_444284_TScrollingWinControl", 0);
MakeDword(0x444284);
MakeDword(0x444288);
MakeDword(0x44428C);
MakeDword(0x444290);
MakeDword(0x444294);
MakeDword(0x444298);
MakeDword(0x44429C);
MakeDword(0x4442A0);
MakeUnkn(0x4443A4, 1);
MakeNameEx(0x4443A4, "TScrollingWinControl_DynamicTable", 0);
MakeWord(0x4443A4);
MakeWord(0x4443A6);
MakeWord(0x4443A8);
MakeWord(0x4443AA);
MakeWord(0x4443AC);
MakeWord(0x4443AE);
MakeWord(0x4443B0);
MakeDword(0x4443B2);
MakeDword(0x4443B6);
MakeDword(0x4443BA);
MakeDword(0x4443BE);
MakeDword(0x4443C2);
MakeDword(0x4443C6);
MakeDword(0x4442A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4443CA, 0x4443DF);
MakeDword(0x4442A8);
MakeDword(0x4442AC);
MakeDword(0x4442B0);
MakeDword(0x4442B4);
MakeDword(0x4442B8);
MakeDword(0x4442BC);
MakeDword(0x4442C0);
MakeDword(0x4442C4);
MakeDword(0x4442C8);
MakeDword(0x4442CC);
MakeComm(0x4442D0, "'+0'");
MakeDword(0x4442D0);
MakeComm(0x4442D4, "'+4'");
MakeDword(0x4442D4);
MakeComm(0x4442D8, "'+8'");
MakeDword(0x4442D8);
MakeComm(0x4442DC, "'+C'");
MakeDword(0x4442DC);
MakeComm(0x4442E0, "'+10'");
MakeDword(0x4442E0);
MakeComm(0x4442E4, "'+14'");
MakeDword(0x4442E4);
MakeComm(0x4442E8, "'+18'");
MakeDword(0x4442E8);
MakeComm(0x4442EC, "'+1C'");
MakeDword(0x4442EC);
MakeComm(0x4442F0, "'+20'");
MakeDword(0x4442F0);
MakeComm(0x4442F4, "'+24'");
MakeDword(0x4442F4);
MakeComm(0x4442F8, "'+28'");
MakeDword(0x4442F8);
MakeComm(0x4442FC, "'+2C'");
MakeDword(0x4442FC);
MakeComm(0x444300, "'+30'");
MakeDword(0x444300);
MakeComm(0x444304, "'+34'");
MakeDword(0x444304);
MakeComm(0x444308, "'+38'");
MakeDword(0x444308);
MakeComm(0x44430C, "'+3C'");
MakeDword(0x44430C);
MakeComm(0x444310, "'+40'");
MakeDword(0x444310);
MakeComm(0x444314, "'+44'");
MakeDword(0x444314);
MakeComm(0x444318, "'+48'");
MakeDword(0x444318);
MakeComm(0x44431C, "'+4C'");
MakeDword(0x44431C);
MakeComm(0x444320, "'+50'");
MakeDword(0x444320);
MakeComm(0x444324, "'+54'");
MakeDword(0x444324);
MakeComm(0x444328, "'+58'");
MakeDword(0x444328);
MakeComm(0x44432C, "'+5C'");
MakeDword(0x44432C);
MakeComm(0x444330, "'+60'");
MakeDword(0x444330);
MakeComm(0x444334, "'+64'");
MakeDword(0x444334);
MakeComm(0x444338, "'+68'");
MakeDword(0x444338);
MakeComm(0x44433C, "'+6C'");
MakeDword(0x44433C);
MakeComm(0x444340, "'+70'");
MakeDword(0x444340);
MakeComm(0x444344, "'+74'");
MakeDword(0x444344);
MakeComm(0x444348, "'+78'");
MakeDword(0x444348);
MakeComm(0x44434C, "'+7C'");
MakeDword(0x44434C);
MakeComm(0x444350, "'+80'");
MakeDword(0x444350);
MakeComm(0x444354, "'+84'");
MakeDword(0x444354);
MakeComm(0x444358, "'+88'");
MakeDword(0x444358);
MakeComm(0x44435C, "'+8C'");
MakeDword(0x44435C);
MakeComm(0x444360, "'+90'");
MakeDword(0x444360);
MakeComm(0x444364, "'+94'");
MakeDword(0x444364);
MakeComm(0x444368, "'+98'");
MakeDword(0x444368);
MakeComm(0x44436C, "'+9C'");
MakeDword(0x44436C);
MakeComm(0x444370, "'+A0'");
MakeDword(0x444370);
MakeComm(0x444374, "'+A4'");
MakeDword(0x444374);
MakeComm(0x444378, "'+A8'");
MakeDword(0x444378);
MakeComm(0x44437C, "'+AC'");
MakeDword(0x44437C);
MakeComm(0x444380, "'+B0'");
MakeDword(0x444380);
MakeComm(0x444384, "'+B4'");
MakeDword(0x444384);
MakeComm(0x444388, "'+B8'");
MakeDword(0x444388);
MakeComm(0x44438C, "'+BC'");
MakeDword(0x44438C);
MakeComm(0x444390, "'+C0'");
MakeDword(0x444390);
MakeComm(0x444394, "'+C4'");
MakeDword(0x444394);
MakeComm(0x444398, "'+C8'");
MakeDword(0x444398);
MakeComm(0x44439C, "'+CC'");
MakeDword(0x44439C);
MakeComm(0x4443A0, "'+D0'");
MakeDword(0x4443A0);
MakeUnkn(0x4443E0, 1);
MakeNameEx(0x4443E0, "RTTI_4443E0_Class_TScrollingWinControl", 0);
MakeDword(0x4443E0);
MakeUnkn(0x4443E4, 1);
MakeNameEx(0x4443E4, "", 0);
MakeByte(0x4443E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4443E5, 0x4443FA);
MakeDword(0x4443FA);
MakeDword(0x4443FE);
MakeWord(0x444402);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444404, 0x44440A);
MakeWord(0x44440A);
MakeDword(0x44440C);
MakeDword(0x444410);
MakeDword(0x444414);
MakeDword(0x444418);
MakeDword(0x44441C);
MakeDword(0x444420);
MakeWord(0x444424);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444426, 0x444434);
MakeDword(0x444434);
MakeDword(0x444438);
MakeDword(0x44443C);
MakeDword(0x444440);
MakeDword(0x444444);
MakeDword(0x444448);
MakeWord(0x44444C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44444E, 0x44445C);
MakeUnkn(0x44445C, 1);
MakeNameEx(0x44445C, "RTTI_44445C_Enumeration_TFormBorderStyle", 0);
MakeDword(0x44445C);
MakeUnkn(0x444460, 1);
MakeNameEx(0x444460, "", 0);
MakeByte(0x444460);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444461, 0x444472);
MakeByte(0x444472);
MakeDword(0x444473);
MakeDword(0x444477);
MakeDword(0x44447B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44447F, 0x444486);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444486, 0x44448F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44448F, 0x44449A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44449A, 0x4444A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4444A3, 0x4444B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4444B0, 0x4444BE);
MakeUnkn(0x4444C4, 1);
MakeNameEx(0x4444C4, "RTTI_4444C4_Enumeration_TBorderStyle", 0);
MakeDword(0x4444C4);
MakeUnkn(0x4444C8, 1);
MakeNameEx(0x4444C8, "", 0);
MakeByte(0x4444C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4444C9, 0x4444D6);
MakeByte(0x4444D6);
MakeDword(0x4444D7);
MakeDword(0x4444DB);
MakeDword(0x4444DF);
MakeUnkn(0x4444EC, 1);
MakeNameEx(0x4444EC, "RTTI_4444EC_Interface_IDesignerHook", 0);
MakeDword(0x4444EC);
MakeUnkn(0x4444F0, 1);
MakeNameEx(0x4444F0, "", 0);
MakeByte(0x4444F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4444F1, 0x4444FF);
MakeDword(0x4444FF);
MakeByte(0x444503);
MakeByte(0x444504);
MakeArray(0x444504, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444514, 0x44451A);
MakeWord(0x44451A);
MakeWord(0x44451C);
MakeUnkn(0x444520, 1);
MakeNameEx(0x444520, "RTTI_444520_Interface_IOleForm", 0);
MakeDword(0x444520);
MakeUnkn(0x444524, 1);
MakeNameEx(0x444524, "", 0);
MakeByte(0x444524);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444525, 0x44452E);
MakeDword(0x44452E);
MakeByte(0x444532);
MakeByte(0x444533);
MakeArray(0x444533, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444543, 0x444549);
MakeWord(0x444549);
MakeWord(0x44454B);
MakeUnkn(0x444550, 1);
MakeNameEx(0x444550, "RTTI_444550_Enumeration_TFormStyle", 0);
MakeDword(0x444550);
MakeUnkn(0x444554, 1);
MakeNameEx(0x444554, "", 0);
MakeByte(0x444554);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444555, 0x444560);
MakeByte(0x444560);
MakeDword(0x444561);
MakeDword(0x444565);
MakeDword(0x444569);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44456D, 0x444576);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444576, 0x444581);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444581, 0x44458B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44458B, 0x444597);
MakeUnkn(0x4445A0, 1);
MakeNameEx(0x4445A0, "RTTI_4445A0_Enumeration_TBorderIcon", 0);
MakeDword(0x4445A0);
MakeUnkn(0x4445A4, 1);
MakeNameEx(0x4445A4, "", 0);
MakeByte(0x4445A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4445A5, 0x4445B1);
MakeByte(0x4445B1);
MakeDword(0x4445B2);
MakeDword(0x4445B6);
MakeDword(0x4445BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4445BE, 0x4445CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4445CB, 0x4445D6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4445D6, 0x4445E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4445E1, 0x4445E8);
MakeUnkn(0x4445F0, 1);
MakeNameEx(0x4445F0, "RTTI_4445F0_Set_TBorderIcons", 0);
MakeDword(0x4445F0);
MakeUnkn(0x4445F4, 1);
MakeNameEx(0x4445F4, "", 0);
MakeByte(0x4445F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4445F5, 0x444602);
MakeByte(0x444602);
MakeDword(0x444603);
MakeUnkn(0x444608, 1);
MakeNameEx(0x444608, "RTTI_444608_Enumeration_TPosition", 0);
MakeDword(0x444608);
MakeUnkn(0x44460C, 1);
MakeNameEx(0x44460C, "", 0);
MakeByte(0x44460C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44460D, 0x444617);
MakeByte(0x444617);
MakeDword(0x444618);
MakeDword(0x44461C);
MakeDword(0x444620);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444624, 0x44462F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44462F, 0x444639);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444639, 0x44464A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44464A, 0x44465C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44465C, 0x44466B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44466B, 0x44467B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44467B, 0x44468C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44468C, 0x44469E);
MakeUnkn(0x4446A4, 1);
MakeNameEx(0x4446A4, "RTTI_4446A4_Enumeration_TDefaultMonitor", 0);
MakeDword(0x4446A4);
MakeUnkn(0x4446A8, 1);
MakeNameEx(0x4446A8, "", 0);
MakeByte(0x4446A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4446A9, 0x4446B9);
MakeByte(0x4446B9);
MakeDword(0x4446BA);
MakeDword(0x4446BE);
MakeDword(0x4446C2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4446C6, 0x4446D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4446D0, 0x4446DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4446DA, 0x4446E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4446E5, 0x4446F2);
MakeUnkn(0x4446F8, 1);
MakeNameEx(0x4446F8, "RTTI_4446F8_Enumeration_TPrintScale", 0);
MakeDword(0x4446F8);
MakeUnkn(0x4446FC, 1);
MakeNameEx(0x4446FC, "", 0);
MakeByte(0x4446FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4446FD, 0x444709);
MakeByte(0x444709);
MakeDword(0x44470A);
MakeDword(0x44470E);
MakeDword(0x444712);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444716, 0x44471D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44471D, 0x44472C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44472C, 0x444739);
MakeUnkn(0x444740, 1);
MakeNameEx(0x444740, "RTTI_444740_Enumeration_TCloseAction", 0);
MakeDword(0x444740);
MakeUnkn(0x444744, 1);
MakeNameEx(0x444744, "", 0);
MakeByte(0x444744);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444745, 0x444752);
MakeByte(0x444752);
MakeDword(0x444753);
MakeDword(0x444757);
MakeDword(0x44475B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44475F, 0x444766);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444766, 0x44476D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44476D, 0x444774);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444774, 0x44477F);
MakeUnkn(0x444788, 1);
MakeNameEx(0x444788, "RTTI_444788_Method_TCloseEvent", 0);
MakeDword(0x444788);
MakeUnkn(0x44478C, 1);
MakeNameEx(0x44478C, "", 0);
MakeByte(0x44478C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44478D, 0x444799);
MakeByte(0x444799);
MakeByte(0x44479A);
MakeByte(0x44479B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44479C, 0x4447A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4447A3, 0x4447AB);
MakeByte(0x4447AB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4447AC, 0x4447B3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4447B3, 0x4447C0);
MakeByte(0x4447C0);
MakeDword(0x4447C1);
MakeDword(0x4447C5);
MakeUnkn(0x4447CC, 1);
MakeNameEx(0x4447CC, "RTTI_4447CC_Method_TCloseQueryEvent", 0);
MakeDword(0x4447CC);
MakeUnkn(0x4447D0, 1);
MakeNameEx(0x4447D0, "", 0);
MakeByte(0x4447D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4447D1, 0x4447E2);
MakeByte(0x4447E2);
MakeByte(0x4447E3);
MakeByte(0x4447E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4447E5, 0x4447EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4447EC, 0x4447F4);
MakeByte(0x4447F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4447F5, 0x4447FE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4447FE, 0x444806);
MakeByte(0x444806);
MakeDword(0x444807);
MakeDword(0x44480B);
MakeUnkn(0x444810, 1);
MakeNameEx(0x444810, "RTTI_444810_Method_TShortCutEvent", 0);
MakeDword(0x444810);
MakeUnkn(0x444814, 1);
MakeNameEx(0x444814, "", 0);
MakeByte(0x444814);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444815, 0x444824);
MakeByte(0x444824);
MakeByte(0x444825);
MakeByte(0x444826);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444827, 0x44482B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44482B, 0x444832);
MakeByte(0x444832);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444833, 0x44483B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44483B, 0x444843);
MakeByte(0x444843);
MakeDword(0x444844);
MakeDword(0x444848);
MakeUnkn(0x44484C, 1);
MakeNameEx(0x44484C, "RTTI_44484C_Method_THelpEvent", 0);
MakeDword(0x44484C);
MakeUnkn(0x444850, 1);
MakeNameEx(0x444850, "", 0);
MakeByte(0x444850);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444851, 0x44485C);
MakeByte(0x44485C);
MakeByte(0x44485D);
MakeByte(0x44485E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44485F, 0x444867);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444867, 0x44486C);
MakeByte(0x44486C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44486D, 0x444872);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444872, 0x44487A);
MakeByte(0x44487A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44487B, 0x444884);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444884, 0x44488C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44488C, 0x444894);
MakeDword(0x444894);
MakeByte(0x444898);
MakeDword(0x444899);
MakeDword(0x44489D);
MakeDword(0x4448A1);
MakeUnkn(0x4448A8, 1);
MakeNameEx(0x4448A8, "VMT_4448A8_TCustomForm", 0);
MakeDword(0x4448A8);
MakeDword(0x4448AC);
MakeDword(0x4448B0);
MakeDword(0x4448B4);
MakeUnkn(0x4449E8, 1);
MakeNameEx(0x4449E8, "TCustomForm_InitTable", 0);
MakeByte(0x4449E8);
MakeByte(0x4449E9);
MakeDword(0x4449EA);
MakeDword(0x4449EE);
MakeDword(0x4449F2);
MakeDword(0x4449F6);
MakeDword(0x4449FA);
MakeDword(0x4449FE);
MakeDword(0x444A02);
MakeDword(0x444A06);
MakeDword(0x4448B8);
MakeDword(0x4448BC);
MakeDword(0x4448C0);
MakeDword(0x4448C4);
MakeUnkn(0x444A0A, 1);
MakeNameEx(0x444A0A, "TCustomForm_DynamicTable", 0);
MakeWord(0x444A0A);
MakeWord(0x444A0C);
MakeWord(0x444A0E);
MakeWord(0x444A10);
MakeWord(0x444A12);
MakeWord(0x444A14);
MakeWord(0x444A16);
MakeWord(0x444A18);
MakeWord(0x444A1A);
MakeWord(0x444A1C);
MakeWord(0x444A1E);
MakeWord(0x444A20);
MakeWord(0x444A22);
MakeWord(0x444A24);
MakeWord(0x444A26);
MakeWord(0x444A28);
MakeWord(0x444A2A);
MakeWord(0x444A2C);
MakeWord(0x444A2E);
MakeWord(0x444A30);
MakeWord(0x444A32);
MakeWord(0x444A34);
MakeWord(0x444A36);
MakeWord(0x444A38);
MakeWord(0x444A3A);
MakeWord(0x444A3C);
MakeWord(0x444A3E);
MakeWord(0x444A40);
MakeWord(0x444A42);
MakeWord(0x444A44);
MakeWord(0x444A46);
MakeWord(0x444A48);
MakeWord(0x444A4A);
MakeWord(0x444A4C);
MakeWord(0x444A4E);
MakeWord(0x444A50);
MakeWord(0x444A52);
MakeWord(0x444A54);
MakeWord(0x444A56);
MakeWord(0x444A58);
MakeWord(0x444A5A);
MakeWord(0x444A5C);
MakeWord(0x444A5E);
MakeWord(0x444A60);
MakeWord(0x444A62);
MakeWord(0x444A64);
MakeWord(0x444A66);
MakeWord(0x444A68);
MakeWord(0x444A6A);
MakeWord(0x444A6C);
MakeWord(0x444A6E);
MakeWord(0x444A70);
MakeWord(0x444A72);
MakeWord(0x444A74);
MakeWord(0x444A76);
MakeWord(0x444A78);
MakeWord(0x444A7A);
MakeWord(0x444A7C);
MakeWord(0x444A7E);
MakeWord(0x444A80);
MakeWord(0x444A82);
MakeWord(0x444A84);
MakeDword(0x444A86);
MakeDword(0x444A8A);
MakeDword(0x444A8E);
MakeDword(0x444A92);
MakeDword(0x444A96);
MakeDword(0x444A9A);
MakeDword(0x444A9E);
MakeDword(0x444AA2);
MakeDword(0x444AA6);
MakeDword(0x444AAA);
MakeDword(0x444AAE);
MakeDword(0x444AB2);
MakeDword(0x444AB6);
MakeDword(0x444ABA);
MakeDword(0x444ABE);
MakeDword(0x444AC2);
MakeDword(0x444AC6);
MakeDword(0x444ACA);
MakeDword(0x444ACE);
MakeDword(0x444AD2);
MakeDword(0x444AD6);
MakeDword(0x444ADA);
MakeDword(0x444ADE);
MakeDword(0x444AE2);
MakeDword(0x444AE6);
MakeDword(0x444AEA);
MakeDword(0x444AEE);
MakeDword(0x444AF2);
MakeDword(0x444AF6);
MakeDword(0x444AFA);
MakeDword(0x444AFE);
MakeDword(0x444B02);
MakeDword(0x444B06);
MakeDword(0x444B0A);
MakeDword(0x444B0E);
MakeDword(0x444B12);
MakeDword(0x444B16);
MakeDword(0x444B1A);
MakeDword(0x444B1E);
MakeDword(0x444B22);
MakeDword(0x444B26);
MakeDword(0x444B2A);
MakeDword(0x444B2E);
MakeDword(0x444B32);
MakeDword(0x444B36);
MakeDword(0x444B3A);
MakeDword(0x444B3E);
MakeDword(0x444B42);
MakeDword(0x444B46);
MakeDword(0x444B4A);
MakeDword(0x444B4E);
MakeDword(0x444B52);
MakeDword(0x444B56);
MakeDword(0x444B5A);
MakeDword(0x444B5E);
MakeDword(0x444B62);
MakeDword(0x444B66);
MakeDword(0x444B6A);
MakeDword(0x444B6E);
MakeDword(0x444B72);
MakeDword(0x444B76);
MakeDword(0x4448C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444B7A, 0x444B86);
MakeDword(0x4448CC);
MakeDword(0x4448D0);
MakeDword(0x4448D4);
MakeDword(0x4448D8);
MakeDword(0x4448DC);
MakeDword(0x4448E0);
MakeDword(0x4448E4);
MakeDword(0x4448E8);
MakeDword(0x4448EC);
MakeDword(0x4448F0);
MakeComm(0x4448F4, "'+0'");
MakeDword(0x4448F4);
MakeComm(0x4448F8, "'+4'");
MakeDword(0x4448F8);
MakeComm(0x4448FC, "'+8'");
MakeDword(0x4448FC);
MakeComm(0x444900, "'+C'");
MakeDword(0x444900);
MakeComm(0x444904, "'+10'");
MakeDword(0x444904);
MakeComm(0x444908, "'+14'");
MakeDword(0x444908);
MakeComm(0x44490C, "'+18'");
MakeDword(0x44490C);
MakeComm(0x444910, "'+1C'");
MakeDword(0x444910);
MakeComm(0x444914, "'+20'");
MakeDword(0x444914);
MakeComm(0x444918, "'+24'");
MakeDword(0x444918);
MakeComm(0x44491C, "'+28'");
MakeDword(0x44491C);
MakeComm(0x444920, "'+2C'");
MakeDword(0x444920);
MakeComm(0x444924, "'+30'");
MakeDword(0x444924);
MakeComm(0x444928, "'+34'");
MakeDword(0x444928);
MakeComm(0x44492C, "'+38'");
MakeDword(0x44492C);
MakeComm(0x444930, "'+3C'");
MakeDword(0x444930);
MakeComm(0x444934, "'+40'");
MakeDword(0x444934);
MakeComm(0x444938, "'+44'");
MakeDword(0x444938);
MakeComm(0x44493C, "'+48'");
MakeDword(0x44493C);
MakeComm(0x444940, "'+4C'");
MakeDword(0x444940);
MakeComm(0x444944, "'+50'");
MakeDword(0x444944);
MakeComm(0x444948, "'+54'");
MakeDword(0x444948);
MakeComm(0x44494C, "'+58'");
MakeDword(0x44494C);
MakeComm(0x444950, "'+5C'");
MakeDword(0x444950);
MakeComm(0x444954, "'+60'");
MakeDword(0x444954);
MakeComm(0x444958, "'+64'");
MakeDword(0x444958);
MakeComm(0x44495C, "'+68'");
MakeDword(0x44495C);
MakeComm(0x444960, "'+6C'");
MakeDword(0x444960);
MakeComm(0x444964, "'+70'");
MakeDword(0x444964);
MakeComm(0x444968, "'+74'");
MakeDword(0x444968);
MakeComm(0x44496C, "'+78'");
MakeDword(0x44496C);
MakeComm(0x444970, "'+7C'");
MakeDword(0x444970);
MakeComm(0x444974, "'+80'");
MakeDword(0x444974);
MakeComm(0x444978, "'+84'");
MakeDword(0x444978);
MakeComm(0x44497C, "'+88'");
MakeDword(0x44497C);
MakeComm(0x444980, "'+8C'");
MakeDword(0x444980);
MakeComm(0x444984, "'+90'");
MakeDword(0x444984);
MakeComm(0x444988, "'+94'");
MakeDword(0x444988);
MakeComm(0x44498C, "'+98'");
MakeDword(0x44498C);
MakeComm(0x444990, "'+9C'");
MakeDword(0x444990);
MakeComm(0x444994, "'+A0'");
MakeDword(0x444994);
MakeComm(0x444998, "'+A4'");
MakeDword(0x444998);
MakeComm(0x44499C, "'+A8'");
MakeDword(0x44499C);
MakeComm(0x4449A0, "'+AC'");
MakeDword(0x4449A0);
MakeComm(0x4449A4, "'+B0'");
MakeDword(0x4449A4);
MakeComm(0x4449A8, "'+B4'");
MakeDword(0x4449A8);
MakeComm(0x4449AC, "'+B8'");
MakeDword(0x4449AC);
MakeComm(0x4449B0, "'+BC'");
MakeDword(0x4449B0);
MakeComm(0x4449B4, "'+C0'");
MakeDword(0x4449B4);
MakeComm(0x4449B8, "'+C4'");
MakeDword(0x4449B8);
MakeComm(0x4449BC, "'+C8'");
MakeDword(0x4449BC);
MakeComm(0x4449C0, "'+CC'");
MakeDword(0x4449C0);
MakeComm(0x4449C4, "'+D0'");
MakeDword(0x4449C4);
MakeComm(0x4449C8, "'+D4'");
MakeDword(0x4449C8);
MakeComm(0x4449CC, "'+D8'");
MakeDword(0x4449CC);
MakeComm(0x4449D0, "'+DC'");
MakeDword(0x4449D0);
MakeComm(0x4449D4, "'+E0'");
MakeDword(0x4449D4);
MakeComm(0x4449D8, "'+E4'");
MakeDword(0x4449D8);
MakeComm(0x4449DC, "'+E8'");
MakeDword(0x4449DC);
MakeComm(0x4449E0, "'+EC'");
MakeDword(0x4449E0);
MakeComm(0x4449E4, "'+F0'");
MakeDword(0x4449E4);
MakeUnkn(0x444B88, 1);
MakeNameEx(0x444B88, "RTTI_444B88_Class_TCustomForm", 0);
MakeDword(0x444B88);
MakeUnkn(0x444B8C, 1);
MakeNameEx(0x444B8C, "", 0);
MakeByte(0x444B8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444B8D, 0x444B99);
MakeDword(0x444B99);
MakeDword(0x444B9D);
MakeWord(0x444BA1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444BA3, 0x444BA9);
MakeWord(0x444BA9);
MakeUnkn(0x444BAC, 1);
MakeNameEx(0x444BAC, "VMT_444BAC_TForm", 0);
MakeDword(0x444BAC);
MakeDword(0x444BB0);
MakeDword(0x444BB4);
MakeDword(0x444BB8);
MakeDword(0x444BBC);
MakeDword(0x444BC0);
MakeDword(0x444BC4);
MakeDword(0x444BC8);
MakeDword(0x444BCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444CEC, 0x444CF2);
MakeDword(0x444BD0);
MakeDword(0x444BD4);
MakeDword(0x444BD8);
MakeDword(0x444BDC);
MakeDword(0x444BE0);
MakeDword(0x444BE4);
MakeDword(0x444BE8);
MakeDword(0x444BEC);
MakeDword(0x444BF0);
MakeDword(0x444BF4);
MakeComm(0x444BF8, "'+0'");
MakeDword(0x444BF8);
MakeComm(0x444BFC, "'+4'");
MakeDword(0x444BFC);
MakeComm(0x444C00, "'+8'");
MakeDword(0x444C00);
MakeComm(0x444C04, "'+C'");
MakeDword(0x444C04);
MakeComm(0x444C08, "'+10'");
MakeDword(0x444C08);
MakeComm(0x444C0C, "'+14'");
MakeDword(0x444C0C);
MakeComm(0x444C10, "'+18'");
MakeDword(0x444C10);
MakeComm(0x444C14, "'+1C'");
MakeDword(0x444C14);
MakeComm(0x444C18, "'+20'");
MakeDword(0x444C18);
MakeComm(0x444C1C, "'+24'");
MakeDword(0x444C1C);
MakeComm(0x444C20, "'+28'");
MakeDword(0x444C20);
MakeComm(0x444C24, "'+2C'");
MakeDword(0x444C24);
MakeComm(0x444C28, "'+30'");
MakeDword(0x444C28);
MakeComm(0x444C2C, "'+34'");
MakeDword(0x444C2C);
MakeComm(0x444C30, "'+38'");
MakeDword(0x444C30);
MakeComm(0x444C34, "'+3C'");
MakeDword(0x444C34);
MakeComm(0x444C38, "'+40'");
MakeDword(0x444C38);
MakeComm(0x444C3C, "'+44'");
MakeDword(0x444C3C);
MakeComm(0x444C40, "'+48'");
MakeDword(0x444C40);
MakeComm(0x444C44, "'+4C'");
MakeDword(0x444C44);
MakeComm(0x444C48, "'+50'");
MakeDword(0x444C48);
MakeComm(0x444C4C, "'+54'");
MakeDword(0x444C4C);
MakeComm(0x444C50, "'+58'");
MakeDword(0x444C50);
MakeComm(0x444C54, "'+5C'");
MakeDword(0x444C54);
MakeComm(0x444C58, "'+60'");
MakeDword(0x444C58);
MakeComm(0x444C5C, "'+64'");
MakeDword(0x444C5C);
MakeComm(0x444C60, "'+68'");
MakeDword(0x444C60);
MakeComm(0x444C64, "'+6C'");
MakeDword(0x444C64);
MakeComm(0x444C68, "'+70'");
MakeDword(0x444C68);
MakeComm(0x444C6C, "'+74'");
MakeDword(0x444C6C);
MakeComm(0x444C70, "'+78'");
MakeDword(0x444C70);
MakeComm(0x444C74, "'+7C'");
MakeDword(0x444C74);
MakeComm(0x444C78, "'+80'");
MakeDword(0x444C78);
MakeComm(0x444C7C, "'+84'");
MakeDword(0x444C7C);
MakeComm(0x444C80, "'+88'");
MakeDword(0x444C80);
MakeComm(0x444C84, "'+8C'");
MakeDword(0x444C84);
MakeComm(0x444C88, "'+90'");
MakeDword(0x444C88);
MakeComm(0x444C8C, "'+94'");
MakeDword(0x444C8C);
MakeComm(0x444C90, "'+98'");
MakeDword(0x444C90);
MakeComm(0x444C94, "'+9C'");
MakeDword(0x444C94);
MakeComm(0x444C98, "'+A0'");
MakeDword(0x444C98);
MakeComm(0x444C9C, "'+A4'");
MakeDword(0x444C9C);
MakeComm(0x444CA0, "'+A8'");
MakeDword(0x444CA0);
MakeComm(0x444CA4, "'+AC'");
MakeDword(0x444CA4);
MakeComm(0x444CA8, "'+B0'");
MakeDword(0x444CA8);
MakeComm(0x444CAC, "'+B4'");
MakeDword(0x444CAC);
MakeComm(0x444CB0, "'+B8'");
MakeDword(0x444CB0);
MakeComm(0x444CB4, "'+BC'");
MakeDword(0x444CB4);
MakeComm(0x444CB8, "'+C0'");
MakeDword(0x444CB8);
MakeComm(0x444CBC, "'+C4'");
MakeDword(0x444CBC);
MakeComm(0x444CC0, "'+C8'");
MakeDword(0x444CC0);
MakeComm(0x444CC4, "'+CC'");
MakeDword(0x444CC4);
MakeComm(0x444CC8, "'+D0'");
MakeDword(0x444CC8);
MakeComm(0x444CCC, "'+D4'");
MakeDword(0x444CCC);
MakeComm(0x444CD0, "'+D8'");
MakeDword(0x444CD0);
MakeComm(0x444CD4, "'+DC'");
MakeDword(0x444CD4);
MakeComm(0x444CD8, "'+E0'");
MakeDword(0x444CD8);
MakeComm(0x444CDC, "'+E4'");
MakeDword(0x444CDC);
MakeComm(0x444CE0, "'+E8'");
MakeDword(0x444CE0);
MakeComm(0x444CE4, "'+EC'");
MakeDword(0x444CE4);
MakeComm(0x444CE8, "'+F0'");
MakeDword(0x444CE8);
MakeUnkn(0x444CF4, 1);
MakeNameEx(0x444CF4, "RTTI_444CF4_Class_TForm", 0);
MakeDword(0x444CF4);
MakeUnkn(0x444CF8, 1);
MakeNameEx(0x444CF8, "", 0);
MakeByte(0x444CF8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444CF9, 0x444CFF);
MakeDword(0x444CFF);
MakeDword(0x444D03);
MakeWord(0x444D07);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444D09, 0x444D0F);
MakeWord(0x444D0F);
MakeDword(0x444D11);
MakeDword(0x444D15);
MakeDword(0x444D19);
MakeDword(0x444D1D);
MakeDword(0x444D21);
MakeDword(0x444D25);
MakeWord(0x444D29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444D2B, 0x444D32);
MakeDword(0x444D32);
MakeDword(0x444D36);
MakeDword(0x444D3A);
MakeDword(0x444D3E);
MakeDword(0x444D42);
MakeDword(0x444D46);
MakeWord(0x444D4A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444D4C, 0x444D5A);
MakeDword(0x444D5A);
MakeDword(0x444D5E);
MakeDword(0x444D62);
MakeDword(0x444D66);
MakeDword(0x444D6A);
MakeDword(0x444D6E);
MakeWord(0x444D72);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444D74, 0x444D7A);
MakeDword(0x444D7A);
MakeDword(0x444D7E);
MakeDword(0x444D82);
MakeDword(0x444D86);
MakeDword(0x444D8A);
MakeDword(0x444D8E);
MakeWord(0x444D92);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444D94, 0x444D9F);
MakeDword(0x444D9F);
MakeDword(0x444DA3);
MakeDword(0x444DA7);
MakeDword(0x444DAB);
MakeDword(0x444DAF);
MakeDword(0x444DB3);
MakeWord(0x444DB7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444DB9, 0x444DC9);
MakeDword(0x444DC9);
MakeDword(0x444DCD);
MakeDword(0x444DD1);
MakeDword(0x444DD5);
MakeDword(0x444DD9);
MakeDword(0x444DDD);
MakeWord(0x444DE1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444DE3, 0x444DEB);
MakeDword(0x444DEB);
MakeDword(0x444DEF);
MakeDword(0x444DF3);
MakeDword(0x444DF7);
MakeDword(0x444DFB);
MakeDword(0x444DFF);
MakeWord(0x444E03);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444E05, 0x444E10);
MakeDword(0x444E10);
MakeDword(0x444E14);
MakeDword(0x444E18);
MakeDword(0x444E1C);
MakeDword(0x444E20);
MakeDword(0x444E24);
MakeWord(0x444E28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444E2A, 0x444E33);
MakeDword(0x444E33);
MakeDword(0x444E37);
MakeDword(0x444E3B);
MakeDword(0x444E3F);
MakeDword(0x444E43);
MakeDword(0x444E47);
MakeWord(0x444E4B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444E4D, 0x444E56);
MakeDword(0x444E56);
MakeDword(0x444E5A);
MakeDword(0x444E5E);
MakeDword(0x444E62);
MakeDword(0x444E66);
MakeDword(0x444E6A);
MakeWord(0x444E6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444E70, 0x444E7C);
MakeDword(0x444E7C);
MakeDword(0x444E80);
MakeDword(0x444E84);
MakeDword(0x444E88);
MakeDword(0x444E8C);
MakeDword(0x444E90);
MakeWord(0x444E94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444E96, 0x444EA2);
MakeDword(0x444EA2);
MakeDword(0x444EA6);
MakeDword(0x444EAA);
MakeDword(0x444EAE);
MakeDword(0x444EB2);
MakeDword(0x444EB6);
MakeWord(0x444EBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444EBC, 0x444EC8);
MakeDword(0x444EC8);
MakeDword(0x444ECC);
MakeDword(0x444ED0);
MakeDword(0x444ED4);
MakeDword(0x444ED8);
MakeDword(0x444EDC);
MakeWord(0x444EE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444EE2, 0x444EEA);
MakeDword(0x444EEA);
MakeDword(0x444EEE);
MakeDword(0x444EF2);
MakeDword(0x444EF6);
MakeDword(0x444EFA);
MakeDword(0x444EFE);
MakeWord(0x444F02);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444F04, 0x444F11);
MakeDword(0x444F11);
MakeDword(0x444F15);
MakeDword(0x444F19);
MakeDword(0x444F1D);
MakeDword(0x444F21);
MakeDword(0x444F25);
MakeWord(0x444F29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444F2B, 0x444F37);
MakeDword(0x444F37);
MakeDword(0x444F3B);
MakeDword(0x444F3F);
MakeDword(0x444F43);
MakeDword(0x444F47);
MakeDword(0x444F4B);
MakeWord(0x444F4F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444F51, 0x444F57);
MakeDword(0x444F57);
MakeDword(0x444F5B);
MakeDword(0x444F5F);
MakeDword(0x444F63);
MakeDword(0x444F67);
MakeDword(0x444F6B);
MakeWord(0x444F6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444F71, 0x444F82);
MakeDword(0x444F82);
MakeDword(0x444F86);
MakeDword(0x444F8A);
MakeDword(0x444F8E);
MakeDword(0x444F92);
MakeDword(0x444F96);
MakeWord(0x444F9A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444F9C, 0x444FB2);
MakeDword(0x444FB2);
MakeDword(0x444FB6);
MakeDword(0x444FBA);
MakeDword(0x444FBE);
MakeDword(0x444FC2);
MakeDword(0x444FC6);
MakeWord(0x444FCA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444FCC, 0x444FD8);
MakeDword(0x444FD8);
MakeDword(0x444FDC);
MakeDword(0x444FE0);
MakeDword(0x444FE4);
MakeDword(0x444FE8);
MakeDword(0x444FEC);
MakeWord(0x444FF0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x444FF2, 0x444FF8);
MakeDword(0x444FF8);
MakeDword(0x444FFC);
MakeDword(0x445000);
MakeDword(0x445004);
MakeDword(0x445008);
MakeDword(0x44500C);
MakeWord(0x445010);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445012, 0x445021);
MakeDword(0x445021);
MakeDword(0x445025);
MakeDword(0x445029);
MakeDword(0x44502D);
MakeDword(0x445031);
MakeDword(0x445035);
MakeWord(0x445039);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44503B, 0x44504A);
MakeDword(0x44504A);
MakeDword(0x44504E);
MakeDword(0x445052);
MakeDword(0x445056);
MakeDword(0x44505A);
MakeDword(0x44505E);
MakeWord(0x445062);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445064, 0x44506D);
MakeDword(0x44506D);
MakeDword(0x445071);
MakeDword(0x445075);
MakeDword(0x445079);
MakeDword(0x44507D);
MakeDword(0x445081);
MakeWord(0x445085);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445087, 0x445090);
MakeDword(0x445090);
MakeDword(0x445094);
MakeDword(0x445098);
MakeDword(0x44509C);
MakeDword(0x4450A0);
MakeDword(0x4450A4);
MakeWord(0x4450A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4450AA, 0x4450B3);
MakeDword(0x4450B3);
MakeDword(0x4450B7);
MakeDword(0x4450BB);
MakeDword(0x4450BF);
MakeDword(0x4450C3);
MakeDword(0x4450C7);
MakeWord(0x4450CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4450CD, 0x4450D5);
MakeDword(0x4450D5);
MakeDword(0x4450D9);
MakeDword(0x4450DD);
MakeDword(0x4450E1);
MakeDword(0x4450E5);
MakeDword(0x4450E9);
MakeWord(0x4450ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4450EF, 0x4450FA);
MakeDword(0x4450FA);
MakeDword(0x4450FE);
MakeDword(0x445102);
MakeDword(0x445106);
MakeDword(0x44510A);
MakeDword(0x44510E);
MakeWord(0x445112);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445114, 0x445119);
MakeDword(0x445119);
MakeDword(0x44511D);
MakeDword(0x445121);
MakeDword(0x445125);
MakeDword(0x445129);
MakeDword(0x44512D);
MakeWord(0x445131);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445133, 0x44513D);
MakeDword(0x44513D);
MakeDword(0x445141);
MakeDword(0x445145);
MakeDword(0x445149);
MakeDword(0x44514D);
MakeDword(0x445151);
MakeWord(0x445155);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445157, 0x44515E);
MakeDword(0x44515E);
MakeDword(0x445162);
MakeDword(0x445166);
MakeDword(0x44516A);
MakeDword(0x44516E);
MakeDword(0x445172);
MakeWord(0x445176);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445178, 0x445181);
MakeDword(0x445181);
MakeDword(0x445185);
MakeDword(0x445189);
MakeDword(0x44518D);
MakeDword(0x445191);
MakeDword(0x445195);
MakeWord(0x445199);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44519B, 0x4451A9);
MakeDword(0x4451A9);
MakeDword(0x4451AD);
MakeDword(0x4451B1);
MakeDword(0x4451B5);
MakeDword(0x4451B9);
MakeDword(0x4451BD);
MakeWord(0x4451C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4451C3, 0x4451C8);
MakeDword(0x4451C8);
MakeDword(0x4451CC);
MakeDword(0x4451D0);
MakeDword(0x4451D4);
MakeDword(0x4451D8);
MakeDword(0x4451DC);
MakeWord(0x4451E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4451E2, 0x4451ED);
MakeDword(0x4451ED);
MakeDword(0x4451F1);
MakeDword(0x4451F5);
MakeDword(0x4451F9);
MakeDword(0x4451FD);
MakeDword(0x445201);
MakeWord(0x445205);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445207, 0x44520C);
MakeDword(0x44520C);
MakeDword(0x445210);
MakeDword(0x445214);
MakeDword(0x445218);
MakeDword(0x44521C);
MakeDword(0x445220);
MakeWord(0x445224);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445226, 0x445235);
MakeDword(0x445235);
MakeDword(0x445239);
MakeDword(0x44523D);
MakeDword(0x445241);
MakeDword(0x445245);
MakeDword(0x445249);
MakeWord(0x44524D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44524F, 0x44525E);
MakeDword(0x44525E);
MakeDword(0x445262);
MakeDword(0x445266);
MakeDword(0x44526A);
MakeDword(0x44526E);
MakeDword(0x445272);
MakeWord(0x445276);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445278, 0x445287);
MakeDword(0x445287);
MakeDword(0x44528B);
MakeDword(0x44528F);
MakeDword(0x445293);
MakeDword(0x445297);
MakeDword(0x44529B);
MakeWord(0x44529F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4452A1, 0x4452AF);
MakeDword(0x4452AF);
MakeDword(0x4452B3);
MakeDword(0x4452B7);
MakeDword(0x4452BB);
MakeDword(0x4452BF);
MakeDword(0x4452C3);
MakeWord(0x4452C7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4452C9, 0x4452D3);
MakeDword(0x4452D3);
MakeDword(0x4452D7);
MakeDword(0x4452DB);
MakeDword(0x4452DF);
MakeDword(0x4452E3);
MakeDword(0x4452E7);
MakeWord(0x4452EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4452ED, 0x4452F6);
MakeDword(0x4452F6);
MakeDword(0x4452FA);
MakeDword(0x4452FE);
MakeDword(0x445302);
MakeDword(0x445306);
MakeDword(0x44530A);
MakeWord(0x44530E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445310, 0x44531B);
MakeDword(0x44531B);
MakeDword(0x44531F);
MakeDword(0x445323);
MakeDword(0x445327);
MakeDword(0x44532B);
MakeDword(0x44532F);
MakeWord(0x445333);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445335, 0x44533C);
MakeDword(0x44533C);
MakeDword(0x445340);
MakeDword(0x445344);
MakeDword(0x445348);
MakeDword(0x44534C);
MakeDword(0x445350);
MakeWord(0x445354);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445356, 0x445361);
MakeDword(0x445361);
MakeDword(0x445365);
MakeDword(0x445369);
MakeDword(0x44536D);
MakeDword(0x445371);
MakeDword(0x445375);
MakeWord(0x445379);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44537B, 0x445384);
MakeDword(0x445384);
MakeDword(0x445388);
MakeDword(0x44538C);
MakeDword(0x445390);
MakeDword(0x445394);
MakeDword(0x445398);
MakeWord(0x44539C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44539E, 0x4453A9);
MakeDword(0x4453A9);
MakeDword(0x4453AD);
MakeDword(0x4453B1);
MakeDword(0x4453B5);
MakeDword(0x4453B9);
MakeDword(0x4453BD);
MakeWord(0x4453C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4453C3, 0x4453D1);
MakeDword(0x4453D1);
MakeDword(0x4453D5);
MakeDword(0x4453D9);
MakeDword(0x4453DD);
MakeDword(0x4453E1);
MakeDword(0x4453E5);
MakeWord(0x4453E9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4453EB, 0x4453F3);
MakeDword(0x4453F3);
MakeDword(0x4453F7);
MakeDword(0x4453FB);
MakeDword(0x4453FF);
MakeDword(0x445403);
MakeDword(0x445407);
MakeWord(0x44540B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44540D, 0x445413);
MakeDword(0x445413);
MakeDword(0x445417);
MakeDword(0x44541B);
MakeDword(0x44541F);
MakeDword(0x445423);
MakeDword(0x445427);
MakeWord(0x44542B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44542D, 0x445439);
MakeDword(0x445439);
MakeDword(0x44543D);
MakeDword(0x445441);
MakeDword(0x445445);
MakeDword(0x445449);
MakeDword(0x44544D);
MakeWord(0x445451);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445453, 0x44545E);
MakeDword(0x44545E);
MakeDword(0x445462);
MakeDword(0x445466);
MakeDword(0x44546A);
MakeDword(0x44546E);
MakeDword(0x445472);
MakeWord(0x445476);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445478, 0x445483);
MakeDword(0x445483);
MakeDword(0x445487);
MakeDword(0x44548B);
MakeDword(0x44548F);
MakeDword(0x445493);
MakeDword(0x445497);
MakeWord(0x44549B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44549D, 0x4454A9);
MakeDword(0x4454A9);
MakeDword(0x4454AD);
MakeDword(0x4454B1);
MakeDword(0x4454B5);
MakeDword(0x4454B9);
MakeDword(0x4454BD);
MakeWord(0x4454C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4454C3, 0x4454CB);
MakeDword(0x4454CB);
MakeDword(0x4454CF);
MakeDword(0x4454D3);
MakeDword(0x4454D7);
MakeDword(0x4454DB);
MakeDword(0x4454DF);
MakeWord(0x4454E3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4454E5, 0x4454ED);
MakeDword(0x4454ED);
MakeDword(0x4454F1);
MakeDword(0x4454F5);
MakeDword(0x4454F9);
MakeDword(0x4454FD);
MakeDword(0x445501);
MakeWord(0x445505);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445507, 0x445514);
MakeDword(0x445514);
MakeDword(0x445518);
MakeDword(0x44551C);
MakeDword(0x445520);
MakeDword(0x445524);
MakeDword(0x445528);
MakeWord(0x44552C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44552E, 0x445542);
MakeDword(0x445542);
MakeDword(0x445546);
MakeDword(0x44554A);
MakeDword(0x44554E);
MakeDword(0x445552);
MakeDword(0x445556);
MakeWord(0x44555A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44555C, 0x44556B);
MakeDword(0x44556B);
MakeDword(0x44556F);
MakeDword(0x445573);
MakeDword(0x445577);
MakeDword(0x44557B);
MakeDword(0x44557F);
MakeWord(0x445583);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445585, 0x44558E);
MakeDword(0x44558E);
MakeDword(0x445592);
MakeDword(0x445596);
MakeDword(0x44559A);
MakeDword(0x44559E);
MakeDword(0x4455A2);
MakeWord(0x4455A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4455A8, 0x4455B3);
MakeDword(0x4455B3);
MakeDword(0x4455B7);
MakeDword(0x4455BB);
MakeDword(0x4455BF);
MakeDword(0x4455C3);
MakeDword(0x4455C7);
MakeWord(0x4455CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4455CD, 0x4455D7);
MakeDword(0x4455D7);
MakeDword(0x4455DB);
MakeDword(0x4455DF);
MakeDword(0x4455E3);
MakeDword(0x4455E7);
MakeDword(0x4455EB);
MakeWord(0x4455EF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4455F1, 0x4455FE);
MakeDword(0x4455FE);
MakeDword(0x445602);
MakeDword(0x445606);
MakeDword(0x44560A);
MakeDword(0x44560E);
MakeDword(0x445612);
MakeWord(0x445616);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445618, 0x445623);
MakeDword(0x445623);
MakeDword(0x445627);
MakeDword(0x44562B);
MakeDword(0x44562F);
MakeDword(0x445633);
MakeDword(0x445637);
MakeWord(0x44563B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44563D, 0x445648);
MakeDword(0x445648);
MakeDword(0x44564C);
MakeDword(0x445650);
MakeDword(0x445654);
MakeDword(0x445658);
MakeDword(0x44565C);
MakeWord(0x445660);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445662, 0x44566D);
MakeDword(0x44566D);
MakeDword(0x445671);
MakeDword(0x445675);
MakeDword(0x445679);
MakeDword(0x44567D);
MakeDword(0x445681);
MakeWord(0x445685);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445687, 0x445692);
MakeDword(0x445692);
MakeDword(0x445696);
MakeDword(0x44569A);
MakeDword(0x44569E);
MakeDword(0x4456A2);
MakeDword(0x4456A6);
MakeWord(0x4456AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4456AC, 0x4456B6);
MakeDword(0x4456B6);
MakeDword(0x4456BA);
MakeDword(0x4456BE);
MakeDword(0x4456C2);
MakeDword(0x4456C6);
MakeDword(0x4456CA);
MakeWord(0x4456CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4456D0, 0x4456DE);
MakeDword(0x4456DE);
MakeDword(0x4456E2);
MakeDword(0x4456E6);
MakeDword(0x4456EA);
MakeDword(0x4456EE);
MakeDword(0x4456F2);
MakeWord(0x4456F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4456F8, 0x4456FF);
MakeDword(0x4456FF);
MakeDword(0x445703);
MakeDword(0x445707);
MakeDword(0x44570B);
MakeDword(0x44570F);
MakeDword(0x445713);
MakeWord(0x445717);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445719, 0x445720);
MakeDword(0x445720);
MakeDword(0x445724);
MakeDword(0x445728);
MakeDword(0x44572C);
MakeDword(0x445730);
MakeDword(0x445734);
MakeWord(0x445738);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44573A, 0x445744);
MakeDword(0x445744);
MakeDword(0x445748);
MakeDword(0x44574C);
MakeDword(0x445750);
MakeDword(0x445754);
MakeDword(0x445758);
MakeWord(0x44575C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44575E, 0x445769);
MakeDword(0x445769);
MakeDword(0x44576D);
MakeDword(0x445771);
MakeDword(0x445775);
MakeDword(0x445779);
MakeDword(0x44577D);
MakeWord(0x445781);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445783, 0x44578B);
MakeDword(0x44578B);
MakeDword(0x44578F);
MakeDword(0x445793);
MakeDword(0x445797);
MakeDword(0x44579B);
MakeDword(0x44579F);
MakeWord(0x4457A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4457A5, 0x4457B1);
MakeDword(0x4457B1);
MakeDword(0x4457B5);
MakeDword(0x4457B9);
MakeDword(0x4457BD);
MakeDword(0x4457C1);
MakeDword(0x4457C5);
MakeWord(0x4457C9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4457CB, 0x4457D7);
MakeDword(0x4457D7);
MakeDword(0x4457DB);
MakeDword(0x4457DF);
MakeDword(0x4457E3);
MakeDword(0x4457E7);
MakeDword(0x4457EB);
MakeWord(0x4457EF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4457F1, 0x4457FB);
MakeDword(0x4457FB);
MakeDword(0x4457FF);
MakeDword(0x445803);
MakeDword(0x445807);
MakeDword(0x44580B);
MakeDword(0x44580F);
MakeWord(0x445813);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445815, 0x445822);
MakeDword(0x445822);
MakeDword(0x445826);
MakeDword(0x44582A);
MakeDword(0x44582E);
MakeDword(0x445832);
MakeDword(0x445836);
MakeWord(0x44583A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44583C, 0x44584D);
MakeDword(0x44584D);
MakeDword(0x445851);
MakeDword(0x445855);
MakeDword(0x445859);
MakeDword(0x44585D);
MakeDword(0x445861);
MakeWord(0x445865);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445867, 0x445876);
MakeDword(0x445876);
MakeDword(0x44587A);
MakeDword(0x44587E);
MakeDword(0x445882);
MakeDword(0x445886);
MakeDword(0x44588A);
MakeWord(0x44588E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445890, 0x445898);
MakeDword(0x445898);
MakeDword(0x44589C);
MakeDword(0x4458A0);
MakeDword(0x4458A4);
MakeDword(0x4458A8);
MakeDword(0x4458AC);
MakeWord(0x4458B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4458B2, 0x4458BB);
MakeDword(0x4458BB);
MakeDword(0x4458BF);
MakeDword(0x4458C3);
MakeDword(0x4458C7);
MakeDword(0x4458CB);
MakeDword(0x4458CF);
MakeWord(0x4458D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4458D5, 0x4458E0);
MakeDword(0x4458E0);
MakeDword(0x4458E4);
MakeDword(0x4458E8);
MakeDword(0x4458EC);
MakeDword(0x4458F0);
MakeDword(0x4458F4);
MakeWord(0x4458F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4458FA, 0x445901);
MakeDword(0x445901);
MakeDword(0x445905);
MakeDword(0x445909);
MakeDword(0x44590D);
MakeDword(0x445911);
MakeDword(0x445915);
MakeWord(0x445919);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44591B, 0x445927);
MakeDword(0x445927);
MakeDword(0x44592B);
MakeDword(0x44592F);
MakeDword(0x445933);
MakeDword(0x445937);
MakeDword(0x44593B);
MakeWord(0x44593F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445941, 0x44594A);
MakeUnkn(0x44594C, 1);
MakeNameEx(0x44594C, "VMT_44594C_TCustomDockForm", 0);
MakeDword(0x44594C);
MakeDword(0x445950);
MakeDword(0x445954);
MakeDword(0x445958);
MakeDword(0x44595C);
MakeDword(0x445960);
MakeDword(0x445964);
MakeDword(0x445968);
MakeUnkn(0x445A8C, 1);
MakeNameEx(0x445A8C, "TCustomDockForm_DynamicTable", 0);
MakeWord(0x445A8C);
MakeWord(0x445A8E);
MakeWord(0x445A90);
MakeWord(0x445A92);
MakeWord(0x445A94);
MakeWord(0x445A96);
MakeWord(0x445A98);
MakeWord(0x445A9A);
MakeWord(0x445A9C);
MakeWord(0x445A9E);
MakeDword(0x445AA0);
MakeDword(0x445AA4);
MakeDword(0x445AA8);
MakeDword(0x445AAC);
MakeDword(0x445AB0);
MakeDword(0x445AB4);
MakeDword(0x445AB8);
MakeDword(0x445ABC);
MakeDword(0x445AC0);
MakeDword(0x44596C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445AC4, 0x445AD4);
MakeDword(0x445970);
MakeDword(0x445974);
MakeDword(0x445978);
MakeDword(0x44597C);
MakeDword(0x445980);
MakeDword(0x445984);
MakeDword(0x445988);
MakeDword(0x44598C);
MakeDword(0x445990);
MakeDword(0x445994);
MakeComm(0x445998, "'+0'");
MakeDword(0x445998);
MakeComm(0x44599C, "'+4'");
MakeDword(0x44599C);
MakeComm(0x4459A0, "'+8'");
MakeDword(0x4459A0);
MakeComm(0x4459A4, "'+C'");
MakeDword(0x4459A4);
MakeComm(0x4459A8, "'+10'");
MakeDword(0x4459A8);
MakeComm(0x4459AC, "'+14'");
MakeDword(0x4459AC);
MakeComm(0x4459B0, "'+18'");
MakeDword(0x4459B0);
MakeComm(0x4459B4, "'+1C'");
MakeDword(0x4459B4);
MakeComm(0x4459B8, "'+20'");
MakeDword(0x4459B8);
MakeComm(0x4459BC, "'+24'");
MakeDword(0x4459BC);
MakeComm(0x4459C0, "'+28'");
MakeDword(0x4459C0);
MakeComm(0x4459C4, "'+2C'");
MakeDword(0x4459C4);
MakeComm(0x4459C8, "'+30'");
MakeDword(0x4459C8);
MakeComm(0x4459CC, "'+34'");
MakeDword(0x4459CC);
MakeComm(0x4459D0, "'+38'");
MakeDword(0x4459D0);
MakeComm(0x4459D4, "'+3C'");
MakeDword(0x4459D4);
MakeComm(0x4459D8, "'+40'");
MakeDword(0x4459D8);
MakeComm(0x4459DC, "'+44'");
MakeDword(0x4459DC);
MakeComm(0x4459E0, "'+48'");
MakeDword(0x4459E0);
MakeComm(0x4459E4, "'+4C'");
MakeDword(0x4459E4);
MakeComm(0x4459E8, "'+50'");
MakeDword(0x4459E8);
MakeComm(0x4459EC, "'+54'");
MakeDword(0x4459EC);
MakeComm(0x4459F0, "'+58'");
MakeDword(0x4459F0);
MakeComm(0x4459F4, "'+5C'");
MakeDword(0x4459F4);
MakeComm(0x4459F8, "'+60'");
MakeDword(0x4459F8);
MakeComm(0x4459FC, "'+64'");
MakeDword(0x4459FC);
MakeComm(0x445A00, "'+68'");
MakeDword(0x445A00);
MakeComm(0x445A04, "'+6C'");
MakeDword(0x445A04);
MakeComm(0x445A08, "'+70'");
MakeDword(0x445A08);
MakeComm(0x445A0C, "'+74'");
MakeDword(0x445A0C);
MakeComm(0x445A10, "'+78'");
MakeDword(0x445A10);
MakeComm(0x445A14, "'+7C'");
MakeDword(0x445A14);
MakeComm(0x445A18, "'+80'");
MakeDword(0x445A18);
MakeComm(0x445A1C, "'+84'");
MakeDword(0x445A1C);
MakeComm(0x445A20, "'+88'");
MakeDword(0x445A20);
MakeComm(0x445A24, "'+8C'");
MakeDword(0x445A24);
MakeComm(0x445A28, "'+90'");
MakeDword(0x445A28);
MakeComm(0x445A2C, "'+94'");
MakeDword(0x445A2C);
MakeComm(0x445A30, "'+98'");
MakeDword(0x445A30);
MakeComm(0x445A34, "'+9C'");
MakeDword(0x445A34);
MakeComm(0x445A38, "'+A0'");
MakeDword(0x445A38);
MakeComm(0x445A3C, "'+A4'");
MakeDword(0x445A3C);
MakeComm(0x445A40, "'+A8'");
MakeDword(0x445A40);
MakeComm(0x445A44, "'+AC'");
MakeDword(0x445A44);
MakeComm(0x445A48, "'+B0'");
MakeDword(0x445A48);
MakeComm(0x445A4C, "'+B4'");
MakeDword(0x445A4C);
MakeComm(0x445A50, "'+B8'");
MakeDword(0x445A50);
MakeComm(0x445A54, "'+BC'");
MakeDword(0x445A54);
MakeComm(0x445A58, "'+C0'");
MakeDword(0x445A58);
MakeComm(0x445A5C, "'+C4'");
MakeDword(0x445A5C);
MakeComm(0x445A60, "'+C8'");
MakeDword(0x445A60);
MakeComm(0x445A64, "'+CC'");
MakeDword(0x445A64);
MakeComm(0x445A68, "'+D0'");
MakeDword(0x445A68);
MakeComm(0x445A6C, "'+D4'");
MakeDword(0x445A6C);
MakeComm(0x445A70, "'+D8'");
MakeDword(0x445A70);
MakeComm(0x445A74, "'+DC'");
MakeDword(0x445A74);
MakeComm(0x445A78, "'+E0'");
MakeDword(0x445A78);
MakeComm(0x445A7C, "'+E4'");
MakeDword(0x445A7C);
MakeComm(0x445A80, "'+E8'");
MakeDword(0x445A80);
MakeComm(0x445A84, "'+EC'");
MakeDword(0x445A84);
MakeComm(0x445A88, "'+F0'");
MakeDword(0x445A88);
MakeUnkn(0x445AD4, 1);
MakeNameEx(0x445AD4, "RTTI_445AD4_Class_TCustomDockForm", 0);
MakeDword(0x445AD4);
MakeUnkn(0x445AD8, 1);
MakeNameEx(0x445AD8, "", 0);
MakeByte(0x445AD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445AD9, 0x445AE9);
MakeDword(0x445AE9);
MakeDword(0x445AED);
MakeWord(0x445AF1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445AF3, 0x445AF9);
MakeWord(0x445AF9);
MakeDword(0x445AFB);
MakeDword(0x445AFF);
MakeDword(0x445B03);
MakeDword(0x445B07);
MakeDword(0x445B0B);
MakeDword(0x445B0F);
MakeWord(0x445B13);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445B15, 0x445B23);
MakeUnkn(0x445B24, 1);
MakeNameEx(0x445B24, "VMT_445B24_TMonitor", 0);
MakeDword(0x445B24);
MakeDword(0x445B28);
MakeDword(0x445B2C);
MakeDword(0x445B30);
MakeDword(0x445B34);
MakeDword(0x445B38);
MakeDword(0x445B3C);
MakeDword(0x445B40);
MakeDword(0x445B44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445B70, 0x445B79);
MakeDword(0x445B48);
MakeDword(0x445B4C);
MakeDword(0x445B50);
MakeDword(0x445B54);
MakeDword(0x445B58);
MakeDword(0x445B5C);
MakeDword(0x445B60);
MakeDword(0x445B64);
MakeDword(0x445B68);
MakeDword(0x445B6C);
MakeUnkn(0x445B7C, 1);
MakeNameEx(0x445B7C, "VMT_445B7C_TScreen", 0);
MakeDword(0x445B7C);
MakeDword(0x445B80);
MakeDword(0x445B84);
MakeDword(0x445B88);
MakeUnkn(0x445BF8, 1);
MakeNameEx(0x445BF8, "TScreen_InitTable", 0);
MakeByte(0x445BF8);
MakeByte(0x445BF9);
MakeDword(0x445BFA);
MakeDword(0x445BFE);
MakeDword(0x445C02);
MakeDword(0x445C06);
MakeDword(0x445B8C);
MakeDword(0x445B90);
MakeDword(0x445B94);
MakeDword(0x445B98);
MakeDword(0x445B9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445C0A, 0x445C12);
MakeDword(0x445BA0);
MakeDword(0x445BA4);
MakeDword(0x445BA8);
MakeDword(0x445BAC);
MakeDword(0x445BB0);
MakeDword(0x445BB4);
MakeDword(0x445BB8);
MakeDword(0x445BBC);
MakeDword(0x445BC0);
MakeDword(0x445BC4);
MakeComm(0x445BC8, "'+0'");
MakeDword(0x445BC8);
MakeComm(0x445BCC, "'+4'");
MakeDword(0x445BCC);
MakeComm(0x445BD0, "'+8'");
MakeDword(0x445BD0);
MakeComm(0x445BD4, "'+C'");
MakeDword(0x445BD4);
MakeComm(0x445BD8, "'+10'");
MakeDword(0x445BD8);
MakeComm(0x445BDC, "'+14'");
MakeDword(0x445BDC);
MakeComm(0x445BE0, "'+18'");
MakeDword(0x445BE0);
MakeComm(0x445BE4, "'+1C'");
MakeDword(0x445BE4);
MakeComm(0x445BE8, "'+20'");
MakeDword(0x445BE8);
MakeComm(0x445BEC, "'+24'");
MakeDword(0x445BEC);
MakeComm(0x445BF0, "'+28'");
MakeDword(0x445BF0);
MakeComm(0x445BF4, "'+2C'");
MakeDword(0x445BF4);
MakeUnkn(0x445C14, 1);
MakeNameEx(0x445C14, "RTTI_445C14_Class_TScreen", 0);
MakeDword(0x445C14);
MakeUnkn(0x445C18, 1);
MakeNameEx(0x445C18, "", 0);
MakeByte(0x445C18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445C19, 0x445C21);
MakeDword(0x445C21);
MakeDword(0x445C25);
MakeWord(0x445C29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445C2B, 0x445C31);
MakeWord(0x445C31);
MakeUnkn(0x445C34, 1);
MakeNameEx(0x445C34, "RTTI_445C34_Record_THintInfo", 0);
MakeDword(0x445C34);
MakeUnkn(0x445C38, 1);
MakeNameEx(0x445C38, "", 0);
MakeByte(0x445C38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445C39, 0x445C43);
MakeDword(0x445C43);
MakeDword(0x445C47);
MakeDword(0x445C4B);
MakeDword(0x445C4F);
MakeUnkn(0x445C54, 1);
MakeNameEx(0x445C54, "VMT_445C54_TApplication", 0);
MakeDword(0x445C54);
MakeDword(0x445C58);
MakeDword(0x445C5C);
MakeDword(0x445C60);
MakeUnkn(0x445CD0, 1);
MakeNameEx(0x445CD0, "TApplication_InitTable", 0);
MakeByte(0x445CD0);
MakeByte(0x445CD1);
MakeDword(0x445CD2);
MakeDword(0x445CD6);
MakeDword(0x445CDA);
MakeDword(0x445CDE);
MakeDword(0x445CE2);
MakeDword(0x445CE6);
MakeDword(0x445CEA);
MakeDword(0x445CEE);
MakeDword(0x445CF2);
MakeDword(0x445CF6);
MakeDword(0x445CFA);
MakeDword(0x445CFE);
MakeDword(0x445D02);
MakeDword(0x445D06);
MakeDword(0x445C64);
MakeDword(0x445C68);
MakeDword(0x445C6C);
MakeDword(0x445C70);
MakeDword(0x445C74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445D0A, 0x445D17);
MakeDword(0x445C78);
MakeDword(0x445C7C);
MakeDword(0x445C80);
MakeDword(0x445C84);
MakeDword(0x445C88);
MakeDword(0x445C8C);
MakeDword(0x445C90);
MakeDword(0x445C94);
MakeDword(0x445C98);
MakeDword(0x445C9C);
MakeComm(0x445CA0, "'+0'");
MakeDword(0x445CA0);
MakeComm(0x445CA4, "'+4'");
MakeDword(0x445CA4);
MakeComm(0x445CA8, "'+8'");
MakeDword(0x445CA8);
MakeComm(0x445CAC, "'+C'");
MakeDword(0x445CAC);
MakeComm(0x445CB0, "'+10'");
MakeDword(0x445CB0);
MakeComm(0x445CB4, "'+14'");
MakeDword(0x445CB4);
MakeComm(0x445CB8, "'+18'");
MakeDword(0x445CB8);
MakeComm(0x445CBC, "'+1C'");
MakeDword(0x445CBC);
MakeComm(0x445CC0, "'+20'");
MakeDword(0x445CC0);
MakeComm(0x445CC4, "'+24'");
MakeDword(0x445CC4);
MakeComm(0x445CC8, "'+28'");
MakeDword(0x445CC8);
MakeComm(0x445CCC, "'+2C'");
MakeDword(0x445CCC);
MakeUnkn(0x445D18, 1);
MakeNameEx(0x445D18, "RTTI_445D18_Class_TApplication", 0);
MakeDword(0x445D18);
MakeUnkn(0x445D1C, 1);
MakeNameEx(0x445D1C, "", 0);
MakeByte(0x445D1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445D1D, 0x445D2A);
MakeDword(0x445D2A);
MakeDword(0x445D2E);
MakeWord(0x445D32);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x445D34, 0x445D3A);
MakeWord(0x445D3A);
MakeUnkn(0x445D3C, 1);
MakeNameEx(0x445D3C, "SaveFocusState", 0x20);
MakeComm(0x445D3C, "'function SaveFocusState:TFocusState;'");
MakeCode(0x445D3C);
MakeFunction(0x445D3C, 0x445D42);
MakeUnkn(0x445D44, 1);
MakeNameEx(0x445D44, "RestoreFocusState", 0x20);
MakeComm(0x445D44, "'procedure RestoreFocusState(FocusState:TFocusState);'");
MakeCode(0x445D44);
MakeFunction(0x445D44, 0x445D4A);
MakeUnkn(0x445D4C, 1);
MakeNameEx(0x445D4C, "ShowMDIClientEdge", 0x20);
MakeComm(0x445D4C, "'procedure ShowMDIClientEdge(ClientHandle:THandle; ShowEdge:Boolean);'");
MakeCode(0x445D4C);
MakeCode(0x445D6E);
MakeCode(0x445D78);
MakeCode(0x445D93);
MakeFunction(0x445D4C, 0x445D96);
MakeUnkn(0x445D98, 1);
MakeNameEx(0x445D98, "DoneApplication", 0x20);
MakeComm(0x445D98, "'procedure DoneApplication;'");
MakeCode(0x445D98);
MakeCode(0x445DAC);
MakeFunction(0x445D98, 0x445DCD);
MakeUnkn(0x445DD0, 1);
MakeNameEx(0x445DD0, "DoDisableWindow", 0x20);
MakeComm(0x445DD0, "'function DoDisableWindow(Window:HWND; Data:Longint):BOOL; stdcall;'");
MakeCode(0x445DD0);
MakeCode(0x445E15);
MakeFunction(0x445DD0, 0x445E1D);
MakeUnkn(0x445E20, 1);
MakeNameEx(0x445E20, "DisableTaskWindows", 0x20);
MakeComm(0x445E20, "'function DisableTaskWindows(ActiveWindow:HWND):Pointer;'");
MakeCode(0x445E20);
MakeCode(0x445E82);
MakeCode(0x445E8C);
MakeCode(0x445EA5);
MakeCode(0x445EB2);
MakeCode(0x445EC3);
MakeCode(0x445EC8);
MakeFunction(0x445E20, 0x445ED4);
MakeUnkn(0x445ED4, 1);
MakeNameEx(0x445ED4, "EnableTaskWindows", 0x20);
MakeComm(0x445ED4, "'procedure EnableTaskWindows(WindowList:Pointer);'");
MakeCode(0x445ED4);
MakeCode(0x445EDC);
MakeCode(0x445EF6);
MakeCode(0x445F08);
MakeFunction(0x445ED4, 0x445F0B);
MakeUnkn(0x445F0C, 1);
MakeNameEx(0x445F0C, "DoFindWindow", 0x20);
MakeComm(0x445F0C, "'function DoFindWindow(Window:HWND; Param:Longint):BOOL; stdcall;'");
MakeCode(0x445F0C);
MakeCode(0x445F56);
MakeCode(0x445F65);
MakeFunction(0x445F0C, 0x445F6D);
MakeUnkn(0x445F70, 1);
MakeNameEx(0x445F70, "FindTopMostWindow", 0x20);
MakeComm(0x445F70, "'function FindTopMostWindow(ActiveWindow:HWND):HWND;'");
MakeCode(0x445F70);
MakeCode(0x445FA4);
MakeFunction(0x445F70, 0x445FAA);
MakeUnkn(0x445FAC, 1);
MakeNameEx(0x445FAC, "SendFocusMessage", 0x20);
MakeComm(0x445FAC, "'function SendFocusMessage(Window:HWND; Msg:Word):Boolean;'");
MakeCode(0x445FAC);
MakeFunction(0x445FAC, 0x445FCC);
MakeUnkn(0x445FCC, 1);
MakeNameEx(0x445FCC, "CheckTaskWindow", 0x20);
MakeComm(0x445FCC, "'function CheckTaskWindow(Window:HWND; Data:Longint):BOOL; stdcall;'");
MakeCode(0x445FCC);
MakeCode(0x445FE5);
MakeFunction(0x445FCC, 0x445FEC);
MakeUnkn(0x445FEC, 1);
MakeNameEx(0x445FEC, "ForegroundTask", 0x20);
MakeComm(0x445FEC, "'function ForegroundTask:Boolean;'");
MakeCode(0x445FEC);
MakeFunction(0x445FEC, 0x446016);
MakeUnkn(0x446018, 1);
MakeNameEx(0x446018, "FindGlobalComponent_0", 0x20);
MakeComm(0x446018, "'function FindGlobalComponent(const Name:AnsiString):TComponent;'");
MakeCode(0x446018);
MakeCode(0x446032);
MakeCode(0x446054);
MakeCode(0x446058);
MakeCode(0x44606C);
MakeCode(0x44608C);
MakeCode(0x44608E);
MakeFunction(0x446018, 0x446095);
MakeUnkn(0x446098, 1);
MakeNameEx(0x446098, "KeysToShiftState", 0x20);
MakeComm(0x446098, "'function KeysToShiftState(Keys:Word):TShiftState;'");
MakeCode(0x446098);
MakeCode(0x4460AC);
MakeCode(0x4460B6);
MakeCode(0x4460C0);
MakeCode(0x4460CA);
MakeCode(0x4460D4);
MakeCode(0x4460E3);
MakeFunction(0x446098, 0x4460E8);
MakeUnkn(0x4460EC, 1);
MakeNameEx(0x4460EC, "KeyDataToShiftState", 0x20);
MakeComm(0x4460EC, "'function KeyDataToShiftState(KeyData:Longint):TShiftState;'");
MakeCode(0x4460EC);
MakeCode(0x446105);
MakeCode(0x446114);
MakeCode(0x44611F);
MakeFunction(0x4460EC, 0x446124);
MakeUnkn(0x446128, 1);
MakeNameEx(0x446128, "KeyboardStateToShiftState", 0x20);
MakeComm(0x446128, "'function KeyboardStateToShiftState(const KeyboardState:TKeyboardState):TShiftState;'");
MakeCode(0x446128);
MakeCode(0x44613B);
MakeCode(0x446144);
MakeCode(0x44614D);
MakeCode(0x446156);
MakeCode(0x44615F);
MakeCode(0x446168);
MakeFunction(0x446128, 0x44616D);
MakeUnkn(0x446174, 1);
MakeNameEx(0x446174, "IsAccel", 0x20);
MakeComm(0x446174, "'function IsAccel(VK:Word; const Str:AnsiString):Boolean;'");
MakeCode(0x446174);
MakeCode(0x4461B7);
MakeCode(0x4461C4);
MakeCode(0x4461D2);
MakeCode(0x4461D7);
MakeFunction(0x446174, 0x4461E1);
MakeUnkn(0x4461E4, 1);
MakeNameEx(0x4461E4, "GetParentForm", 0x20);
MakeComm(0x4461E4, "'function GetParentForm(Control:TControl):TCustomForm;'");
MakeCode(0x4461E4);
MakeCode(0x4461E9);
MakeCode(0x4461EB);
MakeCode(0x446207);
MakeFunction(0x4461E4, 0x44620B);
MakeUnkn(0x44620C, 1);
MakeNameEx(0x44620C, "ValidParentForm", 0x20);
MakeComm(0x44620C, "'function ValidParentForm(Control:TControl):TCustomForm;'");
MakeCode(0x44620C);
MakeCode(0x446267);
MakeCode(0x446274);
MakeCode(0x44627D);
MakeCode(0x446282);
MakeFunction(0x44620C, 0x44628C);
MakeUnkn(0x44628C, 1);
MakeNameEx(0x44628C, "TControlScrollBar.Create", 0x20);
MakeComm(0x44628C, "'constructor TControlScrollBar.Create(AControl:TScrollingWinControl; AKind:TScrollBarKind);'");
MakeCode(0x44628C);
MakeCode(0x44629E);
MakeCode(0x44630B);
MakeFunction(0x44628C, 0x446314);
MakeUnkn(0x446314, 1);
MakeNameEx(0x446314, "TControlScrollBar.IsStoredIncrement", 0x20);
MakeComm(0x446314, "'procedure TControlScrollBar.IsStoredIncrement(Value:TScrollBarInc);'");
MakeCode(0x446314);
MakeComm(0x446314, "'TControlScrollBar.Smooth:Boolean'");
MakeFunction(0x446314, 0x44631A);
MakeUnkn(0x44631C, 1);
MakeNameEx(0x44631C, "TControlScrollBar.Assign", 0x20);
MakeComm(0x44631C, "'procedure TControlScrollBar.Assign(Source:TPersistent);'");
MakeCode(0x44631C);
MakeCode(0x44635E);
MakeCode(0x446367);
MakeFunction(0x44631C, 0x44636B);
MakeUnkn(0x44636C, 1);
MakeNameEx(0x44636C, "TControlScrollBar.ChangeBiDiPosition", 0x20);
MakeComm(0x44636C, "'procedure TControlScrollBar.ChangeBiDiPosition;'");
MakeCode(0x44636C);
MakeCode(0x446397);
MakeCode(0x4463A1);
MakeFunction(0x44636C, 0x4463A3);
MakeUnkn(0x4463A4, 1);
MakeNameEx(0x4463A4, "ProcessHorz", 0x20);
MakeComm(0x4463A4, "'procedure ProcessHorz(Control:TControl);'");
MakeCode(0x4463A4);
MakeCode(0x4463C1);
MakeCode(0x4463D9);
MakeCode(0x4463FB);
MakeCode(0x446404);
MakeFunction(0x4463A4, 0x446407);
MakeUnkn(0x446410, 1);
MakeNameEx(0x446410, "ProcessVert", 0x20);
MakeComm(0x446410, "'procedure ProcessVert(Control:TControl);'");
MakeCode(0x446410);
MakeCode(0x446427);
MakeCode(0x44643F);
MakeCode(0x446461);
MakeCode(0x44646A);
MakeFunction(0x446410, 0x44646D);
MakeUnkn(0x446478, 1);
MakeNameEx(0x446478, "TControlScrollBar.CalcAutoRange", 0x20);
MakeComm(0x446478, "'procedure TControlScrollBar.CalcAutoRange;'");
MakeCode(0x446478);
MakeCode(0x4464C3);
MakeCode(0x4464E2);
MakeCode(0x4464F6);
MakeCode(0x4464FA);
MakeCode(0x446513);
MakeCode(0x44651D);
MakeFunction(0x446478, 0x446523);
MakeUnkn(0x446524, 1);
MakeNameEx(0x446524, "TControlScrollBar.IsScrollBarVisible", 0x20);
MakeComm(0x446524, "'function TControlScrollBar.IsScrollBarVisible:Boolean;'");
MakeCode(0x446524);
MakeCode(0x446538);
MakeCode(0x446552);
MakeCode(0x446557);
MakeFunction(0x446524, 0x44655C);
MakeUnkn(0x44655C, 1);
MakeNameEx(0x44655C, "ScrollBarVisible", 0x20);
MakeComm(0x44655C, "'function ScrollBarVisible(Code:Word):Boolean;'");
MakeCode(0x44655C);
MakeCode(0x446570);
MakeFunction(0x44655C, 0x44658E);
MakeUnkn(0x446590, 1);
MakeNameEx(0x446590, "Adjustment", 0x20);
MakeComm(0x446590, "'function Adjustment(Code:Word; Metric:Word):Integer;'");
MakeCode(0x446590);
MakeCode(0x4465D7);
MakeCode(0x446605);
MakeFunction(0x446590, 0x44660C);
MakeUnkn(0x44660C, 1);
MakeNameEx(0x44660C, "TControlScrollBar.ControlSize", 0x20);
MakeComm(0x44660C, "'function TControlScrollBar.ControlSize(ControlSB:Boolean; AssumeSB:Boolean):Integer;'");
MakeCode(0x44660C);
MakeCode(0x446666);
MakeCode(0x446686);
MakeFunction(0x44660C, 0x44668B);
MakeUnkn(0x44668C, 1);
MakeNameEx(0x44668C, "TControlScrollBar.NeedsScrollBarVisible", 0x20);
MakeComm(0x44668C, "'function TControlScrollBar.NeedsScrollBarVisible:Boolean;'");
MakeCode(0x44668C);
MakeFunction(0x44668C, 0x4466A2);
MakeUnkn(0x4466A4, 1);
MakeNameEx(0x4466A4, "GetRealScrollPosition", 0x20);
MakeComm(0x4466A4, "'function GetRealScrollPosition:Integer;'");
MakeCode(0x4466A4);
MakeCode(0x4466CD);
MakeCode(0x4466FB);
MakeFunction(0x4466A4, 0x446703);
MakeUnkn(0x446704, 1);
MakeNameEx(0x446704, "TControlScrollBar.ScrollMessage", 0x20);
MakeComm(0x446704, "'procedure TControlScrollBar.ScrollMessage(var Msg:TWMScroll);'");
MakeCode(0x446704);
MakeCode(0x446746);
MakeCode(0x446767);
MakeCode(0x44678D);
MakeCode(0x446799);
MakeCode(0x4467A3);
MakeCode(0x4467C0);
MakeCode(0x4467DD);
MakeCode(0x4467F0);
MakeCode(0x446803);
MakeCode(0x446816);
MakeCode(0x446827);
MakeCode(0x44683E);
MakeCode(0x446866);
MakeCode(0x44687C);
MakeCode(0x446892);
MakeCode(0x4468A8);
MakeCode(0x4468BE);
MakeCode(0x4468F5);
MakeCode(0x446911);
MakeCode(0x44692D);
MakeCode(0x44694E);
MakeCode(0x44696F);
MakeCode(0x44698E);
MakeCode(0x44699F);
MakeCode(0x4469C7);
MakeCode(0x4469D8);
MakeCode(0x4469E4);
MakeCode(0x4469F2);
MakeFunction(0x446704, 0x4469F9);
MakeUnkn(0x4469FC, 1);
MakeNameEx(0x4469FC, "TControlScrollBar.SetButtonSize", 0x20);
MakeComm(0x4469FC, "'procedure TControlScrollBar.SetButtonSize(Value:Integer);'");
MakeCode(0x4469FC);
MakeCode(0x446A23);
MakeCode(0x446A3B);
MakeFunction(0x4469FC, 0x446A3E);
MakeUnkn(0x446A40, 1);
MakeNameEx(0x446A40, "TControlScrollBar.SetColor", 0x20);
MakeComm(0x446A40, "'procedure TControlScrollBar.SetColor(Value:TColor);'");
MakeCode(0x446A40);
MakeFunction(0x446A40, 0x446A59);
MakeUnkn(0x446A5C, 1);
MakeNameEx(0x446A5C, "TControlScrollBar.SetParentColor", 0x20);
MakeComm(0x446A5C, "'procedure TControlScrollBar.SetParentColor(Value:Boolean);'");
MakeCode(0x446A5C);
MakeFunction(0x446A5C, 0x446A73);
MakeUnkn(0x446A74, 1);
MakeNameEx(0x446A74, "TControlScrollBar.SetPosition", 0x20);
MakeComm(0x446A74, "'procedure TControlScrollBar.SetPosition(Value:Integer);'");
MakeCode(0x446A74);
MakeCode(0x446A8A);
MakeCode(0x446A95);
MakeCode(0x446A9B);
MakeCode(0x446AA5);
MakeCode(0x446AA9);
MakeCode(0x446AC9);
MakeCode(0x446AD7);
MakeCode(0x446AFD);
MakeCode(0x446B31);
MakeFunction(0x446A74, 0x446B35);
MakeUnkn(0x446B38, 1);
MakeNameEx(0x446B38, "TControlScrollBar.SetSize", 0x20);
MakeComm(0x446B38, "'procedure TControlScrollBar.SetSize(Value:Integer);'");
MakeCode(0x446B38);
MakeCode(0x446B5F);
MakeCode(0x446B77);
MakeFunction(0x446B38, 0x446B7A);
MakeUnkn(0x446B7C, 1);
MakeNameEx(0x446B7C, "TControlScrollBar.SetStyle", 0x20);
MakeComm(0x446B7C, "'procedure TControlScrollBar.SetStyle(Value:TScrollBarStyle);'");
MakeCode(0x446B7C);
MakeFunction(0x446B7C, 0x446B91);
MakeUnkn(0x446B94, 1);
MakeNameEx(0x446B94, "TControlScrollBar.SetThumbSize", 0x20);
MakeComm(0x446B94, "'procedure TControlScrollBar.SetThumbSize(Value:Integer);'");
MakeCode(0x446B94);
MakeFunction(0x446B94, 0x446BA9);
MakeUnkn(0x446BAC, 1);
MakeNameEx(0x446BAC, "TControlScrollBar.DoSetRange", 0x20);
MakeComm(0x446BAC, "'procedure TControlScrollBar.DoSetRange(Value:Integer);'");
MakeCode(0x446BAC);
MakeCode(0x446BBA);
MakeFunction(0x446BAC, 0x446BC3);
MakeUnkn(0x446BC4, 1);
MakeNameEx(0x446BC4, "TControlScrollBar.SetRange", 0x20);
MakeComm(0x446BC4, "'procedure TControlScrollBar.SetRange(Value:Integer);'");
MakeCode(0x446BC4);
MakeFunction(0x446BC4, 0x446BD8);
MakeUnkn(0x446BD8, 1);
MakeNameEx(0x446BD8, "TControlScrollBar.IsRangeStored", 0x20);
MakeComm(0x446BD8, "'function TControlScrollBar.IsRangeStored(Value:Integer):Boolean;'");
MakeCode(0x446BD8);
MakeFunction(0x446BD8, 0x446BE4);
MakeUnkn(0x446BE4, 1);
MakeNameEx(0x446BE4, "TControlScrollBar.SetVisible", 0x20);
MakeComm(0x446BE4, "'procedure TControlScrollBar.SetVisible(Value:Boolean);'");
MakeCode(0x446BE4);
MakeFunction(0x446BE4, 0x446BF0);
MakeUnkn(0x446BF0, 1);
MakeNameEx(0x446BF0, "UpdateScrollProperties", 0x20);
MakeComm(0x446BF0, "'procedure UpdateScrollProperties(Redraw:Boolean);'");
MakeCode(0x446BF0);
MakeCode(0x446C64);
MakeCode(0x446C95);
MakeCode(0x446CC6);
MakeFunction(0x446BF0, 0x446CF8);
MakeUnkn(0x446CF8, 1);
MakeNameEx(0x446CF8, "TControlScrollBar.Update", 0x20);
MakeComm(0x446CF8, "'procedure TControlScrollBar.Update(ControlSB:Boolean; AssumeSB:Boolean);'");
MakeCode(0x446CF8);
MakeCode(0x446D22);
MakeCode(0x446D4E);
MakeCode(0x446D73);
MakeCode(0x446D78);
MakeCode(0x446E08);
MakeFunction(0x446CF8, 0x446E0F);
MakeUnkn(0x446E10, 1);
MakeNameEx(0x446E10, "TScrollingWinControl.Create", 0x20);
MakeComm(0x446E10, "'constructor TScrollingWinControl.Create(AOwner:TComponent);'");
MakeCode(0x446E10);
MakeCode(0x446E1E);
MakeCode(0x446E7F);
MakeFunction(0x446E10, 0x446E84);
MakeUnkn(0x446E88, 1);
MakeNameEx(0x446E88, "TScrollingWinControl.Destroy", 0x20);
MakeComm(0x446E88, "'destructor TScrollingWinControl.Destroy;'");
MakeCode(0x446E88);
MakeCode(0x446EC0);
MakeFunction(0x446E88, 0x446EC3);
MakeUnkn(0x446EC4, 1);
MakeNameEx(0x446EC4, "TScrollingWinControl.CreateParams", 0x20);
MakeComm(0x446EC4, "'procedure TScrollingWinControl.CreateParams(var Params:TCreateParams);'");
MakeCode(0x446EC4);
MakeFunction(0x446EC4, 0x446ED4);
MakeUnkn(0x446ED4, 1);
MakeNameEx(0x446ED4, "TScrollingWinControl.CreateWnd", 0x20);
MakeComm(0x446ED4, "'procedure TScrollingWinControl.CreateWnd;'");
MakeCode(0x446ED4);
MakeCode(0x446F09);
MakeFunction(0x446ED4, 0x446F12);
MakeUnkn(0x446F14, 1);
MakeNameEx(0x446F14, "TScrollingWinControl.AlignControls", 0x20);
MakeComm(0x446F14, "'procedure TScrollingWinControl.AlignControls(AControl:TControl; var ARect:TRect);'");
MakeCode(0x446F14);
MakeFunction(0x446F14, 0x446F33);
MakeUnkn(0x446F34, 1);
MakeNameEx(0x446F34, "TScrollingWinControl.AutoScrollEnabled", 0x20);
MakeComm(0x446F34, "'function TScrollingWinControl.AutoScrollEnabled:Boolean;'");
MakeCode(0x446F34);
MakeCode(0x446F4C);
MakeCode(0x446F4F);
MakeFunction(0x446F34, 0x446F52);
MakeUnkn(0x446F54, 1);
MakeNameEx(0x446F54, "TScrollingWinControl.DoFlipChildren", 0x20);
MakeComm(0x446F54, "'procedure TScrollingWinControl.DoFlipChildren;'");
MakeCode(0x446F54);
MakeCode(0x446FA4);
MakeCode(0x446FA8);
MakeCode(0x446FAA);
MakeCode(0x446FC2);
MakeCode(0x446FD4);
MakeCode(0x447008);
MakeCode(0x447016);
MakeCode(0x447032);
MakeCode(0x447046);
MakeCode(0x447053);
MakeCode(0x44705C);
MakeCode(0x447061);
MakeFunction(0x446F54, 0x44706A);
MakeUnkn(0x44706C, 1);
MakeNameEx(0x44706C, "TScrollingWinControl.CalcAutoRange", 0x20);
MakeComm(0x44706C, "'procedure TScrollingWinControl.CalcAutoRange;'");
MakeCode(0x44706C);
MakeCode(0x44708E);
MakeFunction(0x44706C, 0x447090);
MakeUnkn(0x447090, 1);
MakeNameEx(0x447090, "TScrollingWinControl.SetAutoScroll", 0x20);
MakeComm(0x447090, "'procedure TScrollingWinControl.SetAutoScroll(Value:Boolean);'");
MakeCode(0x447090);
MakeCode(0x4470AE);
MakeCode(0x4470C8);
MakeFunction(0x447090, 0x4470CA);
MakeUnkn(0x4470CC, 1);
MakeNameEx(0x4470CC, "TScrollingWinControl.SetHorzScrollBar", 0x20);
MakeComm(0x4470CC, "'procedure TScrollingWinControl.SetHorzScrollBar(Value:TControlScrollBar);'");
MakeCode(0x4470CC);
MakeFunction(0x4470CC, 0x4470DC);
MakeUnkn(0x4470DC, 1);
MakeNameEx(0x4470DC, "TScrollingWinControl.SetVertScrollBar", 0x20);
MakeComm(0x4470DC, "'procedure TScrollingWinControl.SetVertScrollBar(Value:TControlScrollBar);'");
MakeCode(0x4470DC);
MakeFunction(0x4470DC, 0x4470EC);
MakeUnkn(0x4470EC, 1);
MakeNameEx(0x4470EC, "TScrollingWinControl.UpdateScrollBars", 0x20);
MakeComm(0x4470EC, "'procedure TScrollingWinControl.UpdateScrollBars;'");
MakeCode(0x4470EC);
MakeCode(0x447163);
MakeCode(0x44719B);
MakeCode(0x4471BF);
MakeCode(0x4471CC);
MakeCode(0x4471D7);
MakeCode(0x4471DC);
MakeCode(0x4471DE);
MakeFunction(0x4470EC, 0x4471E1);
MakeUnkn(0x4471E4, 1);
MakeNameEx(0x4471E4, "TScrollingWinControl.AutoScrollInView", 0x20);
MakeComm(0x4471E4, "'procedure TScrollingWinControl.AutoScrollInView(AControl:TControl);'");
MakeCode(0x4471E4);
MakeFunction(0x4471E4, 0x4471FA);
MakeUnkn(0x4471FC, 1);
MakeNameEx(0x4471FC, "TScrollingWinControl.ScrollInView", 0x20);
MakeComm(0x4471FC, "'procedure TScrollingWinControl.ScrollInView(AControl:TControl);'");
MakeCode(0x4471FC);
MakeCode(0x4472A5);
MakeCode(0x4472CC);
MakeCode(0x4472E8);
MakeCode(0x447301);
MakeCode(0x447329);
MakeCode(0x447345);
MakeFunction(0x4471FC, 0x44734D);
MakeUnkn(0x447350, 1);
MakeNameEx(0x447350, "TScrollingWinControl.ScaleScrollBars", 0x20);
MakeComm(0x447350, "'procedure TScrollingWinControl.ScaleScrollBars(M:Integer; D:Integer);'");
MakeCode(0x447350);
MakeCode(0x447378);
MakeCode(0x4473BB);
MakeCode(0x4473DB);
MakeFunction(0x447350, 0x4473F4);
MakeUnkn(0x4473F4, 1);
MakeNameEx(0x4473F4, "TScrollingWinControl.ChangeScale", 0x20);
MakeComm(0x4473F4, "'procedure TScrollingWinControl.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x4473F4);
MakeFunction(0x4473F4, 0x447417);
MakeCode(0x447418);
MakeFunction(0x447418, 0x447419);
MakeUnkn(0x44741C, 1);
MakeNameEx(0x44741C, "TScrollingWinControl.WMSize", 0x20);
MakeComm(0x44741C, "'procedure TScrollingWinControl.WMSize(var Message:TWMSize);'");
MakeCode(0x44741C);
MakeCode(0x447458);
MakeCode(0x44745C);
MakeCode(0x447460);
MakeCode(0x447462);
MakeCode(0x44746F);
MakeCode(0x44747C);
MakeCode(0x447486);
MakeCode(0x44748B);
MakeCode(0x4474AD);
MakeCode(0x4474BA);
MakeCode(0x4474C5);
MakeCode(0x4474CA);
MakeCode(0x4474EA);
MakeCode(0x4474F2);
MakeFunction(0x44741C, 0x4474F6);
MakeUnkn(0x4474F8, 1);
MakeNameEx(0x4474F8, "TScrollingWinControl.WMHScroll", 0x20);
MakeComm(0x4474F8, "'procedure TScrollingWinControl.WMHScroll(Message:TWMCommand);'");
MakeCode(0x4474F8);
MakeComm(0x4474FE, "'TScrollingWinControl.HorzScrollBar:TControlScrollBar'");
MakeComm(0x447504, "'TControlScrollBar.Visible:Boolean'");
MakeComm(0x44750A, "'TScrollingWinControl.HorzScrollBar:TControlScrollBar'");
MakeCode(0x447516);
MakeFunction(0x4474F8, 0x44751C);
MakeUnkn(0x44751C, 1);
MakeNameEx(0x44751C, "TScrollingWinControl.WMVScroll", 0x20);
MakeComm(0x44751C, "'procedure TScrollingWinControl.WMVScroll(Message:TWMHScroll);'");
MakeCode(0x44751C);
MakeComm(0x447522, "'TScrollingWinControl.VertScrollBar:TControlScrollBar'");
MakeComm(0x447528, "'TControlScrollBar.Visible:Boolean'");
MakeComm(0x44752E, "'TScrollingWinControl.VertScrollBar:TControlScrollBar'");
MakeCode(0x44753A);
MakeFunction(0x44751C, 0x447540);
MakeCode(0x447540);
MakeComm(0x447551, "'TScrollingWinControl.VertScrollBar:TControlScrollBar'");
MakeComm(0x447557, "'TControlScrollBar.Range:Integer'");
MakeComm(0x44756E, "'TScrollingWinControl.HorzScrollBar:TControlScrollBar'");
MakeComm(0x447574, "'TControlScrollBar.Range:Integer'");
MakeComm(0x44757E, "'TScrollingWinControl.VertScrollBar:TControlScrollBar'");
MakeComm(0x447584, "'TControlScrollBar.Position:Integer'");
MakeComm(0x447589, "'TControlScrollBar.Position:Integer'");
MakeFunction(0x447540, 0x4475AF);
MakeUnkn(0x4475B0, 1);
MakeNameEx(0x4475B0, "TScrollingWinControl.CMBiDiModeChanged", 0x20);
MakeComm(0x4475B0, "'procedure TScrollingWinControl.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x4475B0);
MakeCode(0x4475EF);
MakeCode(0x4475FA);
MakeCode(0x447607);
MakeCode(0x447611);
MakeCode(0x447616);
MakeCode(0x44763A);
MakeFunction(0x4475B0, 0x44763E);
MakeUnkn(0x447640, 1);
MakeNameEx(0x447640, "TCustomForm.Create", 0x20);
MakeComm(0x447640, "'constructor TCustomForm.Create(AOwner:TComponent);'");
MakeCode(0x447640);
MakeCode(0x44765E);
MakeComm(0x447699, "'TCustomForm.CreateNew'");
MakeComm(0x4476B6, "'TCustomForm.FComponentState:TComponentState'");
MakeComm(0x4476C3, "'TCustomForm.FFormState:TFormState'");
MakeComm(0x44772A, "'EResNotFound.Create'");
MakeCode(0x447734);
MakeCode(0x447741);
MakeComm(0x447744, "'TCustomForm.FFormState:TFormState'");
MakeCode(0x44774C);
MakeCode(0x447751);
MakeComm(0x447756, "'TCustomForm.FOldCreateOrder:Boolean'");
MakeComm(0x447764, "'TCustomForm.DoCreate'");
MakeCode(0x44776A);
MakeCode(0x447777);
MakeCode(0x447784);
MakeCode(0x447789);
MakeCode(0x44778B);
MakeCode(0x447798);
MakeCode(0x4477A4);
MakeCode(0x4477A9);
MakeCode(0x4477C3);
MakeFunction(0x447640, 0x4477CB);
MakeUnkn(0x4477CC, 1);
MakeNameEx(0x4477CC, "TCustomForm.AfterConstruction", 0x20);
MakeComm(0x4477CC, "'procedure TCustomForm.AfterConstruction;'");
MakeCode(0x4477CC);
MakeCode(0x4477E3);
MakeCode(0x4477FE);
MakeFunction(0x4477CC, 0x447801);
MakeUnkn(0x447804, 1);
MakeNameEx(0x447804, "TCustomForm.CreateNew", 0x20);
MakeComm(0x447804, "'constructor TCustomForm.CreateNew(AOwner:TComponent; Dummy:Integer);'");
MakeCode(0x447804);
MakeCode(0x447816);
MakeCode(0x44796C);
MakeFunction(0x447804, 0x447975);
MakeUnkn(0x447980, 1);
MakeNameEx(0x447980, "TCustomForm.BeforeDestruction", 0x20);
MakeComm(0x447980, "'procedure TCustomForm.BeforeDestruction;'");
MakeCode(0x447980);
MakeCode(0x4479C2);
MakeCode(0x4479D2);
MakeCode(0x4479E5);
MakeFunction(0x447980, 0x4479E7);
MakeUnkn(0x4479E8, 1);
MakeNameEx(0x4479E8, "TCustomForm.Destroy", 0x20);
MakeComm(0x4479E8, "'destructor TCustomForm.Destroy;'");
MakeCode(0x4479E8);
MakeCode(0x447A0E);
MakeCode(0x447A33);
MakeCode(0x447A54);
MakeCode(0x447A98);
MakeCode(0x447AA5);
MakeCode(0x447AB2);
MakeCode(0x447AB7);
MakeCode(0x447AC7);
MakeFunction(0x4479E8, 0x447ACB);
MakeUnkn(0x447ACC, 1);
MakeNameEx(0x447ACC, "TCustomForm.DoCreate", 0x20);
MakeComm(0x447ACC, "'procedure TCustomForm.DoCreate;'");
MakeCode(0x447ACC);
MakeCode(0x447B03);
MakeCode(0x447B0D);
MakeCode(0x447B27);
MakeCode(0x447B2C);
MakeCode(0x447B42);
MakeFunction(0x447ACC, 0x447B48);
MakeUnkn(0x447B48, 1);
MakeNameEx(0x447B48, "TCustomForm.DoDestroy", 0x20);
MakeComm(0x447B48, "'procedure TCustomForm.DoDestroy;'");
MakeCode(0x447B48);
MakeCode(0x447B7F);
MakeCode(0x447B89);
MakeCode(0x447BA0);
MakeFunction(0x447B48, 0x447BA6);
MakeUnkn(0x447BA8, 1);
MakeNameEx(0x447BA8, "TCustomForm.Loaded", 0x20);
MakeComm(0x447BA8, "'procedure TCustomForm.Loaded;'");
MakeCode(0x447BA8);
MakeCode(0x447BE0);
MakeFunction(0x447BA8, 0x447BE4);
MakeUnkn(0x447BE4, 1);
MakeNameEx(0x447BE4, "TCustomForm.Notification", 0x20);
MakeComm(0x447BE4, "'procedure TCustomForm.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x447BE4);
MakeCode(0x447C06);
MakeCode(0x447C32);
MakeCode(0x447C44);
MakeCode(0x447C78);
MakeCode(0x447C9E);
MakeCode(0x447CAF);
MakeCode(0x447CC0);
MakeCode(0x447CD1);
MakeCode(0x447CE9);
MakeFunction(0x447BE4, 0x447CEE);
MakeUnkn(0x447CF0, 1);
MakeNameEx(0x447CF0, "TCustomForm.ReadState", 0x20);
MakeComm(0x447CF0, "'procedure TCustomForm.ReadState(Reader:TReader);'");
MakeCode(0x447CF0);
MakeCode(0x447DBD);
MakeCode(0x447E39);
MakeCode(0x447E68);
MakeCode(0x447EBA);
MakeCode(0x447ED1);
MakeCode(0x447EE8);
MakeCode(0x447F1F);
MakeCode(0x447F30);
MakeCode(0x447F3D);
MakeCode(0x447F46);
MakeCode(0x447F4B);
MakeFunction(0x447CF0, 0x447F52);
MakeUnkn(0x447F58, 1);
MakeNameEx(0x447F58, "TCustomForm.DefineProperties", 0x20);
MakeComm(0x447F58, "'procedure TCustomForm.DefineProperties(Filer:TFiler);'");
MakeCode(0x447F58);
MakeFunction(0x447F58, 0x447FBE);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x447FC8, -1);
MakeDword(0x447FC4);
MakeDword(0x447FC0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x447FE0, -1);
MakeDword(0x447FDC);
MakeDword(0x447FD8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x447FF4, -1);
MakeDword(0x447FF0);
MakeDword(0x447FEC);
MakeUnkn(0x448008, 1);
MakeNameEx(0x448008, "TCustomForm.ReadIgnoreFontProperty", 0x20);
MakeComm(0x448008, "'procedure TCustomForm.ReadIgnoreFontProperty(Reader:TReader);'");
MakeCode(0x448008);
MakeCode(0x448022);
MakeFunction(0x448008, 0x448025);
MakeUnkn(0x448028, 1);
MakeNameEx(0x448028, "TCustomForm.ReadTextHeight", 0x20);
MakeComm(0x448028, "'procedure TCustomForm.ReadTextHeight(Reader:TReader);'");
MakeCode(0x448028);
MakeFunction(0x448028, 0x44803E);
MakeUnkn(0x448040, 1);
MakeNameEx(0x448040, "TCustomForm.WriteTextHeight", 0x20);
MakeComm(0x448040, "'procedure TCustomForm.WriteTextHeight(Writer:TWriter);'");
MakeCode(0x448040);
MakeFunction(0x448040, 0x448059);
MakeUnkn(0x44805C, 1);
MakeNameEx(0x44805C, "TCustomForm.WritePixelsPerInch", 0x20);
MakeComm(0x44805C, "'procedure TCustomForm.WritePixelsPerInch(Writer:TWriter);'");
MakeCode(0x44805C);
MakeFunction(0x44805C, 0x448075);
MakeUnkn(0x448078, 1);
MakeNameEx(0x448078, "TCustomForm.GetTextHeight", 0x20);
MakeComm(0x448078, "'function TCustomForm.GetTextHeight:Integer;'");
MakeCode(0x448078);
MakeFunction(0x448078, 0x44808E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x448098, -1);
MakeDword(0x448094);
MakeDword(0x448090);
MakeUnkn(0x44809C, 1);
MakeNameEx(0x44809C, "TCustomForm.BeginAutoDrag", 0x20);
MakeComm(0x44809C, "'procedure TCustomForm.BeginAutoDrag;'");
MakeCode(0x44809C);
MakeFunction(0x44809C, 0x44809D);
MakeUnkn(0x4480A0, 1);
MakeNameEx(0x4480A0, "TCustomForm.ChangeScale", 0x20);
MakeComm(0x4480A0, "'procedure TCustomForm.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x4480A0);
MakeCode(0x4480FD);
MakeFunction(0x4480A0, 0x44811D);
MakeUnkn(0x448120, 1);
MakeNameEx(0x448120, "TCustomForm.IconChanged", 0x20);
MakeComm(0x448120, "'procedure TCustomForm.IconChanged(Sender:TObject);'");
MakeCode(0x448120);
MakeCode(0x44815F);
MakeCode(0x448177);
MakeFunction(0x448120, 0x448179);
MakeUnkn(0x44817C, 1);
MakeNameEx(0x44817C, "TCustomForm.IsClientSizeStored", 0x20);
MakeComm(0x44817C, "'function TCustomForm.IsClientSizeStored(Value:Integer):Boolean;'");
MakeCode(0x44817C);
MakeFunction(0x44817C, 0x44818A);
MakeUnkn(0x44818C, 1);
MakeNameEx(0x44818C, "TCustomForm.IsFormSizeStored", 0x20);
MakeComm(0x44818C, "'function TCustomForm.IsFormSizeStored(Value:Integer):Boolean;'");
MakeCode(0x44818C);
MakeCode(0x4481B0);
MakeFunction(0x44818C, 0x4481B3);
MakeUnkn(0x4481B4, 1);
MakeNameEx(0x4481B4, "TCustomForm.IsAutoScrollStored", 0x20);
MakeComm(0x4481B4, "'function TCustomForm.IsAutoScrollStored(Value:Boolean):Boolean;'");
MakeCode(0x4481B4);
MakeCode(0x4481D4);
MakeCode(0x4481D6);
MakeCode(0x4481DE);
MakeCode(0x4481E2);
MakeFunction(0x4481B4, 0x4481E6);
MakeUnkn(0x4481E8, 1);
MakeNameEx(0x4481E8, "TCustomForm.DoClose", 0x20);
MakeComm(0x4481E8, "'procedure TCustomForm.DoClose(var Action:TCloseAction);'");
MakeCode(0x4481E8);
MakeCode(0x448205);
MakeFunction(0x4481E8, 0x448207);
MakeUnkn(0x448208, 1);
MakeNameEx(0x448208, "TCustomForm.DoHide", 0x20);
MakeComm(0x448208, "'procedure TCustomForm.DoHide;'");
MakeCode(0x448208);
MakeCode(0x448223);
MakeFunction(0x448208, 0x448225);
MakeUnkn(0x448228, 1);
MakeNameEx(0x448228, "TCustomForm.DoShow", 0x20);
MakeComm(0x448228, "'procedure TCustomForm.DoShow;'");
MakeCode(0x448228);
MakeCode(0x448243);
MakeFunction(0x448228, 0x448245);
MakeUnkn(0x448248, 1);
MakeNameEx(0x448248, "TCustomForm.GetClientRect", 0x20);
MakeComm(0x448248, "'function TCustomForm.GetClientRect:TRect;'");
MakeCode(0x448248);
MakeCode(0x4482C2);
MakeFunction(0x448248, 0x4482CE);
MakeUnkn(0x4482D0, 1);
MakeNameEx(0x4482D0, "TCustomForm.GetChildren", 0x20);
MakeComm(0x4482D0, "'procedure TCustomForm.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x4482D0);
MakeCode(0x448307);
MakeCode(0x44832A);
MakeCode(0x448332);
MakeFunction(0x4482D0, 0x44833B);
MakeUnkn(0x44833C, 1);
MakeNameEx(0x44833C, "TCustomForm.GetFloating", 0x20);
MakeComm(0x44833C, "'function TCustomForm.GetFloating:Boolean;'");
MakeCode(0x44833C);
MakeCode(0x44835D);
MakeCode(0x448362);
MakeFunction(0x44833C, 0x448367);
MakeUnkn(0x448368, 1);
MakeNameEx(0x448368, "TCustomForm.SetChildOrder", 0x20);
MakeComm(0x448368, "'procedure TCustomForm.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x448368);
MakeCode(0x44839A);
MakeCode(0x4483BE);
MakeCode(0x4483EE);
MakeCode(0x4483F2);
MakeFunction(0x448368, 0x4483FA);
MakeUnkn(0x4483FC, 1);
MakeNameEx(0x4483FC, "TCustomForm.SetParentBiDiMode", 0x20);
MakeComm(0x4483FC, "'procedure TCustomForm.SetParentBiDiMode(Value:Boolean);'");
MakeCode(0x4483FC);
MakeCode(0x448421);
MakeFunction(0x4483FC, 0x448423);
MakeUnkn(0x448424, 1);
MakeNameEx(0x448424, "TCustomForm.SetClientWidth", 0x20);
MakeComm(0x448424, "'procedure TCustomForm.SetClientWidth(Value:Integer);'");
MakeCode(0x448424);
MakeCode(0x448446);
MakeFunction(0x448424, 0x44844F);
MakeUnkn(0x448454, 1);
MakeNameEx(0x448454, "TCustomForm.SetClientHeight", 0x20);
MakeComm(0x448454, "'procedure TCustomForm.SetClientHeight(Value:Integer);'");
MakeCode(0x448454);
MakeCode(0x448476);
MakeFunction(0x448454, 0x44847F);
MakeUnkn(0x448484, 1);
MakeNameEx(0x448484, "TCustomForm.SetVisible", 0x20);
MakeComm(0x448484, "'procedure TCustomForm.SetVisible(Value:Boolean);'");
MakeCode(0x448484);
MakeCode(0x4484A0);
MakeCode(0x4484AA);
MakeCode(0x4484BA);
MakeCode(0x4484C3);
MakeFunction(0x448484, 0x4484C6);
MakeUnkn(0x4484C8, 1);
MakeNameEx(0x4484C8, "TCustomForm.sub_00430A30", 0x20);
MakeComm(0x4484C8, "'procedure TCustomForm.sub_00430A30;'");
MakeCode(0x4484C8);
MakeComm(0x4484DB, "'TCustomForm.FFormStyle:TFormStyle'");
MakeComm(0x4484E4, "'TCustomForm.FVisible:Boolean'");
MakeComm(0x448501, "'EInvalidOperation.Create'");
MakeCode(0x44850B);
MakeCode(0x448518);
MakeCode(0x448521);
MakeCode(0x448526);
MakeFunction(0x4484C8, 0x44852B);
MakeCode(0x44852C);
MakeFunction(0x44852C, 0x44852F);
MakeUnkn(0x448530, 1);
MakeNameEx(0x448530, "TCustomForm.SetParent", 0x20);
MakeComm(0x448530, "'procedure TCustomForm.SetParent(AParent:TWinControl);'");
MakeCode(0x448530);
MakeCode(0x44854C);
MakeCode(0x448562);
MakeFunction(0x448530, 0x448565);
MakeUnkn(0x448568, 1);
MakeNameEx(0x448568, "TCustomForm.ValidateRename", 0x20);
MakeComm(0x448568, "'procedure TCustomForm.ValidateRename(AComponent:TComponent; const CurName:AnsiString; const NewName:AnsiString);'");
MakeCode(0x448568);
MakeCode(0x44859F);
MakeFunction(0x448568, 0x4485A6);
MakeUnkn(0x4485A8, 1);
MakeNameEx(0x4485A8, "TCustomForm.WndProc", 0x20);
MakeComm(0x4485A8, "'procedure TCustomForm.WndProc(var Message:TMessage);'");
MakeCode(0x4485A8);
MakeCode(0x4485E2);
MakeCode(0x4485F6);
MakeCode(0x448644);
MakeCode(0x44865D);
MakeCode(0x448670);
MakeCode(0x448691);
MakeCode(0x4486B2);
MakeCode(0x4486F1);
MakeCode(0x448706);
MakeCode(0x44871B);
MakeCode(0x448727);
MakeCode(0x4487DC);
MakeCode(0x4487E9);
MakeCode(0x448804);
MakeCode(0x448809);
MakeCode(0x44880B);
MakeCode(0x448818);
MakeCode(0x448821);
MakeCode(0x448826);
MakeCode(0x448828);
MakeCode(0x4488E6);
MakeCode(0x4488F3);
MakeCode(0x44890B);
MakeCode(0x448910);
MakeCode(0x448912);
MakeCode(0x44891F);
MakeCode(0x448928);
MakeCode(0x44892D);
MakeCode(0x44892F);
MakeCode(0x44893C);
MakeCode(0x44894F);
MakeCode(0x448954);
MakeCode(0x448956);
MakeCode(0x4489C4);
MakeCode(0x4489CE);
MakeFunction(0x4485A8, 0x4489D5);
MakeUnkn(0x4489E0, 1);
MakeNameEx(0x4489E0, "Default", 0x20);
MakeComm(0x4489E0, "'procedure Default;'");
MakeCode(0x4489E0);
MakeFunction(0x4489E0, 0x448A2A);
MakeUnkn(0x448A2C, 1);
MakeNameEx(0x448A2C, "MaximizedChildren", 0x20);
MakeComm(0x448A2C, "'function MaximizedChildren:Boolean;'");
MakeCode(0x448A2C);
MakeCode(0x448A46);
MakeCode(0x448A60);
MakeCode(0x448A64);
MakeCode(0x448A66);
MakeFunction(0x448A2C, 0x448A6A);
MakeUnkn(0x448A6C, 1);
MakeNameEx(0x448A6C, "TCustomForm.ClientWndProc", 0x20);
MakeComm(0x448A6C, "'procedure TCustomForm.ClientWndProc(var Message:TMessage);'");
MakeCode(0x448A6C);
MakeCode(0x448AC0);
MakeCode(0x448B34);
MakeCode(0x448B43);
MakeCode(0x448B75);
MakeCode(0x448B77);
MakeCode(0x448B8A);
MakeCode(0x448BB2);
MakeCode(0x448C08);
MakeCode(0x448C13);
MakeCode(0x448C20);
MakeCode(0x448C39);
MakeCode(0x448C3A);
MakeCode(0x448C3F);
MakeCode(0x448C41);
MakeCode(0x448C48);
MakeFunction(0x448A6C, 0x448C4C);
MakeUnkn(0x448C4C, 1);
MakeNameEx(0x448C4C, "TCustomForm.AlignControls", 0x20);
MakeComm(0x448C4C, "'procedure TCustomForm.AlignControls(AControl:TControl; var Rect:TRect);'");
MakeCode(0x448C4C);
MakeCode(0x448CB0);
MakeFunction(0x448C4C, 0x448CB7);
MakeUnkn(0x448CB8, 1);
MakeNameEx(0x448CB8, "TCustomForm.CMBiDiModeChanged", 0x20);
MakeComm(0x448CB8, "'procedure TCustomForm.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x448CB8);
MakeCode(0x448D0D);
MakeCode(0x448D1E);
MakeCode(0x448D44);
MakeCode(0x448D48);
MakeFunction(0x448CB8, 0x448D4D);
MakeUnkn(0x448D50, 1);
MakeNameEx(0x448D50, "TCustomForm.CMParentBiDiModeChanged", 0x20);
MakeComm(0x448D50, "'procedure TCustomForm.CMParentBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x448D50);
MakeCode(0x448DA0);
MakeCode(0x448DAB);
MakeCode(0x448DB5);
MakeCode(0x448DC2);
MakeCode(0x448DCD);
MakeCode(0x448DD2);
MakeCode(0x448DD4);
MakeFunction(0x448D50, 0x448DD7);
MakeUnkn(0x448DD8, 1);
MakeNameEx(0x448DD8, "TCustomForm.SetBorderIcons", 0x20);
MakeComm(0x448DD8, "'procedure TCustomForm.SetBorderIcons(Value:TBorderIcons);'");
MakeCode(0x448DD8);
MakeCode(0x448E00);
MakeFunction(0x448DD8, 0x448E03);
MakeUnkn(0x448E04, 1);
MakeNameEx(0x448E04, "TCustomForm.SetBorderStyle", 0x20);
MakeComm(0x448E04, "'procedure TCustomForm.SetBorderStyle(Value:TFormBorderStyle);'");
MakeCode(0x448E04);
MakeCode(0x448E23);
MakeCode(0x448E25);
MakeCode(0x448E39);
MakeFunction(0x448E04, 0x448E3B);
MakeUnkn(0x448E3C, 1);
MakeNameEx(0x448E3C, "TCustomForm.Dock", 0x20);
MakeComm(0x448E3C, "'procedure TCustomForm.Dock(NewDockSite:TWinControl; ARect:TRect);'");
MakeCode(0x448E3C);
MakeCode(0x448E79);
MakeFunction(0x448E3C, 0x448E80);
MakeUnkn(0x448E80, 1);
MakeNameEx(0x448E80, "TCustomForm.DoDock", 0x20);
MakeComm(0x448E80, "'procedure TCustomForm.DoDock(NewDockSite:TWinControl; var ARect:TRect);'");
MakeCode(0x448E80);
MakeCode(0x448EA0);
MakeCode(0x448EB2);
MakeCode(0x448EC5);
MakeFunction(0x448E80, 0x448ED4);
MakeUnkn(0x448ED4, 1);
MakeNameEx(0x448ED4, "TCustomForm.GetActiveMDIChild", 0x20);
MakeComm(0x448ED4, "'function TCustomForm.GetActiveMDIChild:TForm;'");
MakeCode(0x448ED4);
MakeCode(0x448F05);
MakeFunction(0x448ED4, 0x448F07);
MakeUnkn(0x448F08, 1);
MakeNameEx(0x448F08, "TCustomForm.GetMDIChildCount", 0x20);
MakeComm(0x448F08, "'function TCustomForm.GetMDIChildCount:Integer;'");
MakeCode(0x448F08);
MakeCode(0x448F33);
MakeCode(0x448F49);
MakeCode(0x448F4D);
MakeFunction(0x448F08, 0x448F53);
MakeUnkn(0x448F54, 1);
MakeNameEx(0x448F54, "TCustomForm.GetMDIChildren", 0x20);
MakeComm(0x448F54, "'function TCustomForm.GetMDIChildren(I:Integer):TForm;'");
MakeCode(0x448F54);
MakeCode(0x448F7F);
MakeCode(0x448F99);
MakeCode(0x448F9D);
MakeCode(0x448F9F);
MakeFunction(0x448F54, 0x448FA3);
MakeUnkn(0x448FA4, 1);
MakeNameEx(0x448FA4, "EnumMonitorsProc", 0x20);
MakeComm(0x448FA4, "'function EnumMonitorsProc(hm:HMONITOR; dc:HDC; r:PRect; Data:Pointer):Boolean; stdcall;'");
MakeCode(0x448FA4);
MakeFunction(0x448FA4, 0x448FD3);
MakeUnkn(0x448FD4, 1);
MakeNameEx(0x448FD4, "TCustomForm.GetMonitor", 0x20);
MakeComm(0x448FD4, "'function TCustomForm.GetMonitor:TMonitor;'");
MakeCode(0x448FD4);
MakeCode(0x44900C);
MakeCode(0x44902D);
MakeCode(0x449031);
MakeCode(0x449043);
MakeCode(0x449059);
MakeCode(0x449090);
MakeCode(0x4490AE);
MakeCode(0x4490B2);
MakeFunction(0x448FD4, 0x4490BB);
MakeUnkn(0x4490BC, 1);
MakeNameEx(0x4490BC, "TCustomForm.GetCanvas", 0x20);
MakeComm(0x4490BC, "'function TCustomForm.GetCanvas:TCanvas;'");
MakeCode(0x4490BC);
MakeFunction(0x4490BC, 0x4490C3);
MakeUnkn(0x4490C4, 1);
MakeNameEx(0x4490C4, "TCustomForm.SetIcon", 0x20);
MakeComm(0x4490C4, "'procedure TCustomForm.SetIcon(Value:TIcon);'");
MakeCode(0x4490C4);
MakeFunction(0x4490C4, 0x4490D0);
MakeUnkn(0x4490D0, 1);
MakeNameEx(0x4490D0, "TCustomForm.IsForm", 0x20);
MakeComm(0x4490D0, "'function TCustomForm.IsForm(Value:TWinControl):Boolean;'");
MakeCode(0x4490D0);
MakeFunction(0x4490D0, 0x4490D6);
MakeUnkn(0x4490D8, 1);
MakeNameEx(0x4490D8, "TCustomForm.IsIconStored", 0x20);
MakeComm(0x4490D8, "'function TCustomForm.IsIconStored(Value:TIcon):Boolean;'");
MakeCode(0x4490D8);
MakeCode(0x4490F5);
MakeCode(0x4490F9);
MakeFunction(0x4490D8, 0x4490FD);
MakeUnkn(0x449100, 1);
MakeNameEx(0x449100, "TCustomForm.SetFormStyle", 0x20);
MakeComm(0x449100, "'procedure TCustomForm.SetFormStyle(Value:TFormStyle);'");
MakeCode(0x449100);
MakeCode(0x449125);
MakeCode(0x449132);
MakeCode(0x449147);
MakeCode(0x449160);
MakeCode(0x44916D);
MakeCode(0x44917B);
MakeFunction(0x449100, 0x44917E);
MakeUnkn(0x449180, 1);
MakeNameEx(0x449180, "TCustomForm.RefreshMDIMenu", 0x20);
MakeComm(0x449180, "'procedure TCustomForm.RefreshMDIMenu;'");
MakeCode(0x449180);
MakeCode(0x4491AB);
MakeCode(0x4491BE);
MakeCode(0x4491F4);
MakeFunction(0x449180, 0x4491F9);
MakeUnkn(0x4491FC, 1);
MakeNameEx(0x4491FC, "TCustomForm.SetObjectMenuItem", 0x20);
MakeComm(0x4491FC, "'procedure TCustomForm.SetObjectMenuItem(Value:TMenuItem);'");
MakeCode(0x4491FC);
MakeCode(0x44921B);
MakeFunction(0x4491FC, 0x44921D);
MakeUnkn(0x449220, 1);
MakeNameEx(0x449220, "TCustomForm.SetWindowMenu", 0x20);
MakeComm(0x449220, "'procedure TCustomForm.SetWindowMenu(Value:TMenuItem);'");
MakeCode(0x449220);
MakeCode(0x44923E);
MakeCode(0x449245);
MakeFunction(0x449220, 0x449247);
MakeUnkn(0x449248, 1);
MakeNameEx(0x449248, "TCustomForm.SetMenu", 0x20);
MakeComm(0x449248, "'procedure TCustomForm.SetMenu(Value:TMainMenu);'");
MakeCode(0x449248);
MakeCode(0x449281);
MakeCode(0x4492D6);
MakeCode(0x4492DC);
MakeCode(0x4492ED);
MakeCode(0x4492FD);
MakeCode(0x4492FF);
MakeCode(0x449312);
MakeCode(0x44932D);
MakeCode(0x449342);
MakeCode(0x449348);
MakeCode(0x44938E);
MakeCode(0x4493A0);
MakeCode(0x4493C5);
MakeCode(0x4493DF);
MakeCode(0x4493F1);
MakeCode(0x4493F8);
MakeCode(0x449405);
MakeCode(0x44940E);
MakeCode(0x449413);
MakeFunction(0x449248, 0x44941C);
MakeUnkn(0x44941C, 1);
MakeNameEx(0x44941C, "TCustomForm.GetPixelsPerInch", 0x20);
MakeComm(0x44941C, "'function TCustomForm.GetPixelsPerInch:Integer;'");
MakeCode(0x44941C);
MakeFunction(0x44941C, 0x44942F);
MakeUnkn(0x449430, 1);
MakeNameEx(0x449430, "TCustomForm.SetPixelsPerInch", 0x20);
MakeComm(0x449430, "'procedure TCustomForm.SetPixelsPerInch(Value:Integer);'");
MakeCode(0x449430);
MakeCode(0x44944A);
MakeCode(0x449459);
MakeCode(0x44945F);
MakeFunction(0x449430, 0x449462);
MakeUnkn(0x449464, 1);
MakeNameEx(0x449464, "TCustomForm.SetPosition", 0x20);
MakeComm(0x449464, "'procedure TCustomForm.SetPosition(Value:TPosition);'");
MakeCode(0x449464);
MakeFunction(0x449464, 0x44947E);
MakeUnkn(0x449480, 1);
MakeNameEx(0x449480, "TCustomForm.GetScaled", 0x20);
MakeComm(0x449480, "'function TCustomForm.GetScaled:Boolean;'");
MakeCode(0x449480);
MakeFunction(0x449480, 0x44948B);
MakeUnkn(0x44948C, 1);
MakeNameEx(0x44948C, "TCustomForm.SetScaled", 0x20);
MakeComm(0x44948C, "'procedure TCustomForm.SetScaled(Value:Boolean);'");
MakeCode(0x44948C);
MakeCode(0x4494B7);
MakeFunction(0x44948C, 0x4494BA);
MakeUnkn(0x4494BC, 1);
MakeNameEx(0x4494BC, "TCustomForm.CMColorChanged", 0x20);
MakeComm(0x4494BC, "'procedure TCustomForm.CMColorChanged(var Message:TMessage);'");
MakeCode(0x4494BC);
MakeCode(0x4494DB);
MakeFunction(0x4494BC, 0x4494DD);
MakeUnkn(0x4494E0, 1);
MakeNameEx(0x4494E0, "TCustomForm.NormalColor", 0x20);
MakeComm(0x4494E0, "'function TCustomForm.NormalColor:TColor;'");
MakeCode(0x4494E0);
MakeCode(0x4494F3);
MakeFunction(0x4494E0, 0x4494F6);
MakeUnkn(0x4494F8, 1);
MakeNameEx(0x4494F8, "TCustomForm.CMCtl3DChanged", 0x20);
MakeComm(0x4494F8, "'procedure TCustomForm.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x4494F8);
MakeCode(0x449525);
MakeCode(0x44953E);
MakeFunction(0x4494F8, 0x449540);
MakeUnkn(0x449540, 1);
MakeNameEx(0x449540, "TCustomForm.CMFontChanged", 0x20);
MakeComm(0x449540, "'procedure TCustomForm.CMFontChanged(var Message:TMessage);'");
MakeCode(0x449540);
MakeCode(0x44955C);
MakeFunction(0x449540, 0x44955E);
MakeUnkn(0x449560, 1);
MakeNameEx(0x449560, "TCustomForm.CMMenuChanged", 0x20);
MakeComm(0x449560, "'procedure TCustomForm.CMMenuChanged(var Message:TMessage);'");
MakeCode(0x449560);
MakeFunction(0x449560, 0x449579);
MakeUnkn(0x44957C, 1);
MakeNameEx(0x44957C, "TCustomForm.SetWindowState", 0x20);
MakeComm(0x44957C, "'procedure TCustomForm.SetWindowState(Value:TWindowState);'");
MakeCode(0x44957C);
MakeCode(0x4495B8);
MakeFunction(0x44957C, 0x4495BB);
MakeUnkn(0x4495BC, 1);
MakeNameEx(0x4495BC, "TCustomForm.SetWindowToMonitor", 0x20);
MakeComm(0x4495BC, "'procedure TCustomForm.SetWindowToMonitor;'");
MakeCode(0x4495BC);
MakeCode(0x449601);
MakeCode(0x44962C);
MakeCode(0x449642);
MakeCode(0x44966A);
MakeCode(0x4496AD);
MakeCode(0x449706);
MakeCode(0x449738);
MakeCode(0x44974C);
MakeCode(0x449784);
MakeCode(0x4497B6);
MakeCode(0x4497CA);
MakeCode(0x44984D);
MakeCode(0x4498DA);
MakeCode(0x4498F2);
MakeCode(0x4498FD);
MakeCode(0x449908);
MakeFunction(0x4495BC, 0x449910);
MakeUnkn(0x449910, 1);
MakeNameEx(0x449910, "TCustomForm.CreateParams", 0x20);
MakeComm(0x449910, "'procedure TCustomForm.CreateParams(var Params:TCreateParams);'");
MakeCode(0x449910);
MakeComm(0x44992A, "'TCustomForm.FParent:TWinControl'");
MakeComm(0x449930, "'TCustomForm.FParentWindow:HWND'");
MakeComm(0x449941, "'TCreateParams.WndParent:HWND'");
MakeComm(0x449944, "'TCreateParams.Style:DWORD'");
MakeComm(0x44994B, "'TCreateParams.WindowClass:TWndClass'");
MakeCode(0x44994B);
MakeComm(0x449952, "'TCustomForm.FComponentState:TComponentState'");
MakeComm(0x449958, "'TCustomForm.FParent:TWinControl'");
MakeComm(0x44995E, "'TCreateParams.Style:DWORD'");
MakeComm(0x44996A, "'TCustomForm.FPosition:TPosition'");
MakeCode(0x44996A);
MakeComm(0x449975, "'TCreateParams.X:Integer'");
MakeComm(0x44997C, "'TCreateParams.Y:Integer'");
MakeComm(0x449983, "'TCustomForm.FBorderIcons:TBorderIcons'");
MakeCode(0x449983);
MakeComm(0x449989, "'TCustomForm.FBorderStyle:TFormBorderStyle'");
MakeComm(0x449992, "'TCustomForm.FFormStyle:TFormStyle'");
MakeCode(0x4499A6);
MakeCode(0x4499AA);
MakeComm(0x4499D7, "'TCustomForm.FParent:TWinControl'");
MakeCode(0x4499D7);
MakeComm(0x4499DD, "'TCustomForm.FParentWindow:HWND'");
MakeComm(0x4499E6, "'TCreateParams.Style:DWORD'");
MakeComm(0x4499ED, "'0x0'");
MakeCode(0x4499ED);
MakeComm(0x4499F5, "'TCreateParams.Style:DWORD'");
MakeCode(0x4499F5);
MakeComm(0x4499FE, "'TCreateParams.Style:DWORD'");
MakeCode(0x4499FE);
MakeComm(0x449A05, "'TCustomForm.FPosition:TPosition'");
MakeComm(0x449A13, "'TCreateParams.Width:Integer'");
MakeCode(0x449A13);
MakeComm(0x449A1A, "'TCreateParams.Height:Integer'");
MakeComm(0x449A23, "'TCreateParams.Style:DWORD'");
MakeCode(0x449A23);
MakeComm(0x449A30, "'TCreateParams.Style:DWORD'");
MakeComm(0x449A33, "'TCreateParams.ExStyle:DWORD'");
MakeComm(0x449A3A, "'TCreateParams.ExStyle:DWORD'");
MakeComm(0x449A4E, "'TCreateParams.Style:DWORD'");
MakeComm(0x449A5B, "'TCreateParams.Style:DWORD'");
MakeComm(0x449A5E, "'0x9'");
MakeCode(0x449A5E);
MakeComm(0x449A67, "'TCreateParams.WindowClass:TWndClass'");
MakeCode(0x449A6E);
MakeComm(0x449A77, "'TCreateParams.ExStyle:DWORD'");
MakeComm(0x449A7E, "'TCreateParams.ExStyle:DWORD'");
MakeComm(0x449A88, "'0x1'");
MakeCode(0x449A91);
MakeComm(0x449A98, "'TCustomForm.FFormStyle:TFormStyle'");
MakeCode(0x449AA6);
MakeComm(0x449AAB, "'TCreateParams.Style:DWORD'");
MakeCode(0x449AB2);
MakeComm(0x449AB7, "'TCreateParams.Style:DWORD'");
MakeComm(0x449ABE, "'TCustomForm.FWindowState:TWindowState'");
MakeCode(0x449ABE);
MakeComm(0x449AC8, "'TCreateParams.Style:DWORD'");
MakeCode(0x449AD1);
MakeComm(0x449AD5, "'TCreateParams.Style:DWORD'");
MakeComm(0x449ADE, "'TCustomForm.FWindowState:TWindowState'");
MakeCode(0x449ADE);
MakeCode(0x449AE5);
MakeComm(0x449AEA, "'TCreateParams.Style:DWORD'");
MakeCode(0x449AF1);
MakeComm(0x449AF6, "'TCreateParams.ExStyle:DWORD'");
MakeComm(0x449AFD, "'TCustomForm.?f1D:byte'");
MakeCode(0x449AFD);
MakeComm(0x449B03, "'TCreateParams.Style:DWORD'");
MakeComm(0x449B0A, "'TCustomForm.FFormStyle:TFormStyle'");
MakeCode(0x449B0A);
MakeComm(0x449B18, "'TCreateParams.WindowClass:TWndClass'");
MakeCode(0x449B1B);
MakeFunction(0x449910, 0x449B20);
MakeByte(0x449B20);
MakeUnkn(0x449B20, 1);
MakeNameEx(0x449B20, "gvar_00449B20", 0);
MakeByte(0x449B24);
MakeUnkn(0x449B24, 1);
MakeNameEx(0x449B24, "gvar_00449B24", 0);
MakeByte(0x449B28);
MakeUnkn(0x449B28, 1);
MakeNameEx(0x449B28, "gvar_00449B28", 0);
MakeUnkn(0x449B2C, 1);
MakeNameEx(0x449B2C, "TCustomForm.CreateWnd", 0x20);
MakeComm(0x449B2C, "'procedure TCustomForm.CreateWnd;'");
MakeCode(0x449B2C);
MakeCode(0x449B6B);
MakeCode(0x449B81);
MakeCode(0x449BA2);
MakeCode(0x449BC3);
MakeCode(0x449C44);
MakeCode(0x449C5D);
MakeFunction(0x449B2C, 0x449C62);
MakeUnkn(0x449C70, 1);
MakeNameEx(0x449C70, "TCustomForm.CreateWindowHandle", 0x20);
MakeComm(0x449C70, "'procedure TCustomForm.CreateWindowHandle(const Params:TCreateParams);'");
MakeCode(0x449C70);
MakeComm(0x449C94, "'TCustomForm.FFormStyle:TFormStyle'");
MakeComm(0x449CA1, "'TCustomForm.FComponentState:TComponentState'");
MakeCode(0x449CC0);
MakeComm(0x449CDD, "'EInvalidOperation.Create'");
MakeCode(0x449CE7);
MakeComm(0x449CFA, "'TCreateParams.X:Integer'");
MakeComm(0x449D00, "'TCreateParams.Y:Integer'");
MakeComm(0x449D06, "'TCreateParams.Width:Integer'");
MakeComm(0x449D0C, "'TCreateParams.Height:Integer'");
MakeComm(0x449D12, "'TCreateParams.Style:DWORD'");
MakeComm(0x449D18, "'TCreateParams.Param:Pointer'");
MakeComm(0x449D3D, "'TCustomForm.FHandle:HWND'");
MakeComm(0x449D43, "'TCustomForm.FFormState:TFormState'");
MakeCode(0x449D4C);
MakeComm(0x449D72, "'TCustomForm.FFormState:TFormState'");
MakeCode(0x449D79);
MakeCode(0x449D80);
MakeCode(0x449D8D);
MakeCode(0x449D99);
MakeCode(0x449D9E);
MakeFunction(0x449C70, 0x449DA7);
MakeUnkn(0x449DA8, 1);
MakeNameEx(0x449DA8, "TCustomForm.DestroyWindowHandle", 0x20);
MakeComm(0x449DA8, "'procedure TCustomForm.DestroyWindowHandle;'");
MakeCode(0x449DA8);
MakeCode(0x449DD9);
MakeCode(0x449DE0);
MakeFunction(0x449DA8, 0x449DEA);
MakeUnkn(0x449DEC, 1);
MakeNameEx(0x449DEC, "TCustomForm.DefaultHandler", 0x20);
MakeComm(0x449DEC, "'procedure TCustomForm.DefaultHandler(var Message:void );'");
MakeCode(0x449DEC);
MakeCode(0x449E1D);
MakeCode(0x449E42);
MakeCode(0x449E4B);
MakeFunction(0x449DEC, 0x449E4E);
MakeUnkn(0x449E50, 1);
MakeNameEx(0x449E50, "TCustomForm.SetActiveControl", 0x20);
MakeComm(0x449E50, "'procedure TCustomForm.SetActiveControl(Control:TWinControl);'");
MakeCode(0x449E50);
MakeCode(0x449E9A);
MakeCode(0x449EBB);
MakeCode(0x449ED7);
MakeCode(0x449EE2);
MakeCode(0x449EEF);
MakeCode(0x449EF8);
MakeCode(0x449EFD);
MakeFunction(0x449E50, 0x449F05);
MakeUnkn(0x449F08, 1);
MakeNameEx(0x449F08, "TCustomForm.DefocusControl", 0x20);
MakeComm(0x449F08, "'procedure TCustomForm.DefocusControl(Control:TWinControl; Removing:Boolean);'");
MakeCode(0x449F08);
MakeCode(0x449F2F);
MakeCode(0x449F49);
MakeFunction(0x449F08, 0x449F4D);
MakeUnkn(0x449F50, 1);
MakeNameEx(0x449F50, "TCustomForm.FocusControl", 0x20);
MakeComm(0x449F50, "'procedure TCustomForm.FocusControl(Control:TWinControl);'");
MakeCode(0x449F50);
MakeCode(0x449F6F);
MakeFunction(0x449F50, 0x449F72);
MakeUnkn(0x449F74, 1);
MakeNameEx(0x449F74, "TCustomForm.SetFocusedControl", 0x20);
MakeComm(0x449F74, "'function TCustomForm.SetFocusedControl(Control:TWinControl):Boolean;'");
MakeCode(0x449F74);
MakeCode(0x449FA1);
MakeCode(0x449FA9);
MakeCode(0x44A017);
MakeCode(0x44A021);
MakeCode(0x44A08B);
MakeCode(0x44A0B1);
MakeCode(0x44A0C0);
MakeCode(0x44A0D1);
MakeCode(0x44A106);
MakeCode(0x44A120);
MakeCode(0x44A125);
MakeCode(0x44A127);
MakeCode(0x44A156);
MakeCode(0x44A16B);
MakeCode(0x44A189);
MakeCode(0x44A190);
MakeCode(0x44A1BF);
MakeCode(0x44A1CC);
MakeCode(0x44A1E4);
MakeCode(0x44A1E9);
MakeCode(0x44A1F7);
MakeFunction(0x449F74, 0x44A1FF);
MakeUnkn(0x44A204, 1);
MakeNameEx(0x44A204, "TCustomForm.sub_0044A204", 0x20);
MakeComm(0x44A204, "'procedure TCustomForm.sub_0044A204;'");
MakeCode(0x44A204);
MakeFunction(0x44A204, 0x44A205);
MakeUnkn(0x44A208, 1);
MakeNameEx(0x44A208, "TCustomForm.SetWindowFocus", 0x20);
MakeComm(0x44A208, "'procedure TCustomForm.SetWindowFocus;'");
MakeCode(0x44A208);
MakeCode(0x44A221);
MakeCode(0x44A223);
MakeCode(0x44A252);
MakeFunction(0x44A208, 0x44A255);
MakeUnkn(0x44A258, 1);
MakeNameEx(0x44A258, "TCustomForm.SetActive", 0x20);
MakeComm(0x44A258, "'procedure TCustomForm.SetActive(Value:Boolean);'");
MakeCode(0x44A258);
MakeCode(0x44A27E);
MakeCode(0x44A2A9);
MakeCode(0x44A2B9);
MakeFunction(0x44A258, 0x44A2BC);
MakeUnkn(0x44A2BC, 1);
MakeNameEx(0x44A2BC, "TCustomForm.SendCancelMode", 0x20);
MakeComm(0x44A2BC, "'procedure TCustomForm.SendCancelMode(Sender:TControl);'");
MakeCode(0x44A2BC);
MakeCode(0x44A2E7);
MakeCode(0x44A309);
MakeFunction(0x44A2BC, 0x44A30C);
MakeUnkn(0x44A30C, 1);
MakeNameEx(0x44A30C, "TCustomForm.MergeMenu", 0x20);
MakeComm(0x44A30C, "'procedure TCustomForm.MergeMenu(MergeState:Boolean);'");
MakeCode(0x44A30C);
MakeCode(0x44A362);
MakeCode(0x44A388);
MakeCode(0x44A38E);
MakeCode(0x44A3A9);
MakeCode(0x44A3B0);
MakeFunction(0x44A30C, 0x44A3B2);
MakeUnkn(0x44A3B4, 1);
MakeNameEx(0x44A3B4, "DoNestedActivation", 0x20);
MakeComm(0x44A3B4, "'procedure DoNestedActivation(Msg:Cardinal; Control:TWinControl; Form:TCustomForm);'");
MakeCode(0x44A3B4);
MakeCode(0x44A3C4);
MakeCode(0x44A3C6);
MakeCode(0x44A3DE);
MakeCode(0x44A3F8);
MakeFunction(0x44A3B4, 0x44A3FD);
MakeUnkn(0x44A400, 1);
MakeNameEx(0x44A400, "TCustomForm.Activate", 0x20);
MakeComm(0x44A400, "'procedure TCustomForm.Activate;'");
MakeCode(0x44A400);
MakeCode(0x44A42D);
MakeFunction(0x44A400, 0x44A42F);
MakeUnkn(0x44A430, 1);
MakeNameEx(0x44A430, "TCustomForm.Deactivate", 0x20);
MakeComm(0x44A430, "'procedure TCustomForm.Deactivate;'");
MakeCode(0x44A430);
MakeCode(0x44A45D);
MakeFunction(0x44A430, 0x44A45F);
MakeUnkn(0x44A460, 1);
MakeNameEx(0x44A460, "TCustomForm.Paint", 0x20);
MakeComm(0x44A460, "'procedure TCustomForm.Paint;'");
MakeCode(0x44A460);
MakeCode(0x44A47B);
MakeFunction(0x44A460, 0x44A47D);
MakeUnkn(0x44A480, 1);
MakeNameEx(0x44A480, "TCustomForm.GetIconHandle", 0x20);
MakeComm(0x44A480, "'function TCustomForm.GetIconHandle:HICON;'");
MakeCode(0x44A480);
MakeFunction(0x44A480, 0x44A49A);
MakeUnkn(0x44A49C, 1);
MakeNameEx(0x44A49C, "TCustomForm.PaintWindow", 0x20);
MakeComm(0x44A49C, "'procedure TCustomForm.PaintWindow(DC:HDC);'");
MakeCode(0x44A49C);
MakeCode(0x44A4FD);
MakeCode(0x44A509);
MakeCode(0x44A516);
MakeCode(0x44A527);
MakeCode(0x44A52C);
MakeCode(0x44A52E);
MakeCode(0x44A53B);
MakeCode(0x44A54A);
MakeCode(0x44A54F);
MakeFunction(0x44A49C, 0x44A556);
MakeUnkn(0x44A558, 1);
MakeNameEx(0x44A558, "TCustomForm.PaletteChanged", 0x20);
MakeComm(0x44A558, "'procedure TCustomForm.PaletteChanged(Foreground:Boolean);'");
MakeCode(0x44A558);
MakeCode(0x44A58E);
MakeCode(0x44A5A6);
MakeCode(0x44A5D1);
MakeCode(0x44A5D8);
MakeCode(0x44A5EC);
MakeFunction(0x44A558, 0x44A5F6);
MakeUnkn(0x44A5F8, 1);
MakeNameEx(0x44A5F8, "TCustomForm.WMPaint", 0x20);
MakeComm(0x44A5F8, "'procedure TCustomForm.WMPaint(var Message:TWMPaint);'");
MakeCode(0x44A5F8);
MakeCode(0x44A63B);
MakeCode(0x44A66B);
MakeFunction(0x44A5F8, 0x44A671);
MakeUnkn(0x44A678, 1);
MakeNameEx(0x44A678, "TCustomForm.WMIconEraseBkgnd", 0x20);
MakeComm(0x44A678, "'procedure TCustomForm.WMIconEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x44A678);
MakeCode(0x44A6C8);
MakeCode(0x44A6D1);
MakeFunction(0x44A678, 0x44A6D7);
MakeUnkn(0x44A6D8, 1);
MakeNameEx(0x44A6D8, "TCustomForm.WMEraseBkgnd", 0x20);
MakeComm(0x44A6D8, "'procedure TCustomForm.WMEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x44A6D8);
MakeCode(0x44A6FB);
MakeFunction(0x44A6D8, 0x44A70D);
MakeUnkn(0x44A710, 1);
MakeNameEx(0x44A710, "TCustomForm.WMQueryDragIcon", 0x20);
MakeComm(0x44A710, "'procedure TCustomForm.WMQueryDragIcon(var Message:TWMQueryDragIcon);'");
MakeCode(0x44A710);
MakeFunction(0x44A710, 0x44A723);
MakeUnkn(0x44A724, 1);
MakeNameEx(0x44A724, "ModifySystemMenu", 0x20);
MakeComm(0x44A724, "'procedure ModifySystemMenu;'");
MakeCode(0x44A724);
MakeCode(0x44A7E2);
MakeCode(0x44A7FE);
MakeCode(0x44A81A);
MakeFunction(0x44A724, 0x44A81D);
MakeUnkn(0x44A820, 1);
MakeNameEx(0x44A820, "TCustomForm.WMNCCreate", 0x20);
MakeComm(0x44A820, "'procedure TCustomForm.WMNCCreate(var Message:TWMNCCreate);'");
MakeCode(0x44A820);
MakeCode(0x44A850);
MakeFunction(0x44A820, 0x44A853);
MakeUnkn(0x44A854, 1);
MakeNameEx(0x44A854, "TCustomForm.WMNCLButtonDown", 0x20);
MakeComm(0x44A854, "'procedure TCustomForm.WMNCLButtonDown(var Message:TWMNCLButtonDown);'");
MakeCode(0x44A854);
MakeCode(0x44A8D5);
MakeCode(0x44A8DE);
MakeFunction(0x44A854, 0x44A8E1);
MakeUnkn(0x44A8E4, 1);
MakeNameEx(0x44A8E4, "TCustomForm.WMDestroy", 0x20);
MakeComm(0x44A8E4, "'procedure TCustomForm.WMDestroy(var Message:TWMDestroy);'");
MakeCode(0x44A8E4);
MakeCode(0x44A90A);
MakeCode(0x44A938);
MakeFunction(0x44A8E4, 0x44A944);
MakeUnkn(0x44A944, 1);
MakeNameEx(0x44A944, "TCustomForm.WMCommand", 0x20);
MakeComm(0x44A944, "'procedure TCustomForm.WMCommand(Message:TWMCharToItem);'");
MakeCode(0x44A944);
MakeComm(0x44A950, "'TCustomForm.FMenu:TMainMenu'");
MakeComm(0x44A95D, "'TCustomForm.FMenu:TMainMenu'");
MakeCode(0x44A96C);
MakeCode(0x44A975);
MakeFunction(0x44A944, 0x44A978);
MakeUnkn(0x44A978, 1);
MakeNameEx(0x44A978, "TCustomForm.WMInitMenuPopup", 0x20);
MakeComm(0x44A978, "'procedure TCustomForm.WMInitMenuPopup(var Message:TWMInitMenuPopup);'");
MakeCode(0x44A978);
MakeFunction(0x44A978, 0x44A98D);
MakeUnkn(0x44A990, 1);
MakeNameEx(0x44A990, "TCustomForm.WMMenuChar", 0x20);
MakeComm(0x44A990, "'procedure TCustomForm.WMMenuChar(var Message:TWMMenuChar);'");
MakeCode(0x44A990);
MakeCode(0x44A9B9);
MakeCode(0x44A9C2);
MakeFunction(0x44A990, 0x44A9C5);
MakeUnkn(0x44A9C8, 1);
MakeNameEx(0x44A9C8, "TCustomForm.WMMenuSelect", 0x20);
MakeComm(0x44A9C8, "'procedure TCustomForm.WMMenuSelect(var Message:TWMMenuSelect);'");
MakeCode(0x44A9C8);
MakeCode(0x44A9FA);
MakeCode(0x44AA12);
MakeCode(0x44AA23);
MakeCode(0x44AA41);
MakeCode(0x44AA4D);
MakeCode(0x44AA5A);
MakeCode(0x44AA63);
MakeCode(0x44AA68);
MakeFunction(0x44A9C8, 0x44AA70);
MakeUnkn(0x44AA70, 1);
MakeNameEx(0x44AA70, "TCustomForm.WMActivate", 0x20);
MakeComm(0x44AA70, "'procedure TCustomForm.WMActivate(var Message:TWMActivate);'");
MakeCode(0x44AA70);
MakeCode(0x44AA7F);
MakeFunction(0x44AA70, 0x44AA8D);
MakeUnkn(0x44AA90, 1);
MakeNameEx(0x44AA90, "TCustomForm.Resizing", 0x20);
MakeComm(0x44AA90, "'procedure TCustomForm.Resizing(State:TWindowState);'");
MakeCode(0x44AA90);
MakeCode(0x44AAA0);
MakeCode(0x44AAB0);
MakeCode(0x44AAC4);
MakeFunction(0x44AA90, 0x44AAC7);
MakeUnkn(0x44AAC8, 1);
MakeNameEx(0x44AAC8, "TCustomForm.WMClose", 0x20);
MakeComm(0x44AAC8, "'procedure TCustomForm.WMClose;'");
MakeCode(0x44AAC8);
MakeFunction(0x44AAC8, 0x44AACE);
MakeUnkn(0x44AAD0, 1);
MakeNameEx(0x44AAD0, "TCustomForm.WMQueryEndSession", 0x20);
MakeComm(0x44AAD0, "'procedure TCustomForm.WMQueryEndSession(var Message:TWMQueryEndSession);'");
MakeCode(0x44AAD0);
MakeCode(0x44AAED);
MakeCode(0x44AAF1);
MakeCode(0x44AAF3);
MakeFunction(0x44AAD0, 0x44AAFC);
MakeUnkn(0x44AAFC, 1);
MakeNameEx(0x44AAFC, "TCustomForm.CMAppSysCommand", 0x20);
MakeComm(0x44AAFC, "'procedure TCustomForm.CMAppSysCommand(var Message:TMessage);'");
MakeCode(0x44AAFC);
MakeCode(0x44AB29);
MakeCode(0x44AB4F);
MakeFunction(0x44AAFC, 0x44AB52);
MakeUnkn(0x44AB54, 1);
MakeNameEx(0x44AB54, "TCustomForm.WMSysCommand", 0x20);
MakeComm(0x44AB54, "'procedure TCustomForm.WMSysCommand(var Message:TWMSysCommand);'");
MakeCode(0x44AB54);
MakeCode(0x44AB81);
MakeCode(0x44ABA5);
MakeCode(0x44ABAE);
MakeCode(0x44ABC4);
MakeCode(0x44ABDB);
MakeFunction(0x44AB54, 0x44ABDE);
MakeUnkn(0x44ABE0, 1);
MakeNameEx(0x44ABE0, "TCustomForm.WMShowWindow", 0x20);
MakeComm(0x44ABE0, "'procedure TCustomForm.WMShowWindow(var Message:TWMShowWindow);'");
MakeCode(0x44ABE0);
MakeCode(0x44ABF3);
MakeCode(0x44AC0D);
MakeCode(0x44AC27);
MakeCode(0x44AC2E);
MakeCode(0x44AC3A);
MakeCode(0x44AC6A);
MakeCode(0x44AC73);
MakeFunction(0x44ABE0, 0x44AC76);
MakeUnkn(0x44AC78, 1);
MakeNameEx(0x44AC78, "TCustomForm.WMMDIActivate", 0x20);
MakeComm(0x44AC78, "'procedure TCustomForm.WMMDIActivate(var Message:TWMMDIActivate);'");
MakeCode(0x44AC78);
MakeCode(0x44ACCD);
MakeFunction(0x44AC78, 0x44ACD0);
MakeUnkn(0x44ACD0, 1);
MakeNameEx(0x44ACD0, "TCustomForm.WMNextDlgCtl", 0x20);
MakeComm(0x44ACD0, "'procedure TCustomForm.WMNextDlgCtl(var Message:TWMNextDlgCtl);'");
MakeCode(0x44ACD0);
MakeCode(0x44ACE1);
MakeFunction(0x44ACD0, 0x44ACF9);
MakeUnkn(0x44ACFC, 1);
MakeNameEx(0x44ACFC, "TCustomForm.WMEnterMenuLoop", 0x20);
MakeComm(0x44ACFC, "'procedure TCustomForm.WMEnterMenuLoop(var Message:TMessage);'");
MakeCode(0x44ACFC);
MakeFunction(0x44ACFC, 0x44AD17);
MakeUnkn(0x44AD18, 1);
MakeNameEx(0x44AD18, "GetMenuHelpContext", 0x20);
MakeComm(0x44AD18, "'function GetMenuHelpContext(Menu:TMenu):Integer;'");
MakeCode(0x44AD18);
MakeCode(0x44AD52);
MakeFunction(0x44AD18, 0x44AD55);
MakeUnkn(0x44AD58, 1);
MakeNameEx(0x44AD58, "ControlHasHelp", 0x20);
MakeComm(0x44AD58, "'function ControlHasHelp(const Control:TWinControl):Boolean;'");
MakeCode(0x44AD58);
MakeCode(0x44AD74);
MakeCode(0x44AD88);
MakeFunction(0x44AD58, 0x44AD8D);
MakeUnkn(0x44AD90, 1);
MakeNameEx(0x44AD90, "GetHelpInfo", 0x20);
MakeComm(0x44AD90, "'procedure GetHelpInfo(const Control:TWinControl; var HType:THelpType; var ContextID:Integer; var Keyword:AnsiString);'");
MakeCode(0x44AD90);
MakeCode(0x44ADAC);
MakeCode(0x44ADBD);
MakeFunction(0x44AD90, 0x44ADC2);
MakeUnkn(0x44ADC4, 1);
MakeNameEx(0x44ADC4, "TCustomForm.WMHelp", 0x20);
MakeComm(0x44ADC4, "'procedure TCustomForm.WMHelp(var Message:TWMHelp);'");
MakeCode(0x44ADC4);
MakeCode(0x44AE06);
MakeCode(0x44AE09);
MakeCode(0x44AE18);
MakeCode(0x44AE57);
MakeCode(0x44AE7E);
MakeCode(0x44AEA2);
MakeCode(0x44AED7);
MakeCode(0x44AEEC);
MakeCode(0x44AEFF);
MakeCode(0x44AF0C);
MakeCode(0x44AF15);
MakeCode(0x44AF1A);
MakeFunction(0x44ADC4, 0x44AF22);
MakeUnkn(0x44AF24, 1);
MakeNameEx(0x44AF24, "TCustomForm.WMGetMinMaxInfo", 0x20);
MakeComm(0x44AF24, "'procedure TCustomForm.WMGetMinMaxInfo(var Message:TWMGetMinMaxInfo);'");
MakeCode(0x44AF24);
MakeCode(0x44AF50);
MakeCode(0x44AF5A);
MakeCode(0x44AF66);
MakeCode(0x44AF70);
MakeCode(0x44AF87);
MakeFunction(0x44AF24, 0x44AF95);
MakeUnkn(0x44AF98, 1);
MakeNameEx(0x44AF98, "HandleEdge", 0x20);
MakeComm(0x44AF98, "'procedure HandleEdge(var Edge:Integer; SnapToEdge:Integer; SnapDistance:Integer);'");
MakeCode(0x44AF98);
MakeCode(0x44AFBE);
MakeFunction(0x44AF98, 0x44AFC2);
MakeUnkn(0x44AFC4, 1);
MakeNameEx(0x44AFC4, "TCustomForm.WMWindowPosChanging", 0x20);
MakeComm(0x44AFC4, "'procedure TCustomForm.WMWindowPosChanging(var Message:TWMWindowPosChanging);'");
MakeCode(0x44AFC4);
MakeCode(0x44AFF0);
MakeCode(0x44B069);
MakeFunction(0x44AFC4, 0x44B079);
MakeUnkn(0x44B07C, 1);
MakeNameEx(0x44B07C, "TCustomForm.CMActivate", 0x20);
MakeComm(0x44B07C, "'procedure TCustomForm.CMActivate(var Message:TCMActivate);'");
MakeCode(0x44B07C);
MakeCode(0x44B094);
MakeFunction(0x44B07C, 0x44B09E);
MakeUnkn(0x44B0A0, 1);
MakeNameEx(0x44B0A0, "TCustomForm.CMDeactivate", 0x20);
MakeComm(0x44B0A0, "'procedure TCustomForm.CMDeactivate(var Message:TCMDeactivate);'");
MakeCode(0x44B0A0);
MakeCode(0x44B0B8);
MakeFunction(0x44B0A0, 0x44B0C2);
MakeUnkn(0x44B0C4, 1);
MakeNameEx(0x44B0C4, "TCustomForm.CMDialogKey", 0x20);
MakeComm(0x44B0C4, "'procedure TCustomForm.CMDialogKey(var Message:TCMDialogKey);'");
MakeCode(0x44B0C4);
MakeCode(0x44B0EB);
MakeCode(0x44B11D);
MakeCode(0x44B13D);
MakeCode(0x44B13F);
MakeCode(0x44B152);
MakeCode(0x44B15B);
MakeFunction(0x44B0C4, 0x44B15E);
MakeUnkn(0x44B160, 1);
MakeNameEx(0x44B160, "TCustomForm.CMShowingChanged", 0x20);
MakeComm(0x44B160, "'procedure TCustomForm.CMShowingChanged(var Message:TMessage);'");
MakeCode(0x44B160);
MakeComm(0x44B182, "'TCustomForm.FComponentState:TComponentState'");
MakeComm(0x44B18B, "'TCustomForm.FFormState:TFormState'");
MakeComm(0x44B1AB, "'EInvalidOperation.Create'");
MakeCode(0x44B1B5);
MakeComm(0x44B1C2, "'TCustomForm.FFormState:TFormState'");
MakeComm(0x44B1DA, "'TCustomForm.FComponentState:TComponentState'");
MakeComm(0x44B1E7, "'TCustomForm.FShowing:Boolean'");
MakeComm(0x44B209, "'TCustomForm.DoShow'");
MakeCode(0x44B20E);
MakeCode(0x44B218);
MakeCode(0x44B22F);
MakeComm(0x44B232, "'TCustomForm.FPosition:TPosition'");
MakeComm(0x44B23E, "'TCustomForm.FPosition:TPosition'");
MakeComm(0x44B24E, "'TCustomForm.FFormStyle:TFormStyle'");
MakeCode(0x44B25B);
MakeComm(0x44B25E, "'TCustomForm.FFormStyle:TFormStyle'");
MakeCode(0x44B283);
MakeCode(0x44B29F);
MakeCode(0x44B2B8);
MakeCode(0x44B2CF);
MakeCode(0x44B2D5);
MakeCode(0x44B2DB);
MakeComm(0x44B2DE, "'TCustomForm.Width:Integer'");
MakeComm(0x44B2E5, "'TCustomForm.Height:Integer'");
MakeComm(0x44B2F2, "'TWinControl.SetBounds'");
MakeComm(0x44B2FB, "'TCustomForm.FVisible:Boolean'");
MakeCode(0x44B312);
MakeComm(0x44B315, "'TCustomForm.FPosition:TPosition'");
MakeComm(0x44B334, "'TCustomForm.FPosition:TPosition'");
MakeComm(0x44B340, "'TCustomForm.FOwner:TComponent'");
MakeComm(0x44B355, "'TCustomForm.FOwner:TComponent'");
MakeCode(0x44B358);
MakeCode(0x44B36C);
MakeCode(0x44B37F);
MakeCode(0x44B384);
MakeCode(0x44B39D);
MakeCode(0x44B3B4);
MakeCode(0x44B3BA);
MakeCode(0x44B3C0);
MakeComm(0x44B3C3, "'TCustomForm.Width:Integer'");
MakeComm(0x44B3CA, "'TCustomForm.Height:Integer'");
MakeComm(0x44B3D7, "'TWinControl.SetBounds'");
MakeComm(0x44B3E0, "'TCustomForm.FVisible:Boolean'");
MakeCode(0x44B3F7);
MakeComm(0x44B402, "'TCustomForm.FFormStyle:TFormStyle'");
MakeCode(0x44B427);
MakeCode(0x44B443);
MakeCode(0x44B45C);
MakeCode(0x44B473);
MakeCode(0x44B479);
MakeCode(0x44B47F);
MakeComm(0x44B482, "'TCustomForm.Width:Integer'");
MakeComm(0x44B489, "'TCustomForm.Height:Integer'");
MakeComm(0x44B496, "'TWinControl.SetBounds'");
MakeCode(0x44B49C);
MakeComm(0x44B49F, "'TCustomForm.FPosition:TPosition'");
MakeComm(0x44B4A9, "'TCustomForm.FFormStyle:TFormStyle'");
MakeComm(0x44B4B9, "'TCustomForm.FWindowState:TWindowState'");
MakeCode(0x44B4F8);
MakeComm(0x44B4FB, "'TCustomForm.FWindowState:TWindowState'");
MakeComm(0x44B51B, "'TCustomForm.Width:Integer'");
MakeComm(0x44B521, "'TCustomForm.Height:Integer'");
MakeCode(0x44B549);
MakeCode(0x44B56B);
MakeComm(0x44B56E, "'TCustomForm.FWindowState:TWindowState'");
MakeCode(0x44B590);
MakeComm(0x44B5A5, "'TCustomForm.DoHide'");
MakeCode(0x44B5AA);
MakeCode(0x44B5B4);
MakeCode(0x44B5CB);
MakeCode(0x44B5E2);
MakeComm(0x44B5E5, "'TCustomForm.FFormStyle:TFormStyle'");
MakeCode(0x44B5FB);
MakeComm(0x44B5FE, "'TCustomForm.FFormState:TFormState'");
MakeCode(0x44B626);
MakeCode(0x44B65C);
MakeCode(0x44B685);
MakeCode(0x44B695);
MakeCode(0x44B6A2);
MakeComm(0x44B6A5, "'TCustomForm.FFormState:TFormState'");
MakeCode(0x44B6AD);
MakeCode(0x44B6B2);
MakeCode(0x44B6B4);
MakeCode(0x44B6C1);
MakeCode(0x44B6CA);
MakeCode(0x44B6CF);
MakeFunction(0x44B160, 0x44B6D8);
MakeUnkn(0x44B6D8, 1);
MakeNameEx(0x44B6D8, "TCustomForm.CMIconChanged", 0x20);
MakeComm(0x44B6D8, "'procedure TCustomForm.CMIconChanged(var Message:TMessage);'");
MakeCode(0x44B6D8);
MakeCode(0x44B6F3);
MakeFunction(0x44B6D8, 0x44B6F5);
MakeUnkn(0x44B6F8, 1);
MakeNameEx(0x44B6F8, "TCustomForm.CMRelease", 0x20);
MakeComm(0x44B6F8, "'procedure TCustomForm.CMRelease;'");
MakeCode(0x44B6F8);
MakeFunction(0x44B6F8, 0x44B6FE);
MakeUnkn(0x44B700, 1);
MakeNameEx(0x44B700, "TCustomForm.CMTextChanged", 0x20);
MakeComm(0x44B700, "'procedure TCustomForm.CMTextChanged(var Message:TMessage);'");
MakeCode(0x44B700);
MakeCode(0x44B74C);
MakeFunction(0x44B700, 0x44B74E);
MakeUnkn(0x44B750, 1);
MakeNameEx(0x44B750, "TCustomForm.CMUIActivate", 0x20);
MakeComm(0x44B750, "'procedure TCustomForm.CMUIActivate;'");
MakeCode(0x44B750);
MakeComm(0x44B752, "'TCustomForm.DefaultHandler'");
MakeFunction(0x44B750, 0x44B756);
MakeUnkn(0x44B758, 1);
MakeNameEx(0x44B758, "TCustomForm.CMParentFontChanged", 0x20);
MakeComm(0x44B758, "'procedure TCustomForm.CMParentFontChanged(var Message:TMessage);'");
MakeCode(0x44B758);
MakeCode(0x44B778);
MakeCode(0x44B7A0);
MakeCode(0x44B7AD);
MakeCode(0x44B7B6);
MakeCode(0x44B7BB);
MakeCode(0x44B7BD);
MakeFunction(0x44B758, 0x44B7C1);
MakeUnkn(0x44B7C4, 1);
MakeNameEx(0x44B7C4, "TCustomForm.CMIsShortCut", 0x20);
MakeComm(0x44B7C4, "'procedure TCustomForm.CMIsShortCut(var Message:TWMKey);'");
MakeCode(0x44B7C4);
MakeCode(0x44B7E5);
MakeCode(0x44B7EA);
MakeFunction(0x44B7C4, 0x44B7EE);
MakeUnkn(0x44B7F0, 1);
MakeNameEx(0x44B7F0, "TCustomForm.Close", 0x20);
MakeComm(0x44B7F0, "'procedure TCustomForm.Close;'");
MakeCode(0x44B7F0);
MakeCode(0x44B80D);
MakeCode(0x44B833);
MakeCode(0x44B839);
MakeCode(0x44B83D);
MakeCode(0x44B866);
MakeCode(0x44B875);
MakeCode(0x44B886);
MakeCode(0x44B88D);
MakeFunction(0x44B7F0, 0x44B891);
MakeUnkn(0x44B894, 1);
MakeNameEx(0x44B894, "TCustomForm.CloseQuery", 0x20);
MakeComm(0x44B894, "'function TCustomForm.CloseQuery:Boolean;'");
MakeCode(0x44B894);
MakeCode(0x44B8B8);
MakeCode(0x44B8D1);
MakeCode(0x44B8EF);
MakeFunction(0x44B894, 0x44B8F7);
MakeUnkn(0x44B8F8, 1);
MakeNameEx(0x44B8F8, "TCustomForm.CloseModal", 0x20);
MakeComm(0x44B8F8, "'procedure TCustomForm.CloseModal;'");
MakeCode(0x44B8F8);
MakeCode(0x44B938);
MakeCode(0x44B945);
MakeCode(0x44B952);
MakeCode(0x44B95A);
MakeCode(0x44B964);
MakeCode(0x44B986);
MakeFunction(0x44B8F8, 0x44B98D);
MakeUnkn(0x44B990, 1);
MakeNameEx(0x44B990, "TCustomForm.Hide", 0x20);
MakeComm(0x44B990, "'procedure TCustomForm.Hide;'");
MakeCode(0x44B990);
MakeFunction(0x44B990, 0x44B998);
MakeUnkn(0x44B998, 1);
MakeNameEx(0x44B998, "TCustomForm.Show", 0x20);
MakeComm(0x44B998, "'procedure TCustomForm.Show;'");
MakeCode(0x44B998);
MakeFunction(0x44B998, 0x44B9AD);
MakeUnkn(0x44B9B0, 1);
MakeNameEx(0x44B9B0, "TCustomForm.SetFocus", 0x20);
MakeComm(0x44B9B0, "'procedure TCustomForm.SetFocus;'");
MakeCode(0x44B9B0);
MakeComm(0x44B9C6, "'TCustomForm.FActive:Boolean'");
MakeComm(0x44B9CF, "'TCustomForm.FVisible:Boolean'");
MakeComm(0x44B9D9, "'TLabel.GetEnabled'");
MakeCode(0x44B9E0);
MakeComm(0x44B9F7, "'EInvalidOperation.Create'");
MakeCode(0x44BA01);
MakeCode(0x44BA08);
MakeCode(0x44BA15);
MakeCode(0x44BA1E);
MakeCode(0x44BA23);
MakeFunction(0x44B9B0, 0x44BA29);
MakeUnkn(0x44BA2C, 1);
MakeNameEx(0x44BA2C, "TCustomForm.Release", 0x20);
MakeComm(0x44BA2C, "'procedure TCustomForm.Release;'");
MakeCode(0x44BA2C);
MakeFunction(0x44BA2C, 0x44BA47);
MakeCode(0x44BA48);
MakeComm(0x44BA6E, "'TCustomForm.FVisible:Boolean'");
MakeComm(0x44BA79, "'TLabel.GetEnabled'");
MakeComm(0x44BA83, "'TCustomForm.FFormState:TFormState'");
MakeComm(0x44BA8F, "'TCustomForm.FFormStyle:TFormStyle'");
MakeCode(0x44BA98);
MakeComm(0x44BAAF, "'EInvalidOperation.Create'");
MakeCode(0x44BAB9);
MakeCode(0x44BAD3);
MakeComm(0x44BAF3, "'TCustomForm.FFormState:TFormState'");
MakeComm(0x44BB02, "'0x2'");
MakeComm(0x44BB9A, "'TCustomForm.FModalResult:TModalResult'");
MakeCode(0x44BBA0);
MakeComm(0x44BBBB, "'TCustomForm.FModalResult:TModalResult'");
MakeCode(0x44BBC7);
MakeComm(0x44BBCA, "'TCustomForm.FModalResult:TModalResult'");
MakeCode(0x44BBDB);
MakeComm(0x44BBDE, "'TCustomForm.FModalResult:TModalResult'");
MakeCode(0x44BC1A);
MakeCode(0x44BC27);
MakeCode(0x44BC30);
MakeCode(0x44BC35);
MakeCode(0x44BC37);
MakeCode(0x44BC44);
MakeCode(0x44BC61);
MakeCode(0x44BC6D);
MakeCode(0x44BCA5);
MakeCode(0x44BCAF);
MakeCode(0x44BCBE);
MakeComm(0x44BCC9, "'TCustomForm.FFormState:TFormState'");
MakeCode(0x44BCD1);
MakeCode(0x44BCD6);
MakeCode(0x44BCDB);
MakeCode(0x44BCE8);
MakeCode(0x44BCF3);
MakeCode(0x44BCF8);
MakeCode(0x44BCFA);
MakeCode(0x44BD07);
MakeCode(0x44BD10);
MakeCode(0x44BD15);
MakeFunction(0x44BA48, 0x44BD20);
MakeUnkn(0x44BD20, 1);
MakeNameEx(0x44BD20, "TraverseClients", 0x20);
MakeComm(0x44BD20, "'procedure TraverseClients(Container:TWinControl);'");
MakeCode(0x44BD20);
MakeCode(0x44BD48);
MakeCode(0x44BD67);
MakeCode(0x44BD84);
MakeCode(0x44BD88);
MakeFunction(0x44BD20, 0x44BD8E);
MakeUnkn(0x44BD90, 1);
MakeNameEx(0x44BD90, "TCustomForm.UpdateActions", 0x20);
MakeComm(0x44BD90, "'procedure TCustomForm.UpdateActions;'");
MakeCode(0x44BD90);
MakeCode(0x44BDCA);
MakeCode(0x44BDE5);
MakeCode(0x44BDE9);
MakeCode(0x44BDF2);
MakeFunction(0x44BD90, 0x44BDF7);
MakeUnkn(0x44BDF8, 1);
MakeNameEx(0x44BDF8, "TCustomForm.RequestAlign", 0x20);
MakeComm(0x44BDF8, "'procedure TCustomForm.RequestAlign;'");
MakeCode(0x44BDF8);
MakeCode(0x44BE0B);
MakeFunction(0x44BDF8, 0x44BE11);
MakeUnkn(0x44BE14, 1);
MakeNameEx(0x44BE14, "TCustomForm.WMSettingChange", 0x20);
MakeComm(0x44BE14, "'procedure TCustomForm.WMSettingChange(var Message:TMessage);'");
MakeCode(0x44BE14);
MakeCode(0x44BE34);
MakeFunction(0x44BE14, 0x44BE37);
MakeUnkn(0x44BE38, 1);
MakeNameEx(0x44BE38, "ProcessExecute", 0x20);
MakeComm(0x44BE38, "'function ProcessExecute(Control:TControl):Boolean;'");
MakeCode(0x44BE38);
MakeCode(0x44BE5B);
MakeCode(0x44BE5F);
MakeCode(0x44BE61);
MakeFunction(0x44BE38, 0x44BE65);
MakeUnkn(0x44BE68, 1);
MakeNameEx(0x44BE68, "TraverseClients_0", 0x20);
MakeComm(0x44BE68, "'function TraverseClients(Container:TWinControl):Boolean;'");
MakeCode(0x44BE68);
MakeCode(0x44BE90);
MakeCode(0x44BEB2);
MakeCode(0x44BED3);
MakeCode(0x44BED7);
MakeCode(0x44BEDB);
MakeCode(0x44BEDD);
MakeFunction(0x44BE68, 0x44BEE3);
MakeUnkn(0x44BEE4, 1);
MakeNameEx(0x44BEE4, "TCustomForm.CMActionExecute", 0x20);
MakeComm(0x44BEE4, "'procedure TCustomForm.CMActionExecute(var Message:TMessage);'");
MakeCode(0x44BEE4);
MakeCode(0x44BF28);
MakeCode(0x44BF32);
MakeFunction(0x44BEE4, 0x44BF36);
MakeUnkn(0x44BF38, 1);
MakeNameEx(0x44BF38, "ProcessUpdate", 0x20);
MakeComm(0x44BF38, "'function ProcessUpdate(Control:TControl):Boolean;'");
MakeCode(0x44BF38);
MakeCode(0x44BF5B);
MakeCode(0x44BF5F);
MakeCode(0x44BF61);
MakeFunction(0x44BF38, 0x44BF65);
MakeUnkn(0x44BF68, 1);
MakeNameEx(0x44BF68, "TraverseClients_1", 0x20);
MakeComm(0x44BF68, "'function TraverseClients(Container:TWinControl):Boolean;'");
MakeCode(0x44BF68);
MakeCode(0x44BF90);
MakeCode(0x44BFB2);
MakeCode(0x44BFD3);
MakeCode(0x44BFD7);
MakeCode(0x44BFDB);
MakeCode(0x44BFDD);
MakeFunction(0x44BF68, 0x44BFE3);
MakeUnkn(0x44BFE4, 1);
MakeNameEx(0x44BFE4, "TCustomForm.CMActionUpdate", 0x20);
MakeComm(0x44BFE4, "'procedure TCustomForm.CMActionUpdate(var Message:TMessage);'");
MakeCode(0x44BFE4);
MakeCode(0x44C028);
MakeCode(0x44C032);
MakeFunction(0x44BFE4, 0x44C036);
MakeUnkn(0x44C038, 1);
MakeNameEx(0x44C038, "DispatchShortCut", 0x20);
MakeComm(0x44C038, "'function DispatchShortCut:Boolean;'");
MakeCode(0x44C038);
MakeCode(0x44C05B);
MakeCode(0x44C081);
MakeCode(0x44C085);
MakeCode(0x44C087);
MakeFunction(0x44C038, 0x44C08B);
MakeUnkn(0x44C08C, 1);
MakeNameEx(0x44C08C, "TCustomForm.IsShortCut", 0x20);
MakeComm(0x44C08C, "'procedure TCustomForm.IsShortCut(var Message:TWMKey);'");
MakeCode(0x44C08C);
MakeCode(0x44C0C0);
MakeCode(0x44C0EB);
MakeCode(0x44C0FA);
MakeCode(0x44C0FC);
MakeFunction(0x44C08C, 0x44C108);
MakeUnkn(0x44C108, 1);
MakeNameEx(0x44C108, "TCustomForm.QueryInterface", 0x20);
MakeComm(0x44C108, "'function TCustomForm.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x44C108);
MakeCode(0x44C131);
MakeCode(0x44C13B);
MakeCode(0x44C13D);
MakeFunction(0x44C108, 0x44C144);
MakeUnkn(0x44C144, 1);
MakeNameEx(0x44C144, "TCustomForm.MouseWheelHandler", 0x20);
MakeComm(0x44C144, "'procedure TCustomForm.MouseWheelHandler(var Message:TMessage);'");
MakeCode(0x44C144);
MakeCode(0x44C16D);
MakeCode(0x44C176);
MakeFunction(0x44C144, 0x44C17A);
MakeUnkn(0x44C17C, 1);
MakeNameEx(0x44C17C, "TCustomForm.HandleCreateException", 0x20);
MakeComm(0x44C17C, "'procedure TCustomForm.HandleCreateException;'");
MakeCode(0x44C17C);
MakeFunction(0x44C17C, 0x44C18B);
MakeUnkn(0x44C18C, 1);
MakeNameEx(0x44C18C, "TCustomForm.SetLayeredAttribs", 0x20);
MakeComm(0x44C18C, "'procedure TCustomForm.SetLayeredAttribs;'");
MakeCode(0x44C18C);
MakeCode(0x44C1D9);
MakeCode(0x44C1F7);
MakeCode(0x44C234);
MakeCode(0x44C260);
MakeFunction(0x44C18C, 0x44C263);
MakeUnkn(0x44C264, 1);
MakeNameEx(0x44C264, "TCustomForm.SetAlphaBlend", 0x20);
MakeComm(0x44C264, "'procedure TCustomForm.SetAlphaBlend(const Value:Boolean);'");
MakeCode(0x44C264);
MakeFunction(0x44C264, 0x44C278);
MakeUnkn(0x44C278, 1);
MakeNameEx(0x44C278, "TCustomForm.SetAlphaBlendValue", 0x20);
MakeComm(0x44C278, "'procedure TCustomForm.SetAlphaBlendValue(const Value:Byte);'");
MakeCode(0x44C278);
MakeFunction(0x44C278, 0x44C28C);
MakeUnkn(0x44C28C, 1);
MakeNameEx(0x44C28C, "TCustomForm.SetTransparentColorValue", 0x20);
MakeComm(0x44C28C, "'procedure TCustomForm.SetTransparentColorValue(const Value:TColor);'");
MakeCode(0x44C28C);
MakeFunction(0x44C28C, 0x44C2A0);
MakeUnkn(0x44C2A0, 1);
MakeNameEx(0x44C2A0, "TCustomForm.SetTransparentColor", 0x20);
MakeComm(0x44C2A0, "'procedure TCustomForm.SetTransparentColor(const Value:Boolean);'");
MakeCode(0x44C2A0);
MakeFunction(0x44C2A0, 0x44C2B4);
MakeUnkn(0x44C2B4, 1);
MakeNameEx(0x44C2B4, "TCustomForm.InitAlphaBlending", 0x20);
MakeComm(0x44C2B4, "'procedure TCustomForm.InitAlphaBlending(var Params:TCreateParams);'");
MakeCode(0x44C2B4);
MakeCode(0x44C2D5);
MakeFunction(0x44C2B4, 0x44C2DD);
MakeUnkn(0x44C2E0, 1);
MakeNameEx(0x44C2E0, "TCustomDockForm.Create", 0x20);
MakeComm(0x44C2E0, "'constructor TCustomDockForm.Create(AOwner:TComponent);'");
MakeCode(0x44C2E0);
MakeCode(0x44C2F2);
MakeCode(0x44C340);
MakeFunction(0x44C2E0, 0x44C347);
MakeUnkn(0x44C348, 1);
MakeNameEx(0x44C348, "TCustomDockForm.DoAddDockClient", 0x20);
MakeComm(0x44C348, "'procedure TCustomDockForm.DoAddDockClient(Client:TControl; const ARect:TRect);'");
MakeCode(0x44C348);
MakeCode(0x44C3B7);
MakeCode(0x44C3C8);
MakeCode(0x44C3D5);
MakeCode(0x44C3D9);
MakeCode(0x44C3E3);
MakeCode(0x44C409);
MakeCode(0x44C416);
MakeCode(0x44C41F);
MakeCode(0x44C424);
MakeFunction(0x44C348, 0x44C42C);
MakeUnkn(0x44C42C, 1);
MakeNameEx(0x44C42C, "TCustomDockForm.DoRemoveDockClient", 0x20);
MakeComm(0x44C42C, "'procedure TCustomDockForm.DoRemoveDockClient(Client:TControl);'");
MakeCode(0x44C42C);
MakeCode(0x44C448);
MakeFunction(0x44C42C, 0x44C44A);
MakeUnkn(0x44C44C, 1);
MakeNameEx(0x44C44C, "TCustomDockForm.Loaded", 0x20);
MakeComm(0x44C44C, "'procedure TCustomDockForm.Loaded;'");
MakeCode(0x44C44C);
MakeCode(0x44C466);
MakeCode(0x44C489);
MakeFunction(0x44C44C, 0x44C498);
MakeUnkn(0x44C498, 1);
MakeNameEx(0x44C498, "TCustomDockForm.GetSiteInfo", 0x20);
MakeComm(0x44C498, "'procedure TCustomDockForm.GetSiteInfo(Client:TControl; var InfluenceRect:TRect; MousePos:TPoint; var CanDock:Boolean);'");
MakeCode(0x44C498);
MakeFunction(0x44C498, 0x44C4C3);
MakeUnkn(0x44C4C4, 1);
MakeNameEx(0x44C4C4, "TCustomDockForm.WMNCHitTest", 0x20);
MakeComm(0x44C4C4, "'procedure TCustomDockForm.WMNCHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x44C4C4);
MakeCode(0x44C4E6);
MakeFunction(0x44C4C4, 0x44C4E9);
MakeUnkn(0x44C4EC, 1);
MakeNameEx(0x44C4EC, "TCustomDockForm.WMNCLButtonDown", 0x20);
MakeComm(0x44C4EC, "'procedure TCustomDockForm.WMNCLButtonDown(var Message:TWMNCLButtonDown);'");
MakeCode(0x44C4EC);
MakeCode(0x44C575);
MakeCode(0x44C57E);
MakeFunction(0x44C4EC, 0x44C581);
MakeUnkn(0x44C584, 1);
MakeNameEx(0x44C584, "TCustomDockForm.CMControlListChange", 0x20);
MakeComm(0x44C584, "'procedure TCustomDockForm.CMControlListChange(var Message:TMessage);'");
MakeCode(0x44C584);
MakeCode(0x44C5D3);
MakeFunction(0x44C584, 0x44C5DA);
MakeUnkn(0x44C5DC, 1);
MakeNameEx(0x44C5DC, "TCustomDockForm.CMDockNotification", 0x20);
MakeComm(0x44C5DC, "'procedure TCustomDockForm.CMDockNotification(var Message:TCMDockNotification);'");
MakeCode(0x44C5DC);
MakeCode(0x44C61E);
MakeCode(0x44C660);
MakeCode(0x44C671);
MakeCode(0x44C67E);
MakeCode(0x44C682);
MakeCode(0x44C68C);
MakeCode(0x44C699);
MakeCode(0x44C6A2);
MakeCode(0x44C6A7);
MakeFunction(0x44C5DC, 0x44C6AE);
MakeUnkn(0x44C6B0, 1);
MakeNameEx(0x44C6B0, "TCustomDockForm.CMUnDockClient", 0x20);
MakeComm(0x44C6B0, "'procedure TCustomDockForm.CMUnDockClient(var Message:TCMUnDockClient);'");
MakeCode(0x44C6B0);
MakeFunction(0x44C6B0, 0x44C6C6);
MakeUnkn(0x44C6C8, 1);
MakeNameEx(0x44C6C8, "TCustomDockForm.CMVisibleChanged", 0x20);
MakeComm(0x44C6C8, "'procedure TCustomDockForm.CMVisibleChanged(var Message:TMessage);'");
MakeCode(0x44C6C8);
MakeCode(0x44C6EB);
MakeCode(0x44C700);
MakeFunction(0x44C6C8, 0x44C704);
MakeUnkn(0x44C704, 1);
MakeNameEx(0x44C704, "TMonitor.GetLeft", 0x20);
MakeComm(0x44C704, "'function TMonitor.GetLeft:Integer;'");
MakeCode(0x44C704);
MakeFunction(0x44C704, 0x44C71B);
MakeUnkn(0x44C71C, 1);
MakeNameEx(0x44C71C, "TMonitor.GetHeight", 0x20);
MakeComm(0x44C71C, "'function TMonitor.GetHeight:Integer;'");
MakeCode(0x44C71C);
MakeFunction(0x44C71C, 0x44C738);
MakeUnkn(0x44C738, 1);
MakeNameEx(0x44C738, "TMonitor.GetTop", 0x20);
MakeComm(0x44C738, "'function TMonitor.GetTop:Integer;'");
MakeCode(0x44C738);
MakeFunction(0x44C738, 0x44C750);
MakeUnkn(0x44C750, 1);
MakeNameEx(0x44C750, "TMonitor.GetWidth", 0x20);
MakeComm(0x44C750, "'function TMonitor.GetWidth:Integer;'");
MakeCode(0x44C750);
MakeFunction(0x44C750, 0x44C76B);
MakeUnkn(0x44C76C, 1);
MakeNameEx(0x44C76C, "TMonitor.GetBoundsRect", 0x20);
MakeComm(0x44C76C, "'function TMonitor.GetBoundsRect:TRect;'");
MakeCode(0x44C76C);
MakeFunction(0x44C76C, 0x44C79A);
MakeUnkn(0x44C79C, 1);
MakeNameEx(0x44C79C, "TMonitor.GetWorkareaRect", 0x20);
MakeComm(0x44C79C, "'function TMonitor.GetWorkareaRect:TRect;'");
MakeCode(0x44C79C);
MakeFunction(0x44C79C, 0x44C7CA);
MakeUnkn(0x44C7CC, 1);
MakeNameEx(0x44C7CC, "TScreen.Create", 0x20);
MakeComm(0x44C7CC, "'constructor TScreen.Create(AOwner:TComponent);'");
MakeCode(0x44C7CC);
MakeCode(0x44C7DE);
MakeCode(0x44C91B);
MakeFunction(0x44C7CC, 0x44C922);
MakeUnkn(0x44C924, 1);
MakeNameEx(0x44C924, "TScreen.Destroy", 0x20);
MakeComm(0x44C924, "'destructor TScreen.Destroy;'");
MakeCode(0x44C924);
MakeCode(0x44C994);
MakeCode(0x44C9A7);
MakeCode(0x44C9E5);
MakeFunction(0x44C924, 0x44C9EA);
MakeUnkn(0x44C9EC, 1);
MakeNameEx(0x44C9EC, "TScreen.GetHeight", 0x20);
MakeComm(0x44C9EC, "'function TScreen.GetHeight:Integer;'");
MakeCode(0x44C9EC);
MakeFunction(0x44C9EC, 0x44C9F8);
MakeUnkn(0x44C9F8, 1);
MakeNameEx(0x44C9F8, "TScreen.GetWidth", 0x20);
MakeComm(0x44C9F8, "'function TScreen.GetWidth:Integer;'");
MakeCode(0x44C9F8);
MakeFunction(0x44C9F8, 0x44CA04);
MakeUnkn(0x44CA04, 1);
MakeNameEx(0x44CA04, "TScreen.GetDesktopTop", 0x20);
MakeComm(0x44CA04, "'function TScreen.GetDesktopTop:Integer;'");
MakeCode(0x44CA04);
MakeFunction(0x44CA04, 0x44CA10);
MakeUnkn(0x44CA10, 1);
MakeNameEx(0x44CA10, "TScreen.GetDesktopLeft", 0x20);
MakeComm(0x44CA10, "'function TScreen.GetDesktopLeft:Integer;'");
MakeCode(0x44CA10);
MakeFunction(0x44CA10, 0x44CA1C);
MakeUnkn(0x44CA1C, 1);
MakeNameEx(0x44CA1C, "TScreen.GetDesktopHeight", 0x20);
MakeComm(0x44CA1C, "'function TScreen.GetDesktopHeight:Integer;'");
MakeCode(0x44CA1C);
MakeFunction(0x44CA1C, 0x44CA28);
MakeUnkn(0x44CA28, 1);
MakeNameEx(0x44CA28, "TScreen.GetDesktopWidth", 0x20);
MakeComm(0x44CA28, "'function TScreen.GetDesktopWidth:Integer;'");
MakeCode(0x44CA28);
MakeFunction(0x44CA28, 0x44CA34);
MakeUnkn(0x44CA34, 1);
MakeNameEx(0x44CA34, "TScreen.GetMonitor", 0x20);
MakeComm(0x44CA34, "'function TScreen.GetMonitor(Index:Integer):TMonitor;'");
MakeCode(0x44CA34);
MakeFunction(0x44CA34, 0x44CA47);
MakeUnkn(0x44CA48, 1);
MakeNameEx(0x44CA48, "TScreen.GetMonitorCount", 0x20);
MakeComm(0x44CA48, "'function TScreen.GetMonitorCount:Integer;'");
MakeCode(0x44CA48);
MakeCode(0x44CA5E);
MakeFunction(0x44CA48, 0x44CA61);
MakeUnkn(0x44CA64, 1);
MakeNameEx(0x44CA64, "TScreen.GetForm", 0x20);
MakeComm(0x44CA64, "'function TScreen.GetForm(Index:Integer):TForm;'");
MakeCode(0x44CA64);
MakeFunction(0x44CA64, 0x44CA77);
MakeUnkn(0x44CA78, 1);
MakeNameEx(0x44CA78, "TScreen.GetFormCount", 0x20);
MakeComm(0x44CA78, "'function TScreen.GetFormCount:Integer;'");
MakeCode(0x44CA78);
MakeFunction(0x44CA78, 0x44CA7F);
MakeUnkn(0x44CA80, 1);
MakeNameEx(0x44CA80, "TScreen.GetCustomForms", 0x20);
MakeComm(0x44CA80, "'function TScreen.GetCustomForms(Index:Integer):TCustomForm;'");
MakeCode(0x44CA80);
MakeFunction(0x44CA80, 0x44CA93);
MakeUnkn(0x44CA94, 1);
MakeNameEx(0x44CA94, "TScreen.GetCustomFormCount", 0x20);
MakeComm(0x44CA94, "'function TScreen.GetCustomFormCount:Integer;'");
MakeCode(0x44CA94);
MakeFunction(0x44CA94, 0x44CA9B);
MakeUnkn(0x44CA9C, 1);
MakeNameEx(0x44CA9C, "TScreen.UpdateLastActive", 0x20);
MakeComm(0x44CA9C, "'procedure TScreen.UpdateLastActive;'");
MakeCode(0x44CA9C);
MakeCode(0x44CAC2);
MakeCode(0x44CAE5);
MakeFunction(0x44CA9C, 0x44CAE7);
MakeUnkn(0x44CAE8, 1);
MakeNameEx(0x44CAE8, "TScreen.AddForm", 0x20);
MakeComm(0x44CAE8, "'procedure TScreen.AddForm(AForm:TCustomForm);'");
MakeCode(0x44CAE8);
MakeCode(0x44CB1D);
MakeFunction(0x44CAE8, 0x44CB20);
MakeUnkn(0x44CB20, 1);
MakeNameEx(0x44CB20, "TScreen.RemoveForm", 0x20);
MakeComm(0x44CB20, "'procedure TScreen.RemoveForm(AForm:TCustomForm);'");
MakeCode(0x44CB20);
MakeCode(0x44CB6B);
MakeFunction(0x44CB20, 0x44CB6E);
MakeUnkn(0x44CB70, 1);
MakeNameEx(0x44CB70, "TScreen.AddDataModule", 0x20);
MakeComm(0x44CB70, "'procedure TScreen.AddDataModule(DataModule:TDataModule);'");
MakeCode(0x44CB70);
MakeFunction(0x44CB70, 0x44CB79);
MakeUnkn(0x44CB7C, 1);
MakeNameEx(0x44CB7C, "TScreen.RemoveDataModule", 0x20);
MakeComm(0x44CB7C, "'procedure TScreen.RemoveDataModule(DataModule:TDataModule);'");
MakeCode(0x44CB7C);
MakeFunction(0x44CB7C, 0x44CB85);
MakeUnkn(0x44CB88, 1);
MakeNameEx(0x44CB88, "TScreen.CreateCursors", 0x20);
MakeComm(0x44CB88, "'procedure TScreen.CreateCursors;'");
MakeCode(0x44CB88);
MakeCode(0x44CBA7);
MakeCode(0x44CBB1);
MakeCode(0x44CBB6);
MakeCode(0x44CBBE);
MakeCode(0x44CBC0);
MakeFunction(0x44CB88, 0x44CBE2);
MakeUnkn(0x44CBE4, 1);
MakeNameEx(0x44CBE4, "TScreen.DestroyCursors", 0x20);
MakeComm(0x44CBE4, "'procedure TScreen.DestroyCursors;'");
MakeCode(0x44CBE4);
MakeCode(0x44CBF0);
MakeCode(0x44CBFD);
MakeCode(0x44CC06);
MakeCode(0x44CC0F);
MakeCode(0x44CC23);
MakeCode(0x44CC3C);
MakeFunction(0x44CBE4, 0x44CC40);
MakeUnkn(0x44CC40, 1);
MakeNameEx(0x44CC40, "TScreen.InsertCursor", 0x20);
MakeComm(0x44CC40, "'procedure TScreen.InsertCursor(Index:Integer; Handle:HCURSOR);'");
MakeCode(0x44CC40);
MakeFunction(0x44CC40, 0x44CC65);
MakeUnkn(0x44CC68, 1);
MakeNameEx(0x44CC68, "TScreen.GetImes", 0x20);
MakeComm(0x44CC68, "'function TScreen.GetImes:TStrings;'");
MakeCode(0x44CC68);
MakeCode(0x44CCD9);
MakeCode(0x44CDB8);
MakeCode(0x44CDC5);
MakeCode(0x44CDCF);
MakeCode(0x44CDD4);
MakeCode(0x44CDD6);
MakeCode(0x44CDE3);
MakeCode(0x44CDF4);
MakeCode(0x44CDFA);
MakeCode(0x44CE07);
MakeCode(0x44CE13);
MakeCode(0x44CE18);
MakeFunction(0x44CC68, 0x44CE21);
MakeUnkn(0x44CE68, 1);
MakeNameEx(0x44CE68, "TScreen.GetDefaultIME", 0x20);
MakeComm(0x44CE68, "'function TScreen.GetDefaultIME:AnsiString;'");
MakeCode(0x44CE68);
MakeFunction(0x44CE68, 0x44CE82);
MakeUnkn(0x44CE84, 1);
MakeNameEx(0x44CE84, "TScreen.IconFontChanged", 0x20);
MakeComm(0x44CE84, "'procedure TScreen.IconFontChanged(Sender:TObject);'");
MakeCode(0x44CE84);
MakeCode(0x44CECF);
MakeFunction(0x44CE84, 0x44CED2);
MakeUnkn(0x44CED4, 1);
MakeNameEx(0x44CED4, "TScreen.GetDataModule", 0x20);
MakeComm(0x44CED4, "'function TScreen.GetDataModule(Index:Integer):TDataModule;'");
MakeCode(0x44CED4);
MakeFunction(0x44CED4, 0x44CEE7);
MakeUnkn(0x44CEE8, 1);
MakeNameEx(0x44CEE8, "TScreen.GetDataModuleCount", 0x20);
MakeComm(0x44CEE8, "'function TScreen.GetDataModuleCount:Integer;'");
MakeCode(0x44CEE8);
MakeFunction(0x44CEE8, 0x44CEEF);
MakeUnkn(0x44CEF0, 1);
MakeNameEx(0x44CEF0, "TScreen.GetCursors", 0x20);
MakeComm(0x44CEF0, "'function TScreen.GetCursors(Index:Integer):HCURSOR;'");
MakeCode(0x44CEF0);
MakeCode(0x44CEFC);
MakeCode(0x44CEFE);
MakeCode(0x44CF07);
MakeCode(0x44CF10);
MakeCode(0x44CF13);
MakeFunction(0x44CEF0, 0x44CF16);
MakeUnkn(0x44CF18, 1);
MakeNameEx(0x44CF18, "TScreen.SetCursor", 0x20);
MakeComm(0x44CF18, "'procedure TScreen.SetCursor(Value:TCursor);'");
MakeCode(0x44CF18);
MakeCode(0x44CF8C);
MakeCode(0x44CF9C);
MakeCode(0x44CF9F);
MakeFunction(0x44CF18, 0x44CFA6);
MakeUnkn(0x44CFA8, 1);
MakeNameEx(0x44CFA8, "TScreen.GetMetricSettings", 0x20);
MakeComm(0x44CFA8, "'procedure TScreen.GetMetricSettings;'");
MakeCode(0x44CFA8);
MakeCode(0x44CFCF);
MakeCode(0x44CFF2);
MakeCode(0x44D01D);
MakeCode(0x44D031);
MakeCode(0x44D085);
MakeCode(0x44D0A9);
MakeCode(0x44D0C9);
MakeCode(0x44D0D6);
MakeCode(0x44D0EC);
MakeCode(0x44D0ED);
MakeCode(0x44D0F2);
MakeFunction(0x44CFA8, 0x44D0F9);
MakeUnkn(0x44D0FC, 1);
MakeNameEx(0x44D0FC, "TScreen.DisableAlign", 0x20);
MakeComm(0x44D0FC, "'procedure TScreen.DisableAlign;'");
MakeCode(0x44D0FC);
MakeFunction(0x44D0FC, 0x44D104);
MakeUnkn(0x44D104, 1);
MakeNameEx(0x44D104, "TScreen.EnableAlign", 0x20);
MakeComm(0x44D104, "'procedure TScreen.EnableAlign;'");
MakeCode(0x44D104);
MakeFunction(0x44D104, 0x44D124);
MakeUnkn(0x44D124, 1);
MakeNameEx(0x44D124, "TScreen.Realign", 0x20);
MakeComm(0x44D124, "'procedure TScreen.Realign;'");
MakeCode(0x44D124);
MakeFunction(0x44D124, 0x44D12C);
MakeUnkn(0x44D12C, 1);
MakeNameEx(0x44D12C, "InsertBefore_0", 0x20);
MakeComm(0x44D12C, "'function InsertBefore(C1:TCustomForm; C2:TCustomForm; AAlign:TAlign):Boolean;'");
MakeCode(0x44D12C);
MakeCode(0x44D14B);
MakeCode(0x44D156);
MakeCode(0x44D169);
MakeCode(0x44D174);
MakeCode(0x44D185);
MakeFunction(0x44D12C, 0x44D18B);
MakeUnkn(0x44D18C, 1);
MakeNameEx(0x44D18C, "DoPosition_0", 0x20);
MakeComm(0x44D18C, "'procedure DoPosition(Form:TCustomForm; AAlign:TAlign);'");
MakeCode(0x44D18C);
MakeCode(0x44D1B8);
MakeCode(0x44D1BB);
MakeCode(0x44D1DE);
MakeCode(0x44D1E4);
MakeCode(0x44D20E);
MakeCode(0x44D225);
MakeCode(0x44D23A);
MakeCode(0x44D248);
MakeCode(0x44D262);
MakeCode(0x44D26C);
MakeCode(0x44D281);
MakeCode(0x44D2A8);
MakeCode(0x44D2B7);
MakeCode(0x44D2E0);
MakeCode(0x44D2F1);
MakeCode(0x44D302);
MakeCode(0x44D30E);
MakeCode(0x44D31B);
MakeCode(0x44D335);
MakeFunction(0x44D18C, 0x44D33C);
MakeUnkn(0x44D33C, 1);
MakeNameEx(0x44D33C, "DoAlign_0", 0x20);
MakeComm(0x44D33C, "'procedure DoAlign(AAlign:TAlign);'");
MakeCode(0x44D33C);
MakeCode(0x44D3AE);
MakeCode(0x44D3CC);
MakeCode(0x44D40B);
MakeCode(0x44D40C);
MakeCode(0x44D434);
MakeCode(0x44D443);
MakeCode(0x44D449);
MakeCode(0x44D45F);
MakeCode(0x44D480);
MakeFunction(0x44D33C, 0x44D487);
MakeUnkn(0x44D488, 1);
MakeNameEx(0x44D488, "AlignWork_0", 0x20);
MakeComm(0x44D488, "'function AlignWork:Boolean;'");
MakeCode(0x44D488);
MakeCode(0x44D4A2);
MakeCode(0x44D4D0);
MakeCode(0x44D4D6);
MakeCode(0x44D4D8);
MakeFunction(0x44D488, 0x44D4DE);
MakeUnkn(0x44D4E0, 1);
MakeNameEx(0x44D4E0, "TScreen.AlignForms", 0x20);
MakeComm(0x44D4E0, "'procedure TScreen.AlignForms(AForm:TCustomForm; var Rect:TRect);'");
MakeCode(0x44D4E0);
MakeCode(0x44D544);
MakeCode(0x44D551);
MakeCode(0x44D55A);
MakeCode(0x44D55F);
MakeCode(0x44D561);
MakeFunction(0x44D4E0, 0x44D565);
MakeUnkn(0x44D568, 1);
MakeNameEx(0x44D568, "TScreen.AlignForm", 0x20);
MakeComm(0x44D568, "'procedure TScreen.AlignForm(AForm:TCustomForm);'");
MakeCode(0x44D568);
MakeCode(0x44D58E);
MakeCode(0x44D5C0);
MakeCode(0x44D5CD);
MakeCode(0x44D5E1);
MakeCode(0x44D5E6);
MakeCode(0x44D5E8);
MakeFunction(0x44D568, 0x44D5ED);
MakeUnkn(0x44D5F0, 1);
MakeNameEx(0x44D5F0, "TScreen.ResetFonts", 0x20);
MakeComm(0x44D5F0, "'procedure TScreen.ResetFonts;'");
MakeCode(0x44D5F0);
MakeFunction(0x44D5F0, 0x44D5F9);
MakeUnkn(0x44D5FC, 1);
MakeNameEx(0x44D5FC, "GetHint", 0x20);
MakeComm(0x44D5FC, "'function GetHint(Control:TControl):AnsiString;'");
MakeCode(0x44D5FC);
MakeCode(0x44D606);
MakeCode(0x44D614);
MakeCode(0x44D624);
MakeCode(0x44D628);
MakeFunction(0x44D5FC, 0x44D632);
MakeUnkn(0x44D634, 1);
MakeNameEx(0x44D634, "GetHintControl", 0x20);
MakeComm(0x44D634, "'function GetHintControl(Control:TControl):TControl;'");
MakeCode(0x44D634);
MakeFunction(0x44D634, 0x44D653);
MakeUnkn(0x44D654, 1);
MakeNameEx(0x44D654, "HintTimerProc", 0x20);
MakeComm(0x44D654, "'procedure HintTimerProc(Wnd:HWND; Msg:Longint; TimerID:Longint; SysTime:Longint); stdcall;'");
MakeCode(0x44D654);
MakeCode(0x44D67B);
MakeCode(0x44D685);
MakeCode(0x44D69F);
MakeFunction(0x44D654, 0x44D6A6);
MakeUnkn(0x44D6A8, 1);
MakeNameEx(0x44D6A8, "HintMouseThread", 0x20);
MakeComm(0x44D6A8, "'procedure HintMouseThread(Param:Integer); stdcall;'");
MakeCode(0x44D6A8);
MakeCode(0x44D6C0);
MakeCode(0x44D6E9);
MakeFunction(0x44D6A8, 0x44D704);
MakeUnkn(0x44D704, 1);
MakeNameEx(0x44D704, "HintGetMsgHook", 0x20);
MakeComm(0x44D704, "'function HintGetMsgHook(nCode:Integer; wParam:Longint; var Msg:TMsg):Longint; stdcall;'");
MakeCode(0x44D704);
MakeCode(0x44D73C);
MakeFunction(0x44D704, 0x44D745);
MakeUnkn(0x44D748, 1);
MakeNameEx(0x44D748, "HookHintHooks", 0x20);
MakeComm(0x44D748, "'procedure HookHintHooks;'");
MakeCode(0x44D748);
MakeCode(0x44D77A);
MakeCode(0x44D795);
MakeCode(0x44D7B9);
MakeFunction(0x44D748, 0x44D7BB);
MakeUnkn(0x44D7BC, 1);
MakeNameEx(0x44D7BC, "UnhookHintHooks", 0x20);
MakeComm(0x44D7BC, "'procedure UnhookHintHooks;'");
MakeCode(0x44D7BC);
MakeCode(0x44D7D0);
MakeCode(0x44D805);
MakeFunction(0x44D7BC, 0x44D818);
MakeUnkn(0x44D818, 1);
MakeNameEx(0x44D818, "GetAnimation", 0x20);
MakeComm(0x44D818, "'function GetAnimation:Boolean;'");
MakeCode(0x44D818);
MakeCode(0x44D841);
MakeFunction(0x44D818, 0x44D846);
MakeUnkn(0x44D848, 1);
MakeNameEx(0x44D848, "SetAnimation", 0x20);
MakeComm(0x44D848, "'procedure SetAnimation(Value:Boolean);'");
MakeCode(0x44D848);
MakeFunction(0x44D848, 0x44D86E);
MakeUnkn(0x44D870, 1);
MakeNameEx(0x44D870, "ShowWinNoAnimate", 0x20);
MakeComm(0x44D870, "'procedure ShowWinNoAnimate(Handle:HWND; CmdShow:Integer);'");
MakeCode(0x44D870);
MakeCode(0x44D889);
MakeCode(0x44D89B);
MakeFunction(0x44D870, 0x44D89F);
MakeUnkn(0x44D8A0, 1);
MakeNameEx(0x44D8A0, "_NF__A5A", 0x20);
MakeComm(0x44D8A0, "'constructor _NF__A5A;'");
MakeCode(0x44D8A0);
MakeCode(0x44D8B0);
MakeCode(0x44D8C7);
MakeCode(0x44D8EF);
MakeCode(0x44D909);
MakeCode(0x44D914);
MakeCode(0x44D9FE);
MakeCode(0x44DA12);
MakeCode(0x44DA46);
MakeCode(0x44DA86);
MakeFunction(0x44D8A0, 0x44DA8E);
MakeUnkn(0x44DA9C, 1);
MakeNameEx(0x44DA9C, "TApplication.Destroy", 0x20);
MakeComm(0x44DA9C, "'destructor TApplication.Destroy;'");
MakeCode(0x44DA9C);
MakeCode(0x44DAD4);
MakeCode(0x44DAF9);
MakeCode(0x44DB09);
MakeCode(0x44DB63);
MakeCode(0x44DB6C);
MakeCode(0x44DB7A);
MakeCode(0x44DB86);
MakeCode(0x44DBB2);
MakeFunction(0x44DA9C, 0x44DBB8);
MakeUnkn(0x44DBB8, 1);
MakeNameEx(0x44DBB8, "TApplication.CreateHandle", 0x20);
MakeComm(0x44DBB8, "'procedure TApplication.CreateHandle;'");
MakeCode(0x44DBB8);
MakeCode(0x44DC5A);
MakeCode(0x44DC6C);
MakeCode(0x44DC7F);
MakeCode(0x44DD05);
MakeCode(0x44DD43);
MakeCode(0x44DD50);
MakeCode(0x44DD59);
MakeCode(0x44DD5E);
MakeFunction(0x44DBB8, 0x44DD65);
MakeUnkn(0x44DD68, 1);
MakeNameEx(0x44DD68, "TApplication.ControlDestroyed", 0x20);
MakeComm(0x44DD68, "'procedure TApplication.ControlDestroyed(Control:TControl);'");
MakeCode(0x44DD68);
MakeCode(0x44DD79);
MakeCode(0x44DD83);
MakeCode(0x44DD91);
MakeCode(0x44DDA6);
MakeCode(0x44DDB4);
MakeCode(0x44DDBE);
MakeFunction(0x44DD68, 0x44DDC8);
MakeUnkn(0x44DDC8, 1);
MakeNameEx(0x44DDC8, "GetTopMostWindows", 0x20);
MakeComm(0x44DDC8, "'function GetTopMostWindows(Handle:HWND; Info:Pointer):BOOL; stdcall;'");
MakeCode(0x44DDC8);
MakeCode(0x44DE13);
MakeCode(0x44DE27);
MakeCode(0x44DE2E);
MakeFunction(0x44DDC8, 0x44DE37);
MakeUnkn(0x44DE38, 1);
MakeNameEx(0x44DE38, "TApplication.DoNormalizeTopMosts", 0x20);
MakeComm(0x44DE38, "'procedure TApplication.DoNormalizeTopMosts(IncludeMain:Boolean);'");
MakeCode(0x44DE38);
MakeCode(0x44DEA2);
MakeCode(0x44DEB1);
MakeCode(0x44DEDC);
MakeCode(0x44DEE2);
MakeFunction(0x44DE38, 0x44DEE7);
MakeUnkn(0x44DEE8, 1);
MakeNameEx(0x44DEE8, "TApplication.ModalStarted", 0x20);
MakeComm(0x44DEE8, "'procedure TApplication.ModalStarted;'");
MakeCode(0x44DEE8);
MakeCode(0x44DF12);
MakeFunction(0x44DEE8, 0x44DF14);
MakeUnkn(0x44DF14, 1);
MakeNameEx(0x44DF14, "TApplication.ModalFinished", 0x20);
MakeComm(0x44DF14, "'procedure TApplication.ModalFinished;'");
MakeCode(0x44DF14);
MakeCode(0x44DF3E);
MakeFunction(0x44DF14, 0x44DF40);
MakeUnkn(0x44DF40, 1);
MakeNameEx(0x44DF40, "TApplication.NormalizeTopMosts", 0x20);
MakeComm(0x44DF40, "'procedure TApplication.NormalizeTopMosts;'");
MakeCode(0x44DF40);
MakeFunction(0x44DF40, 0x44DF48);
MakeUnkn(0x44DF48, 1);
MakeNameEx(0x44DF48, "TApplication.NormalizeAllTopMosts", 0x20);
MakeComm(0x44DF48, "'procedure TApplication.NormalizeAllTopMosts;'");
MakeCode(0x44DF48);
MakeFunction(0x44DF48, 0x44DF50);
MakeUnkn(0x44DF50, 1);
MakeNameEx(0x44DF50, "TApplication.RestoreTopMosts", 0x20);
MakeComm(0x44DF50, "'procedure TApplication.RestoreTopMosts;'");
MakeCode(0x44DF50);
MakeCode(0x44DF86);
MakeCode(0x44DFAE);
MakeCode(0x44DFB9);
MakeFunction(0x44DF50, 0x44DFBC);
MakeUnkn(0x44DFBC, 1);
MakeNameEx(0x44DFBC, "TApplication.UseRightToLeftReading", 0x20);
MakeComm(0x44DFBC, "'function TApplication.UseRightToLeftReading:Boolean;'");
MakeCode(0x44DFBC);
MakeCode(0x44DFCE);
MakeCode(0x44DFD1);
MakeFunction(0x44DFBC, 0x44DFD4);
MakeUnkn(0x44DFD4, 1);
MakeNameEx(0x44DFD4, "TApplication.UseRightToLeftAlignment", 0x20);
MakeComm(0x44DFD4, "'function TApplication.UseRightToLeftAlignment:Boolean;'");
MakeCode(0x44DFD4);
MakeCode(0x44DFE6);
MakeCode(0x44DFE9);
MakeFunction(0x44DFD4, 0x44DFEC);
MakeUnkn(0x44DFEC, 1);
MakeNameEx(0x44DFEC, "TApplication.CheckIniChange", 0x20);
MakeComm(0x44DFEC, "'function TApplication.CheckIniChange(var Message:TMessage):Boolean;'");
MakeCode(0x44DFEC);
MakeCode(0x44E004);
MakeCode(0x44E019);
MakeCode(0x44E029);
MakeCode(0x44E03D);
MakeFunction(0x44DFEC, 0x44E043);
MakeUnkn(0x44E044, 1);
MakeNameEx(0x44E044, "TApplication.SettingChange", 0x20);
MakeComm(0x44E044, "'procedure TApplication.SettingChange(var Message:TWMSettingChange);'");
MakeCode(0x44E044);
MakeCode(0x44E08B);
MakeCode(0x44E098);
MakeCode(0x44E0A1);
MakeCode(0x44E0A6);
MakeFunction(0x44E044, 0x44E0AD);
MakeUnkn(0x44E0B0, 1);
MakeNameEx(0x44E0B0, "Default_0", 0x20);
MakeComm(0x44E0B0, "'procedure Default;'");
MakeCode(0x44E0B0);
MakeFunction(0x44E0B0, 0x44E0EA);
MakeUnkn(0x44E0EC, 1);
MakeNameEx(0x44E0EC, "DrawAppIcon", 0x20);
MakeComm(0x44E0EC, "'procedure DrawAppIcon;'");
MakeCode(0x44E0EC);
MakeFunction(0x44E0EC, 0x44E136);
MakeUnkn(0x44E138, 1);
MakeNameEx(0x44E138, "TApplication.WndProc", 0x20);
MakeComm(0x44E138, "'procedure TApplication.WndProc(var Message:TMessage);'");
MakeCode(0x44E138);
MakeCode(0x44E171);
MakeCode(0x44E18F);
MakeCode(0x44E19C);
MakeCode(0x44E1A0);
MakeCode(0x44E230);
MakeCode(0x44E252);
MakeCode(0x44E269);
MakeCode(0x44E2A6);
MakeCode(0x44E2BF);
MakeCode(0x44E2E5);
MakeCode(0x44E301);
MakeCode(0x44E31C);
MakeCode(0x44E329);
MakeCode(0x44E336);
MakeCode(0x44E342);
MakeCode(0x44E35A);
MakeCode(0x44E376);
MakeCode(0x44E382);
MakeCode(0x44E397);
MakeCode(0x44E3AA);
MakeCode(0x44E3CB);
MakeCode(0x44E410);
MakeCode(0x44E432);
MakeCode(0x44E460);
MakeCode(0x44E46C);
MakeCode(0x44E493);
MakeCode(0x44E4A0);
MakeCode(0x44E4CC);
MakeCode(0x44E4E8);
MakeCode(0x44E574);
MakeCode(0x44E58F);
MakeCode(0x44E59C);
MakeCode(0x44E5BD);
MakeCode(0x44E5DF);
MakeCode(0x44E678);
MakeCode(0x44E6A0);
MakeCode(0x44E6C8);
MakeCode(0x44E707);
MakeCode(0x44E721);
MakeCode(0x44E742);
MakeCode(0x44E75A);
MakeCode(0x44E774);
MakeCode(0x44E785);
MakeCode(0x44E7AB);
MakeCode(0x44E7BE);
MakeCode(0x44E7D8);
MakeCode(0x44E7E1);
MakeCode(0x44E7E8);
MakeCode(0x44E7F2);
MakeCode(0x44E807);
MakeFunction(0x44E138, 0x44E80E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44E818, -1);
MakeDword(0x44E814);
MakeDword(0x44E810);
MakeUnkn(0x44E83C, 1);
MakeNameEx(0x44E83C, "TApplication.GetIconHandle", 0x20);
MakeComm(0x44E83C, "'function TApplication.GetIconHandle:HICON;'");
MakeCode(0x44E83C);
MakeFunction(0x44E83C, 0x44E858);
MakeUnkn(0x44E858, 1);
MakeNameEx(0x44E858, "TApplication.Minimize", 0x20);
MakeComm(0x44E858, "'procedure TApplication.Minimize;'");
MakeCode(0x44E858);
MakeCode(0x44E892);
MakeCode(0x44E8E0);
MakeCode(0x44E8ED);
MakeCode(0x44E905);
MakeFunction(0x44E858, 0x44E908);
MakeUnkn(0x44E908, 1);
MakeNameEx(0x44E908, "TApplication.Restore", 0x20);
MakeComm(0x44E908, "'procedure TApplication.Restore;'");
MakeCode(0x44E908);
MakeCode(0x44E93B);
MakeCode(0x44E964);
MakeCode(0x44E971);
MakeCode(0x44E989);
MakeCode(0x44E99C);
MakeCode(0x44E9CD);
MakeCode(0x44E9ED);
MakeCode(0x44EA05);
MakeFunction(0x44E908, 0x44EA08);
MakeUnkn(0x44EA08, 1);
MakeNameEx(0x44EA08, "TApplication.BringToFront", 0x20);
MakeComm(0x44EA08, "'procedure TApplication.BringToFront;'");
MakeCode(0x44EA08);
MakeCode(0x44EA3E);
MakeFunction(0x44EA08, 0x44EA41);
MakeUnkn(0x44EA44, 1);
MakeNameEx(0x44EA44, "TApplication.GetTitle", 0x20);
MakeComm(0x44EA44, "'function TApplication.GetTitle:AnsiString;'");
MakeCode(0x44EA44);
MakeCode(0x44EA79);
MakeCode(0x44EA86);
MakeFunction(0x44EA44, 0x44EA8F);
MakeUnkn(0x44EA90, 1);
MakeNameEx(0x44EA90, "TApplication.IsDlgMsg", 0x20);
MakeComm(0x44EA90, "'function TApplication.IsDlgMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x44EA90);
MakeCode(0x44EAB0);
MakeFunction(0x44EA90, 0x44EAB4);
MakeUnkn(0x44EAB4, 1);
MakeNameEx(0x44EAB4, "TApplication.IsMDIMsg", 0x20);
MakeComm(0x44EAB4, "'function TApplication.IsMDIMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x44EAB4);
MakeCode(0x44EAFE);
MakeFunction(0x44EAB4, 0x44EB02);
MakeUnkn(0x44EB04, 1);
MakeNameEx(0x44EB04, "TApplication.IsKeyMsg", 0x20);
MakeComm(0x44EB04, "'function TApplication.IsKeyMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x44EB04);
MakeCode(0x44EB4C);
MakeCode(0x44EB54);
MakeCode(0x44EB63);
MakeCode(0x44EB69);
MakeCode(0x44EB88);
MakeCode(0x44EBB5);
MakeFunction(0x44EB04, 0x44EBBC);
MakeUnkn(0x44EBBC, 1);
MakeNameEx(0x44EBBC, "TApplication.IsHintMsg", 0x20);
MakeComm(0x44EBBC, "'function TApplication.IsHintMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x44EBBC);
MakeCode(0x44EBE7);
MakeFunction(0x44EBBC, 0x44EBEE);
MakeUnkn(0x44EBF0, 1);
MakeNameEx(0x44EBF0, "TApplication.IsShortCut", 0x20);
MakeComm(0x44EBF0, "'function TApplication.IsShortCut(var Message:TWMKey):Boolean;'");
MakeCode(0x44EBF0);
MakeCode(0x44EC17);
MakeCode(0x44EC47);
MakeCode(0x44EC4B);
MakeCode(0x44EC4D);
MakeFunction(0x44EBF0, 0x44EC59);
MakeUnkn(0x44EC5C, 1);
MakeNameEx(0x44EC5C, "TApplication.ProcessMessage", 0x20);
MakeComm(0x44EC5C, "'function TApplication.ProcessMessage(var Msg:TMsg):Boolean;'");
MakeCode(0x44EC5C);
MakeCode(0x44EC9E);
MakeCode(0x44ECE6);
MakeCode(0x44ECED);
MakeFunction(0x44EC5C, 0x44ECF4);
MakeUnkn(0x44ECF4, 1);
MakeNameEx(0x44ECF4, "TApplication.HandleMessage", 0x20);
MakeComm(0x44ECF4, "'procedure TApplication.HandleMessage;'");
MakeCode(0x44ECF4);
MakeCode(0x44ED10);
MakeFunction(0x44ECF4, 0x44ED15);
MakeUnkn(0x44ED18, 1);
MakeNameEx(0x44ED18, "TApplication.HookMainWindow", 0x20);
MakeComm(0x44ED18, "'procedure TApplication.HookMainWindow(Hook:TWindowHook);'");
MakeCode(0x44ED18);
MakeCode(0x44ED41);
MakeCode(0x44ED6E);
MakeFunction(0x44ED18, 0x44ED73);
MakeUnkn(0x44ED74, 1);
MakeNameEx(0x44ED74, "TApplication.UnhookMainWindow", 0x20);
MakeComm(0x44ED74, "'procedure TApplication.UnhookMainWindow(Hook:TWindowHook);'");
MakeCode(0x44ED74);
MakeCode(0x44ED9F);
MakeCode(0x44EDB0);
MakeCode(0x44EDE5);
MakeCode(0x44EDE9);
MakeFunction(0x44ED74, 0x44EDF0);
MakeUnkn(0x44EDF0, 1);
MakeNameEx(0x44EDF0, "TApplication.Initialize", 0x20);
MakeComm(0x44EDF0, "'procedure TApplication.Initialize;'");
MakeCode(0x44EDF0);
MakeCode(0x44EE05);
MakeFunction(0x44EDF0, 0x44EE07);
MakeUnkn(0x44EE08, 1);
MakeNameEx(0x44EE08, "TApplication.CreateForm", 0x20);
MakeComm(0x44EE08, "'procedure TApplication.CreateForm(InstanceClass:TComponentClass; var Reference:void );'");
MakeCode(0x44EE08);
MakeCode(0x44EE3C);
MakeCode(0x44EE46);
MakeCode(0x44EE5C);
MakeCode(0x44EE7F);
MakeFunction(0x44EE08, 0x44EE85);
MakeUnkn(0x44EE88, 1);
MakeNameEx(0x44EE88, "TApplication.Run", 0x20);
MakeComm(0x44EE88, "'procedure TApplication.Run;'");
MakeCode(0x44EE88);
MakeCode(0x44EEDD);
MakeCode(0x44EEE4);
MakeCode(0x44EF06);
MakeCode(0x44EF0D);
MakeCode(0x44EF23);
MakeCode(0x44EF2D);
MakeCode(0x44EF42);
MakeCode(0x44EF4E);
MakeCode(0x44EF5B);
MakeCode(0x44EF66);
MakeCode(0x44EF6B);
MakeFunction(0x44EE88, 0x44EF73);
MakeUnkn(0x44EF74, 1);
MakeNameEx(0x44EF74, "TApplication.Terminate", 0x20);
MakeComm(0x44EF74, "'procedure TApplication.Terminate;'");
MakeCode(0x44EF74);
MakeFunction(0x44EF74, 0x44EF85);
MakeUnkn(0x44EF88, 1);
MakeNameEx(0x44EF88, "TApplication.HandleException", 0x20);
MakeComm(0x44EF88, "'procedure TApplication.HandleException(Sender:TObject);'");
MakeCode(0x44EF88);
MakeCode(0x44EFA8);
MakeCode(0x44EFF1);
MakeCode(0x44F002);
MakeCode(0x44F013);
MakeFunction(0x44EF88, 0x44F016);
MakeUnkn(0x44F018, 1);
MakeNameEx(0x44F018, "TApplication.MessageBox", 0x20);
MakeComm(0x44F018, "'function TApplication.MessageBox(const Text:PChar; const Caption:PChar; Flags:Longint):Integer;'");
MakeCode(0x44F018);
MakeCode(0x44F09F);
MakeCode(0x44F0B1);
MakeCode(0x44F0C2);
MakeCode(0x44F0E6);
MakeCode(0x44F106);
MakeCode(0x44F113);
MakeCode(0x44F130);
MakeCode(0x44F142);
MakeCode(0x44F153);
MakeCode(0x44F16D);
MakeCode(0x44F172);
MakeFunction(0x44F018, 0x44F180);
MakeUnkn(0x44F180, 1);
MakeNameEx(0x44F180, "TApplication.ShowException", 0x20);
MakeComm(0x44F180, "'procedure TApplication.ShowException(E:Exception);'");
MakeCode(0x44F180);
MakeCode(0x44F1ED);
MakeCode(0x44F21A);
MakeCode(0x44F227);
MakeCode(0x44F23B);
MakeCode(0x44F240);
MakeFunction(0x44F180, 0x44F248);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44F254, -1);
MakeDword(0x44F250);
MakeDword(0x44F24C);
MakeUnkn(0x44F258, 1);
MakeNameEx(0x44F258, "TApplication.InvokeHelp", 0x20);
MakeComm(0x44F258, "'function TApplication.InvokeHelp(Command:Word; Data:Longint):Boolean;'");
MakeCode(0x44F258);
MakeCode(0x44F2A4);
MakeCode(0x44F2CA);
MakeCode(0x44F2D9);
MakeCode(0x44F2FA);
MakeCode(0x44F357);
MakeCode(0x44F36E);
MakeCode(0x44F394);
MakeCode(0x44F3B6);
MakeFunction(0x44F258, 0x44F3C0);
MakeUnkn(0x44F3C0, 1);
MakeNameEx(0x44F3C0, "TApplication.HelpKeyword", 0x20);
MakeComm(0x44F3C0, "'function TApplication.HelpKeyword(const Keyword:AnsiString):Boolean;'");
MakeCode(0x44F3C0);
MakeCode(0x44F400);
MakeCode(0x44F402);
MakeCode(0x44F40F);
MakeCode(0x44F418);
MakeCode(0x44F41D);
MakeFunction(0x44F3C0, 0x44F427);
MakeUnkn(0x44F428, 1);
MakeNameEx(0x44F428, "TApplication.HelpContext", 0x20);
MakeComm(0x44F428, "'function TApplication.HelpContext(Context:THelpContext):Boolean;'");
MakeCode(0x44F428);
MakeCode(0x44F468);
MakeCode(0x44F46A);
MakeCode(0x44F477);
MakeCode(0x44F480);
MakeCode(0x44F485);
MakeFunction(0x44F428, 0x44F48F);
MakeUnkn(0x44F490, 1);
MakeNameEx(0x44F490, "TApplication.HelpCommand", 0x20);
MakeComm(0x44F490, "'function TApplication.HelpCommand(Command:Integer; Data:Longint):Boolean;'");
MakeCode(0x44F490);
MakeFunction(0x44F490, 0x44F496);
MakeUnkn(0x44F498, 1);
MakeNameEx(0x44F498, "TApplication.SetShowHint", 0x20);
MakeComm(0x44F498, "'procedure TApplication.SetShowHint(Value:Boolean);'");
MakeCode(0x44F498);
MakeCode(0x44F4D0);
MakeCode(0x44F4E3);
MakeFunction(0x44F498, 0x44F4E6);
MakeUnkn(0x44F4E8, 1);
MakeNameEx(0x44F4E8, "TApplication.DoActionIdle", 0x20);
MakeComm(0x44F4E8, "'procedure TApplication.DoActionIdle;'");
MakeCode(0x44F4E8);
MakeCode(0x44F4FF);
MakeCode(0x44F544);
MakeCode(0x44F548);
MakeFunction(0x44F4E8, 0x44F54C);
MakeUnkn(0x44F54C, 1);
MakeNameEx(0x44F54C, "TApplication.DoMouseIdle", 0x20);
MakeComm(0x44F54C, "'function TApplication.DoMouseIdle:TControl;'");
MakeCode(0x44F54C);
MakeCode(0x44F57B);
MakeCode(0x44F584);
MakeCode(0x44F595);
MakeCode(0x44F5A2);
MakeCode(0x44F5AB);
MakeCode(0x44F5BC);
MakeFunction(0x44F54C, 0x44F5C4);
MakeUnkn(0x44F5C4, 1);
MakeNameEx(0x44F5C4, "TApplication.Idle", 0x20);
MakeComm(0x44F5C4, "'procedure TApplication.Idle(const Msg:TMsg);'");
MakeCode(0x44F5C4);
MakeCode(0x44F60D);
MakeCode(0x44F663);
MakeCode(0x44F671);
MakeCode(0x44F67B);
MakeCode(0x44F690);
MakeCode(0x44F6AE);
MakeCode(0x44F6B9);
MakeCode(0x44F6C6);
MakeCode(0x44F6D4);
MakeCode(0x44F6D9);
MakeFunction(0x44F5C4, 0x44F6E2);
MakeUnkn(0x44F6E4, 1);
MakeNameEx(0x44F6E4, "TApplication.NotifyForms", 0x20);
MakeComm(0x44F6E4, "'procedure TApplication.NotifyForms(Msg:Word);'");
MakeCode(0x44F6E4);
MakeCode(0x44F6FD);
MakeCode(0x44F719);
MakeFunction(0x44F6E4, 0x44F71D);
MakeUnkn(0x44F720, 1);
MakeNameEx(0x44F720, "TApplication.IconChanged", 0x20);
MakeComm(0x44F720, "'procedure TApplication.IconChanged(Sender:TObject);'");
MakeCode(0x44F720);
MakeCode(0x44F75A);
MakeCode(0x44F774);
MakeFunction(0x44F720, 0x44F781);
MakeUnkn(0x44F784, 1);
MakeNameEx(0x44F784, "TApplication.SetHint", 0x20);
MakeComm(0x44F784, "'procedure TApplication.SetHint(const Value:AnsiString);'");
MakeCode(0x44F784);
MakeCode(0x44F7BE);
MakeCode(0x44F7F3);
MakeCode(0x44F800);
MakeCode(0x44F809);
MakeCode(0x44F80E);
MakeCode(0x44F810);
MakeFunction(0x44F784, 0x44F815);
MakeUnkn(0x44F818, 1);
MakeNameEx(0x44F818, "SetVisible", 0x20);
MakeComm(0x44F818, "'procedure SetVisible(Value:Boolean);'");
MakeCode(0x44F818);
MakeCode(0x44F86F);
MakeFunction(0x44F818, 0x44F872);
MakeUnkn(0x44F874, 1);
MakeNameEx(0x44F874, "TApplication.UpdateVisible", 0x20);
MakeComm(0x44F874, "'procedure TApplication.UpdateVisible;'");
MakeCode(0x44F874);
MakeCode(0x44F89B);
MakeCode(0x44F8DB);
MakeCode(0x44F8E6);
MakeCode(0x44F8EA);
MakeCode(0x44F8F3);
MakeFunction(0x44F874, 0x44F8F9);
MakeUnkn(0x44F8FC, 1);
MakeNameEx(0x44F8FC, "TApplication.ValidateHelpSystem", 0x20);
MakeComm(0x44F8FC, "'function TApplication.ValidateHelpSystem:Boolean;'");
MakeCode(0x44F8FC);
MakeCode(0x44F915);
MakeCode(0x44F91D);
MakeFunction(0x44F8FC, 0x44F922);
MakeUnkn(0x44F924, 1);
MakeNameEx(0x44F924, "TApplication.StartHintTimer", 0x20);
MakeComm(0x44F924, "'procedure TApplication.StartHintTimer(Value:Integer; TimerMode:TTimerMode);'");
MakeCode(0x44F924);
MakeCode(0x44F961);
MakeFunction(0x44F924, 0x44F965);
MakeUnkn(0x44F968, 1);
MakeNameEx(0x44F968, "TApplication.StopHintTimer", 0x20);
MakeComm(0x44F968, "'procedure TApplication.StopHintTimer;'");
MakeCode(0x44F968);
MakeCode(0x44F98B);
MakeFunction(0x44F968, 0x44F98D);
MakeUnkn(0x44F990, 1);
MakeNameEx(0x44F990, "TApplication.HintMouseMessage", 0x20);
MakeComm(0x44F990, "'procedure TApplication.HintMouseMessage(Control:TControl; var Message:TMessage);'");
MakeCode(0x44F990);
MakeCode(0x44F9D7);
MakeCode(0x44F9E3);
MakeCode(0x44FA18);
MakeCode(0x44FA31);
MakeCode(0x44FA37);
MakeCode(0x44FA7A);
MakeCode(0x44FA97);
MakeFunction(0x44F990, 0x44FA9F);
MakeUnkn(0x44FAA0, 1);
MakeNameEx(0x44FAA0, "TApplication.HintTimerExpired", 0x20);
MakeComm(0x44FAA0, "'procedure TApplication.HintTimerExpired;'");
MakeCode(0x44FAA0);
MakeCode(0x44FAC2);
MakeCode(0x44FAD1);
MakeFunction(0x44FAA0, 0x44FAD5);
MakeUnkn(0x44FAD8, 1);
MakeNameEx(0x44FAD8, "TApplication.HideHint", 0x20);
MakeComm(0x44FAD8, "'procedure TApplication.HideHint;'");
MakeCode(0x44FAD8);
MakeCode(0x44FB19);
MakeFunction(0x44FAD8, 0x44FB1C);
MakeUnkn(0x44FB1C, 1);
MakeNameEx(0x44FB1C, "TApplication.CancelHint", 0x20);
MakeComm(0x44FB1C, "'procedure TApplication.CancelHint;'");
MakeCode(0x44FB1C);
MakeCode(0x44FB41);
MakeFunction(0x44FB1C, 0x44FB43);
MakeUnkn(0x44FB44, 1);
MakeNameEx(0x44FB44, "FindScanline", 0x20);
MakeComm(0x44FB44, "'function FindScanline(Source:Pointer; MaxLen:Cardinal; Value:Cardinal):Cardinal;'");
MakeCode(0x44FB44);
MakeFunction(0x44FB44, 0x44FB53);
MakeUnkn(0x44FB54, 1);
MakeNameEx(0x44FB54, "GetCursorHeightMargin", 0x20);
MakeComm(0x44FB54, "'function GetCursorHeightMargin:Integer;'");
MakeCode(0x44FB54);
MakeCode(0x44FBF7);
MakeCode(0x44FC3B);
MakeCode(0x44FC4B);
MakeCode(0x44FC58);
MakeCode(0x44FC67);
MakeCode(0x44FC6C);
MakeCode(0x44FC6E);
MakeCode(0x44FC7B);
MakeCode(0x44FC88);
MakeCode(0x44FC95);
MakeCode(0x44FC96);
MakeCode(0x44FC9B);
MakeCode(0x44FC9D);
MakeFunction(0x44FB54, 0x44FCA7);
MakeUnkn(0x44FCA8, 1);
MakeNameEx(0x44FCA8, "ValidateHintWindow", 0x20);
MakeComm(0x44FCA8, "'procedure ValidateHintWindow(HintClass:THintWindowClass);'");
MakeCode(0x44FCA8);
MakeCode(0x44FCB9);
MakeCode(0x44FCD7);
MakeCode(0x44FD01);
MakeFunction(0x44FCA8, 0x44FD05);
MakeUnkn(0x44FD08, 1);
MakeNameEx(0x44FD08, "MultiLineWidth", 0x20);
MakeComm(0x44FD08, "'function MultiLineWidth(const Value:AnsiString):Integer;'");
MakeCode(0x44FD08);
MakeCode(0x44FD30);
MakeCode(0x44FD34);
MakeCode(0x44FD3D);
MakeCode(0x44FD4B);
MakeCode(0x44FD7B);
MakeCode(0x44FD81);
MakeCode(0x44FD87);
MakeCode(0x44FD8C);
MakeCode(0x44FD99);
MakeCode(0x44FDA2);
MakeCode(0x44FDA7);
MakeFunction(0x44FD08, 0x44FDB2);
MakeUnkn(0x44FDB4, 1);
MakeNameEx(0x44FDB4, "TApplication.ActivateHint", 0x20);
MakeComm(0x44FDB4, "'procedure TApplication.ActivateHint(CursorPos:TPoint);'");
MakeCode(0x44FDB4);
MakeCode(0x44FEB6);
MakeCode(0x44FEE5);
MakeCode(0x44FFAF);
MakeCode(0x44FFBD);
MakeCode(0x44FFC1);
MakeCode(0x44FFC3);
MakeCode(0x450054);
MakeCode(0x4500E5);
MakeCode(0x4500F3);
MakeCode(0x450107);
MakeCode(0x45010E);
MakeCode(0x45011B);
MakeCode(0x45013A);
MakeCode(0x45013F);
MakeFunction(0x44FDB4, 0x450148);
MakeUnkn(0x450148, 1);
MakeNameEx(0x450148, "TApplication.GetCurrentHelpFile", 0x20);
MakeComm(0x450148, "'function TApplication.GetCurrentHelpFile:AnsiString;'");
MakeCode(0x450148);
MakeCode(0x450173);
MakeCode(0x45017D);
MakeFunction(0x450148, 0x450181);
MakeUnkn(0x450184, 1);
MakeNameEx(0x450184, "TApplication.DispatchAction", 0x20);
MakeComm(0x450184, "'function TApplication.DispatchAction(Msg:Longint; Action:TBasicAction):Boolean;'");
MakeCode(0x450184);
MakeCode(0x4501AF);
MakeCode(0x4501CB);
MakeCode(0x4501CF);
MakeCode(0x4501D1);
MakeCode(0x450208);
MakeFunction(0x450184, 0x450213);
MakeUnkn(0x450214, 1);
MakeNameEx(0x450214, "TApplication.ExecuteAction", 0x20);
MakeComm(0x450214, "'function TApplication.ExecuteAction(Action:TBasicAction):Boolean;'");
MakeCode(0x450214);
MakeCode(0x450234);
MakeFunction(0x450214, 0x45023A);
MakeUnkn(0x45023C, 1);
MakeNameEx(0x45023C, "TApplication.UpdateAction", 0x20);
MakeComm(0x45023C, "'function TApplication.UpdateAction(Action:TBasicAction):Boolean;'");
MakeCode(0x45023C);
MakeCode(0x45025C);
MakeFunction(0x45023C, 0x450262);
MakeUnkn(0x450264, 1);
MakeNameEx(0x450264, "InitProcs", 0x20);
MakeComm(0x450264, "'procedure InitProcs;'");
MakeCode(0x450264);
MakeCode(0x450285);
MakeFunction(0x450264, 0x450287);
MakeUnkn(0x4502B0, 1);
MakeNameEx(0x4502B0, "TApplication.WakeMainThread", 0x20);
MakeComm(0x4502B0, "'procedure TApplication.WakeMainThread(Sender:TObject);'");
MakeCode(0x4502B0);
MakeFunction(0x4502B0, 0x4502C0);
MakeUnkn(0x4502C0, 1);
MakeNameEx(0x4502C0, "TApplication.HookSynchronizeWakeup", 0x20);
MakeComm(0x4502C0, "'procedure TApplication.HookSynchronizeWakeup;'");
MakeCode(0x4502C0);
MakeFunction(0x4502C0, 0x4502D0);
MakeUnkn(0x4502D0, 1);
MakeNameEx(0x4502D0, "TApplication.UnhookSynchronizeWakeup", 0x20);
MakeComm(0x4502D0, "'procedure TApplication.UnhookSynchronizeWakeup;'");
MakeCode(0x4502D0);
MakeFunction(0x4502D0, 0x4502DD);
MakeUnkn(0x4502E0, 1);
MakeNameEx(0x4502E0, "_NF__BA6", 0x20);
MakeComm(0x4502E0, "'procedure _NF__BA6;'");
MakeCode(0x4502E0);
MakeFunction(0x4502E0, 0x4502F0);
MakeUnkn(0x4502F0, 1);
MakeNameEx(0x4502F0, "Finalization_13", 0x20);
MakeComm(0x4502F0, "'procedure Finalization;'");
MakeCode(0x4502F0);
MakeCode(0x450317);
MakeCode(0x45032B);
MakeCode(0x450335);
MakeCode(0x450342);
MakeCode(0x450343);
MakeCode(0x450348);
MakeFunction(0x4502F0, 0x45034C);
MakeUnkn(0x45034C, 1);
MakeNameEx(0x45034C, "Forms", 0x20);
MakeComm(0x45034C, "'procedure Forms;'");
MakeCode(0x45034C);
MakeFunction(0x45034C, 0x45037E);
MakeUnkn(0x450390, 1);
MakeNameEx(0x450390, "VMT_450390_EIdException", 0);
MakeDword(0x450390);
MakeDword(0x450394);
MakeDword(0x450398);
MakeDword(0x45039C);
MakeDword(0x4503A0);
MakeDword(0x4503A4);
MakeDword(0x4503A8);
MakeDword(0x4503AC);
MakeDword(0x4503B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4503DC, 0x4503E9);
MakeDword(0x4503B4);
MakeDword(0x4503B8);
MakeDword(0x4503BC);
MakeDword(0x4503C0);
MakeDword(0x4503C4);
MakeDword(0x4503C8);
MakeDword(0x4503CC);
MakeDword(0x4503D0);
MakeDword(0x4503D4);
MakeDword(0x4503D8);
MakeUnkn(0x4503EC, 1);
MakeNameEx(0x4503EC, "VMT_4503EC_EIdInvalidServiceName", 0);
MakeDword(0x4503EC);
MakeDword(0x4503F0);
MakeDword(0x4503F4);
MakeDword(0x4503F8);
MakeDword(0x4503FC);
MakeDword(0x450400);
MakeDword(0x450404);
MakeDword(0x450408);
MakeDword(0x45040C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x450438, 0x45044E);
MakeDword(0x450410);
MakeDword(0x450414);
MakeDword(0x450418);
MakeDword(0x45041C);
MakeDword(0x450420);
MakeDword(0x450424);
MakeDword(0x450428);
MakeDword(0x45042C);
MakeDword(0x450430);
MakeDword(0x450434);
MakeUnkn(0x450450, 1);
MakeNameEx(0x450450, "VMT_450450_EIdSocketError", 0);
MakeDword(0x450450);
MakeDword(0x450454);
MakeDword(0x450458);
MakeDword(0x45045C);
MakeDword(0x450460);
MakeDword(0x450464);
MakeDword(0x450468);
MakeDword(0x45046C);
MakeDword(0x450470);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4504A0, 0x4504AF);
MakeDword(0x450474);
MakeDword(0x450478);
MakeDword(0x45047C);
MakeDword(0x450480);
MakeDword(0x450484);
MakeDword(0x450488);
MakeDword(0x45048C);
MakeDword(0x450490);
MakeDword(0x450494);
MakeDword(0x450498);
MakeComm(0x45049C, "'+0'");
MakeDword(0x45049C);
MakeUnkn(0x4504B0, 1);
MakeNameEx(0x4504B0, "EIdProtocolReplyError.CreateError", 0x20);
MakeComm(0x4504B0, "'constructor EIdProtocolReplyError.CreateError(const AErrCode:Integer; const AReplyMessage:AnsiString);'");
MakeCode(0x4504B0);
MakeCode(0x4504C2);
MakeCode(0x4504EC);
MakeFunction(0x4504B0, 0x4504F5);
MakeCode(0x4504F8);
MakeCode(0x45050F);
MakeCode(0x45051C);
MakeCode(0x45051D);
MakeCode(0x450522);
MakeFunction(0x4504F8, 0x450526);
MakeCode(0x450528);
MakeFunction(0x450528, 0x450530);
MakeComm(0x450530, "'RSWinsockInitializationError'");
MakeDword(0x450530);
MakeDword(0x450534);
MakeComm(0x450538, "'RSSetSizeExceeded'");
MakeDword(0x450538);
MakeDword(0x45053C);
MakeComm(0x450540, "'RSWS2CallError'");
MakeDword(0x450540);
MakeDword(0x450544);
MakeComm(0x450548, "'RSWS2LoadError'");
MakeDword(0x450548);
MakeDword(0x45054C);
MakeComm(0x450550, "'RSInvalidServiceName'");
MakeDword(0x450550);
MakeDword(0x450554);
MakeComm(0x450558, "'SResString7'");
MakeDword(0x450558);
MakeDword(0x45055C);
MakeComm(0x450560, "'RSStackEINTR'");
MakeDword(0x450560);
MakeDword(0x450564);
MakeComm(0x450568, "'RSStackEBADF'");
MakeDword(0x450568);
MakeDword(0x45056C);
MakeComm(0x450570, "'RSStackEACCES'");
MakeDword(0x450570);
MakeDword(0x450574);
MakeComm(0x450578, "'RSStackEFAULT'");
MakeDword(0x450578);
MakeDword(0x45057C);
MakeComm(0x450580, "'RSStackEINVAL'");
MakeDword(0x450580);
MakeDword(0x450584);
MakeComm(0x450588, "'RSStackEMFILE'");
MakeDword(0x450588);
MakeDword(0x45058C);
MakeComm(0x450590, "'RSStackEWOULDBLOCK'");
MakeDword(0x450590);
MakeDword(0x450594);
MakeComm(0x450598, "'RSStackEINPROGRESS'");
MakeDword(0x450598);
MakeDword(0x45059C);
MakeComm(0x4505A0, "'RSStackEALREADY'");
MakeDword(0x4505A0);
MakeDword(0x4505A4);
MakeComm(0x4505A8, "'RSStackENOTSOCK'");
MakeDword(0x4505A8);
MakeDword(0x4505AC);
MakeComm(0x4505B0, "'RSStackEDESTADDRREQ'");
MakeDword(0x4505B0);
MakeDword(0x4505B4);
MakeComm(0x4505B8, "'RSStackEMSGSIZE'");
MakeDword(0x4505B8);
MakeDword(0x4505BC);
MakeComm(0x4505C0, "'RSStackEPROTOTYPE'");
MakeDword(0x4505C0);
MakeDword(0x4505C4);
MakeComm(0x4505C8, "'RSStackENOPROTOOPT'");
MakeDword(0x4505C8);
MakeDword(0x4505CC);
MakeComm(0x4505D0, "'RSStackEPROTONOSUPPORT'");
MakeDword(0x4505D0);
MakeDword(0x4505D4);
MakeComm(0x4505D8, "'RSStackESOCKTNOSUPPORT'");
MakeDword(0x4505D8);
MakeDword(0x4505DC);
MakeComm(0x4505E0, "'RSStackEOPNOTSUPP'");
MakeDword(0x4505E0);
MakeDword(0x4505E4);
MakeComm(0x4505E8, "'RSStackEPFNOSUPPORT'");
MakeDword(0x4505E8);
MakeDword(0x4505EC);
MakeComm(0x4505F0, "'RSStackEAFNOSUPPORT'");
MakeDword(0x4505F0);
MakeDword(0x4505F4);
MakeComm(0x4505F8, "'RSStackEADDRINUSE'");
MakeDword(0x4505F8);
MakeDword(0x4505FC);
MakeComm(0x450600, "'RSStackEADDRNOTAVAIL'");
MakeDword(0x450600);
MakeDword(0x450604);
MakeComm(0x450608, "'RSStackENETDOWN'");
MakeDword(0x450608);
MakeDword(0x45060C);
MakeComm(0x450610, "'RSStackENETUNREACH'");
MakeDword(0x450610);
MakeDword(0x450614);
MakeComm(0x450618, "'RSStackENETRESET'");
MakeDword(0x450618);
MakeDword(0x45061C);
MakeComm(0x450620, "'RSStackECONNABORTED'");
MakeDword(0x450620);
MakeDword(0x450624);
MakeComm(0x450628, "'RSStackECONNRESET'");
MakeDword(0x450628);
MakeDword(0x45062C);
MakeComm(0x450630, "'RSStackENOBUFS'");
MakeDword(0x450630);
MakeDword(0x450634);
MakeComm(0x450638, "'RSStackEISCONN'");
MakeDword(0x450638);
MakeDword(0x45063C);
MakeComm(0x450640, "'RSStackENOTCONN'");
MakeDword(0x450640);
MakeDword(0x450644);
MakeComm(0x450648, "'RSStackESHUTDOWN'");
MakeDword(0x450648);
MakeDword(0x45064C);
MakeComm(0x450650, "'RSStackETOOMANYREFS'");
MakeDword(0x450650);
MakeDword(0x450654);
MakeComm(0x450658, "'RSStackETIMEDOUT'");
MakeDword(0x450658);
MakeDword(0x45065C);
MakeComm(0x450660, "'RSSocksServerConnectionRefusedError'");
MakeDword(0x450660);
MakeDword(0x450664);
MakeComm(0x450668, "'RSStackELOOP'");
MakeDword(0x450668);
MakeDword(0x45066C);
MakeComm(0x450670, "'RSStackENAMETOOLONG'");
MakeDword(0x450670);
MakeDword(0x450674);
MakeComm(0x450678, "'RSStackEHOSTDOWN'");
MakeDword(0x450678);
MakeDword(0x45067C);
MakeComm(0x450680, "'RSStackEHOSTUNREACH'");
MakeDword(0x450680);
MakeDword(0x450684);
MakeComm(0x450688, "'RSStackENOTEMPTY'");
MakeDword(0x450688);
MakeDword(0x45068C);
MakeComm(0x450690, "'RSStackHOST_NOT_FOUND'");
MakeDword(0x450690);
MakeDword(0x450694);
MakeCode(0x450698);
MakeCode(0x4506AF);
MakeCode(0x4506BC);
MakeCode(0x4506BD);
MakeCode(0x4506C2);
MakeFunction(0x450698, 0x4506C6);
MakeCode(0x4506C8);
MakeFunction(0x4506C8, 0x4506D0);
MakeUnkn(0x4506D0, 1);
MakeNameEx(0x4506D0, "VMT_4506D0_EIdWS2StubError", 0);
MakeDword(0x4506D0);
MakeDword(0x4506D4);
MakeDword(0x4506D8);
MakeDword(0x4506DC);
MakeUnkn(0x45071C, 1);
MakeNameEx(0x45071C, "EIdWS2StubError_InitTable", 0);
MakeByte(0x45071C);
MakeByte(0x45071D);
MakeDword(0x45071E);
MakeDword(0x450722);
MakeDword(0x450726);
MakeDword(0x45072A);
MakeDword(0x45072E);
MakeDword(0x450732);
MakeDword(0x4506E0);
MakeDword(0x4506E4);
MakeDword(0x4506E8);
MakeDword(0x4506EC);
MakeDword(0x4506F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x450736, 0x450746);
MakeDword(0x4506F4);
MakeDword(0x4506F8);
MakeDword(0x4506FC);
MakeDword(0x450700);
MakeDword(0x450704);
MakeDword(0x450708);
MakeDword(0x45070C);
MakeDword(0x450710);
MakeDword(0x450714);
MakeDword(0x450718);
MakeUnkn(0x450748, 1);
MakeNameEx(0x450748, "EIdWS2StubError.Create", 0x20);
MakeComm(0x450748, "'constructor EIdWS2StubError.Create(?:?);'");
MakeCode(0x450748);
MakeCode(0x450760);
MakeCode(0x450796);
MakeCode(0x4507CD);
MakeCode(0x4507DA);
MakeCode(0x4507E8);
MakeCode(0x4507ED);
MakeCode(0x450806);
MakeFunction(0x450748, 0x450811);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45081C, -1);
MakeDword(0x450818);
MakeDword(0x450814);
MakeCode(0x450820);
MakeFunction(0x450820, 0x45083C);
MakeCode(0x451680);
MakeCode(0x451692);
MakeFunction(0x451680, 0x4516A3);
MakeCode(0x4516A4);
MakeComm(0x451722, "'EIdWS2StubError.Create'");
MakeCode(0x45172C);
MakeComm(0x451731, "'0x0'");
MakeCode(0x451754);
MakeCode(0x451756);
MakeCode(0x451763);
MakeCode(0x451771);
MakeCode(0x451776);
MakeFunction(0x4516A4, 0x451781);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x451798, -1);
MakeDword(0x451794);
MakeDword(0x451790);
MakeCode(0x4517B0);
MakeCode(0x4517CE);
MakeCode(0x4517DB);
MakeCode(0x4517DC);
MakeCode(0x4517E1);
MakeFunction(0x4517B0, 0x4517E5);
MakeCode(0x4517E8);
MakeFunction(0x4517E8, 0x4517F7);
MakeCode(0x4517F8);
MakeCode(0x45180F);
MakeCode(0x45181C);
MakeCode(0x45181D);
MakeCode(0x451822);
MakeFunction(0x4517F8, 0x451826);
MakeCode(0x451828);
MakeFunction(0x451828, 0x451830);
MakeUnkn(0x451830, 1);
MakeNameEx(0x451830, "VMT_451830_TIdSocketList", 0);
MakeDword(0x451830);
MakeDword(0x451834);
MakeDword(0x451838);
MakeDword(0x45183C);
MakeDword(0x451840);
MakeDword(0x451844);
MakeDword(0x451848);
MakeDword(0x45184C);
MakeDword(0x451850);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45188C, 0x45189A);
MakeDword(0x451854);
MakeDword(0x451858);
MakeDword(0x45185C);
MakeDword(0x451860);
MakeDword(0x451864);
MakeDword(0x451868);
MakeDword(0x45186C);
MakeDword(0x451870);
MakeDword(0x451874);
MakeDword(0x451878);
MakeComm(0x45187C, "'+0'");
MakeDword(0x45187C);
MakeComm(0x451880, "'+4'");
MakeDword(0x451880);
MakeComm(0x451884, "'+8'");
MakeDword(0x451884);
MakeComm(0x451888, "'+C'");
MakeDword(0x451888);
MakeUnkn(0x45189C, 1);
MakeNameEx(0x45189C, "VMT_45189C_TIdStack", 0);
MakeDword(0x45189C);
MakeDword(0x4518A0);
MakeDword(0x4518A4);
MakeDword(0x4518A8);
MakeUnkn(0x45196C, 1);
MakeNameEx(0x45196C, "TIdStack_InitTable", 0);
MakeByte(0x45196C);
MakeByte(0x45196D);
MakeDword(0x45196E);
MakeDword(0x451972);
MakeDword(0x451976);
MakeDword(0x45197A);
MakeDword(0x4518AC);
MakeDword(0x4518B0);
MakeDword(0x4518B4);
MakeDword(0x4518B8);
MakeDword(0x4518BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45197E, 0x451987);
MakeDword(0x4518C0);
MakeDword(0x4518C4);
MakeDword(0x4518C8);
MakeDword(0x4518CC);
MakeDword(0x4518D0);
MakeDword(0x4518D4);
MakeDword(0x4518D8);
MakeDword(0x4518DC);
MakeDword(0x4518E0);
MakeDword(0x4518E4);
MakeComm(0x4518E8, "'+0'");
MakeDword(0x4518E8);
MakeComm(0x4518EC, "'+4'");
MakeDword(0x4518EC);
MakeComm(0x4518F0, "'+8'");
MakeDword(0x4518F0);
MakeComm(0x4518F4, "'+C'");
MakeDword(0x4518F4);
MakeComm(0x4518F8, "'+10'");
MakeDword(0x4518F8);
MakeComm(0x4518FC, "'+14'");
MakeDword(0x4518FC);
MakeComm(0x451900, "'+18'");
MakeDword(0x451900);
MakeComm(0x451904, "'+1C'");
MakeDword(0x451904);
MakeComm(0x451908, "'+20'");
MakeDword(0x451908);
MakeComm(0x45190C, "'+24'");
MakeDword(0x45190C);
MakeComm(0x451910, "'+28'");
MakeDword(0x451910);
MakeComm(0x451914, "'+2C'");
MakeDword(0x451914);
MakeComm(0x451918, "'+30'");
MakeDword(0x451918);
MakeComm(0x45191C, "'+34'");
MakeDword(0x45191C);
MakeComm(0x451920, "'+38'");
MakeDword(0x451920);
MakeComm(0x451924, "'+3C'");
MakeDword(0x451924);
MakeComm(0x451928, "'+40'");
MakeDword(0x451928);
MakeComm(0x45192C, "'+44'");
MakeDword(0x45192C);
MakeComm(0x451930, "'+48'");
MakeDword(0x451930);
MakeComm(0x451934, "'+4C'");
MakeDword(0x451934);
MakeComm(0x451938, "'+50'");
MakeDword(0x451938);
MakeComm(0x45193C, "'+54'");
MakeDword(0x45193C);
MakeComm(0x451940, "'+58'");
MakeDword(0x451940);
MakeComm(0x451944, "'+5C'");
MakeDword(0x451944);
MakeComm(0x451948, "'+60'");
MakeDword(0x451948);
MakeComm(0x45194C, "'+64'");
MakeDword(0x45194C);
MakeComm(0x451950, "'+68'");
MakeDword(0x451950);
MakeComm(0x451954, "'+6C'");
MakeDword(0x451954);
MakeComm(0x451958, "'+70'");
MakeDword(0x451958);
MakeComm(0x45195C, "'+74'");
MakeDword(0x45195C);
MakeComm(0x451960, "'+78'");
MakeDword(0x451960);
MakeComm(0x451964, "'+7C'");
MakeDword(0x451964);
MakeComm(0x451968, "'+80'");
MakeDword(0x451968);
MakeUnkn(0x451988, 1);
MakeNameEx(0x451988, "VMT_451988_EIdStackError", 0);
MakeDword(0x451988);
MakeDword(0x45198C);
MakeDword(0x451990);
MakeDword(0x451994);
MakeDword(0x451998);
MakeDword(0x45199C);
MakeDword(0x4519A0);
MakeDword(0x4519A4);
MakeDword(0x4519A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4519D4, 0x4519E2);
MakeDword(0x4519AC);
MakeDword(0x4519B0);
MakeDword(0x4519B4);
MakeDword(0x4519B8);
MakeDword(0x4519BC);
MakeDword(0x4519C0);
MakeDword(0x4519C4);
MakeDword(0x4519C8);
MakeDword(0x4519CC);
MakeDword(0x4519D0);
MakeUnkn(0x4519E4, 1);
MakeNameEx(0x4519E4, "VMT_4519E4_EIdStackInitializationFailed", 0);
MakeDword(0x4519E4);
MakeDword(0x4519E8);
MakeDword(0x4519EC);
MakeDword(0x4519F0);
MakeDword(0x4519F4);
MakeDword(0x4519F8);
MakeDword(0x4519FC);
MakeDword(0x451A00);
MakeDword(0x451A04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x451A30, 0x451A4D);
MakeDword(0x451A08);
MakeDword(0x451A0C);
MakeDword(0x451A10);
MakeDword(0x451A14);
MakeDword(0x451A18);
MakeDword(0x451A1C);
MakeDword(0x451A20);
MakeDword(0x451A24);
MakeDword(0x451A28);
MakeDword(0x451A2C);
MakeUnkn(0x451A50, 1);
MakeNameEx(0x451A50, "VMT_451A50_EIdStackSetSizeExceeded", 0);
MakeDword(0x451A50);
MakeDword(0x451A54);
MakeDword(0x451A58);
MakeDword(0x451A5C);
MakeDword(0x451A60);
MakeDword(0x451A64);
MakeDword(0x451A68);
MakeDword(0x451A6C);
MakeDword(0x451A70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x451A9C, 0x451AB4);
MakeDword(0x451A74);
MakeDword(0x451A78);
MakeDword(0x451A7C);
MakeDword(0x451A80);
MakeDword(0x451A84);
MakeDword(0x451A88);
MakeDword(0x451A8C);
MakeDword(0x451A90);
MakeDword(0x451A94);
MakeDword(0x451A98);
MakeUnkn(0x451AB4, 1);
MakeNameEx(0x451AB4, "TIdStack.CheckForSocketError", 0x20);
MakeComm(0x451AB4, "'function TIdStack.CheckForSocketError(const AResult:Integer):Boolean;'");
MakeCode(0x451AB4);
MakeFunction(0x451AB4, 0x451AC0);
MakeUnkn(0x451AC0, 1);
MakeNameEx(0x451AC0, "TIdStack.CheckForSocketError_0", 0x20);
MakeComm(0x451AC0, "'function TIdStack.CheckForSocketError(const AResult:Integer; const AIgnore:array[$0..-$1] of System.Integer; const _Dv_:$0..-$1):Boolean;'");
MakeCode(0x451AC0);
MakeCode(0x451AE3);
MakeCode(0x451AEE);
MakeCode(0x451AF4);
MakeCode(0x451AFE);
MakeFunction(0x451AC0, 0x451B07);
MakeUnkn(0x451B08, 1);
MakeNameEx(0x451B08, "TIdStack.RaiseSocketError", 0x20);
MakeComm(0x451B08, "'procedure TIdStack.RaiseSocketError(const AErr:Integer);'");
MakeCode(0x451B08);
MakeCode(0x451B44);
MakeCode(0x451B51);
MakeCode(0x451B5A);
MakeCode(0x451B5F);
MakeFunction(0x451B08, 0x451B66);
MakeUnkn(0x451B68, 1);
MakeNameEx(0x451B68, "TIdStack.Create", 0x20);
MakeComm(0x451B68, "'constructor TIdStack.Create;'");
MakeCode(0x451B68);
MakeCode(0x451B74);
MakeFunction(0x451B68, 0x451B88);
MakeCode(0x451B88);
MakeCode(0x451CC4);
MakeCode(0x451CD5);
MakeCode(0x451CE6);
MakeCode(0x451CF7);
MakeCode(0x451D08);
MakeCode(0x451D19);
MakeCode(0x451D2A);
MakeCode(0x451D3B);
MakeCode(0x451D4C);
MakeCode(0x451D5D);
MakeCode(0x451D6E);
MakeCode(0x451D7F);
MakeCode(0x451D90);
MakeCode(0x451DA1);
MakeCode(0x451DB2);
MakeCode(0x451DC3);
MakeCode(0x451DD4);
MakeCode(0x451DE5);
MakeCode(0x451DF6);
MakeCode(0x451E07);
MakeCode(0x451E18);
MakeCode(0x451E29);
MakeCode(0x451E3A);
MakeCode(0x451E4B);
MakeCode(0x451E5C);
MakeCode(0x451E6D);
MakeCode(0x451E7E);
MakeCode(0x451E8F);
MakeCode(0x451EA0);
MakeCode(0x451EAE);
MakeCode(0x451EBC);
MakeCode(0x451ECA);
MakeCode(0x451ED8);
MakeCode(0x451EE6);
MakeCode(0x451EF4);
MakeCode(0x451F02);
MakeCode(0x451F10);
MakeCode(0x451F1E);
MakeCode(0x451F2A);
MakeCode(0x451F67);
MakeCode(0x451F74);
MakeCode(0x451F82);
MakeCode(0x451F87);
MakeFunction(0x451B88, 0x451F8F);
MakeUnkn(0x451F90, 1);
MakeNameEx(0x451F90, "TIdStack.Destroy", 0x20);
MakeComm(0x451F90, "'destructor TIdStack.Destroy;'");
MakeCode(0x451F90);
MakeCode(0x451FBA);
MakeFunction(0x451F90, 0x451FBD);
MakeUnkn(0x451FC0, 1);
MakeNameEx(0x451FC0, "TIdStack.StringToTInAddr", 0x20);
MakeComm(0x451FC0, "'function TIdStack.StringToTInAddr(AIP:AnsiString):TIdInAddr;'");
MakeCode(0x451FC0);
MakeCode(0x451FF2);
MakeCode(0x451FFF);
MakeCode(0x452008);
MakeCode(0x45200D);
MakeFunction(0x451FC0, 0x452017);
MakeCode(0x452018);
MakeCode(0x45202F);
MakeCode(0x45203C);
MakeCode(0x45203D);
MakeCode(0x452042);
MakeFunction(0x452018, 0x452046);
MakeCode(0x452048);
MakeFunction(0x452048, 0x452050);
MakeUnkn(0x452050, 1);
MakeNameEx(0x452050, "VMT_452050_TIdSocketListWindows", 0);
MakeDword(0x452050);
MakeDword(0x452054);
MakeDword(0x452058);
MakeDword(0x45205C);
MakeDword(0x452060);
MakeDword(0x452064);
MakeDword(0x452068);
MakeDword(0x45206C);
MakeDword(0x452070);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4520AC, 0x4520C1);
MakeDword(0x452074);
MakeDword(0x452078);
MakeDword(0x45207C);
MakeDword(0x452080);
MakeDword(0x452084);
MakeDword(0x452088);
MakeDword(0x45208C);
MakeDword(0x452090);
MakeDword(0x452094);
MakeDword(0x452098);
MakeComm(0x45209C, "'+0'");
MakeDword(0x45209C);
MakeComm(0x4520A0, "'+4'");
MakeDword(0x4520A0);
MakeComm(0x4520A4, "'+8'");
MakeDword(0x4520A4);
MakeComm(0x4520A8, "'+C'");
MakeDword(0x4520A8);
MakeUnkn(0x4520C4, 1);
MakeNameEx(0x4520C4, "VMT_4520C4_TIdStackWindows", 0);
MakeDword(0x4520C4);
MakeDword(0x4520C8);
MakeDword(0x4520CC);
MakeDword(0x4520D0);
MakeDword(0x4520D4);
MakeDword(0x4520D8);
MakeDword(0x4520DC);
MakeDword(0x4520E0);
MakeDword(0x4520E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x452194, 0x4521A4);
MakeDword(0x4520E8);
MakeDword(0x4520EC);
MakeDword(0x4520F0);
MakeDword(0x4520F4);
MakeDword(0x4520F8);
MakeDword(0x4520FC);
MakeDword(0x452100);
MakeDword(0x452104);
MakeDword(0x452108);
MakeDword(0x45210C);
MakeComm(0x452110, "'+0'");
MakeDword(0x452110);
MakeComm(0x452114, "'+4'");
MakeDword(0x452114);
MakeComm(0x452118, "'+8'");
MakeDword(0x452118);
MakeComm(0x45211C, "'+C'");
MakeDword(0x45211C);
MakeComm(0x452120, "'+10'");
MakeDword(0x452120);
MakeComm(0x452124, "'+14'");
MakeDword(0x452124);
MakeComm(0x452128, "'+18'");
MakeDword(0x452128);
MakeComm(0x45212C, "'+1C'");
MakeDword(0x45212C);
MakeComm(0x452130, "'+20'");
MakeDword(0x452130);
MakeComm(0x452134, "'+24'");
MakeDword(0x452134);
MakeComm(0x452138, "'+28'");
MakeDword(0x452138);
MakeComm(0x45213C, "'+2C'");
MakeDword(0x45213C);
MakeComm(0x452140, "'+30'");
MakeDword(0x452140);
MakeComm(0x452144, "'+34'");
MakeDword(0x452144);
MakeComm(0x452148, "'+38'");
MakeDword(0x452148);
MakeComm(0x45214C, "'+3C'");
MakeDword(0x45214C);
MakeComm(0x452150, "'+40'");
MakeDword(0x452150);
MakeComm(0x452154, "'+44'");
MakeDword(0x452154);
MakeComm(0x452158, "'+48'");
MakeDword(0x452158);
MakeComm(0x45215C, "'+4C'");
MakeDword(0x45215C);
MakeComm(0x452160, "'+50'");
MakeDword(0x452160);
MakeComm(0x452164, "'+54'");
MakeDword(0x452164);
MakeComm(0x452168, "'+58'");
MakeDword(0x452168);
MakeComm(0x45216C, "'+5C'");
MakeDword(0x45216C);
MakeComm(0x452170, "'+60'");
MakeDword(0x452170);
MakeComm(0x452174, "'+64'");
MakeDword(0x452174);
MakeComm(0x452178, "'+68'");
MakeDword(0x452178);
MakeComm(0x45217C, "'+6C'");
MakeDword(0x45217C);
MakeComm(0x452180, "'+70'");
MakeDword(0x452180);
MakeComm(0x452184, "'+74'");
MakeDword(0x452184);
MakeComm(0x452188, "'+78'");
MakeDword(0x452188);
MakeComm(0x45218C, "'+7C'");
MakeDword(0x45218C);
MakeComm(0x452190, "'+80'");
MakeDword(0x452190);
MakeUnkn(0x4521A4, 1);
MakeNameEx(0x4521A4, "TIdStackWindows.Create", 0x20);
MakeComm(0x4521A4, "'constructor TIdStackWindows.Create;'");
MakeCode(0x4521A4);
MakeCode(0x4521C3);
MakeComm(0x452218, "'EIdStackInitializationFailed.Create'");
MakeCode(0x452222);
MakeCode(0x452229);
MakeCode(0x452236);
MakeCode(0x452242);
MakeCode(0x452247);
MakeCode(0x45225E);
MakeFunction(0x4521A4, 0x452266);
MakeUnkn(0x452268, 1);
MakeNameEx(0x452268, "TIdStackWindows.Destroy", 0x20);
MakeComm(0x452268, "'destructor TIdStackWindows.Destroy;'");
MakeCode(0x452268);
MakeCode(0x45228A);
MakeFunction(0x452268, 0x45228D);
MakeUnkn(0x452290, 1);
MakeNameEx(0x452290, "TIdStackWindows.TInAddrToString", 0x20);
MakeComm(0x452290, "'function TIdStackWindows.TInAddrToString(var AInAddr:void ):AnsiString;'");
MakeCode(0x452290);
MakeCode(0x452309);
MakeCode(0x452316);
MakeCode(0x452324);
MakeCode(0x452329);
MakeFunction(0x452290, 0x452331);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45233C, -1);
MakeDword(0x452338);
MakeDword(0x452334);
MakeUnkn(0x452340, 1);
MakeNameEx(0x452340, "TIdStackWindows.WSAccept", 0x20);
MakeComm(0x452340, "'function TIdStackWindows.WSAccept(ASocket:TIdStackSocketHandle; var VIP:AnsiString; var VPort:Integer):TIdStackSocketHandle;'");
MakeCode(0x452340);
MakeCode(0x4523A9);
MakeCode(0x4523B6);
MakeCode(0x4523BF);
MakeCode(0x4523C4);
MakeFunction(0x452340, 0x4523D0);
MakeUnkn(0x4523D0, 1);
MakeNameEx(0x4523D0, "TIdStackWindows.WSBind", 0x20);
MakeComm(0x4523D0, "'function TIdStackWindows.WSBind(ASocket:TIdStackSocketHandle; const AFamily:Integer; const AIP:AnsiString; const APort:Integer):Integer;'");
MakeCode(0x4523D0);
MakeCode(0x4523FD);
MakeCode(0x45240F);
MakeFunction(0x4523D0, 0x45243A);
MakeUnkn(0x45243C, 1);
MakeNameEx(0x45243C, "TIdStackWindows.WSCloseSocket", 0x20);
MakeComm(0x45243C, "'function TIdStackWindows.WSCloseSocket(ASocket:TIdStackSocketHandle):Integer;'");
MakeCode(0x45243C);
MakeFunction(0x45243C, 0x452447);
MakeUnkn(0x452448, 1);
MakeNameEx(0x452448, "TIdStackWindows.WSConnect", 0x20);
MakeComm(0x452448, "'function TIdStackWindows.WSConnect(const ASocket:TIdStackSocketHandle; const AFamily:Integer; const AIP:AnsiString; const APort:Integer):Integer;'");
MakeCode(0x452448);
MakeFunction(0x452448, 0x452495);
MakeUnkn(0x452498, 1);
MakeNameEx(0x452498, "TIdStackWindows.WSGetHostByName", 0x20);
MakeComm(0x452498, "'function TIdStackWindows.WSGetHostByName(const AHostName:AnsiString):AnsiString;'");
MakeCode(0x452498);
MakeCode(0x4524C3);
MakeCode(0x4524ED);
MakeFunction(0x452498, 0x4524F2);
MakeUnkn(0x4524F4, 1);
MakeNameEx(0x4524F4, "TIdStackWindows.WSGetHostByAddr", 0x20);
MakeComm(0x4524F4, "'function TIdStackWindows.WSGetHostByAddr(const AAddress:AnsiString):AnsiString;'");
MakeCode(0x4524F4);
MakeCode(0x452536);
MakeCode(0x45253F);
MakeFunction(0x4524F4, 0x452544);
MakeUnkn(0x452544, 1);
MakeNameEx(0x452544, "TIdStackWindows.WSGetHostName", 0x20);
MakeComm(0x452544, "'function TIdStackWindows.WSGetHostName:AnsiString;'");
MakeCode(0x452544);
MakeFunction(0x452544, 0x45257E);
MakeUnkn(0x452580, 1);
MakeNameEx(0x452580, "TIdStackWindows.WSListen", 0x20);
MakeComm(0x452580, "'function TIdStackWindows.WSListen(ASocket:TIdStackSocketHandle; ABackLog:Integer):Integer;'");
MakeCode(0x452580);
MakeFunction(0x452580, 0x45258C);
MakeUnkn(0x45258C, 1);
MakeNameEx(0x45258C, "TIdStackWindows.WSRecv", 0x20);
MakeComm(0x45258C, "'function TIdStackWindows.WSRecv(ASocket:TIdStackSocketHandle; var ABuffer:void ; const ABufferLength:Integer; const AFlags:Integer):Integer;'");
MakeCode(0x45258C);
MakeFunction(0x45258C, 0x4525A6);
MakeUnkn(0x4525A8, 1);
MakeNameEx(0x4525A8, "TIdStackWindows.WSRecvFrom", 0x20);
MakeComm(0x4525A8, "'function TIdStackWindows.WSRecvFrom(const ASocket:TIdStackSocketHandle; var ABuffer:void ; const ALength:Integer; const AFlags:Integer; var VIP:AnsiString; var VPort:Integer):Integer;'");
MakeCode(0x4525A8);
MakeCode(0x45261D);
MakeCode(0x45262A);
MakeCode(0x452633);
MakeCode(0x452638);
MakeFunction(0x4525A8, 0x452644);
MakeUnkn(0x452644, 1);
MakeNameEx(0x452644, "GetFDSet", 0x20);
MakeComm(0x452644, "'procedure GetFDSet(AList:TList; var ASet:TFDSet);'");
MakeCode(0x452644);
MakeCode(0x45266C);
MakeCode(0x45267B);
MakeFunction(0x452644, 0x45267F);
MakeUnkn(0x452680, 1);
MakeNameEx(0x452680, "SetFDSet", 0x20);
MakeComm(0x452680, "'procedure SetFDSet(AList:TList; var ASet:TFDSet);'");
MakeCode(0x452680);
MakeCode(0x4526CC);
MakeCode(0x4526E2);
MakeCode(0x4526F7);
MakeCode(0x4526FF);
MakeCode(0x45270C);
MakeCode(0x452715);
MakeCode(0x45271A);
MakeFunction(0x452680, 0x452723);
MakeUnkn(0x452724, 1);
MakeNameEx(0x452724, "TIdStackWindows.WSSelect", 0x20);
MakeComm(0x452724, "'function TIdStackWindows.WSSelect(ARead:TList; AWrite:TList; AErrors:TList; ATimeout:Integer):Integer;'");
MakeCode(0x452724);
MakeCode(0x4527C0);
MakeCode(0x452806);
MakeFunction(0x452724, 0x452839);
MakeUnkn(0x45283C, 1);
MakeNameEx(0x45283C, "TIdStackWindows.WSSend", 0x20);
MakeComm(0x45283C, "'function TIdStackWindows.WSSend(ASocket:TIdStackSocketHandle; var ABuffer:void ; const ABufferLength:Integer; const AFlags:Integer):Integer;'");
MakeCode(0x45283C);
MakeFunction(0x45283C, 0x452856);
MakeUnkn(0x452858, 1);
MakeNameEx(0x452858, "TIdStackWindows.WSSendTo", 0x20);
MakeComm(0x452858, "'function TIdStackWindows.WSSendTo(ASocket:TIdStackSocketHandle; var ABuffer:void ; const ABufferLength:Integer; const AFlags:Integer; const AIP:AnsiString; const APort:Integer):Integer;'");
MakeCode(0x452858);
MakeFunction(0x452858, 0x4528C3);
MakeUnkn(0x4528C4, 1);
MakeNameEx(0x4528C4, "TIdStackWindows.WSGetSockOpt", 0x20);
MakeComm(0x4528C4, "'function TIdStackWindows.WSGetSockOpt(ASocket:TIdStackSocketHandle; Alevel:Integer; AOptname:Integer; AOptval:PChar; var AOptlen:Integer):Integer;'");
MakeCode(0x4528C4);
MakeFunction(0x4528C4, 0x4528E2);
MakeUnkn(0x4528E4, 1);
MakeNameEx(0x4528E4, "TIdStackWindows.WSGetLocalAddresses", 0x20);
MakeComm(0x4528E4, "'function TIdStackWindows.WSGetLocalAddresses:TStrings;'");
MakeCode(0x4528E4);
MakeCode(0x4528FC);
MakeFunction(0x4528E4, 0x452907);
MakeUnkn(0x452908, 1);
MakeNameEx(0x452908, "TIdStackWindows.WSGetLastError", 0x20);
MakeComm(0x452908, "'function TIdStackWindows.WSGetLastError:Integer;'");
MakeCode(0x452908);
MakeFunction(0x452908, 0x452912);
MakeUnkn(0x452914, 1);
MakeNameEx(0x452914, "TIdStackWindows.WSSocket", 0x20);
MakeComm(0x452914, "'function TIdStackWindows.WSSocket(AFamily:Integer; AStruct:Integer; AProtocol:Integer):TIdStackSocketHandle;'");
MakeCode(0x452914);
MakeFunction(0x452914, 0x45292A);
MakeUnkn(0x45292C, 1);
MakeNameEx(0x45292C, "TIdStackWindows.WSHToNs", 0x20);
MakeComm(0x45292C, "'function TIdStackWindows.WSHToNs(AHostShort:Word):Word;'");
MakeCode(0x45292C);
MakeFunction(0x45292C, 0x452937);
MakeUnkn(0x452938, 1);
MakeNameEx(0x452938, "TIdStackWindows.WSNToHs", 0x20);
MakeComm(0x452938, "'function TIdStackWindows.WSNToHs(ANetShort:Word):Word;'");
MakeCode(0x452938);
MakeFunction(0x452938, 0x452943);
MakeCode(0x452944);
MakeCode(0x452992);
MakeCode(0x4529AA);
MakeCode(0x4529B4);
MakeDword(0x4529B9);
MakeDword(0x4529BD);
MakeDword(0x4529C1);
MakeCode(0x4529C5);
MakeComm(0x4529EC, "'EIdInvalidServiceName.Create'");
MakeCode(0x4529FB);
MakeCode(0x452A08);
MakeCode(0x452A11);
MakeCode(0x452A16);
MakeFunction(0x452944, 0x452A21);
MakeUnkn(0x452A24, 1);
MakeNameEx(0x452A24, "RTTI_452A24_DynArray_.4", 0);
MakeDword(0x452A24);
MakeUnkn(0x452A28, 1);
MakeNameEx(0x452A28, "", 0);
MakeByte(0x452A28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x452A29, 0x452A2C);
MakeDword(0x452A2C);
MakeDword(0x452A30);
MakeDword(0x452A34);
MakeDword(0x452A38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x452A3C, 0x452A4B);
MakeCode(0x452A4C);
MakeComm(0x452A6F, "'TStringList.Create'");
MakeComm(0x452AC4, "'TStringList.Add'");
MakeCode(0x452ADC);
MakeComm(0x452AEE, "'TStringList.Add'");
MakeCode(0x452AF2);
MakeCode(0x452AFC);
MakeCode(0x452B06);
MakeCode(0x452B18);
MakeCode(0x452B25);
MakeCode(0x452B41);
MakeCode(0x452B46);
MakeFunction(0x452A4C, 0x452B52);
MakeUnkn(0x452B54, 1);
MakeNameEx(0x452B54, "TIdStackWindows.WSHToNL", 0x20);
MakeComm(0x452B54, "'function TIdStackWindows.WSHToNL(AHostLong:LongWord):LongWord;'");
MakeCode(0x452B54);
MakeFunction(0x452B54, 0x452B5F);
MakeUnkn(0x452B60, 1);
MakeNameEx(0x452B60, "TIdStackWindows.WSNToHL", 0x20);
MakeComm(0x452B60, "'function TIdStackWindows.WSNToHL(ANetLong:LongWord):LongWord;'");
MakeCode(0x452B60);
MakeFunction(0x452B60, 0x452B6B);
MakeUnkn(0x452B6C, 1);
MakeNameEx(0x452B6C, "TIdStackWindows.PopulateLocalAddresses", 0x20);
MakeComm(0x452B6C, "'procedure TIdStackWindows.PopulateLocalAddresses;'");
MakeCode(0x452B6C);
MakeCode(0x452BBC);
MakeCode(0x452BC6);
MakeCode(0x452BE2);
MakeCode(0x452BEB);
MakeCode(0x452BF8);
MakeCode(0x452C06);
MakeCode(0x452C0B);
MakeFunction(0x452B6C, 0x452C14);
MakeUnkn(0x452C14, 1);
MakeNameEx(0x452C14, "TIdStackWindows.WSGetLocalAddress", 0x20);
MakeComm(0x452C14, "'function TIdStackWindows.WSGetLocalAddress:AnsiString;'");
MakeCode(0x452C14);
MakeFunction(0x452C14, 0x452C2D);
MakeUnkn(0x452C30, 1);
MakeNameEx(0x452C30, "ServeFile", 0x20);
MakeComm(0x452C30, "'function ServeFile(ASocket:TIdStackSocketHandle; AFileName:AnsiString):Cardinal;'");
MakeCode(0x452C30);
MakeCode(0x452CB2);
MakeCode(0x452CBF);
MakeCode(0x452CC9);
MakeCode(0x452CCE);
MakeCode(0x452CD0);
MakeCode(0x452CDD);
MakeCode(0x452CE6);
MakeCode(0x452CEB);
MakeFunction(0x452C30, 0x452CF5);
MakeUnkn(0x452CF8, 1);
MakeNameEx(0x452CF8, "TIdStackWindows.TranslateStringToTInAddr", 0x20);
MakeComm(0x452CF8, "'procedure TIdStackWindows.TranslateStringToTInAddr(AIP:AnsiString; var AInAddr:void );'");
MakeCode(0x452CF8);
MakeCode(0x452DA0);
MakeCode(0x452DAD);
MakeCode(0x452DBB);
MakeCode(0x452DC0);
MakeFunction(0x452CF8, 0x452DC7);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x452DD0, -1);
MakeDword(0x452DCC);
MakeDword(0x452DC8);
MakeUnkn(0x452DD4, 1);
MakeNameEx(0x452DD4, "TIdStackWindows.WSShutdown", 0x20);
MakeComm(0x452DD4, "'function TIdStackWindows.WSShutdown(ASocket:TIdStackSocketHandle; AHow:Integer):Integer;'");
MakeCode(0x452DD4);
MakeFunction(0x452DD4, 0x452DE0);
MakeUnkn(0x452DE0, 1);
MakeNameEx(0x452DE0, "TIdStackWindows.WSGetPeerName", 0x20);
MakeComm(0x452DE0, "'procedure TIdStackWindows.WSGetPeerName(ASocket:TIdStackSocketHandle; var VFamily:Integer; var VIP:AnsiString; var VPort:Integer);'");
MakeCode(0x452DE0);
MakeCode(0x452E58);
MakeCode(0x452E65);
MakeCode(0x452E6E);
MakeCode(0x452E73);
MakeFunction(0x452DE0, 0x452E7E);
MakeUnkn(0x452E80, 1);
MakeNameEx(0x452E80, "TIdStackWindows.WSGetSockName", 0x20);
MakeComm(0x452E80, "'procedure TIdStackWindows.WSGetSockName(ASocket:TIdStackSocketHandle; var VFamily:Integer; var VIP:AnsiString; var VPort:Integer);'");
MakeCode(0x452E80);
MakeCode(0x452EF8);
MakeCode(0x452F05);
MakeCode(0x452F0E);
MakeCode(0x452F13);
MakeFunction(0x452E80, 0x452F1E);
MakeUnkn(0x452F20, 1);
MakeNameEx(0x452F20, "TIdStackWindows.WSSetSockOpt", 0x20);
MakeComm(0x452F20, "'function TIdStackWindows.WSSetSockOpt(ASocket:TIdStackSocketHandle; ALevel:Integer; AOptName:Integer; AOptVal:PChar; AOptLen:Integer):Integer;'");
MakeCode(0x452F20);
MakeFunction(0x452F20, 0x452F3E);
MakeCode(0x452F40);
MakeComm(0x452F53, "'TIdSocketListWindows......FFDSet:TFDSet'");
MakeComm(0x452F70, "'EIdStackSetSizeExceeded.Create'");
MakeComm(0x452F7A, "'TIdSocketListWindows.......FFDSet:TFDSet'");
MakeCode(0x452F7A);
MakeComm(0x452F81, "'TIdSocketListWindows........FFDSet:TFDSet'");
MakeCode(0x452F84);
MakeCode(0x452F91);
MakeCode(0x452F9A);
MakeCode(0x452F9F);
MakeFunction(0x452F40, 0x452FA4);
MakeUnkn(0x452FA4, 1);
MakeNameEx(0x452FA4, "TIdSocketListWindows.Count", 0x20);
MakeComm(0x452FA4, "'function TIdSocketListWindows.Count:Integer;'");
MakeCode(0x452FA4);
MakeFunction(0x452FA4, 0x452FA8);
MakeCode(0x452FA8);
MakeComm(0x452FC0, "'TIdSocketListWindows.........FFDSet:TFDSet'");
MakeCode(0x452FCB);
MakeComm(0x452FE2, "'EIdStackSetSizeExceeded.Create'");
MakeCode(0x452FEC);
MakeCode(0x452FF9);
MakeCode(0x453002);
MakeCode(0x453007);
MakeFunction(0x452FA8, 0x45300F);
MakeUnkn(0x453010, 1);
MakeNameEx(0x453010, "TIdSocketListWindows.Remove", 0x20);
MakeComm(0x453010, "'procedure TIdSocketListWindows.Remove(AHandle:TIdStackSocketHandle);'");
MakeCode(0x453010);
MakeCode(0x45301D);
MakeCode(0x45303D);
MakeCode(0x453041);
MakeFunction(0x453010, 0x453044);
MakeCode(0x453044);
MakeCode(0x453080);
MakeCode(0x45308D);
MakeCode(0x4530CA);
MakeCode(0x4530D7);
MakeCode(0x4530E5);
MakeCode(0x4530EA);
MakeFunction(0x453044, 0x4530F3);
MakeUnkn(0x4530F4, 1);
MakeNameEx(0x4530F4, "Finalization_14", 0x20);
MakeComm(0x4530F4, "'procedure Finalization;'");
MakeCode(0x4530F4);
MakeCode(0x45311F);
MakeCode(0x45312C);
MakeCode(0x45312D);
MakeCode(0x453132);
MakeFunction(0x4530F4, 0x453136);
MakeUnkn(0x453138, 1);
MakeNameEx(0x453138, "IdStackWindows", 0x20);
MakeComm(0x453138, "'procedure IdStackWindows;'");
MakeCode(0x453138);
MakeFunction(0x453138, 0x453164);
MakeCode(0x453164);
MakeCode(0x45317B);
MakeCode(0x453188);
MakeCode(0x453189);
MakeCode(0x45318E);
MakeFunction(0x453164, 0x453192);
MakeCode(0x453194);
MakeFunction(0x453194, 0x45319C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4531A4, -1);
MakeDword(0x4531A0);
MakeDword(0x45319C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4531B0, -1);
MakeDword(0x4531AC);
MakeDword(0x4531A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4531BC, -1);
MakeDword(0x4531B8);
MakeDword(0x4531B4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4531C8, -1);
MakeDword(0x4531C4);
MakeDword(0x4531C0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4531D4, -1);
MakeDword(0x4531D0);
MakeDword(0x4531CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4531E0, -1);
MakeDword(0x4531DC);
MakeDword(0x4531D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4531EC, -1);
MakeDword(0x4531E8);
MakeDword(0x4531E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4531F8, -1);
MakeDword(0x4531F4);
MakeDword(0x4531F0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453204, -1);
MakeDword(0x453200);
MakeDword(0x4531FC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453210, -1);
MakeDword(0x45320C);
MakeDword(0x453208);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45321C, -1);
MakeDword(0x453218);
MakeDword(0x453214);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453228, -1);
MakeDword(0x453224);
MakeDword(0x453220);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453234, -1);
MakeDword(0x453230);
MakeDword(0x45322C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453240, -1);
MakeDword(0x45323C);
MakeDword(0x453238);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45324C, -1);
MakeDword(0x453248);
MakeDword(0x453244);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453258, -1);
MakeDword(0x453254);
MakeDword(0x453250);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453264, -1);
MakeDword(0x453260);
MakeDword(0x45325C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453270, -1);
MakeDword(0x45326C);
MakeDword(0x453268);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45327C, -1);
MakeDword(0x453278);
MakeDword(0x453274);
MakeUnkn(0x453280, 1);
MakeNameEx(0x453280, "VMT_453280_TIdReadMemoryStream", 0);
MakeDword(0x453280);
MakeDword(0x453284);
MakeDword(0x453288);
MakeDword(0x45328C);
MakeDword(0x453290);
MakeDword(0x453294);
MakeDword(0x453298);
MakeDword(0x45329C);
MakeDword(0x4532A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4532E8, 0x4532FC);
MakeDword(0x4532A4);
MakeDword(0x4532A8);
MakeDword(0x4532AC);
MakeDword(0x4532B0);
MakeDword(0x4532B4);
MakeDword(0x4532B8);
MakeDword(0x4532BC);
MakeDword(0x4532C0);
MakeDword(0x4532C4);
MakeDword(0x4532C8);
MakeComm(0x4532CC, "'+0'");
MakeDword(0x4532CC);
MakeComm(0x4532D0, "'+4'");
MakeDword(0x4532D0);
MakeComm(0x4532D4, "'+8'");
MakeDword(0x4532D4);
MakeComm(0x4532D8, "'+C'");
MakeDword(0x4532D8);
MakeComm(0x4532DC, "'+10'");
MakeDword(0x4532DC);
MakeComm(0x4532E0, "'+14'");
MakeDword(0x4532E0);
MakeComm(0x4532E4, "'+18'");
MakeDword(0x4532E4);
MakeUnkn(0x4532FC, 1);
MakeNameEx(0x4532FC, "RTTI_4532FC_DynArray_.9", 0);
MakeDword(0x4532FC);
MakeUnkn(0x453300, 1);
MakeNameEx(0x453300, "", 0);
MakeByte(0x453300);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x453301, 0x453304);
MakeDword(0x453304);
MakeDword(0x453308);
MakeDword(0x45330C);
MakeDword(0x453310);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x453314, 0x45331D);
MakeUnkn(0x453320, 1);
MakeNameEx(0x453320, "RTTI_453320_DynArray_.01", 0);
MakeDword(0x453320);
MakeUnkn(0x453324, 1);
MakeNameEx(0x453324, "", 0);
MakeByte(0x453324);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x453325, 0x453329);
MakeDword(0x453329);
MakeDword(0x45332D);
MakeDword(0x453331);
MakeDword(0x453335);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x453339, 0x453342);
MakeUnkn(0x453344, 1);
MakeNameEx(0x453344, "IncludeTrailingSlash", 0x20);
MakeComm(0x453344, "'function IncludeTrailingSlash(const APath:AnsiString):AnsiString;'");
MakeCode(0x453344);
MakeFunction(0x453344, 0x453356);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453360, -1);
MakeDword(0x45335C);
MakeDword(0x453358);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45336C, -1);
MakeDword(0x453368);
MakeDword(0x453364);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453378, -1);
MakeDword(0x453374);
MakeDword(0x453370);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453384, -1);
MakeDword(0x453380);
MakeDword(0x45337C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453390, -1);
MakeDword(0x45338C);
MakeDword(0x453388);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45339C, -1);
MakeDword(0x453398);
MakeDword(0x453394);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4533A8, -1);
MakeDword(0x4533A4);
MakeDword(0x4533A0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4533B4, -1);
MakeDword(0x4533B0);
MakeDword(0x4533AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4533C0, -1);
MakeDword(0x4533BC);
MakeDword(0x4533B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4533CC, -1);
MakeDword(0x4533C8);
MakeDword(0x4533C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4533D8, -1);
MakeDword(0x4533D4);
MakeDword(0x4533D0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4533E4, -1);
MakeDword(0x4533E0);
MakeDword(0x4533DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4533F0, -1);
MakeDword(0x4533EC);
MakeDword(0x4533E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4533FC, -1);
MakeDword(0x4533F8);
MakeDword(0x4533F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453408, -1);
MakeDword(0x453404);
MakeDword(0x453400);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453414, -1);
MakeDword(0x453410);
MakeDword(0x45340C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453420, -1);
MakeDword(0x45341C);
MakeDword(0x453418);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45342C, -1);
MakeDword(0x453428);
MakeDword(0x453424);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453438, -1);
MakeDword(0x453434);
MakeDword(0x453430);
MakeUnkn(0x45343C, 1);
MakeNameEx(0x45343C, "TempPath", 0x20);
MakeComm(0x45343C, "'function TempPath:AnsiString;'");
MakeCode(0x45343C);
MakeCode(0x453485);
MakeCode(0x453492);
MakeCode(0x45349B);
MakeCode(0x4534A0);
MakeFunction(0x45343C, 0x4534A6);
MakeUnkn(0x4534A8, 1);
MakeNameEx(0x4534A8, "FetchCaseInsensitive", 0x20);
MakeComm(0x4534A8, "'function FetchCaseInsensitive(var AInput:AnsiString; const ADelim:AnsiString; const ADelete:Boolean):AnsiString;'");
MakeCode(0x4534A8);
MakeCode(0x4534E4);
MakeCode(0x453508);
MakeCode(0x453525);
MakeCode(0x453556);
MakeCode(0x453563);
MakeCode(0x453571);
MakeCode(0x453576);
MakeFunction(0x4534A8, 0x453581);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45358C, -1);
MakeDword(0x453588);
MakeDword(0x453584);
MakeUnkn(0x453590, 1);
MakeNameEx(0x453590, "Fetch", 0x20);
MakeComm(0x453590, "'function Fetch(var AInput:AnsiString; const ADelim:AnsiString; const ADelete:Boolean; const ACaseSensitive:Boolean):AnsiString;'");
MakeCode(0x453590);
MakeCode(0x4535BF);
MakeCode(0x4535CB);
MakeCode(0x4535E8);
MakeCode(0x45361B);
MakeCode(0x45362B);
MakeFunction(0x453590, 0x453633);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45363C, -1);
MakeDword(0x453638);
MakeDword(0x453634);
MakeCode(0x453640);
MakeFunction(0x453640, 0x453645);
MakeUnkn(0x453650, 1);
MakeNameEx(0x453650, "TIdReadMemoryStream.SetPointer", 0x20);
MakeComm(0x453650, "'procedure TIdReadMemoryStream.SetPointer(Ptr:Pointer; Size:Longint);'");
MakeCode(0x453650);
MakeFunction(0x453650, 0x453667);
MakeUnkn(0x453668, 1);
MakeNameEx(0x453668, "TIdReadMemoryStream.Write", 0x20);
MakeComm(0x453668, "'function TIdReadMemoryStream.Write:?;'");
MakeCode(0x453668);
MakeFunction(0x453668, 0x45366B);
MakeCode(0x45366C);
MakeCode(0x453711);
MakeCode(0x45371E);
MakeCode(0x45371F);
MakeCode(0x453724);
MakeFunction(0x45366C, 0x453728);
MakeCode(0x453728);
MakeCode(0x453789);
MakeCode(0x453793);
MakeCode(0x4537E5);
MakeCode(0x4537F2);
MakeCode(0x4537FB);
MakeCode(0x453800);
MakeFunction(0x453728, 0x453805);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453830, -1);
MakeDword(0x45382C);
MakeDword(0x453828);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453840, -1);
MakeDword(0x45383C);
MakeDword(0x453838);
MakeUnkn(0x453848, 1);
MakeNameEx(0x453848, "VMT_453848_TIdHash", 0);
MakeDword(0x453848);
MakeDword(0x45384C);
MakeDword(0x453850);
MakeDword(0x453854);
MakeDword(0x453858);
MakeDword(0x45385C);
MakeDword(0x453860);
MakeDword(0x453864);
MakeDword(0x453868);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x453894, 0x45389C);
MakeDword(0x45386C);
MakeDword(0x453870);
MakeDword(0x453874);
MakeDword(0x453878);
MakeDword(0x45387C);
MakeDword(0x453880);
MakeDword(0x453884);
MakeDword(0x453888);
MakeDword(0x45388C);
MakeDword(0x453890);
MakeUnkn(0x45389C, 1);
MakeNameEx(0x45389C, "VMT_45389C_TIdHash128", 0);
MakeDword(0x45389C);
MakeDword(0x4538A0);
MakeDword(0x4538A4);
MakeDword(0x4538A8);
MakeDword(0x4538AC);
MakeDword(0x4538B0);
MakeDword(0x4538B4);
MakeDword(0x4538B8);
MakeDword(0x4538BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4538EC, 0x4538F7);
MakeDword(0x4538C0);
MakeDword(0x4538C4);
MakeDword(0x4538C8);
MakeDword(0x4538CC);
MakeDword(0x4538D0);
MakeDword(0x4538D4);
MakeDword(0x4538D8);
MakeDword(0x4538DC);
MakeDword(0x4538E0);
MakeDword(0x4538E4);
MakeComm(0x4538E8, "'+0'");
MakeDword(0x4538E8);
MakeUnkn(0x4538F8, 1);
MakeNameEx(0x4538F8, "TIdHash128.HashValue", 0x20);
MakeComm(0x4538F8, "'function TIdHash128.HashValue(const ASrc:AnsiString):T4x4LongWordRecord;'");
MakeCode(0x4538F8);
MakeCode(0x453943);
MakeCode(0x453950);
MakeCode(0x453959);
MakeCode(0x45395E);
MakeFunction(0x4538F8, 0x453966);
MakeUnkn(0x453968, 1);
MakeNameEx(0x453968, "TIdHash128.AsHex", 0x20);
MakeComm(0x453968, "'function TIdHash128.AsHex(const AValue:T4x4LongWordRecord):AnsiString;'");
MakeCode(0x453968);
MakeCode(0x453985);
MakeFunction(0x453968, 0x4539D0);
MakeCode(0x4539D0);
MakeCode(0x4539E7);
MakeCode(0x4539F4);
MakeCode(0x4539F5);
MakeCode(0x4539FA);
MakeFunction(0x4539D0, 0x4539FE);
MakeCode(0x453A00);
MakeFunction(0x453A00, 0x453A08);
MakeUnkn(0x453A08, 1);
MakeNameEx(0x453A08, "VMT_453A08_TIdHashMessageDigest", 0);
MakeDword(0x453A08);
MakeDword(0x453A0C);
MakeDword(0x453A10);
MakeDword(0x453A14);
MakeDword(0x453A18);
MakeDword(0x453A1C);
MakeDword(0x453A20);
MakeDword(0x453A24);
MakeDword(0x453A28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x453A58, 0x453A6D);
MakeDword(0x453A2C);
MakeDword(0x453A30);
MakeDword(0x453A34);
MakeDword(0x453A38);
MakeDword(0x453A3C);
MakeDword(0x453A40);
MakeDword(0x453A44);
MakeDword(0x453A48);
MakeDword(0x453A4C);
MakeDword(0x453A50);
MakeComm(0x453A54, "'+0'");
MakeDword(0x453A54);
MakeUnkn(0x453A70, 1);
MakeNameEx(0x453A70, "VMT_453A70_TIdHashMessageDigest4", 0);
MakeDword(0x453A70);
MakeDword(0x453A74);
MakeDword(0x453A78);
MakeDword(0x453A7C);
MakeDword(0x453A80);
MakeDword(0x453A84);
MakeDword(0x453A88);
MakeDword(0x453A8C);
MakeDword(0x453A90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x453AD0, 0x453AE6);
MakeDword(0x453A94);
MakeDword(0x453A98);
MakeDword(0x453A9C);
MakeDword(0x453AA0);
MakeDword(0x453AA4);
MakeDword(0x453AA8);
MakeDword(0x453AAC);
MakeDword(0x453AB0);
MakeDword(0x453AB4);
MakeDword(0x453AB8);
MakeComm(0x453ABC, "'+0'");
MakeDword(0x453ABC);
MakeComm(0x453AC0, "'+4'");
MakeDword(0x453AC0);
MakeComm(0x453AC4, "'+8'");
MakeDword(0x453AC4);
MakeComm(0x453AC8, "'+C'");
MakeDword(0x453AC8);
MakeComm(0x453ACC, "'+10'");
MakeDword(0x453ACC);
MakeUnkn(0x453AE8, 1);
MakeNameEx(0x453AE8, "VMT_453AE8_TIdHashMessageDigest5", 0);
MakeDword(0x453AE8);
MakeDword(0x453AEC);
MakeDword(0x453AF0);
MakeDword(0x453AF4);
MakeDword(0x453AF8);
MakeDword(0x453AFC);
MakeDword(0x453B00);
MakeDword(0x453B04);
MakeDword(0x453B08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x453B4C, 0x453B62);
MakeDword(0x453B0C);
MakeDword(0x453B10);
MakeDword(0x453B14);
MakeDword(0x453B18);
MakeDword(0x453B1C);
MakeDword(0x453B20);
MakeDword(0x453B24);
MakeDword(0x453B28);
MakeDword(0x453B2C);
MakeDword(0x453B30);
MakeComm(0x453B34, "'+0'");
MakeDword(0x453B34);
MakeComm(0x453B38, "'+4'");
MakeDword(0x453B38);
MakeComm(0x453B3C, "'+8'");
MakeDword(0x453B3C);
MakeComm(0x453B40, "'+C'");
MakeDword(0x453B40);
MakeComm(0x453B44, "'+10'");
MakeDword(0x453B44);
MakeComm(0x453B48, "'+14'");
MakeDword(0x453B48);
MakeCode(0x453B64);
MakeFunction(0x453B64, 0x453BCA);
MakeCode(0x453BCC);
MakeCode(0x453C09);
MakeCode(0x453CC6);
MakeFunction(0x453BCC, 0x454001);
MakeUnkn(0x455008, 1);
MakeNameEx(0x455008, "VMT_455008_TForm1", 0);
MakeDword(0x455008);
MakeDword(0x45500C);
MakeDword(0x455010);
MakeDword(0x455014);
MakeDword(0x455018);
MakeDword(0x45501C);
MakeUnkn(0x455148, 1);
MakeNameEx(0x455148, "TForm1_FieldTable", 0);
MakeWord(0x455148);
MakeDword(0x45514A);
MakeWord(0x455194);
MakeDword(0x455196);
MakeDword(0x45519A);
MakeDword(0x45519E);
MakeDword(0x45514E);
MakeWord(0x455152);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x455154, 0x45515B);
MakeDword(0x45515B);
MakeWord(0x45515F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x455161, 0x455169);
MakeDword(0x455169);
MakeWord(0x45516D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45516F, 0x455178);
MakeDword(0x455020);
MakeUnkn(0x455178, 1);
MakeNameEx(0x455178, "TForm1_MethodTable", 0);
MakeWord(0x455178);
MakeWord(0x45517A);
MakeDword(0x45517C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x455180, 0x45518D);
MakeDword(0x455024);
MakeDword(0x455028);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45518D, 0x455194);
MakeDword(0x45502C);
MakeDword(0x455030);
MakeDword(0x455034);
MakeDword(0x455038);
MakeDword(0x45503C);
MakeDword(0x455040);
MakeDword(0x455044);
MakeDword(0x455048);
MakeDword(0x45504C);
MakeDword(0x455050);
MakeComm(0x455054, "'+0'");
MakeDword(0x455054);
MakeComm(0x455058, "'+4'");
MakeDword(0x455058);
MakeComm(0x45505C, "'+8'");
MakeDword(0x45505C);
MakeComm(0x455060, "'+C'");
MakeDword(0x455060);
MakeComm(0x455064, "'+10'");
MakeDword(0x455064);
MakeComm(0x455068, "'+14'");
MakeDword(0x455068);
MakeComm(0x45506C, "'+18'");
MakeDword(0x45506C);
MakeComm(0x455070, "'+1C'");
MakeDword(0x455070);
MakeComm(0x455074, "'+20'");
MakeDword(0x455074);
MakeComm(0x455078, "'+24'");
MakeDword(0x455078);
MakeComm(0x45507C, "'+28'");
MakeDword(0x45507C);
MakeComm(0x455080, "'+2C'");
MakeDword(0x455080);
MakeComm(0x455084, "'+30'");
MakeDword(0x455084);
MakeComm(0x455088, "'+34'");
MakeDword(0x455088);
MakeComm(0x45508C, "'+38'");
MakeDword(0x45508C);
MakeComm(0x455090, "'+3C'");
MakeDword(0x455090);
MakeComm(0x455094, "'+40'");
MakeDword(0x455094);
MakeComm(0x455098, "'+44'");
MakeDword(0x455098);
MakeComm(0x45509C, "'+48'");
MakeDword(0x45509C);
MakeComm(0x4550A0, "'+4C'");
MakeDword(0x4550A0);
MakeComm(0x4550A4, "'+50'");
MakeDword(0x4550A4);
MakeComm(0x4550A8, "'+54'");
MakeDword(0x4550A8);
MakeComm(0x4550AC, "'+58'");
MakeDword(0x4550AC);
MakeComm(0x4550B0, "'+5C'");
MakeDword(0x4550B0);
MakeComm(0x4550B4, "'+60'");
MakeDword(0x4550B4);
MakeComm(0x4550B8, "'+64'");
MakeDword(0x4550B8);
MakeComm(0x4550BC, "'+68'");
MakeDword(0x4550BC);
MakeComm(0x4550C0, "'+6C'");
MakeDword(0x4550C0);
MakeComm(0x4550C4, "'+70'");
MakeDword(0x4550C4);
MakeComm(0x4550C8, "'+74'");
MakeDword(0x4550C8);
MakeComm(0x4550CC, "'+78'");
MakeDword(0x4550CC);
MakeComm(0x4550D0, "'+7C'");
MakeDword(0x4550D0);
MakeComm(0x4550D4, "'+80'");
MakeDword(0x4550D4);
MakeComm(0x4550D8, "'+84'");
MakeDword(0x4550D8);
MakeComm(0x4550DC, "'+88'");
MakeDword(0x4550DC);
MakeComm(0x4550E0, "'+8C'");
MakeDword(0x4550E0);
MakeComm(0x4550E4, "'+90'");
MakeDword(0x4550E4);
MakeComm(0x4550E8, "'+94'");
MakeDword(0x4550E8);
MakeComm(0x4550EC, "'+98'");
MakeDword(0x4550EC);
MakeComm(0x4550F0, "'+9C'");
MakeDword(0x4550F0);
MakeComm(0x4550F4, "'+A0'");
MakeDword(0x4550F4);
MakeComm(0x4550F8, "'+A4'");
MakeDword(0x4550F8);
MakeComm(0x4550FC, "'+A8'");
MakeDword(0x4550FC);
MakeComm(0x455100, "'+AC'");
MakeDword(0x455100);
MakeComm(0x455104, "'+B0'");
MakeDword(0x455104);
MakeComm(0x455108, "'+B4'");
MakeDword(0x455108);
MakeComm(0x45510C, "'+B8'");
MakeDword(0x45510C);
MakeComm(0x455110, "'+BC'");
MakeDword(0x455110);
MakeComm(0x455114, "'+C0'");
MakeDword(0x455114);
MakeComm(0x455118, "'+C4'");
MakeDword(0x455118);
MakeComm(0x45511C, "'+C8'");
MakeDword(0x45511C);
MakeComm(0x455120, "'+CC'");
MakeDword(0x455120);
MakeComm(0x455124, "'+D0'");
MakeDword(0x455124);
MakeComm(0x455128, "'+D4'");
MakeDword(0x455128);
MakeComm(0x45512C, "'+D8'");
MakeDword(0x45512C);
MakeComm(0x455130, "'+DC'");
MakeDword(0x455130);
MakeComm(0x455134, "'+E0'");
MakeDword(0x455134);
MakeComm(0x455138, "'+E4'");
MakeDword(0x455138);
MakeComm(0x45513C, "'+E8'");
MakeDword(0x45513C);
MakeComm(0x455140, "'+EC'");
MakeDword(0x455140);
MakeComm(0x455144, "'+F0'");
MakeDword(0x455144);
MakeUnkn(0x4551A4, 1);
MakeNameEx(0x4551A4, "RTTI_4551A4_Class_TForm1", 0);
MakeDword(0x4551A4);
MakeUnkn(0x4551A8, 1);
MakeNameEx(0x4551A8, "", 0);
MakeByte(0x4551A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4551A9, 0x4551B0);
MakeDword(0x4551B0);
MakeDword(0x4551B4);
MakeWord(0x4551B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4551BA, 0x4551C0);
MakeWord(0x4551C0);
MakeUnkn(0x4551C4, 1);
MakeNameEx(0x4551C4, "TForm1.Button1Click", 0x20);
MakeComm(0x4551C4, "'procedure TForm1.Button1Click(Sender:TObject);'");
MakeCode(0x4551C4);
MakeCode(0x4551CC);
MakeComm(0x4551EF, "'TForm1.str_edit:TEdit'");
MakeComm(0x455215, "'TIdHashMessageDigest5.Create'");
MakeComm(0x45523E, "'TForm1.str_edit:TEdit'");
MakeCode(0x455313);
MakeCode(0x45532C);
MakeCode(0x455335);
MakeCode(0x45538E);
MakeCode(0x4553CB);
MakeCode(0x455458);
MakeCode(0x45548B);
MakeCode(0x4554B3);
MakeCode(0x4554CB);
MakeCode(0x4554D8);
MakeCode(0x4554FB);
MakeCode(0x455500);
MakeFunction(0x4551C4, 0x455507);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x455510, -1);
MakeDword(0x45550C);
MakeDword(0x455508);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45553C, -1);
MakeDword(0x455538);
MakeDword(0x455534);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x455568, -1);
MakeDword(0x455564);
MakeDword(0x455560);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x455594, -1);
MakeDword(0x455590);
MakeDword(0x45558C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4555C0, -1);
MakeDword(0x4555BC);
MakeDword(0x4555B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4555EC, -1);
MakeDword(0x4555E8);
MakeDword(0x4555E4);
MakeCode(0x455644);
MakeCode(0x455690);
MakeCode(0x45569D);
MakeCode(0x45569E);
MakeCode(0x4556A3);
MakeFunction(0x455644, 0x4556A7);
MakeCode(0x4556A8);
MakeFunction(0x4556A8, 0x4556B0);
MakeCode(0x4556B0);
MakeCode(0x4556C1);
MakeCode(0x4556CE);
MakeCode(0x4556CF);
MakeCode(0x4556D4);
MakeFunction(0x4556B0, 0x4556D8);
MakeUnkn(0x455908, 1);
MakeNameEx(0x455908, "EntryPoint", 0x20);
MakeComm(0x455908, "'procedure EntryPoint;'");
MakeCode(0x455908);
MakeFunction(0x455908, 0x45594D);
MakeByte(0x456008);
MakeUnkn(0x456008, 1);
MakeNameEx(0x456008, "gvar_00456008", 0);
MakeByte(0x45600C);
MakeUnkn(0x45600C, 1);
MakeNameEx(0x45600C, "gvar_0045600C", 0);
MakeByte(0x456010);
MakeUnkn(0x456010, 1);
MakeNameEx(0x456010, "gvar_00456010", 0);
MakeByte(0x456014);
MakeUnkn(0x456014, 1);
MakeNameEx(0x456014, "gvar_00456014", 0);
MakeByte(0x456018);
MakeUnkn(0x456018, 1);
MakeNameEx(0x456018, "gvar_00456018", 0);
MakeByte(0x45601C);
MakeUnkn(0x45601C, 1);
MakeNameEx(0x45601C, "gvar_0045601C", 0);
MakeByte(0x45610C);
MakeUnkn(0x45610C, 1);
MakeNameEx(0x45610C, "gvar_0045610C", 0);
MakeByte(0x45671C);
MakeUnkn(0x45671C, 1);
MakeNameEx(0x45671C, "gvar_0045671C", 0);
MakeByte(0x45694C);
MakeUnkn(0x45694C, 1);
MakeNameEx(0x45694C, "gvar_0045694C", 0);
MakeByte(0x456AE8);
MakeUnkn(0x456AE8, 1);
MakeNameEx(0x456AE8, "WINDOWPOS", 0);
MakeByte(0x456C70);
MakeUnkn(0x456C70, 1);
MakeNameEx(0x456C70, "gvar_00456C70", 0);
MakeByte(0x456D80);
MakeUnkn(0x456D80, 1);
MakeNameEx(0x456D80, "gvar_00456D80", 0);
MakeByte(0x4572C4);
MakeUnkn(0x4572C4, 1);
MakeNameEx(0x4572C4, "gvar_004572C4", 0);
MakeComm(0x4572C4, "'TIdStackWindows'");
MakeByte(0x4572CC);
MakeUnkn(0x4572CC, 1);
MakeNameEx(0x4572CC, "gvar_004572CC", 0);
MakeByte(0x45732C);
MakeUnkn(0x45732C, 1);
MakeNameEx(0x45732C, "gvar_0045732C", 0);
MakeComm(0x45732C, "'Integer'");
MakeByte(0x4574B0);
MakeUnkn(0x4574B0, 1);
MakeNameEx(0x4574B0, "IsLibrary", 0);
MakeComm(0x4574B0, "'Boolean'");
MakeByte(0x4574B8);
MakeUnkn(0x4574B8, 1);
MakeNameEx(0x4574B8, "shutdown", 0);
MakeComm(0x4574B8, "'lpfn_SHUTDOWN'");
MakeByte(0x4574CC);
MakeUnkn(0x4574CC, 1);
MakeNameEx(0x4574CC, "connect", 0);
MakeComm(0x4574CC, "'lpfn_CONNECT'");
MakeByte(0x4574D8);
MakeUnkn(0x4574D8, 1);
MakeNameEx(0x4574D8, "AbstractErrorProc", 0);
MakeComm(0x4574D8, "'procedure'");
MakeByte(0x4574EC);
MakeUnkn(0x4574EC, 1);
MakeNameEx(0x4574EC, "ExitProc", 0);
MakeComm(0x4574EC, "'Pointer'");
MakeByte(0x4574F8);
MakeUnkn(0x4574F8, 1);
MakeNameEx(0x4574F8, "ErrorProc", 0);
MakeComm(0x4574F8, "'procedure(val ErrorCode:Byte;val ErrorAddr:Pointer)'");
MakeByte(0x457504);
MakeUnkn(0x457504, 1);
MakeNameEx(0x457504, "getsockname", 0);
MakeComm(0x457504, "'lpfn_GETSOCKNAME'");
MakeByte(0x45753C);
MakeUnkn(0x45753C, 1);
MakeNameEx(0x45753C, "getpeername", 0);
MakeComm(0x45753C, "'lpfn_GETPEERNAME'");
MakeByte(0x457554);
MakeUnkn(0x457554, 1);
MakeNameEx(0x457554, "accept", 0);
MakeComm(0x457554, "'lpfn_ACCEPT'");
MakeByte(0x457570);
MakeUnkn(0x457570, 1);
MakeNameEx(0x457570, "ExceptionClass", 0);
MakeComm(0x457570, "'TClass'");
MakeByte(0x457574);
MakeUnkn(0x457574, 1);
MakeNameEx(0x457574, "socket", 0);
MakeComm(0x457574, "'lpfn_SOCKET'");
MakeByte(0x45757C);
MakeUnkn(0x45757C, 1);
MakeNameEx(0x45757C, "getsockopt", 0);
MakeComm(0x45757C, "'lpfn_GETSOCKOPT'");
MakeByte(0x457588);
MakeUnkn(0x457588, 1);
MakeNameEx(0x457588, "gvar_00457588", 0);
MakeByte(0x4575AC);
MakeUnkn(0x4575AC, 1);
MakeNameEx(0x4575AC, "IsThemeBackgroundPartiallyTransparent", 0);
MakeComm(0x4575AC, "'function(val hTheme:Windows.THandle;val iPartId:System.Integer;val iStateId:System.Integer):Windows.BOOL stdcall'");
MakeByte(0x4575C4);
MakeUnkn(0x4575C4, 1);
MakeNameEx(0x4575C4, "OpenThemeData", 0);
MakeComm(0x4575C4, "'function(val hwnd:Windows.HWND;val pszClassList:Windows.LPCWSTR):Windows.THandle stdcall'");
MakeByte(0x4575E8);
MakeUnkn(0x4575E8, 1);
MakeNameEx(0x4575E8, "Output", 0);
MakeComm(0x4575E8, "'Text'");
MakeByte(0x457600);
MakeUnkn(0x457600, 1);
MakeNameEx(0x457600, "sendto", 0);
MakeComm(0x457600, "'lpfn_SENDTO'");
MakeByte(0x457604);
MakeUnkn(0x457604, 1);
MakeNameEx(0x457604, "send", 0);
MakeComm(0x457604, "'lpfn_SEND'");
MakeByte(0x45760C);
MakeUnkn(0x45760C, 1);
MakeNameEx(0x45760C, "bind", 0);
MakeComm(0x45760C, "'lpfn_BIND'");
MakeByte(0x457614);
MakeUnkn(0x457614, 1);
MakeNameEx(0x457614, "GetMonitorInfo", 0);
MakeComm(0x457614, "'TGetMonitorInfoA'");
MakeByte(0x457618);
MakeUnkn(0x457618, 1);
MakeNameEx(0x457618, "ExceptClsProc", 0);
MakeComm(0x457618, "'Pointer'");
MakeByte(0x45761C);
MakeUnkn(0x45761C, 1);
MakeNameEx(0x45761C, "MainInstance", 0);
MakeComm(0x45761C, "'Cardinal'");
MakeByte(0x457638);
MakeUnkn(0x457638, 1);
MakeNameEx(0x457638, "ExceptProc", 0);
MakeComm(0x457638, "'Pointer'");
MakeByte(0x457640);
MakeUnkn(0x457640, 1);
MakeNameEx(0x457640, "ExceptObjProc", 0);
MakeComm(0x457640, "'Pointer'");
MakeByte(0x457644);
MakeUnkn(0x457644, 1);
MakeNameEx(0x457644, "htons", 0);
MakeComm(0x457644, "'lpfn_HTONS'");
MakeByte(0x457648);
MakeUnkn(0x457648, 1);
MakeNameEx(0x457648, "ntohs", 0);
MakeComm(0x457648, "'lpfn_NTOHS'");
MakeByte(0x457684);
MakeUnkn(0x457684, 1);
MakeNameEx(0x457684, "GSocketListClass", 0);
MakeComm(0x457684, "'TIdSocketListClass'");
MakeByte(0x4576B0);
MakeUnkn(0x4576B0, 1);
MakeNameEx(0x4576B0, "recv", 0);
MakeComm(0x4576B0, "'lpfn_RECV'");
MakeByte(0x4576C0);
MakeUnkn(0x4576C0, 1);
MakeNameEx(0x4576C0, "gethostbyname", 0);
MakeComm(0x4576C0, "'lpfn_GETHOSTBYNAME'");
MakeByte(0x4576D0);
MakeUnkn(0x4576D0, 1);
MakeNameEx(0x4576D0, "NewStyleControls", 0);
MakeComm(0x4576D0, "'Boolean'");
MakeByte(0x4576E4);
MakeUnkn(0x4576E4, 1);
MakeNameEx(0x4576E4, "MonitorFromWindow", 0);
MakeComm(0x4576E4, "'TMonitorFromWindow'");
MakeByte(0x457700);
MakeUnkn(0x457700, 1);
MakeNameEx(0x457700, "DrawThemeBackground", 0);
MakeComm(0x457700, "'function(val hTheme:Windows.THandle;val hdc:Windows.HDC;val iPartId:System.Integer;val iStateId:System.Integer;const pRect:Windows.TRect;val pClipRect:Windows.PRect):System.HRESULT stdcall'");
MakeByte(0x457708);
MakeUnkn(0x457708, 1);
MakeNameEx(0x457708, "InitProc", 0);
MakeComm(0x457708, "'Pointer'");
MakeByte(0x457710);
MakeUnkn(0x457710, 1);
MakeNameEx(0x457710, "WSACleanup", 0);
MakeComm(0x457710, "'lpfn_WSACLEANUP'");
MakeByte(0x45771C);
MakeUnkn(0x45771C, 1);
MakeNameEx(0x45771C, "CloseThemeData", 0);
MakeComm(0x45771C, "'function(val hTheme:Windows.THandle):System.HRESULT stdcall'");
MakeByte(0x457720);
MakeUnkn(0x457720, 1);
MakeNameEx(0x457720, "listen", 0);
MakeComm(0x457720, "'lpfn_LISTEN'");
MakeByte(0x457728);
MakeUnkn(0x457728, 1);
MakeNameEx(0x457728, "recvfrom", 0);
MakeComm(0x457728, "'lpfn_RECVFROM'");
MakeByte(0x457740);
MakeUnkn(0x457740, 1);
MakeNameEx(0x457740, "TransmitFile", 0);
MakeComm(0x457740, "'TTransmitFileProc'");
MakeByte(0x457748);
MakeUnkn(0x457748, 1);
MakeNameEx(0x457748, "EnumDisplayMonitors", 0);
MakeComm(0x457748, "'TEnumDisplayMonitors'");
MakeByte(0x45774C);
MakeUnkn(0x45774C, 1);
MakeNameEx(0x45774C, "DrawThemeEdge", 0);
MakeComm(0x45774C, "'function(val hTheme:Windows.THandle;val hdc:Windows.HDC;val iPartId:System.Integer;val iStateId:System.Integer;const pDestRect:Windows.TRect;val uEdge:Windows.UINT;val uFlags:Windows.UINT;val pContentRect:Windows.PRect):System.HRESULT stdcall'");
MakeByte(0x457790);
MakeUnkn(0x457790, 1);
MakeNameEx(0x457790, "CmdShow", 0);
MakeComm(0x457790, "'Integer'");
MakeByte(0x4577B0);
MakeUnkn(0x4577B0, 1);
MakeNameEx(0x4577B0, "DrawThemeParentBackground", 0);
MakeComm(0x4577B0, "'function(val hwnd:Windows.HWND;val hdc:Windows.HDC;val prc:Windows.PRect):System.HRESULT stdcall'");
MakeByte(0x4577D4);
MakeUnkn(0x4577D4, 1);
MakeNameEx(0x4577D4, "AssertErrorProc", 0);
MakeComm(0x4577D4, "'TAssertErrorProc'");
MakeByte(0x4577E4);
MakeUnkn(0x4577E4, 1);
MakeNameEx(0x4577E4, "Application", 0);
MakeComm(0x4577E4, "'TApplication'");
MakeByte(0x45782C);
MakeUnkn(0x45782C, 1);
MakeNameEx(0x45782C, "setsockopt", 0);
MakeComm(0x45782C, "'lpfn_SETSOCKOPT'");
MakeByte(0x45785C);
MakeUnkn(0x45785C, 1);
MakeNameEx(0x45785C, "IsConsole", 0);
MakeComm(0x45785C, "'Boolean'");
MakeByte(0x457868);
MakeUnkn(0x457868, 1);
MakeNameEx(0x457868, "gethostbyaddr", 0);
MakeComm(0x457868, "'lpfn_GETHOSTBYADDR'");
MakeByte(0x457874);
MakeUnkn(0x457874, 1);
MakeNameEx(0x457874, "inet_addr", 0);
MakeComm(0x457874, "'lpfn_INET_ADDR'");
MakeByte(0x4578B0);
MakeUnkn(0x4578B0, 1);
MakeNameEx(0x4578B0, "gvar_004578B0", 0);
MakeByte(0x4578E8);
MakeUnkn(0x4578E8, 1);
MakeNameEx(0x4578E8, "WSAGetLastError", 0);
MakeComm(0x4578E8, "'lpfn_WSAGETLASTERROR'");
MakeByte(0x457900);
MakeUnkn(0x457900, 1);
MakeNameEx(0x457900, "gvar_00457900", 0);
MakeByte(0x457930);
MakeUnkn(0x457930, 1);
MakeNameEx(0x457930, "Mouse", 0);
MakeComm(0x457930, "'TMouse'");
MakeByte(0x457944);
MakeUnkn(0x457944, 1);
MakeNameEx(0x457944, "closesocket", 0);
MakeComm(0x457944, "'lpfn_CLOSESOCKET'");
MakeByte(0x457948);
MakeUnkn(0x457948, 1);
MakeNameEx(0x457948, "ntohl", 0);
MakeComm(0x457948, "'lpfn_NTOHL'");
MakeByte(0x45794C);
MakeUnkn(0x45794C, 1);
MakeNameEx(0x45794C, "htonl", 0);
MakeComm(0x45794C, "'lpfn_HTONL'");
MakeByte(0x457950);
MakeUnkn(0x457950, 1);
MakeNameEx(0x457950, "gethostname", 0);
MakeComm(0x457950, "'lpfn_GETHOSTNAME'");
MakeByte(0x457970);
MakeUnkn(0x457970, 1);
MakeNameEx(0x457970, "GlobalNameSpace", 0);
MakeComm(0x457970, "'IReadWriteSync'");
MakeByte(0x45797C);
MakeUnkn(0x45797C, 1);
MakeNameEx(0x45797C, "Screen", 0);
MakeComm(0x45797C, "'TScreen'");
MakeByte(0x457998);
MakeUnkn(0x457998, 1);
MakeNameEx(0x457998, "select", 0);
MakeComm(0x457998, "'lpfn_SELECT'");
MakeByte(0x4579A4);
MakeUnkn(0x4579A4, 1);
MakeNameEx(0x4579A4, "MainThreadID", 0);
MakeComm(0x4579A4, "'Cardinal'");
MakeByte(0x4579A8);
MakeUnkn(0x4579A8, 1);
MakeNameEx(0x4579A8, "SysLocale", 0);
MakeComm(0x4579A8, "'TSysLocale'");
MakeByte(0x459118);
MakeUnkn(0x459118, 1);
MakeNameEx(0x459118, "", 0);
MakeByte(0x45911C);
MakeUnkn(0x45911C, 1);
MakeNameEx(0x45911C, "_0", 0);
MakeByte(0x459120);
MakeUnkn(0x459120, 1);
MakeNameEx(0x459120, "_1", 0);
MakeByte(0x459124);
MakeUnkn(0x459124, 1);
MakeNameEx(0x459124, "_2", 0);
MakeByte(0x459128);
MakeUnkn(0x459128, 1);
MakeNameEx(0x459128, "_3", 0);
MakeByte(0x45912C);
MakeUnkn(0x45912C, 1);
MakeNameEx(0x45912C, "_4", 0);
MakeByte(0x459130);
MakeUnkn(0x459130, 1);
MakeNameEx(0x459130, "_5", 0);
MakeByte(0x459134);
MakeUnkn(0x459134, 1);
MakeNameEx(0x459134, "_6", 0);
MakeByte(0x459138);
MakeUnkn(0x459138, 1);
MakeNameEx(0x459138, "_7", 0);
MakeByte(0x45913C);
MakeUnkn(0x45913C, 1);
MakeNameEx(0x45913C, "_8", 0);
MakeByte(0x459140);
MakeUnkn(0x459140, 1);
MakeNameEx(0x459140, "_9", 0);
MakeByte(0x459144);
MakeUnkn(0x459144, 1);
MakeNameEx(0x459144, "_10", 0);
MakeByte(0x459148);
MakeUnkn(0x459148, 1);
MakeNameEx(0x459148, "_11", 0);
MakeByte(0x45914C);
MakeUnkn(0x45914C, 1);
MakeNameEx(0x45914C, "_12", 0);
MakeByte(0x459150);
MakeUnkn(0x459150, 1);
MakeNameEx(0x459150, "_13", 0);
MakeByte(0x459154);
MakeUnkn(0x459154, 1);
MakeNameEx(0x459154, "_14", 0);
MakeByte(0x459158);
MakeUnkn(0x459158, 1);
MakeNameEx(0x459158, "_15", 0);
MakeByte(0x45915C);
MakeUnkn(0x45915C, 1);
MakeNameEx(0x45915C, "_16", 0);
MakeByte(0x459160);
MakeUnkn(0x459160, 1);
MakeNameEx(0x459160, "_17", 0);
MakeByte(0x459164);
MakeUnkn(0x459164, 1);
MakeNameEx(0x459164, "_18", 0);
MakeByte(0x459168);
MakeUnkn(0x459168, 1);
MakeNameEx(0x459168, "_19", 0);
MakeByte(0x45916C);
MakeUnkn(0x45916C, 1);
MakeNameEx(0x45916C, "_20", 0);
MakeByte(0x459170);
MakeUnkn(0x459170, 1);
MakeNameEx(0x459170, "_21", 0);
MakeByte(0x459174);
MakeUnkn(0x459174, 1);
MakeNameEx(0x459174, "_22", 0);
MakeByte(0x459178);
MakeUnkn(0x459178, 1);
MakeNameEx(0x459178, "_23", 0);
MakeByte(0x45917C);
MakeUnkn(0x45917C, 1);
MakeNameEx(0x45917C, "_24", 0);
MakeByte(0x459180);
MakeUnkn(0x459180, 1);
MakeNameEx(0x459180, "_25", 0);
MakeByte(0x459184);
MakeUnkn(0x459184, 1);
MakeNameEx(0x459184, "_26", 0);
MakeByte(0x459188);
MakeUnkn(0x459188, 1);
MakeNameEx(0x459188, "_27", 0);
MakeByte(0x45918C);
MakeUnkn(0x45918C, 1);
MakeNameEx(0x45918C, "_28", 0);
MakeByte(0x459190);
MakeUnkn(0x459190, 1);
MakeNameEx(0x459190, "_29", 0);
MakeByte(0x459194);
MakeUnkn(0x459194, 1);
MakeNameEx(0x459194, "_30", 0);
MakeByte(0x459198);
MakeUnkn(0x459198, 1);
MakeNameEx(0x459198, "_31", 0);
MakeByte(0x45919C);
MakeUnkn(0x45919C, 1);
MakeNameEx(0x45919C, "_32", 0);
MakeByte(0x4591A4);
MakeUnkn(0x4591A4, 1);
MakeNameEx(0x4591A4, "_33", 0);
MakeByte(0x4591A8);
MakeUnkn(0x4591A8, 1);
MakeNameEx(0x4591A8, "_34", 0);
MakeByte(0x4591AC);
MakeUnkn(0x4591AC, 1);
MakeNameEx(0x4591AC, "_35", 0);
MakeByte(0x4591B0);
MakeUnkn(0x4591B0, 1);
MakeNameEx(0x4591B0, "_36", 0);
MakeByte(0x4591B8);
MakeUnkn(0x4591B8, 1);
MakeNameEx(0x4591B8, "_37", 0);
MakeByte(0x4591BC);
MakeUnkn(0x4591BC, 1);
MakeNameEx(0x4591BC, "_38", 0);
MakeByte(0x4591C0);
MakeUnkn(0x4591C0, 1);
MakeNameEx(0x4591C0, "_39", 0);
MakeByte(0x4591C8);
MakeUnkn(0x4591C8, 1);
MakeNameEx(0x4591C8, "_40", 0);
MakeByte(0x4591CC);
MakeUnkn(0x4591CC, 1);
MakeNameEx(0x4591CC, "_41", 0);
MakeByte(0x4591D0);
MakeUnkn(0x4591D0, 1);
MakeNameEx(0x4591D0, "_42", 0);
MakeByte(0x4591D8);
MakeUnkn(0x4591D8, 1);
MakeNameEx(0x4591D8, "_43", 0);
MakeByte(0x4591DC);
MakeUnkn(0x4591DC, 1);
MakeNameEx(0x4591DC, "_44", 0);
MakeByte(0x4591E0);
MakeUnkn(0x4591E0, 1);
MakeNameEx(0x4591E0, "_45", 0);
MakeByte(0x4591E4);
MakeUnkn(0x4591E4, 1);
MakeNameEx(0x4591E4, "_46", 0);
MakeByte(0x4591EC);
MakeUnkn(0x4591EC, 1);
MakeNameEx(0x4591EC, "_47", 0);
MakeByte(0x4591F0);
MakeUnkn(0x4591F0, 1);
MakeNameEx(0x4591F0, "_48", 0);
MakeByte(0x4591F4);
MakeUnkn(0x4591F4, 1);
MakeNameEx(0x4591F4, "_49", 0);
MakeByte(0x4591FC);
MakeUnkn(0x4591FC, 1);
MakeNameEx(0x4591FC, "_50", 0);
MakeByte(0x459200);
MakeUnkn(0x459200, 1);
MakeNameEx(0x459200, "_51", 0);
MakeByte(0x459204);
MakeUnkn(0x459204, 1);
MakeNameEx(0x459204, "_52", 0);
MakeByte(0x459208);
MakeUnkn(0x459208, 1);
MakeNameEx(0x459208, "_53", 0);
MakeByte(0x45920C);
MakeUnkn(0x45920C, 1);
MakeNameEx(0x45920C, "_54", 0);
MakeByte(0x459210);
MakeUnkn(0x459210, 1);
MakeNameEx(0x459210, "_55", 0);
MakeByte(0x459214);
MakeUnkn(0x459214, 1);
MakeNameEx(0x459214, "_56", 0);
MakeByte(0x459218);
MakeUnkn(0x459218, 1);
MakeNameEx(0x459218, "_57", 0);
MakeByte(0x45921C);
MakeUnkn(0x45921C, 1);
MakeNameEx(0x45921C, "_58", 0);
MakeByte(0x459220);
MakeUnkn(0x459220, 1);
MakeNameEx(0x459220, "_59", 0);
MakeByte(0x459224);
MakeUnkn(0x459224, 1);
MakeNameEx(0x459224, "_60", 0);
MakeByte(0x459228);
MakeUnkn(0x459228, 1);
MakeNameEx(0x459228, "_61", 0);
MakeByte(0x45922C);
MakeUnkn(0x45922C, 1);
MakeNameEx(0x45922C, "_62", 0);
MakeByte(0x459230);
MakeUnkn(0x459230, 1);
MakeNameEx(0x459230, "_63", 0);
MakeByte(0x459234);
MakeUnkn(0x459234, 1);
MakeNameEx(0x459234, "_64", 0);
MakeByte(0x459238);
MakeUnkn(0x459238, 1);
MakeNameEx(0x459238, "_65", 0);
MakeByte(0x45923C);
MakeUnkn(0x45923C, 1);
MakeNameEx(0x45923C, "_66", 0);
MakeByte(0x459240);
MakeUnkn(0x459240, 1);
MakeNameEx(0x459240, "_67", 0);
MakeByte(0x459244);
MakeUnkn(0x459244, 1);
MakeNameEx(0x459244, "_68", 0);
MakeByte(0x459248);
MakeUnkn(0x459248, 1);
MakeNameEx(0x459248, "_69", 0);
MakeByte(0x45924C);
MakeUnkn(0x45924C, 1);
MakeNameEx(0x45924C, "_70", 0);
MakeByte(0x459250);
MakeUnkn(0x459250, 1);
MakeNameEx(0x459250, "_71", 0);
MakeByte(0x459254);
MakeUnkn(0x459254, 1);
MakeNameEx(0x459254, "_72", 0);
MakeByte(0x459258);
MakeUnkn(0x459258, 1);
MakeNameEx(0x459258, "_73", 0);
MakeByte(0x45925C);
MakeUnkn(0x45925C, 1);
MakeNameEx(0x45925C, "_74", 0);
MakeByte(0x459260);
MakeUnkn(0x459260, 1);
MakeNameEx(0x459260, "_75", 0);
MakeByte(0x459264);
MakeUnkn(0x459264, 1);
MakeNameEx(0x459264, "_76", 0);
MakeByte(0x459268);
MakeUnkn(0x459268, 1);
MakeNameEx(0x459268, "_77", 0);
MakeByte(0x45926C);
MakeUnkn(0x45926C, 1);
MakeNameEx(0x45926C, "_78", 0);
MakeByte(0x459270);
MakeUnkn(0x459270, 1);
MakeNameEx(0x459270, "_79", 0);
MakeByte(0x459274);
MakeUnkn(0x459274, 1);
MakeNameEx(0x459274, "_80", 0);
MakeByte(0x459278);
MakeUnkn(0x459278, 1);
MakeNameEx(0x459278, "_81", 0);
MakeByte(0x45927C);
MakeUnkn(0x45927C, 1);
MakeNameEx(0x45927C, "_82", 0);
MakeByte(0x459280);
MakeUnkn(0x459280, 1);
MakeNameEx(0x459280, "_83", 0);
MakeByte(0x459284);
MakeUnkn(0x459284, 1);
MakeNameEx(0x459284, "_84", 0);
MakeByte(0x459288);
MakeUnkn(0x459288, 1);
MakeNameEx(0x459288, "_85", 0);
MakeByte(0x45928C);
MakeUnkn(0x45928C, 1);
MakeNameEx(0x45928C, "_86", 0);
MakeByte(0x459290);
MakeUnkn(0x459290, 1);
MakeNameEx(0x459290, "_87", 0);
MakeByte(0x459294);
MakeUnkn(0x459294, 1);
MakeNameEx(0x459294, "_88", 0);
MakeByte(0x459298);
MakeUnkn(0x459298, 1);
MakeNameEx(0x459298, "_89", 0);
MakeByte(0x45929C);
MakeUnkn(0x45929C, 1);
MakeNameEx(0x45929C, "_90", 0);
MakeByte(0x4592A0);
MakeUnkn(0x4592A0, 1);
MakeNameEx(0x4592A0, "_91", 0);
MakeByte(0x4592A4);
MakeUnkn(0x4592A4, 1);
MakeNameEx(0x4592A4, "_92", 0);
MakeByte(0x4592A8);
MakeUnkn(0x4592A8, 1);
MakeNameEx(0x4592A8, "_93", 0);
MakeByte(0x4592AC);
MakeUnkn(0x4592AC, 1);
MakeNameEx(0x4592AC, "_94", 0);
MakeByte(0x4592B0);
MakeUnkn(0x4592B0, 1);
MakeNameEx(0x4592B0, "_95", 0);
MakeByte(0x4592B4);
MakeUnkn(0x4592B4, 1);
MakeNameEx(0x4592B4, "_96", 0);
MakeByte(0x4592B8);
MakeUnkn(0x4592B8, 1);
MakeNameEx(0x4592B8, "_97", 0);
MakeByte(0x4592BC);
MakeUnkn(0x4592BC, 1);
MakeNameEx(0x4592BC, "_98", 0);
MakeByte(0x4592C0);
MakeUnkn(0x4592C0, 1);
MakeNameEx(0x4592C0, "_99", 0);
MakeByte(0x4592C4);
MakeUnkn(0x4592C4, 1);
MakeNameEx(0x4592C4, "_100", 0);
MakeByte(0x4592C8);
MakeUnkn(0x4592C8, 1);
MakeNameEx(0x4592C8, "_101", 0);
MakeByte(0x4592CC);
MakeUnkn(0x4592CC, 1);
MakeNameEx(0x4592CC, "_102", 0);
MakeByte(0x4592D0);
MakeUnkn(0x4592D0, 1);
MakeNameEx(0x4592D0, "_103", 0);
MakeByte(0x4592D4);
MakeUnkn(0x4592D4, 1);
MakeNameEx(0x4592D4, "_104", 0);
MakeByte(0x4592D8);
MakeUnkn(0x4592D8, 1);
MakeNameEx(0x4592D8, "_105", 0);
MakeByte(0x4592DC);
MakeUnkn(0x4592DC, 1);
MakeNameEx(0x4592DC, "_106", 0);
MakeByte(0x4592E0);
MakeUnkn(0x4592E0, 1);
MakeNameEx(0x4592E0, "_107", 0);
MakeByte(0x4592E4);
MakeUnkn(0x4592E4, 1);
MakeNameEx(0x4592E4, "_108", 0);
MakeByte(0x4592E8);
MakeUnkn(0x4592E8, 1);
MakeNameEx(0x4592E8, "_109", 0);
MakeByte(0x4592EC);
MakeUnkn(0x4592EC, 1);
MakeNameEx(0x4592EC, "_110", 0);
MakeByte(0x4592F0);
MakeUnkn(0x4592F0, 1);
MakeNameEx(0x4592F0, "_111", 0);
MakeByte(0x4592F4);
MakeUnkn(0x4592F4, 1);
MakeNameEx(0x4592F4, "_112", 0);
MakeByte(0x4592F8);
MakeUnkn(0x4592F8, 1);
MakeNameEx(0x4592F8, "_113", 0);
MakeByte(0x459300);
MakeUnkn(0x459300, 1);
MakeNameEx(0x459300, "_114", 0);
MakeByte(0x459304);
MakeUnkn(0x459304, 1);
MakeNameEx(0x459304, "_115", 0);
MakeByte(0x459308);
MakeUnkn(0x459308, 1);
MakeNameEx(0x459308, "_116", 0);
MakeByte(0x459310);
MakeUnkn(0x459310, 1);
MakeNameEx(0x459310, "_117", 0);
MakeByte(0x459314);
MakeUnkn(0x459314, 1);
MakeNameEx(0x459314, "_118", 0);
MakeByte(0x459318);
MakeUnkn(0x459318, 1);
MakeNameEx(0x459318, "_119", 0);
MakeByte(0x45931C);
MakeUnkn(0x45931C, 1);
MakeNameEx(0x45931C, "_120", 0);
MakeByte(0x459320);
MakeUnkn(0x459320, 1);
MakeNameEx(0x459320, "_121", 0);
MakeByte(0x459324);
MakeUnkn(0x459324, 1);
MakeNameEx(0x459324, "_122", 0);
MakeByte(0x459328);
MakeUnkn(0x459328, 1);
MakeNameEx(0x459328, "_123", 0);
MakeByte(0x45932C);
MakeUnkn(0x45932C, 1);
MakeNameEx(0x45932C, "_124", 0);
MakeByte(0x459330);
MakeUnkn(0x459330, 1);
MakeNameEx(0x459330, "_125", 0);
MakeByte(0x459334);
MakeUnkn(0x459334, 1);
MakeNameEx(0x459334, "_126", 0);
MakeByte(0x459338);
MakeUnkn(0x459338, 1);
MakeNameEx(0x459338, "_127", 0);
MakeByte(0x45933C);
MakeUnkn(0x45933C, 1);
MakeNameEx(0x45933C, "_128", 0);
MakeByte(0x459340);
MakeUnkn(0x459340, 1);
MakeNameEx(0x459340, "_129", 0);
MakeByte(0x459344);
MakeUnkn(0x459344, 1);
MakeNameEx(0x459344, "_130", 0);
MakeByte(0x459348);
MakeUnkn(0x459348, 1);
MakeNameEx(0x459348, "_131", 0);
MakeByte(0x45934C);
MakeUnkn(0x45934C, 1);
MakeNameEx(0x45934C, "_132", 0);
MakeByte(0x459350);
MakeUnkn(0x459350, 1);
MakeNameEx(0x459350, "_133", 0);
MakeByte(0x459354);
MakeUnkn(0x459354, 1);
MakeNameEx(0x459354, "_134", 0);
MakeByte(0x459358);
MakeUnkn(0x459358, 1);
MakeNameEx(0x459358, "_135", 0);
MakeByte(0x45935C);
MakeUnkn(0x45935C, 1);
MakeNameEx(0x45935C, "_136", 0);
MakeByte(0x459360);
MakeUnkn(0x459360, 1);
MakeNameEx(0x459360, "_137", 0);
MakeByte(0x459364);
MakeUnkn(0x459364, 1);
MakeNameEx(0x459364, "_138", 0);
MakeByte(0x459368);
MakeUnkn(0x459368, 1);
MakeNameEx(0x459368, "_139", 0);
MakeByte(0x45936C);
MakeUnkn(0x45936C, 1);
MakeNameEx(0x45936C, "_140", 0);
MakeByte(0x459370);
MakeUnkn(0x459370, 1);
MakeNameEx(0x459370, "_141", 0);
MakeByte(0x459374);
MakeUnkn(0x459374, 1);
MakeNameEx(0x459374, "_142", 0);
MakeByte(0x459378);
MakeUnkn(0x459378, 1);
MakeNameEx(0x459378, "_143", 0);
MakeByte(0x45937C);
MakeUnkn(0x45937C, 1);
MakeNameEx(0x45937C, "_144", 0);
MakeByte(0x459380);
MakeUnkn(0x459380, 1);
MakeNameEx(0x459380, "_145", 0);
MakeByte(0x459384);
MakeUnkn(0x459384, 1);
MakeNameEx(0x459384, "_146", 0);
MakeByte(0x459388);
MakeUnkn(0x459388, 1);
MakeNameEx(0x459388, "_147", 0);
MakeByte(0x45938C);
MakeUnkn(0x45938C, 1);
MakeNameEx(0x45938C, "_148", 0);
MakeByte(0x459390);
MakeUnkn(0x459390, 1);
MakeNameEx(0x459390, "_149", 0);
MakeByte(0x459394);
MakeUnkn(0x459394, 1);
MakeNameEx(0x459394, "_150", 0);
MakeByte(0x459398);
MakeUnkn(0x459398, 1);
MakeNameEx(0x459398, "_151", 0);
MakeByte(0x45939C);
MakeUnkn(0x45939C, 1);
MakeNameEx(0x45939C, "_152", 0);
MakeByte(0x4593A0);
MakeUnkn(0x4593A0, 1);
MakeNameEx(0x4593A0, "_153", 0);
MakeByte(0x4593A4);
MakeUnkn(0x4593A4, 1);
MakeNameEx(0x4593A4, "_154", 0);
MakeByte(0x4593A8);
MakeUnkn(0x4593A8, 1);
MakeNameEx(0x4593A8, "_155", 0);
MakeByte(0x4593AC);
MakeUnkn(0x4593AC, 1);
MakeNameEx(0x4593AC, "_156", 0);
MakeByte(0x4593B0);
MakeUnkn(0x4593B0, 1);
MakeNameEx(0x4593B0, "_157", 0);
MakeByte(0x4593B4);
MakeUnkn(0x4593B4, 1);
MakeNameEx(0x4593B4, "_158", 0);
MakeByte(0x4593B8);
MakeUnkn(0x4593B8, 1);
MakeNameEx(0x4593B8, "_159", 0);
MakeByte(0x4593BC);
MakeUnkn(0x4593BC, 1);
MakeNameEx(0x4593BC, "_160", 0);
MakeByte(0x4593C0);
MakeUnkn(0x4593C0, 1);
MakeNameEx(0x4593C0, "_161", 0);
MakeByte(0x4593C4);
MakeUnkn(0x4593C4, 1);
MakeNameEx(0x4593C4, "_162", 0);
MakeByte(0x4593C8);
MakeUnkn(0x4593C8, 1);
MakeNameEx(0x4593C8, "_163", 0);
MakeByte(0x4593CC);
MakeUnkn(0x4593CC, 1);
MakeNameEx(0x4593CC, "_164", 0);
MakeByte(0x4593D0);
MakeUnkn(0x4593D0, 1);
MakeNameEx(0x4593D0, "_165", 0);
MakeByte(0x4593D4);
MakeUnkn(0x4593D4, 1);
MakeNameEx(0x4593D4, "_166", 0);
MakeByte(0x4593D8);
MakeUnkn(0x4593D8, 1);
MakeNameEx(0x4593D8, "_167", 0);
MakeByte(0x4593DC);
MakeUnkn(0x4593DC, 1);
MakeNameEx(0x4593DC, "_168", 0);
MakeByte(0x4593E0);
MakeUnkn(0x4593E0, 1);
MakeNameEx(0x4593E0, "_169", 0);
MakeByte(0x4593E4);
MakeUnkn(0x4593E4, 1);
MakeNameEx(0x4593E4, "_170", 0);
MakeByte(0x4593EC);
MakeUnkn(0x4593EC, 1);
MakeNameEx(0x4593EC, "_171", 0);
MakeByte(0x4593F0);
MakeUnkn(0x4593F0, 1);
MakeNameEx(0x4593F0, "_172", 0);
MakeByte(0x4593F4);
MakeUnkn(0x4593F4, 1);
MakeNameEx(0x4593F4, "_173", 0);
MakeByte(0x4593F8);
MakeUnkn(0x4593F8, 1);
MakeNameEx(0x4593F8, "_174", 0);
MakeByte(0x4593FC);
MakeUnkn(0x4593FC, 1);
MakeNameEx(0x4593FC, "_175", 0);
MakeByte(0x459400);
MakeUnkn(0x459400, 1);
MakeNameEx(0x459400, "_176", 0);
MakeByte(0x459404);
MakeUnkn(0x459404, 1);
MakeNameEx(0x459404, "_177", 0);
MakeByte(0x459408);
MakeUnkn(0x459408, 1);
MakeNameEx(0x459408, "_178", 0);
MakeByte(0x45940C);
MakeUnkn(0x45940C, 1);
MakeNameEx(0x45940C, "_179", 0);
MakeByte(0x459410);
MakeUnkn(0x459410, 1);
MakeNameEx(0x459410, "_180", 0);
MakeByte(0x459414);
MakeUnkn(0x459414, 1);
MakeNameEx(0x459414, "_181", 0);
MakeByte(0x459418);
MakeUnkn(0x459418, 1);
MakeNameEx(0x459418, "_182", 0);
MakeByte(0x45941C);
MakeUnkn(0x45941C, 1);
MakeNameEx(0x45941C, "_183", 0);
MakeByte(0x459420);
MakeUnkn(0x459420, 1);
MakeNameEx(0x459420, "_184", 0);
MakeByte(0x459424);
MakeUnkn(0x459424, 1);
MakeNameEx(0x459424, "_185", 0);
MakeByte(0x459428);
MakeUnkn(0x459428, 1);
MakeNameEx(0x459428, "_186", 0);
MakeByte(0x45942C);
MakeUnkn(0x45942C, 1);
MakeNameEx(0x45942C, "_187", 0);
MakeByte(0x459430);
MakeUnkn(0x459430, 1);
MakeNameEx(0x459430, "_188", 0);
MakeByte(0x459434);
MakeUnkn(0x459434, 1);
MakeNameEx(0x459434, "_189", 0);
MakeByte(0x459438);
MakeUnkn(0x459438, 1);
MakeNameEx(0x459438, "_190", 0);
MakeByte(0x45943C);
MakeUnkn(0x45943C, 1);
MakeNameEx(0x45943C, "_191", 0);
MakeByte(0x459440);
MakeUnkn(0x459440, 1);
MakeNameEx(0x459440, "_192", 0);
MakeByte(0x459444);
MakeUnkn(0x459444, 1);
MakeNameEx(0x459444, "_193", 0);
MakeByte(0x459448);
MakeUnkn(0x459448, 1);
MakeNameEx(0x459448, "_194", 0);
MakeByte(0x45944C);
MakeUnkn(0x45944C, 1);
MakeNameEx(0x45944C, "_195", 0);
MakeByte(0x459450);
MakeUnkn(0x459450, 1);
MakeNameEx(0x459450, "_196", 0);
MakeByte(0x459454);
MakeUnkn(0x459454, 1);
MakeNameEx(0x459454, "_197", 0);
MakeByte(0x459458);
MakeUnkn(0x459458, 1);
MakeNameEx(0x459458, "_198", 0);
MakeByte(0x45945C);
MakeUnkn(0x45945C, 1);
MakeNameEx(0x45945C, "_199", 0);
MakeByte(0x459460);
MakeUnkn(0x459460, 1);
MakeNameEx(0x459460, "_200", 0);
MakeByte(0x459464);
MakeUnkn(0x459464, 1);
MakeNameEx(0x459464, "_201", 0);
MakeByte(0x459468);
MakeUnkn(0x459468, 1);
MakeNameEx(0x459468, "_202", 0);
MakeByte(0x45946C);
MakeUnkn(0x45946C, 1);
MakeNameEx(0x45946C, "_203", 0);
MakeByte(0x459470);
MakeUnkn(0x459470, 1);
MakeNameEx(0x459470, "_204", 0);
MakeByte(0x459474);
MakeUnkn(0x459474, 1);
MakeNameEx(0x459474, "_205", 0);
MakeByte(0x459478);
MakeUnkn(0x459478, 1);
MakeNameEx(0x459478, "_206", 0);
MakeByte(0x45947C);
MakeUnkn(0x45947C, 1);
MakeNameEx(0x45947C, "_207", 0);
MakeByte(0x459480);
MakeUnkn(0x459480, 1);
MakeNameEx(0x459480, "_208", 0);
MakeByte(0x459484);
MakeUnkn(0x459484, 1);
MakeNameEx(0x459484, "_209", 0);
MakeByte(0x459488);
MakeUnkn(0x459488, 1);
MakeNameEx(0x459488, "_210", 0);
MakeByte(0x45948C);
MakeUnkn(0x45948C, 1);
MakeNameEx(0x45948C, "_211", 0);
MakeByte(0x459490);
MakeUnkn(0x459490, 1);
MakeNameEx(0x459490, "_212", 0);
MakeByte(0x459494);
MakeUnkn(0x459494, 1);
MakeNameEx(0x459494, "_213", 0);
MakeByte(0x459498);
MakeUnkn(0x459498, 1);
MakeNameEx(0x459498, "_214", 0);
MakeByte(0x45949C);
MakeUnkn(0x45949C, 1);
MakeNameEx(0x45949C, "_215", 0);
MakeByte(0x4594A0);
MakeUnkn(0x4594A0, 1);
MakeNameEx(0x4594A0, "_216", 0);
MakeByte(0x4594A4);
MakeUnkn(0x4594A4, 1);
MakeNameEx(0x4594A4, "_217", 0);
MakeByte(0x4594A8);
MakeUnkn(0x4594A8, 1);
MakeNameEx(0x4594A8, "_218", 0);
MakeByte(0x4594AC);
MakeUnkn(0x4594AC, 1);
MakeNameEx(0x4594AC, "_219", 0);
MakeByte(0x4594B0);
MakeUnkn(0x4594B0, 1);
MakeNameEx(0x4594B0, "_220", 0);
MakeByte(0x4594B4);
MakeUnkn(0x4594B4, 1);
MakeNameEx(0x4594B4, "_221", 0);
MakeByte(0x4594B8);
MakeUnkn(0x4594B8, 1);
MakeNameEx(0x4594B8, "_222", 0);
MakeByte(0x4594BC);
MakeUnkn(0x4594BC, 1);
MakeNameEx(0x4594BC, "_223", 0);
MakeByte(0x4594C0);
MakeUnkn(0x4594C0, 1);
MakeNameEx(0x4594C0, "_224", 0);
MakeByte(0x4594C4);
MakeUnkn(0x4594C4, 1);
MakeNameEx(0x4594C4, "_225", 0);
MakeByte(0x4594C8);
MakeUnkn(0x4594C8, 1);
MakeNameEx(0x4594C8, "_226", 0);
MakeByte(0x4594CC);
MakeUnkn(0x4594CC, 1);
MakeNameEx(0x4594CC, "_227", 0);
MakeByte(0x4594D0);
MakeUnkn(0x4594D0, 1);
MakeNameEx(0x4594D0, "_228", 0);
MakeByte(0x4594D4);
MakeUnkn(0x4594D4, 1);
MakeNameEx(0x4594D4, "_229", 0);
MakeByte(0x4594D8);
MakeUnkn(0x4594D8, 1);
MakeNameEx(0x4594D8, "_230", 0);
MakeByte(0x4594DC);
MakeUnkn(0x4594DC, 1);
MakeNameEx(0x4594DC, "_231", 0);
MakeByte(0x4594E0);
MakeUnkn(0x4594E0, 1);
MakeNameEx(0x4594E0, "_232", 0);
MakeByte(0x4594E4);
MakeUnkn(0x4594E4, 1);
MakeNameEx(0x4594E4, "_233", 0);
MakeByte(0x4594E8);
MakeUnkn(0x4594E8, 1);
MakeNameEx(0x4594E8, "_234", 0);
MakeByte(0x4594EC);
MakeUnkn(0x4594EC, 1);
MakeNameEx(0x4594EC, "_235", 0);
MakeByte(0x4594F0);
MakeUnkn(0x4594F0, 1);
MakeNameEx(0x4594F0, "_236", 0);
MakeByte(0x4594F4);
MakeUnkn(0x4594F4, 1);
MakeNameEx(0x4594F4, "_237", 0);
MakeByte(0x4594F8);
MakeUnkn(0x4594F8, 1);
MakeNameEx(0x4594F8, "_238", 0);
MakeByte(0x4594FC);
MakeUnkn(0x4594FC, 1);
MakeNameEx(0x4594FC, "_239", 0);
MakeByte(0x459500);
MakeUnkn(0x459500, 1);
MakeNameEx(0x459500, "_240", 0);
MakeByte(0x459504);
MakeUnkn(0x459504, 1);
MakeNameEx(0x459504, "_241", 0);
MakeByte(0x459508);
MakeUnkn(0x459508, 1);
MakeNameEx(0x459508, "_242", 0);
MakeByte(0x45950C);
MakeUnkn(0x45950C, 1);
MakeNameEx(0x45950C, "_243", 0);
MakeByte(0x459510);
MakeUnkn(0x459510, 1);
MakeNameEx(0x459510, "_244", 0);
MakeByte(0x459514);
MakeUnkn(0x459514, 1);
MakeNameEx(0x459514, "_245", 0);
MakeByte(0x459518);
MakeUnkn(0x459518, 1);
MakeNameEx(0x459518, "_246", 0);
MakeByte(0x45951C);
MakeUnkn(0x45951C, 1);
MakeNameEx(0x45951C, "_247", 0);
MakeByte(0x459520);
MakeUnkn(0x459520, 1);
MakeNameEx(0x459520, "_248", 0);
MakeByte(0x459524);
MakeUnkn(0x459524, 1);
MakeNameEx(0x459524, "_249", 0);
MakeByte(0x459528);
MakeUnkn(0x459528, 1);
MakeNameEx(0x459528, "_250", 0);
MakeByte(0x45952C);
MakeUnkn(0x45952C, 1);
MakeNameEx(0x45952C, "_251", 0);
MakeByte(0x459530);
MakeUnkn(0x459530, 1);
MakeNameEx(0x459530, "_252", 0);
MakeByte(0x459534);
MakeUnkn(0x459534, 1);
MakeNameEx(0x459534, "_253", 0);
MakeByte(0x459538);
MakeUnkn(0x459538, 1);
MakeNameEx(0x459538, "_254", 0);
MakeByte(0x45953C);
MakeUnkn(0x45953C, 1);
MakeNameEx(0x45953C, "_255", 0);
MakeByte(0x459540);
MakeUnkn(0x459540, 1);
MakeNameEx(0x459540, "_256", 0);
MakeByte(0x459544);
MakeUnkn(0x459544, 1);
MakeNameEx(0x459544, "_257", 0);
MakeByte(0x459548);
MakeUnkn(0x459548, 1);
MakeNameEx(0x459548, "_258", 0);
MakeByte(0x45954C);
MakeUnkn(0x45954C, 1);
MakeNameEx(0x45954C, "_259", 0);
MakeByte(0x459550);
MakeUnkn(0x459550, 1);
MakeNameEx(0x459550, "_260", 0);
MakeByte(0x459554);
MakeUnkn(0x459554, 1);
MakeNameEx(0x459554, "_261", 0);
MakeByte(0x459558);
MakeUnkn(0x459558, 1);
MakeNameEx(0x459558, "_262", 0);
MakeByte(0x45955C);
MakeUnkn(0x45955C, 1);
MakeNameEx(0x45955C, "_263", 0);
MakeByte(0x459560);
MakeUnkn(0x459560, 1);
MakeNameEx(0x459560, "_264", 0);
MakeByte(0x459564);
MakeUnkn(0x459564, 1);
MakeNameEx(0x459564, "_265", 0);
MakeByte(0x459568);
MakeUnkn(0x459568, 1);
MakeNameEx(0x459568, "_266", 0);
MakeByte(0x45956C);
MakeUnkn(0x45956C, 1);
MakeNameEx(0x45956C, "_267", 0);
MakeByte(0x459570);
MakeUnkn(0x459570, 1);
MakeNameEx(0x459570, "_268", 0);
MakeByte(0x459574);
MakeUnkn(0x459574, 1);
MakeNameEx(0x459574, "_269", 0);
MakeByte(0x459578);
MakeUnkn(0x459578, 1);
MakeNameEx(0x459578, "_270", 0);
MakeByte(0x45957C);
MakeUnkn(0x45957C, 1);
MakeNameEx(0x45957C, "_271", 0);
MakeByte(0x459580);
MakeUnkn(0x459580, 1);
MakeNameEx(0x459580, "_272", 0);
MakeByte(0x459584);
MakeUnkn(0x459584, 1);
MakeNameEx(0x459584, "_273", 0);
MakeByte(0x459588);
MakeUnkn(0x459588, 1);
MakeNameEx(0x459588, "_274", 0);
MakeByte(0x45958C);
MakeUnkn(0x45958C, 1);
MakeNameEx(0x45958C, "_275", 0);
MakeByte(0x459590);
MakeUnkn(0x459590, 1);
MakeNameEx(0x459590, "_276", 0);
MakeByte(0x459594);
MakeUnkn(0x459594, 1);
MakeNameEx(0x459594, "_277", 0);
MakeByte(0x459598);
MakeUnkn(0x459598, 1);
MakeNameEx(0x459598, "_278", 0);
MakeByte(0x45959C);
MakeUnkn(0x45959C, 1);
MakeNameEx(0x45959C, "_279", 0);
MakeByte(0x4595A0);
MakeUnkn(0x4595A0, 1);
MakeNameEx(0x4595A0, "_280", 0);
MakeByte(0x4595A4);
MakeUnkn(0x4595A4, 1);
MakeNameEx(0x4595A4, "_281", 0);
MakeByte(0x4595A8);
MakeUnkn(0x4595A8, 1);
MakeNameEx(0x4595A8, "_282", 0);
MakeByte(0x4595AC);
MakeUnkn(0x4595AC, 1);
MakeNameEx(0x4595AC, "_283", 0);
MakeByte(0x4595B0);
MakeUnkn(0x4595B0, 1);
MakeNameEx(0x4595B0, "_284", 0);
MakeByte(0x4595B4);
MakeUnkn(0x4595B4, 1);
MakeNameEx(0x4595B4, "_285", 0);
MakeByte(0x4595B8);
MakeUnkn(0x4595B8, 1);
MakeNameEx(0x4595B8, "_286", 0);
MakeByte(0x4595BC);
MakeUnkn(0x4595BC, 1);
MakeNameEx(0x4595BC, "_287", 0);
MakeByte(0x4595C0);
MakeUnkn(0x4595C0, 1);
MakeNameEx(0x4595C0, "_288", 0);
MakeByte(0x4595C4);
MakeUnkn(0x4595C4, 1);
MakeNameEx(0x4595C4, "_289", 0);
MakeByte(0x4595C8);
MakeUnkn(0x4595C8, 1);
MakeNameEx(0x4595C8, "_290", 0);
MakeByte(0x4595CC);
MakeUnkn(0x4595CC, 1);
MakeNameEx(0x4595CC, "_291", 0);
MakeByte(0x4595D0);
MakeUnkn(0x4595D0, 1);
MakeNameEx(0x4595D0, "_292", 0);
MakeByte(0x4595D4);
MakeUnkn(0x4595D4, 1);
MakeNameEx(0x4595D4, "_293", 0);
MakeByte(0x4595D8);
MakeUnkn(0x4595D8, 1);
MakeNameEx(0x4595D8, "_294", 0);
MakeByte(0x4595DC);
MakeUnkn(0x4595DC, 1);
MakeNameEx(0x4595DC, "_295", 0);
MakeByte(0x4595E0);
MakeUnkn(0x4595E0, 1);
MakeNameEx(0x4595E0, "_296", 0);
MakeByte(0x4595E4);
MakeUnkn(0x4595E4, 1);
MakeNameEx(0x4595E4, "_297", 0);
MakeByte(0x4595E8);
MakeUnkn(0x4595E8, 1);
MakeNameEx(0x4595E8, "_298", 0);
MakeByte(0x4595EC);
MakeUnkn(0x4595EC, 1);
MakeNameEx(0x4595EC, "_299", 0);
MakeByte(0x4595F0);
MakeUnkn(0x4595F0, 1);
MakeNameEx(0x4595F0, "_300", 0);
MakeByte(0x4595F4);
MakeUnkn(0x4595F4, 1);
MakeNameEx(0x4595F4, "_301", 0);
MakeByte(0x4595F8);
MakeUnkn(0x4595F8, 1);
MakeNameEx(0x4595F8, "_302", 0);
MakeByte(0x4595FC);
MakeUnkn(0x4595FC, 1);
MakeNameEx(0x4595FC, "_303", 0);
MakeByte(0x459600);
MakeUnkn(0x459600, 1);
MakeNameEx(0x459600, "_304", 0);
MakeByte(0x459604);
MakeUnkn(0x459604, 1);
MakeNameEx(0x459604, "_305", 0);
MakeByte(0x459608);
MakeUnkn(0x459608, 1);
MakeNameEx(0x459608, "_306", 0);
MakeByte(0x45960C);
MakeUnkn(0x45960C, 1);
MakeNameEx(0x45960C, "_307", 0);
MakeByte(0x459610);
MakeUnkn(0x459610, 1);
MakeNameEx(0x459610, "_308", 0);
MakeByte(0x459614);
MakeUnkn(0x459614, 1);
MakeNameEx(0x459614, "_309", 0);
MakeByte(0x459618);
MakeUnkn(0x459618, 1);
MakeNameEx(0x459618, "_310", 0);
MakeByte(0x45961C);
MakeUnkn(0x45961C, 1);
MakeNameEx(0x45961C, "_311", 0);
MakeByte(0x459620);
MakeUnkn(0x459620, 1);
MakeNameEx(0x459620, "_312", 0);
MakeByte(0x459624);
MakeUnkn(0x459624, 1);
MakeNameEx(0x459624, "_313", 0);
MakeByte(0x459628);
MakeUnkn(0x459628, 1);
MakeNameEx(0x459628, "_314", 0);
MakeByte(0x45962C);
MakeUnkn(0x45962C, 1);
MakeNameEx(0x45962C, "_315", 0);
MakeByte(0x459630);
MakeUnkn(0x459630, 1);
MakeNameEx(0x459630, "_316", 0);
MakeByte(0x459634);
MakeUnkn(0x459634, 1);
MakeNameEx(0x459634, "_317", 0);
MakeByte(0x459638);
MakeUnkn(0x459638, 1);
MakeNameEx(0x459638, "_318", 0);
MakeByte(0x45963C);
MakeUnkn(0x45963C, 1);
MakeNameEx(0x45963C, "_319", 0);
MakeByte(0x459640);
MakeUnkn(0x459640, 1);
MakeNameEx(0x459640, "_320", 0);
MakeByte(0x459644);
MakeUnkn(0x459644, 1);
MakeNameEx(0x459644, "_321", 0);
MakeByte(0x459648);
MakeUnkn(0x459648, 1);
MakeNameEx(0x459648, "_322", 0);
MakeByte(0x45964C);
MakeUnkn(0x45964C, 1);
MakeNameEx(0x45964C, "_323", 0);
MakeByte(0x459650);
MakeUnkn(0x459650, 1);
MakeNameEx(0x459650, "_324", 0);
MakeByte(0x459654);
MakeUnkn(0x459654, 1);
MakeNameEx(0x459654, "_325", 0);
MakeByte(0x45965C);
MakeUnkn(0x45965C, 1);
MakeNameEx(0x45965C, "_326", 0);
MakeByte(0x459664);
MakeUnkn(0x459664, 1);
MakeNameEx(0x459664, "_327", 0);
MakeByte(0x459668);
MakeUnkn(0x459668, 1);
MakeNameEx(0x459668, "_328", 0);
MakeByte(0x45966C);
MakeUnkn(0x45966C, 1);
MakeNameEx(0x45966C, "_329", 0);
MakeByte(0x459670);
MakeUnkn(0x459670, 1);
MakeNameEx(0x459670, "_330", 0);
MakeByte(0x459674);
MakeUnkn(0x459674, 1);
MakeNameEx(0x459674, "_331", 0);
MakeByte(0x459678);
MakeUnkn(0x459678, 1);
MakeNameEx(0x459678, "_332", 0);
MakeByte(0x45967C);
MakeUnkn(0x45967C, 1);
MakeNameEx(0x45967C, "_333", 0);
MakeByte(0x459680);
MakeUnkn(0x459680, 1);
MakeNameEx(0x459680, "_334", 0);
MakeByte(0x459688);
MakeUnkn(0x459688, 1);
MakeNameEx(0x459688, "_335", 0);
MakeByte(0x45968C);
MakeUnkn(0x45968C, 1);
MakeNameEx(0x45968C, "_336", 0);
MakeByte(0x459690);
MakeUnkn(0x459690, 1);
MakeNameEx(0x459690, "_337", 0);
MakeByte(0x459694);
MakeUnkn(0x459694, 1);
MakeNameEx(0x459694, "_338", 0);
MakeByte(0x459698);
MakeUnkn(0x459698, 1);
MakeNameEx(0x459698, "_339", 0);
MakeByte(0x45969C);
MakeUnkn(0x45969C, 1);
MakeNameEx(0x45969C, "_340", 0);
MakeByte(0x4596A0);
MakeUnkn(0x4596A0, 1);
MakeNameEx(0x4596A0, "_341", 0);
MakeByte(0x4596A4);
MakeUnkn(0x4596A4, 1);
MakeNameEx(0x4596A4, "_342", 0);
MakeByte(0x4596A8);
MakeUnkn(0x4596A8, 1);
MakeNameEx(0x4596A8, "_343", 0);
MakeByte(0x4596AC);
MakeUnkn(0x4596AC, 1);
MakeNameEx(0x4596AC, "_344", 0);
MakeByte(0x4596B0);
MakeUnkn(0x4596B0, 1);
MakeNameEx(0x4596B0, "_345", 0);
MakeByte(0x4596B4);
MakeUnkn(0x4596B4, 1);
MakeNameEx(0x4596B4, "_346", 0);
MakeByte(0x4596B8);
MakeUnkn(0x4596B8, 1);
MakeNameEx(0x4596B8, "_347", 0);
MakeByte(0x4596BC);
MakeUnkn(0x4596BC, 1);
MakeNameEx(0x4596BC, "_348", 0);
MakeByte(0x4596C0);
MakeUnkn(0x4596C0, 1);
MakeNameEx(0x4596C0, "_349", 0);
MakeByte(0x4596C4);
MakeUnkn(0x4596C4, 1);
MakeNameEx(0x4596C4, "_350", 0);
MakeByte(0x4596C8);
MakeUnkn(0x4596C8, 1);
MakeNameEx(0x4596C8, "_351", 0);
MakeByte(0x4596CC);
MakeUnkn(0x4596CC, 1);
MakeNameEx(0x4596CC, "_352", 0);
MakeByte(0x4596D0);
MakeUnkn(0x4596D0, 1);
MakeNameEx(0x4596D0, "_353", 0);
MakeByte(0x4596D4);
MakeUnkn(0x4596D4, 1);
MakeNameEx(0x4596D4, "_354", 0);
MakeByte(0x4596D8);
MakeUnkn(0x4596D8, 1);
MakeNameEx(0x4596D8, "_355", 0);
MakeByte(0x4596DC);
MakeUnkn(0x4596DC, 1);
MakeNameEx(0x4596DC, "_356", 0);
}